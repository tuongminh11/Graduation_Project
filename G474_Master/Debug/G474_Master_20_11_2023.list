
G474_Master_20_11_2023.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000c9d0  080001e0  080001e0  000011e0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000008bc  0800cbb0  0800cbb0  0000dbb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800d46c  0800d46c  0000f08c  2**0
                  CONTENTS
  4 .ARM          00000008  0800d46c  0800d46c  0000e46c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800d474  0800d474  0000f08c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800d474  0800d474  0000e474  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800d478  0800d478  0000e478  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000008c  20000000  0800d47c  0000f000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000022a0  2000008c  0800d508  0000f08c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000232c  0800d508  0000f32c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000f08c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001ea56  00000000  00000000  0000f0bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003afc  00000000  00000000  0002db12  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001df0  00000000  00000000  00031610  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00001744  00000000  00000000  00033400  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000051cd  00000000  00000000  00034b44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00022750  00000000  00000000  00039d11  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0011eff5  00000000  00000000  0005c461  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0017b456  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00008b30  00000000  00000000  0017b49c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000067  00000000  00000000  00183fcc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001e0 <__do_global_dtors_aux>:
 80001e0:	b510      	push	{r4, lr}
 80001e2:	4c05      	ldr	r4, [pc, #20]	@ (80001f8 <__do_global_dtors_aux+0x18>)
 80001e4:	7823      	ldrb	r3, [r4, #0]
 80001e6:	b933      	cbnz	r3, 80001f6 <__do_global_dtors_aux+0x16>
 80001e8:	4b04      	ldr	r3, [pc, #16]	@ (80001fc <__do_global_dtors_aux+0x1c>)
 80001ea:	b113      	cbz	r3, 80001f2 <__do_global_dtors_aux+0x12>
 80001ec:	4804      	ldr	r0, [pc, #16]	@ (8000200 <__do_global_dtors_aux+0x20>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	2301      	movs	r3, #1
 80001f4:	7023      	strb	r3, [r4, #0]
 80001f6:	bd10      	pop	{r4, pc}
 80001f8:	2000008c 	.word	0x2000008c
 80001fc:	00000000 	.word	0x00000000
 8000200:	0800cb98 	.word	0x0800cb98

08000204 <frame_dummy>:
 8000204:	b508      	push	{r3, lr}
 8000206:	4b03      	ldr	r3, [pc, #12]	@ (8000214 <frame_dummy+0x10>)
 8000208:	b11b      	cbz	r3, 8000212 <frame_dummy+0xe>
 800020a:	4903      	ldr	r1, [pc, #12]	@ (8000218 <frame_dummy+0x14>)
 800020c:	4803      	ldr	r0, [pc, #12]	@ (800021c <frame_dummy+0x18>)
 800020e:	f3af 8000 	nop.w
 8000212:	bd08      	pop	{r3, pc}
 8000214:	00000000 	.word	0x00000000
 8000218:	20000090 	.word	0x20000090
 800021c:	0800cb98 	.word	0x0800cb98

08000220 <strlen>:
 8000220:	4603      	mov	r3, r0
 8000222:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000226:	2a00      	cmp	r2, #0
 8000228:	d1fb      	bne.n	8000222 <strlen+0x2>
 800022a:	1a18      	subs	r0, r3, r0
 800022c:	3801      	subs	r0, #1
 800022e:	4770      	bx	lr

08000230 <memchr>:
 8000230:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000234:	2a10      	cmp	r2, #16
 8000236:	db2b      	blt.n	8000290 <memchr+0x60>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	d008      	beq.n	8000250 <memchr+0x20>
 800023e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000242:	3a01      	subs	r2, #1
 8000244:	428b      	cmp	r3, r1
 8000246:	d02d      	beq.n	80002a4 <memchr+0x74>
 8000248:	f010 0f07 	tst.w	r0, #7
 800024c:	b342      	cbz	r2, 80002a0 <memchr+0x70>
 800024e:	d1f6      	bne.n	800023e <memchr+0xe>
 8000250:	b4f0      	push	{r4, r5, r6, r7}
 8000252:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000256:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800025a:	f022 0407 	bic.w	r4, r2, #7
 800025e:	f07f 0700 	mvns.w	r7, #0
 8000262:	2300      	movs	r3, #0
 8000264:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000268:	3c08      	subs	r4, #8
 800026a:	ea85 0501 	eor.w	r5, r5, r1
 800026e:	ea86 0601 	eor.w	r6, r6, r1
 8000272:	fa85 f547 	uadd8	r5, r5, r7
 8000276:	faa3 f587 	sel	r5, r3, r7
 800027a:	fa86 f647 	uadd8	r6, r6, r7
 800027e:	faa5 f687 	sel	r6, r5, r7
 8000282:	b98e      	cbnz	r6, 80002a8 <memchr+0x78>
 8000284:	d1ee      	bne.n	8000264 <memchr+0x34>
 8000286:	bcf0      	pop	{r4, r5, r6, r7}
 8000288:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800028c:	f002 0207 	and.w	r2, r2, #7
 8000290:	b132      	cbz	r2, 80002a0 <memchr+0x70>
 8000292:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000296:	3a01      	subs	r2, #1
 8000298:	ea83 0301 	eor.w	r3, r3, r1
 800029c:	b113      	cbz	r3, 80002a4 <memchr+0x74>
 800029e:	d1f8      	bne.n	8000292 <memchr+0x62>
 80002a0:	2000      	movs	r0, #0
 80002a2:	4770      	bx	lr
 80002a4:	3801      	subs	r0, #1
 80002a6:	4770      	bx	lr
 80002a8:	2d00      	cmp	r5, #0
 80002aa:	bf06      	itte	eq
 80002ac:	4635      	moveq	r5, r6
 80002ae:	3803      	subeq	r0, #3
 80002b0:	3807      	subne	r0, #7
 80002b2:	f015 0f01 	tst.w	r5, #1
 80002b6:	d107      	bne.n	80002c8 <memchr+0x98>
 80002b8:	3001      	adds	r0, #1
 80002ba:	f415 7f80 	tst.w	r5, #256	@ 0x100
 80002be:	bf02      	ittt	eq
 80002c0:	3001      	addeq	r0, #1
 80002c2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002c6:	3001      	addeq	r0, #1
 80002c8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ca:	3801      	subs	r0, #1
 80002cc:	4770      	bx	lr
 80002ce:	bf00      	nop

080002d0 <__aeabi_uldivmod>:
 80002d0:	b953      	cbnz	r3, 80002e8 <__aeabi_uldivmod+0x18>
 80002d2:	b94a      	cbnz	r2, 80002e8 <__aeabi_uldivmod+0x18>
 80002d4:	2900      	cmp	r1, #0
 80002d6:	bf08      	it	eq
 80002d8:	2800      	cmpeq	r0, #0
 80002da:	bf1c      	itt	ne
 80002dc:	f04f 31ff 	movne.w	r1, #4294967295
 80002e0:	f04f 30ff 	movne.w	r0, #4294967295
 80002e4:	f000 b96a 	b.w	80005bc <__aeabi_idiv0>
 80002e8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ec:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002f0:	f000 f806 	bl	8000300 <__udivmoddi4>
 80002f4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002f8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002fc:	b004      	add	sp, #16
 80002fe:	4770      	bx	lr

08000300 <__udivmoddi4>:
 8000300:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000304:	9d08      	ldr	r5, [sp, #32]
 8000306:	460c      	mov	r4, r1
 8000308:	2b00      	cmp	r3, #0
 800030a:	d14e      	bne.n	80003aa <__udivmoddi4+0xaa>
 800030c:	4694      	mov	ip, r2
 800030e:	458c      	cmp	ip, r1
 8000310:	4686      	mov	lr, r0
 8000312:	fab2 f282 	clz	r2, r2
 8000316:	d962      	bls.n	80003de <__udivmoddi4+0xde>
 8000318:	b14a      	cbz	r2, 800032e <__udivmoddi4+0x2e>
 800031a:	f1c2 0320 	rsb	r3, r2, #32
 800031e:	4091      	lsls	r1, r2
 8000320:	fa20 f303 	lsr.w	r3, r0, r3
 8000324:	fa0c fc02 	lsl.w	ip, ip, r2
 8000328:	4319      	orrs	r1, r3
 800032a:	fa00 fe02 	lsl.w	lr, r0, r2
 800032e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000332:	fa1f f68c 	uxth.w	r6, ip
 8000336:	fbb1 f4f7 	udiv	r4, r1, r7
 800033a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800033e:	fb07 1114 	mls	r1, r7, r4, r1
 8000342:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000346:	fb04 f106 	mul.w	r1, r4, r6
 800034a:	4299      	cmp	r1, r3
 800034c:	d90a      	bls.n	8000364 <__udivmoddi4+0x64>
 800034e:	eb1c 0303 	adds.w	r3, ip, r3
 8000352:	f104 30ff 	add.w	r0, r4, #4294967295
 8000356:	f080 8112 	bcs.w	800057e <__udivmoddi4+0x27e>
 800035a:	4299      	cmp	r1, r3
 800035c:	f240 810f 	bls.w	800057e <__udivmoddi4+0x27e>
 8000360:	3c02      	subs	r4, #2
 8000362:	4463      	add	r3, ip
 8000364:	1a59      	subs	r1, r3, r1
 8000366:	fa1f f38e 	uxth.w	r3, lr
 800036a:	fbb1 f0f7 	udiv	r0, r1, r7
 800036e:	fb07 1110 	mls	r1, r7, r0, r1
 8000372:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000376:	fb00 f606 	mul.w	r6, r0, r6
 800037a:	429e      	cmp	r6, r3
 800037c:	d90a      	bls.n	8000394 <__udivmoddi4+0x94>
 800037e:	eb1c 0303 	adds.w	r3, ip, r3
 8000382:	f100 31ff 	add.w	r1, r0, #4294967295
 8000386:	f080 80fc 	bcs.w	8000582 <__udivmoddi4+0x282>
 800038a:	429e      	cmp	r6, r3
 800038c:	f240 80f9 	bls.w	8000582 <__udivmoddi4+0x282>
 8000390:	4463      	add	r3, ip
 8000392:	3802      	subs	r0, #2
 8000394:	1b9b      	subs	r3, r3, r6
 8000396:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800039a:	2100      	movs	r1, #0
 800039c:	b11d      	cbz	r5, 80003a6 <__udivmoddi4+0xa6>
 800039e:	40d3      	lsrs	r3, r2
 80003a0:	2200      	movs	r2, #0
 80003a2:	e9c5 3200 	strd	r3, r2, [r5]
 80003a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003aa:	428b      	cmp	r3, r1
 80003ac:	d905      	bls.n	80003ba <__udivmoddi4+0xba>
 80003ae:	b10d      	cbz	r5, 80003b4 <__udivmoddi4+0xb4>
 80003b0:	e9c5 0100 	strd	r0, r1, [r5]
 80003b4:	2100      	movs	r1, #0
 80003b6:	4608      	mov	r0, r1
 80003b8:	e7f5      	b.n	80003a6 <__udivmoddi4+0xa6>
 80003ba:	fab3 f183 	clz	r1, r3
 80003be:	2900      	cmp	r1, #0
 80003c0:	d146      	bne.n	8000450 <__udivmoddi4+0x150>
 80003c2:	42a3      	cmp	r3, r4
 80003c4:	d302      	bcc.n	80003cc <__udivmoddi4+0xcc>
 80003c6:	4290      	cmp	r0, r2
 80003c8:	f0c0 80f0 	bcc.w	80005ac <__udivmoddi4+0x2ac>
 80003cc:	1a86      	subs	r6, r0, r2
 80003ce:	eb64 0303 	sbc.w	r3, r4, r3
 80003d2:	2001      	movs	r0, #1
 80003d4:	2d00      	cmp	r5, #0
 80003d6:	d0e6      	beq.n	80003a6 <__udivmoddi4+0xa6>
 80003d8:	e9c5 6300 	strd	r6, r3, [r5]
 80003dc:	e7e3      	b.n	80003a6 <__udivmoddi4+0xa6>
 80003de:	2a00      	cmp	r2, #0
 80003e0:	f040 8090 	bne.w	8000504 <__udivmoddi4+0x204>
 80003e4:	eba1 040c 	sub.w	r4, r1, ip
 80003e8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003ec:	fa1f f78c 	uxth.w	r7, ip
 80003f0:	2101      	movs	r1, #1
 80003f2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003f6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003fa:	fb08 4416 	mls	r4, r8, r6, r4
 80003fe:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000402:	fb07 f006 	mul.w	r0, r7, r6
 8000406:	4298      	cmp	r0, r3
 8000408:	d908      	bls.n	800041c <__udivmoddi4+0x11c>
 800040a:	eb1c 0303 	adds.w	r3, ip, r3
 800040e:	f106 34ff 	add.w	r4, r6, #4294967295
 8000412:	d202      	bcs.n	800041a <__udivmoddi4+0x11a>
 8000414:	4298      	cmp	r0, r3
 8000416:	f200 80cd 	bhi.w	80005b4 <__udivmoddi4+0x2b4>
 800041a:	4626      	mov	r6, r4
 800041c:	1a1c      	subs	r4, r3, r0
 800041e:	fa1f f38e 	uxth.w	r3, lr
 8000422:	fbb4 f0f8 	udiv	r0, r4, r8
 8000426:	fb08 4410 	mls	r4, r8, r0, r4
 800042a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800042e:	fb00 f707 	mul.w	r7, r0, r7
 8000432:	429f      	cmp	r7, r3
 8000434:	d908      	bls.n	8000448 <__udivmoddi4+0x148>
 8000436:	eb1c 0303 	adds.w	r3, ip, r3
 800043a:	f100 34ff 	add.w	r4, r0, #4294967295
 800043e:	d202      	bcs.n	8000446 <__udivmoddi4+0x146>
 8000440:	429f      	cmp	r7, r3
 8000442:	f200 80b0 	bhi.w	80005a6 <__udivmoddi4+0x2a6>
 8000446:	4620      	mov	r0, r4
 8000448:	1bdb      	subs	r3, r3, r7
 800044a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800044e:	e7a5      	b.n	800039c <__udivmoddi4+0x9c>
 8000450:	f1c1 0620 	rsb	r6, r1, #32
 8000454:	408b      	lsls	r3, r1
 8000456:	fa22 f706 	lsr.w	r7, r2, r6
 800045a:	431f      	orrs	r7, r3
 800045c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000460:	fa04 f301 	lsl.w	r3, r4, r1
 8000464:	ea43 030c 	orr.w	r3, r3, ip
 8000468:	40f4      	lsrs	r4, r6
 800046a:	fa00 f801 	lsl.w	r8, r0, r1
 800046e:	0c38      	lsrs	r0, r7, #16
 8000470:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000474:	fbb4 fef0 	udiv	lr, r4, r0
 8000478:	fa1f fc87 	uxth.w	ip, r7
 800047c:	fb00 441e 	mls	r4, r0, lr, r4
 8000480:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000484:	fb0e f90c 	mul.w	r9, lr, ip
 8000488:	45a1      	cmp	r9, r4
 800048a:	fa02 f201 	lsl.w	r2, r2, r1
 800048e:	d90a      	bls.n	80004a6 <__udivmoddi4+0x1a6>
 8000490:	193c      	adds	r4, r7, r4
 8000492:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000496:	f080 8084 	bcs.w	80005a2 <__udivmoddi4+0x2a2>
 800049a:	45a1      	cmp	r9, r4
 800049c:	f240 8081 	bls.w	80005a2 <__udivmoddi4+0x2a2>
 80004a0:	f1ae 0e02 	sub.w	lr, lr, #2
 80004a4:	443c      	add	r4, r7
 80004a6:	eba4 0409 	sub.w	r4, r4, r9
 80004aa:	fa1f f983 	uxth.w	r9, r3
 80004ae:	fbb4 f3f0 	udiv	r3, r4, r0
 80004b2:	fb00 4413 	mls	r4, r0, r3, r4
 80004b6:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80004ba:	fb03 fc0c 	mul.w	ip, r3, ip
 80004be:	45a4      	cmp	ip, r4
 80004c0:	d907      	bls.n	80004d2 <__udivmoddi4+0x1d2>
 80004c2:	193c      	adds	r4, r7, r4
 80004c4:	f103 30ff 	add.w	r0, r3, #4294967295
 80004c8:	d267      	bcs.n	800059a <__udivmoddi4+0x29a>
 80004ca:	45a4      	cmp	ip, r4
 80004cc:	d965      	bls.n	800059a <__udivmoddi4+0x29a>
 80004ce:	3b02      	subs	r3, #2
 80004d0:	443c      	add	r4, r7
 80004d2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80004d6:	fba0 9302 	umull	r9, r3, r0, r2
 80004da:	eba4 040c 	sub.w	r4, r4, ip
 80004de:	429c      	cmp	r4, r3
 80004e0:	46ce      	mov	lr, r9
 80004e2:	469c      	mov	ip, r3
 80004e4:	d351      	bcc.n	800058a <__udivmoddi4+0x28a>
 80004e6:	d04e      	beq.n	8000586 <__udivmoddi4+0x286>
 80004e8:	b155      	cbz	r5, 8000500 <__udivmoddi4+0x200>
 80004ea:	ebb8 030e 	subs.w	r3, r8, lr
 80004ee:	eb64 040c 	sbc.w	r4, r4, ip
 80004f2:	fa04 f606 	lsl.w	r6, r4, r6
 80004f6:	40cb      	lsrs	r3, r1
 80004f8:	431e      	orrs	r6, r3
 80004fa:	40cc      	lsrs	r4, r1
 80004fc:	e9c5 6400 	strd	r6, r4, [r5]
 8000500:	2100      	movs	r1, #0
 8000502:	e750      	b.n	80003a6 <__udivmoddi4+0xa6>
 8000504:	f1c2 0320 	rsb	r3, r2, #32
 8000508:	fa20 f103 	lsr.w	r1, r0, r3
 800050c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000510:	fa24 f303 	lsr.w	r3, r4, r3
 8000514:	4094      	lsls	r4, r2
 8000516:	430c      	orrs	r4, r1
 8000518:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800051c:	fa00 fe02 	lsl.w	lr, r0, r2
 8000520:	fa1f f78c 	uxth.w	r7, ip
 8000524:	fbb3 f0f8 	udiv	r0, r3, r8
 8000528:	fb08 3110 	mls	r1, r8, r0, r3
 800052c:	0c23      	lsrs	r3, r4, #16
 800052e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000532:	fb00 f107 	mul.w	r1, r0, r7
 8000536:	4299      	cmp	r1, r3
 8000538:	d908      	bls.n	800054c <__udivmoddi4+0x24c>
 800053a:	eb1c 0303 	adds.w	r3, ip, r3
 800053e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000542:	d22c      	bcs.n	800059e <__udivmoddi4+0x29e>
 8000544:	4299      	cmp	r1, r3
 8000546:	d92a      	bls.n	800059e <__udivmoddi4+0x29e>
 8000548:	3802      	subs	r0, #2
 800054a:	4463      	add	r3, ip
 800054c:	1a5b      	subs	r3, r3, r1
 800054e:	b2a4      	uxth	r4, r4
 8000550:	fbb3 f1f8 	udiv	r1, r3, r8
 8000554:	fb08 3311 	mls	r3, r8, r1, r3
 8000558:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800055c:	fb01 f307 	mul.w	r3, r1, r7
 8000560:	42a3      	cmp	r3, r4
 8000562:	d908      	bls.n	8000576 <__udivmoddi4+0x276>
 8000564:	eb1c 0404 	adds.w	r4, ip, r4
 8000568:	f101 36ff 	add.w	r6, r1, #4294967295
 800056c:	d213      	bcs.n	8000596 <__udivmoddi4+0x296>
 800056e:	42a3      	cmp	r3, r4
 8000570:	d911      	bls.n	8000596 <__udivmoddi4+0x296>
 8000572:	3902      	subs	r1, #2
 8000574:	4464      	add	r4, ip
 8000576:	1ae4      	subs	r4, r4, r3
 8000578:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800057c:	e739      	b.n	80003f2 <__udivmoddi4+0xf2>
 800057e:	4604      	mov	r4, r0
 8000580:	e6f0      	b.n	8000364 <__udivmoddi4+0x64>
 8000582:	4608      	mov	r0, r1
 8000584:	e706      	b.n	8000394 <__udivmoddi4+0x94>
 8000586:	45c8      	cmp	r8, r9
 8000588:	d2ae      	bcs.n	80004e8 <__udivmoddi4+0x1e8>
 800058a:	ebb9 0e02 	subs.w	lr, r9, r2
 800058e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000592:	3801      	subs	r0, #1
 8000594:	e7a8      	b.n	80004e8 <__udivmoddi4+0x1e8>
 8000596:	4631      	mov	r1, r6
 8000598:	e7ed      	b.n	8000576 <__udivmoddi4+0x276>
 800059a:	4603      	mov	r3, r0
 800059c:	e799      	b.n	80004d2 <__udivmoddi4+0x1d2>
 800059e:	4630      	mov	r0, r6
 80005a0:	e7d4      	b.n	800054c <__udivmoddi4+0x24c>
 80005a2:	46d6      	mov	lr, sl
 80005a4:	e77f      	b.n	80004a6 <__udivmoddi4+0x1a6>
 80005a6:	4463      	add	r3, ip
 80005a8:	3802      	subs	r0, #2
 80005aa:	e74d      	b.n	8000448 <__udivmoddi4+0x148>
 80005ac:	4606      	mov	r6, r0
 80005ae:	4623      	mov	r3, r4
 80005b0:	4608      	mov	r0, r1
 80005b2:	e70f      	b.n	80003d4 <__udivmoddi4+0xd4>
 80005b4:	3e02      	subs	r6, #2
 80005b6:	4463      	add	r3, ip
 80005b8:	e730      	b.n	800041c <__udivmoddi4+0x11c>
 80005ba:	bf00      	nop

080005bc <__aeabi_idiv0>:
 80005bc:	4770      	bx	lr
 80005be:	bf00      	nop

080005c0 <Packet_to_ESP>:

DATA_TO_ESP ESP_Data;
uint8_t ESP_Payload[8];

void Packet_to_ESP(uint8_t type, uint8_t state)
{
 80005c0:	b580      	push	{r7, lr}
 80005c2:	b082      	sub	sp, #8
 80005c4:	af00      	add	r7, sp, #0
 80005c6:	4603      	mov	r3, r0
 80005c8:	460a      	mov	r2, r1
 80005ca:	71fb      	strb	r3, [r7, #7]
 80005cc:	4613      	mov	r3, r2
 80005ce:	71bb      	strb	r3, [r7, #6]
	ESP_Payload[0]=0xAB;
 80005d0:	4b57      	ldr	r3, [pc, #348]	@ (8000730 <Packet_to_ESP+0x170>)
 80005d2:	22ab      	movs	r2, #171	@ 0xab
 80005d4:	701a      	strb	r2, [r3, #0]
	ESP_Payload[1]=0xCD;
 80005d6:	4b56      	ldr	r3, [pc, #344]	@ (8000730 <Packet_to_ESP+0x170>)
 80005d8:	22cd      	movs	r2, #205	@ 0xcd
 80005da:	705a      	strb	r2, [r3, #1]
	ESP_Payload[2]=type;
 80005dc:	4a54      	ldr	r2, [pc, #336]	@ (8000730 <Packet_to_ESP+0x170>)
 80005de:	79fb      	ldrb	r3, [r7, #7]
 80005e0:	7093      	strb	r3, [r2, #2]
	ESP_Data.type_ESP_Data=type;
 80005e2:	4a54      	ldr	r2, [pc, #336]	@ (8000734 <Packet_to_ESP+0x174>)
 80005e4:	79fb      	ldrb	r3, [r7, #7]
 80005e6:	7013      	strb	r3, [r2, #0]
	if((ESP_Data.type_ESP_Data == TYPE_INTERNET_STATUS) ||
 80005e8:	4b52      	ldr	r3, [pc, #328]	@ (8000734 <Packet_to_ESP+0x174>)
 80005ea:	781b      	ldrb	r3, [r3, #0]
 80005ec:	2b11      	cmp	r3, #17
 80005ee:	d00f      	beq.n	8000610 <Packet_to_ESP+0x50>
	   (ESP_Data.type_ESP_Data == TYPE_CIMS_CHARGE_STATUS) ||
 80005f0:	4b50      	ldr	r3, [pc, #320]	@ (8000734 <Packet_to_ESP+0x174>)
 80005f2:	781b      	ldrb	r3, [r3, #0]
	if((ESP_Data.type_ESP_Data == TYPE_INTERNET_STATUS) ||
 80005f4:	2b12      	cmp	r3, #18
 80005f6:	d00b      	beq.n	8000610 <Packet_to_ESP+0x50>
	   (ESP_Data.type_ESP_Data == TYPE_HMI_STATUS) ||
 80005f8:	4b4e      	ldr	r3, [pc, #312]	@ (8000734 <Packet_to_ESP+0x174>)
 80005fa:	781b      	ldrb	r3, [r3, #0]
	   (ESP_Data.type_ESP_Data == TYPE_CIMS_CHARGE_STATUS) ||
 80005fc:	2b13      	cmp	r3, #19
 80005fe:	d007      	beq.n	8000610 <Packet_to_ESP+0x50>
	   (ESP_Data.type_ESP_Data == TYPE_PLC_STATUS) ||
 8000600:	4b4c      	ldr	r3, [pc, #304]	@ (8000734 <Packet_to_ESP+0x174>)
 8000602:	781b      	ldrb	r3, [r3, #0]
	   (ESP_Data.type_ESP_Data == TYPE_HMI_STATUS) ||
 8000604:	2b14      	cmp	r3, #20
 8000606:	d003      	beq.n	8000610 <Packet_to_ESP+0x50>
	   (ESP_Data.type_ESP_Data == TYPE_ID_TAG))
 8000608:	4b4a      	ldr	r3, [pc, #296]	@ (8000734 <Packet_to_ESP+0x174>)
 800060a:	781b      	ldrb	r3, [r3, #0]
	   (ESP_Data.type_ESP_Data == TYPE_PLC_STATUS) ||
 800060c:	2b15      	cmp	r3, #21
 800060e:	d10c      	bne.n	800062a <Packet_to_ESP+0x6a>
	{
		ESP_Payload[3]=0x00;
 8000610:	4b47      	ldr	r3, [pc, #284]	@ (8000730 <Packet_to_ESP+0x170>)
 8000612:	2200      	movs	r2, #0
 8000614:	70da      	strb	r2, [r3, #3]
		ESP_Payload[4]=0x00;
 8000616:	4b46      	ldr	r3, [pc, #280]	@ (8000730 <Packet_to_ESP+0x170>)
 8000618:	2200      	movs	r2, #0
 800061a:	711a      	strb	r2, [r3, #4]
		ESP_Payload[5]=0x00;
 800061c:	4b44      	ldr	r3, [pc, #272]	@ (8000730 <Packet_to_ESP+0x170>)
 800061e:	2200      	movs	r2, #0
 8000620:	715a      	strb	r2, [r3, #5]
		ESP_Payload[6]=state;
 8000622:	4a43      	ldr	r2, [pc, #268]	@ (8000730 <Packet_to_ESP+0x170>)
 8000624:	79bb      	ldrb	r3, [r7, #6]
 8000626:	7193      	strb	r3, [r2, #6]
 8000628:	e05f      	b.n	80006ea <Packet_to_ESP+0x12a>
	}
	else if(ESP_Data.type_ESP_Data==TYPE_HMI_CONTROL_TRANSACTION)
 800062a:	4b42      	ldr	r3, [pc, #264]	@ (8000734 <Packet_to_ESP+0x174>)
 800062c:	781b      	ldrb	r3, [r3, #0]
 800062e:	2b18      	cmp	r3, #24
 8000630:	d10c      	bne.n	800064c <Packet_to_ESP+0x8c>
	{
		ESP_Payload[3]=0x00;
 8000632:	4b3f      	ldr	r3, [pc, #252]	@ (8000730 <Packet_to_ESP+0x170>)
 8000634:	2200      	movs	r2, #0
 8000636:	70da      	strb	r2, [r3, #3]
		ESP_Payload[4]=0x00;
 8000638:	4b3d      	ldr	r3, [pc, #244]	@ (8000730 <Packet_to_ESP+0x170>)
 800063a:	2200      	movs	r2, #0
 800063c:	711a      	strb	r2, [r3, #4]
		ESP_Payload[5]=0x01;
 800063e:	4b3c      	ldr	r3, [pc, #240]	@ (8000730 <Packet_to_ESP+0x170>)
 8000640:	2201      	movs	r2, #1
 8000642:	715a      	strb	r2, [r3, #5]
		ESP_Payload[6]=state;
 8000644:	4a3a      	ldr	r2, [pc, #232]	@ (8000730 <Packet_to_ESP+0x170>)
 8000646:	79bb      	ldrb	r3, [r7, #6]
 8000648:	7193      	strb	r3, [r2, #6]
 800064a:	e04e      	b.n	80006ea <Packet_to_ESP+0x12a>

	}
	else if(ESP_Data.type_ESP_Data==TYPE_VOLTAGE_VALUE)
 800064c:	4b39      	ldr	r3, [pc, #228]	@ (8000734 <Packet_to_ESP+0x174>)
 800064e:	781b      	ldrb	r3, [r3, #0]
 8000650:	2b21      	cmp	r3, #33	@ 0x21
 8000652:	d112      	bne.n	800067a <Packet_to_ESP+0xba>
	{
		ESP_Payload[5]=0;
 8000654:	4b36      	ldr	r3, [pc, #216]	@ (8000730 <Packet_to_ESP+0x170>)
 8000656:	2200      	movs	r2, #0
 8000658:	715a      	strb	r2, [r3, #5]
		ESP_Payload[3]=(uint8_t)(ESP_Data.ESP_Data_voltage & 0xFF);
 800065a:	4b36      	ldr	r3, [pc, #216]	@ (8000734 <Packet_to_ESP+0x174>)
 800065c:	885b      	ldrh	r3, [r3, #2]
 800065e:	b2da      	uxtb	r2, r3
 8000660:	4b33      	ldr	r3, [pc, #204]	@ (8000730 <Packet_to_ESP+0x170>)
 8000662:	70da      	strb	r2, [r3, #3]
		ESP_Payload[4]=(uint8_t)((ESP_Data.ESP_Data_voltage>>8) & 0xFF);
 8000664:	4b33      	ldr	r3, [pc, #204]	@ (8000734 <Packet_to_ESP+0x174>)
 8000666:	885b      	ldrh	r3, [r3, #2]
 8000668:	0a1b      	lsrs	r3, r3, #8
 800066a:	b29b      	uxth	r3, r3
 800066c:	b2da      	uxtb	r2, r3
 800066e:	4b30      	ldr	r3, [pc, #192]	@ (8000730 <Packet_to_ESP+0x170>)
 8000670:	711a      	strb	r2, [r3, #4]
		ESP_Payload[6]=1;
 8000672:	4b2f      	ldr	r3, [pc, #188]	@ (8000730 <Packet_to_ESP+0x170>)
 8000674:	2201      	movs	r2, #1
 8000676:	719a      	strb	r2, [r3, #6]
 8000678:	e037      	b.n	80006ea <Packet_to_ESP+0x12a>
	}
	else if(ESP_Data.type_ESP_Data==TYPE_CURRENT_VALUE)
 800067a:	4b2e      	ldr	r3, [pc, #184]	@ (8000734 <Packet_to_ESP+0x174>)
 800067c:	781b      	ldrb	r3, [r3, #0]
 800067e:	2b20      	cmp	r3, #32
 8000680:	d112      	bne.n	80006a8 <Packet_to_ESP+0xe8>
	{
		ESP_Payload[5]=0;
 8000682:	4b2b      	ldr	r3, [pc, #172]	@ (8000730 <Packet_to_ESP+0x170>)
 8000684:	2200      	movs	r2, #0
 8000686:	715a      	strb	r2, [r3, #5]
		ESP_Payload[3]=(uint8_t)(ESP_Data.ESP_Data_current & 0xFF);
 8000688:	4b2a      	ldr	r3, [pc, #168]	@ (8000734 <Packet_to_ESP+0x174>)
 800068a:	889b      	ldrh	r3, [r3, #4]
 800068c:	b2da      	uxtb	r2, r3
 800068e:	4b28      	ldr	r3, [pc, #160]	@ (8000730 <Packet_to_ESP+0x170>)
 8000690:	70da      	strb	r2, [r3, #3]
		ESP_Payload[4]=(uint8_t)((ESP_Data.ESP_Data_current>>8) & 0xFF);
 8000692:	4b28      	ldr	r3, [pc, #160]	@ (8000734 <Packet_to_ESP+0x174>)
 8000694:	889b      	ldrh	r3, [r3, #4]
 8000696:	0a1b      	lsrs	r3, r3, #8
 8000698:	b29b      	uxth	r3, r3
 800069a:	b2da      	uxtb	r2, r3
 800069c:	4b24      	ldr	r3, [pc, #144]	@ (8000730 <Packet_to_ESP+0x170>)
 800069e:	711a      	strb	r2, [r3, #4]
		ESP_Payload[6]=1;
 80006a0:	4b23      	ldr	r3, [pc, #140]	@ (8000730 <Packet_to_ESP+0x170>)
 80006a2:	2201      	movs	r2, #1
 80006a4:	719a      	strb	r2, [r3, #6]
 80006a6:	e020      	b.n	80006ea <Packet_to_ESP+0x12a>
	}
	else if(ESP_Data.type_ESP_Data==TYPE_SOC)
 80006a8:	4b22      	ldr	r3, [pc, #136]	@ (8000734 <Packet_to_ESP+0x174>)
 80006aa:	781b      	ldrb	r3, [r3, #0]
 80006ac:	2b26      	cmp	r3, #38	@ 0x26
 80006ae:	d10c      	bne.n	80006ca <Packet_to_ESP+0x10a>
	{
		ESP_Payload[3]=0x00;
 80006b0:	4b1f      	ldr	r3, [pc, #124]	@ (8000730 <Packet_to_ESP+0x170>)
 80006b2:	2200      	movs	r2, #0
 80006b4:	70da      	strb	r2, [r3, #3]
		ESP_Payload[4]=0x10;
 80006b6:	4b1e      	ldr	r3, [pc, #120]	@ (8000730 <Packet_to_ESP+0x170>)
 80006b8:	2210      	movs	r2, #16
 80006ba:	711a      	strb	r2, [r3, #4]
		ESP_Payload[5]=0x00;
 80006bc:	4b1c      	ldr	r3, [pc, #112]	@ (8000730 <Packet_to_ESP+0x170>)
 80006be:	2200      	movs	r2, #0
 80006c0:	715a      	strb	r2, [r3, #5]
		ESP_Payload[6]=1;
 80006c2:	4b1b      	ldr	r3, [pc, #108]	@ (8000730 <Packet_to_ESP+0x170>)
 80006c4:	2201      	movs	r2, #1
 80006c6:	719a      	strb	r2, [r3, #6]
 80006c8:	e00f      	b.n	80006ea <Packet_to_ESP+0x12a>
	}
	else if(ESP_Data.type_ESP_Data==TYPE_SOH)
 80006ca:	4b1a      	ldr	r3, [pc, #104]	@ (8000734 <Packet_to_ESP+0x174>)
 80006cc:	781b      	ldrb	r3, [r3, #0]
 80006ce:	2b27      	cmp	r3, #39	@ 0x27
 80006d0:	d10b      	bne.n	80006ea <Packet_to_ESP+0x12a>
	{
		ESP_Payload[3]=0x00;
 80006d2:	4b17      	ldr	r3, [pc, #92]	@ (8000730 <Packet_to_ESP+0x170>)
 80006d4:	2200      	movs	r2, #0
 80006d6:	70da      	strb	r2, [r3, #3]
		ESP_Payload[4]=0x50;
 80006d8:	4b15      	ldr	r3, [pc, #84]	@ (8000730 <Packet_to_ESP+0x170>)
 80006da:	2250      	movs	r2, #80	@ 0x50
 80006dc:	711a      	strb	r2, [r3, #4]
		ESP_Payload[5]=0x00;
 80006de:	4b14      	ldr	r3, [pc, #80]	@ (8000730 <Packet_to_ESP+0x170>)
 80006e0:	2200      	movs	r2, #0
 80006e2:	715a      	strb	r2, [r3, #5]
		ESP_Payload[6]=1;
 80006e4:	4b12      	ldr	r3, [pc, #72]	@ (8000730 <Packet_to_ESP+0x170>)
 80006e6:	2201      	movs	r2, #1
 80006e8:	719a      	strb	r2, [r3, #6]
//		ESP_Payload[3]=0x00;
//		ESP_Payload[4]=(uint8_t)((myEV.max_charging_time) & 0xFF);
//		ESP_Payload[5]=(uint8_t)((myEV.max_charging_time>>8) & 0xFF);
//		ESP_Payload[6]=1;
//	}
	ESP_Payload[7]=ESP_Payload[0]+ESP_Payload[1]+ESP_Payload[2]+ESP_Payload[3]+ESP_Payload[4]+ESP_Payload[5]+ESP_Payload[6];
 80006ea:	4b11      	ldr	r3, [pc, #68]	@ (8000730 <Packet_to_ESP+0x170>)
 80006ec:	781a      	ldrb	r2, [r3, #0]
 80006ee:	4b10      	ldr	r3, [pc, #64]	@ (8000730 <Packet_to_ESP+0x170>)
 80006f0:	785b      	ldrb	r3, [r3, #1]
 80006f2:	4413      	add	r3, r2
 80006f4:	b2da      	uxtb	r2, r3
 80006f6:	4b0e      	ldr	r3, [pc, #56]	@ (8000730 <Packet_to_ESP+0x170>)
 80006f8:	789b      	ldrb	r3, [r3, #2]
 80006fa:	4413      	add	r3, r2
 80006fc:	b2da      	uxtb	r2, r3
 80006fe:	4b0c      	ldr	r3, [pc, #48]	@ (8000730 <Packet_to_ESP+0x170>)
 8000700:	78db      	ldrb	r3, [r3, #3]
 8000702:	4413      	add	r3, r2
 8000704:	b2da      	uxtb	r2, r3
 8000706:	4b0a      	ldr	r3, [pc, #40]	@ (8000730 <Packet_to_ESP+0x170>)
 8000708:	791b      	ldrb	r3, [r3, #4]
 800070a:	4413      	add	r3, r2
 800070c:	b2da      	uxtb	r2, r3
 800070e:	4b08      	ldr	r3, [pc, #32]	@ (8000730 <Packet_to_ESP+0x170>)
 8000710:	795b      	ldrb	r3, [r3, #5]
 8000712:	4413      	add	r3, r2
 8000714:	b2da      	uxtb	r2, r3
 8000716:	4b06      	ldr	r3, [pc, #24]	@ (8000730 <Packet_to_ESP+0x170>)
 8000718:	799b      	ldrb	r3, [r3, #6]
 800071a:	4413      	add	r3, r2
 800071c:	b2da      	uxtb	r2, r3
 800071e:	4b04      	ldr	r3, [pc, #16]	@ (8000730 <Packet_to_ESP+0x170>)
 8000720:	71da      	strb	r2, [r3, #7]
	ESP_Send();
 8000722:	f000 f859 	bl	80007d8 <ESP_Send>
}
 8000726:	bf00      	nop
 8000728:	3708      	adds	r7, #8
 800072a:	46bd      	mov	sp, r7
 800072c:	bd80      	pop	{r7, pc}
 800072e:	bf00      	nop
 8000730:	200000b0 	.word	0x200000b0
 8000734:	200000a8 	.word	0x200000a8

08000738 <Serial_Print>:
int users[MAX_CONNECTORS] = { 255, 255 };
uint8_t current_user = 255;
int status[MAX_CONNECTORS] = { 0, 0 }; // Connector charging or not
uint8_t connectorID;

void Serial_Print(void) {
 8000738:	b580      	push	{r7, lr}
 800073a:	af00      	add	r7, sp, #0
#define TIMEOUT_100_MS 100
	HAL_UART_Transmit(&huart1, (uint8_t*) serial_output_buffer,
			strlen(serial_output_buffer), TIMEOUT_100_MS);
 800073c:	4805      	ldr	r0, [pc, #20]	@ (8000754 <Serial_Print+0x1c>)
 800073e:	f7ff fd6f 	bl	8000220 <strlen>
 8000742:	4603      	mov	r3, r0
	HAL_UART_Transmit(&huart1, (uint8_t*) serial_output_buffer,
 8000744:	b29a      	uxth	r2, r3
 8000746:	2364      	movs	r3, #100	@ 0x64
 8000748:	4902      	ldr	r1, [pc, #8]	@ (8000754 <Serial_Print+0x1c>)
 800074a:	4803      	ldr	r0, [pc, #12]	@ (8000758 <Serial_Print+0x20>)
 800074c:	f007 feb6 	bl	80084bc <HAL_UART_Transmit>
}
 8000750:	bf00      	nop
 8000752:	bd80      	pop	{r7, pc}
 8000754:	200005e0 	.word	0x200005e0
 8000758:	20000314 	.word	0x20000314

0800075c <EVSE_state>:

void EVSE_state() {
 800075c:	b580      	push	{r7, lr}
 800075e:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "Connector 1: %X, Connector 2: %X\n",
 8000760:	4b14      	ldr	r3, [pc, #80]	@ (80007b4 <EVSE_state+0x58>)
 8000762:	681a      	ldr	r2, [r3, #0]
 8000764:	4b13      	ldr	r3, [pc, #76]	@ (80007b4 <EVSE_state+0x58>)
 8000766:	685b      	ldr	r3, [r3, #4]
 8000768:	4913      	ldr	r1, [pc, #76]	@ (80007b8 <EVSE_state+0x5c>)
 800076a:	4814      	ldr	r0, [pc, #80]	@ (80007bc <EVSE_state+0x60>)
 800076c:	f00b f92a 	bl	800b9c4 <siprintf>
			connectors[0], connectors[1]);
	Serial_Print();
 8000770:	f7ff ffe2 	bl	8000738 <Serial_Print>
	sprintf(serial_output_buffer, "Status 1: %X, Status 2: %X\n", status[0],
 8000774:	4b12      	ldr	r3, [pc, #72]	@ (80007c0 <EVSE_state+0x64>)
 8000776:	681a      	ldr	r2, [r3, #0]
 8000778:	4b11      	ldr	r3, [pc, #68]	@ (80007c0 <EVSE_state+0x64>)
 800077a:	685b      	ldr	r3, [r3, #4]
 800077c:	4911      	ldr	r1, [pc, #68]	@ (80007c4 <EVSE_state+0x68>)
 800077e:	480f      	ldr	r0, [pc, #60]	@ (80007bc <EVSE_state+0x60>)
 8000780:	f00b f920 	bl	800b9c4 <siprintf>
			status[1]);
	Serial_Print();
 8000784:	f7ff ffd8 	bl	8000738 <Serial_Print>
	sprintf(serial_output_buffer, "User 1: %X, User 2: %X\n", users[0], users[1]);
 8000788:	4b0f      	ldr	r3, [pc, #60]	@ (80007c8 <EVSE_state+0x6c>)
 800078a:	681a      	ldr	r2, [r3, #0]
 800078c:	4b0e      	ldr	r3, [pc, #56]	@ (80007c8 <EVSE_state+0x6c>)
 800078e:	685b      	ldr	r3, [r3, #4]
 8000790:	490e      	ldr	r1, [pc, #56]	@ (80007cc <EVSE_state+0x70>)
 8000792:	480a      	ldr	r0, [pc, #40]	@ (80007bc <EVSE_state+0x60>)
 8000794:	f00b f916 	bl	800b9c4 <siprintf>
	Serial_Print();
 8000798:	f7ff ffce 	bl	8000738 <Serial_Print>
	sprintf(serial_output_buffer, "curent_User: %X\n", current_user);
 800079c:	4b0c      	ldr	r3, [pc, #48]	@ (80007d0 <EVSE_state+0x74>)
 800079e:	781b      	ldrb	r3, [r3, #0]
 80007a0:	461a      	mov	r2, r3
 80007a2:	490c      	ldr	r1, [pc, #48]	@ (80007d4 <EVSE_state+0x78>)
 80007a4:	4805      	ldr	r0, [pc, #20]	@ (80007bc <EVSE_state+0x60>)
 80007a6:	f00b f90d 	bl	800b9c4 <siprintf>
	Serial_Print();
 80007aa:	f7ff ffc5 	bl	8000738 <Serial_Print>
}
 80007ae:	bf00      	nop
 80007b0:	bd80      	pop	{r7, pc}
 80007b2:	bf00      	nop
 80007b4:	200005c4 	.word	0x200005c4
 80007b8:	0800cbb0 	.word	0x0800cbb0
 80007bc:	200005e0 	.word	0x200005e0
 80007c0:	200005cc 	.word	0x200005cc
 80007c4:	0800cbd4 	.word	0x0800cbd4
 80007c8:	20000000 	.word	0x20000000
 80007cc:	0800cbf0 	.word	0x0800cbf0
 80007d0:	20000008 	.word	0x20000008
 80007d4:	0800cc08 	.word	0x0800cc08

080007d8 <ESP_Send>:

void ESP_Send(void) {
 80007d8:	b580      	push	{r7, lr}
 80007da:	af00      	add	r7, sp, #0
	HAL_UART_Transmit(&huart3, ESP_Payload, 8, 100);
 80007dc:	2364      	movs	r3, #100	@ 0x64
 80007de:	2208      	movs	r2, #8
 80007e0:	4902      	ldr	r1, [pc, #8]	@ (80007ec <ESP_Send+0x14>)
 80007e2:	4803      	ldr	r0, [pc, #12]	@ (80007f0 <ESP_Send+0x18>)
 80007e4:	f007 fe6a 	bl	80084bc <HAL_UART_Transmit>
}
 80007e8:	bf00      	nop
 80007ea:	bd80      	pop	{r7, pc}
 80007ec:	200000b0 	.word	0x200000b0
 80007f0:	20000434 	.word	0x20000434

080007f4 <SPI_Transmit_Receive>:

void SPI_Transmit_Receive(void) {
 80007f4:	b580      	push	{r7, lr}
 80007f6:	b082      	sub	sp, #8
 80007f8:	af02      	add	r7, sp, #8
	HAL_GPIO_WritePin(SPI2_CS_GPIO_Port, SPI2_CS_Pin, GPIO_PIN_RESET);
 80007fa:	2200      	movs	r2, #0
 80007fc:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000800:	480a      	ldr	r0, [pc, #40]	@ (800082c <SPI_Transmit_Receive+0x38>)
 8000802:	f004 fe6d 	bl	80054e0 <HAL_GPIO_WritePin>
	HAL_SPI_TransmitReceive(&hspi2, spi_tx_buffer, spi_rx_buffer, spi_data_size,
 8000806:	4b0a      	ldr	r3, [pc, #40]	@ (8000830 <SPI_Transmit_Receive+0x3c>)
 8000808:	881b      	ldrh	r3, [r3, #0]
 800080a:	22c8      	movs	r2, #200	@ 0xc8
 800080c:	9200      	str	r2, [sp, #0]
 800080e:	4a09      	ldr	r2, [pc, #36]	@ (8000834 <SPI_Transmit_Receive+0x40>)
 8000810:	4909      	ldr	r1, [pc, #36]	@ (8000838 <SPI_Transmit_Receive+0x44>)
 8000812:	480a      	ldr	r0, [pc, #40]	@ (800083c <SPI_Transmit_Receive+0x48>)
 8000814:	f005 ff75 	bl	8006702 <HAL_SPI_TransmitReceive>
			200);
	HAL_GPIO_WritePin(SPI2_CS_GPIO_Port, SPI2_CS_Pin, GPIO_PIN_SET);
 8000818:	2201      	movs	r2, #1
 800081a:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800081e:	4803      	ldr	r0, [pc, #12]	@ (800082c <SPI_Transmit_Receive+0x38>)
 8000820:	f004 fe5e 	bl	80054e0 <HAL_GPIO_WritePin>
}
 8000824:	bf00      	nop
 8000826:	46bd      	mov	sp, r7
 8000828:	bd80      	pop	{r7, pc}
 800082a:	bf00      	nop
 800082c:	48000400 	.word	0x48000400
 8000830:	20001e7c 	.word	0x20001e7c
 8000834:	20001648 	.word	0x20001648
 8000838:	20000e14 	.word	0x20000e14
 800083c:	20000188 	.word	0x20000188

08000840 <HMI_Print>:

void HMI_Print(void) {
 8000840:	b580      	push	{r7, lr}
 8000842:	b082      	sub	sp, #8
 8000844:	af00      	add	r7, sp, #0
	HAL_UART_Transmit(&huart4, (uint8_t*) hmi_buffer, strlen(hmi_buffer),
 8000846:	4811      	ldr	r0, [pc, #68]	@ (800088c <HMI_Print+0x4c>)
 8000848:	f7ff fcea 	bl	8000220 <strlen>
 800084c:	4603      	mov	r3, r0
 800084e:	b29a      	uxth	r2, r3
 8000850:	2364      	movs	r3, #100	@ 0x64
 8000852:	490e      	ldr	r1, [pc, #56]	@ (800088c <HMI_Print+0x4c>)
 8000854:	480e      	ldr	r0, [pc, #56]	@ (8000890 <HMI_Print+0x50>)
 8000856:	f007 fe31 	bl	80084bc <HAL_UART_Transmit>
	TIMEOUT_100_MS);
	uint8_t END_BYTE = 0xFF;
 800085a:	23ff      	movs	r3, #255	@ 0xff
 800085c:	71fb      	strb	r3, [r7, #7]
	HAL_UART_Transmit(&huart4, &END_BYTE, 1, 10);
 800085e:	1df9      	adds	r1, r7, #7
 8000860:	230a      	movs	r3, #10
 8000862:	2201      	movs	r2, #1
 8000864:	480a      	ldr	r0, [pc, #40]	@ (8000890 <HMI_Print+0x50>)
 8000866:	f007 fe29 	bl	80084bc <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart4, &END_BYTE, 1, 10);
 800086a:	1df9      	adds	r1, r7, #7
 800086c:	230a      	movs	r3, #10
 800086e:	2201      	movs	r2, #1
 8000870:	4807      	ldr	r0, [pc, #28]	@ (8000890 <HMI_Print+0x50>)
 8000872:	f007 fe23 	bl	80084bc <HAL_UART_Transmit>

HAL_UART_Transmit(&huart4, &END_BYTE, 1, 10);
 8000876:	1df9      	adds	r1, r7, #7
 8000878:	230a      	movs	r3, #10
 800087a:	2201      	movs	r2, #1
 800087c:	4804      	ldr	r0, [pc, #16]	@ (8000890 <HMI_Print+0x50>)
 800087e:	f007 fe1d 	bl	80084bc <HAL_UART_Transmit>
}
 8000882:	bf00      	nop
 8000884:	3708      	adds	r7, #8
 8000886:	46bd      	mov	sp, r7
 8000888:	bd80      	pop	{r7, pc}
 800088a:	bf00      	nop
 800088c:	20002174 	.word	0x20002174
 8000890:	20000284 	.word	0x20000284

08000894 <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 8000894:	b480      	push	{r7}
 8000896:	b083      	sub	sp, #12
 8000898:	af00      	add	r7, sp, #0
 800089a:	6078      	str	r0, [r7, #4]
	;
}
 800089c:	bf00      	nop
 800089e:	370c      	adds	r7, #12
 80008a0:	46bd      	mov	sp, r7
 80008a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008a6:	4770      	bx	lr

080008a8 <calculate_checksum>:
uint8_t calculate_checksum(uint8_t *frame, size_t length) {
 80008a8:	b480      	push	{r7}
 80008aa:	b085      	sub	sp, #20
 80008ac:	af00      	add	r7, sp, #0
 80008ae:	6078      	str	r0, [r7, #4]
 80008b0:	6039      	str	r1, [r7, #0]
	uint8_t sum = 0;
 80008b2:	2300      	movs	r3, #0
 80008b4:	73fb      	strb	r3, [r7, #15]
	for (size_t i = 0; i < length - 1; i++) {
 80008b6:	2300      	movs	r3, #0
 80008b8:	60bb      	str	r3, [r7, #8]
 80008ba:	e009      	b.n	80008d0 <calculate_checksum+0x28>
		sum += frame[i];
 80008bc:	687a      	ldr	r2, [r7, #4]
 80008be:	68bb      	ldr	r3, [r7, #8]
 80008c0:	4413      	add	r3, r2
 80008c2:	781a      	ldrb	r2, [r3, #0]
 80008c4:	7bfb      	ldrb	r3, [r7, #15]
 80008c6:	4413      	add	r3, r2
 80008c8:	73fb      	strb	r3, [r7, #15]
	for (size_t i = 0; i < length - 1; i++) {
 80008ca:	68bb      	ldr	r3, [r7, #8]
 80008cc:	3301      	adds	r3, #1
 80008ce:	60bb      	str	r3, [r7, #8]
 80008d0:	683b      	ldr	r3, [r7, #0]
 80008d2:	3b01      	subs	r3, #1
 80008d4:	68ba      	ldr	r2, [r7, #8]
 80008d6:	429a      	cmp	r2, r3
 80008d8:	d3f0      	bcc.n	80008bc <calculate_checksum+0x14>
	}
	return sum & 0xFF;
 80008da:	7bfb      	ldrb	r3, [r7, #15]
}
 80008dc:	4618      	mov	r0, r3
 80008de:	3714      	adds	r7, #20
 80008e0:	46bd      	mov	sp, r7
 80008e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008e6:	4770      	bx	lr

080008e8 <create_frame>:
void create_frame(uint8_t file_code, uint8_t *data, uint8_t *frame,
		uint8_t connector) {
 80008e8:	b590      	push	{r4, r7, lr}
 80008ea:	b085      	sub	sp, #20
 80008ec:	af00      	add	r7, sp, #0
 80008ee:	60b9      	str	r1, [r7, #8]
 80008f0:	607a      	str	r2, [r7, #4]
 80008f2:	461a      	mov	r2, r3
 80008f4:	4603      	mov	r3, r0
 80008f6:	73fb      	strb	r3, [r7, #15]
 80008f8:	4613      	mov	r3, r2
 80008fa:	73bb      	strb	r3, [r7, #14]
	frame[0] = 0xAB;
 80008fc:	687b      	ldr	r3, [r7, #4]
 80008fe:	22ab      	movs	r2, #171	@ 0xab
 8000900:	701a      	strb	r2, [r3, #0]
	frame[1] = 0xCD;
 8000902:	687b      	ldr	r3, [r7, #4]
 8000904:	3301      	adds	r3, #1
 8000906:	22cd      	movs	r2, #205	@ 0xcd
 8000908:	701a      	strb	r2, [r3, #0]
	frame[2] = file_code;
 800090a:	687b      	ldr	r3, [r7, #4]
 800090c:	3302      	adds	r3, #2
 800090e:	7bfa      	ldrb	r2, [r7, #15]
 8000910:	701a      	strb	r2, [r3, #0]
	memcpy(&frame[3], data, 3);
 8000912:	687b      	ldr	r3, [r7, #4]
 8000914:	3303      	adds	r3, #3
 8000916:	2203      	movs	r2, #3
 8000918:	68b9      	ldr	r1, [r7, #8]
 800091a:	4618      	mov	r0, r3
 800091c:	f00b f931 	bl	800bb82 <memcpy>
	frame[6] = connector;
 8000920:	687b      	ldr	r3, [r7, #4]
 8000922:	3306      	adds	r3, #6
 8000924:	7bba      	ldrb	r2, [r7, #14]
 8000926:	701a      	strb	r2, [r3, #0]
	frame[7] = calculate_checksum(frame, 8);
 8000928:	687b      	ldr	r3, [r7, #4]
 800092a:	1ddc      	adds	r4, r3, #7
 800092c:	2108      	movs	r1, #8
 800092e:	6878      	ldr	r0, [r7, #4]
 8000930:	f7ff ffba 	bl	80008a8 <calculate_checksum>
 8000934:	4603      	mov	r3, r0
 8000936:	7023      	strb	r3, [r4, #0]
}
 8000938:	bf00      	nop
 800093a:	3714      	adds	r7, #20
 800093c:	46bd      	mov	sp, r7
 800093e:	bd90      	pop	{r4, r7, pc}

08000940 <send_frames>:
void send_frames(UART_HandleTypeDef *huart, uint8_t file_code, uint8_t *data,
		uint8_t connector) {
 8000940:	b580      	push	{r7, lr}
 8000942:	b088      	sub	sp, #32
 8000944:	af00      	add	r7, sp, #0
 8000946:	60f8      	str	r0, [r7, #12]
 8000948:	607a      	str	r2, [r7, #4]
 800094a:	461a      	mov	r2, r3
 800094c:	460b      	mov	r3, r1
 800094e:	72fb      	strb	r3, [r7, #11]
 8000950:	4613      	mov	r3, r2
 8000952:	72bb      	strb	r3, [r7, #10]
	uint8_t frame[8];
	create_frame(file_code, data, frame, connector);
 8000954:	7abb      	ldrb	r3, [r7, #10]
 8000956:	f107 0214 	add.w	r2, r7, #20
 800095a:	7af8      	ldrb	r0, [r7, #11]
 800095c:	6879      	ldr	r1, [r7, #4]
 800095e:	f7ff ffc3 	bl	80008e8 <create_frame>
	HAL_UART_Transmit(huart, frame, 8, HAL_MAX_DELAY);
 8000962:	f107 0114 	add.w	r1, r7, #20
 8000966:	f04f 33ff 	mov.w	r3, #4294967295
 800096a:	2208      	movs	r2, #8
 800096c:	68f8      	ldr	r0, [r7, #12]
 800096e:	f007 fda5 	bl	80084bc <HAL_UART_Transmit>
	printf("Sent: ");
 8000972:	480e      	ldr	r0, [pc, #56]	@ (80009ac <send_frames+0x6c>)
 8000974:	f00b f80c 	bl	800b990 <iprintf>
	for (int i = 0; i < 8; i++) {
 8000978:	2300      	movs	r3, #0
 800097a:	61fb      	str	r3, [r7, #28]
 800097c:	e00b      	b.n	8000996 <send_frames+0x56>
		printf("%02X ", frame[i]);
 800097e:	f107 0214 	add.w	r2, r7, #20
 8000982:	69fb      	ldr	r3, [r7, #28]
 8000984:	4413      	add	r3, r2
 8000986:	781b      	ldrb	r3, [r3, #0]
 8000988:	4619      	mov	r1, r3
 800098a:	4809      	ldr	r0, [pc, #36]	@ (80009b0 <send_frames+0x70>)
 800098c:	f00b f800 	bl	800b990 <iprintf>
	for (int i = 0; i < 8; i++) {
 8000990:	69fb      	ldr	r3, [r7, #28]
 8000992:	3301      	adds	r3, #1
 8000994:	61fb      	str	r3, [r7, #28]
 8000996:	69fb      	ldr	r3, [r7, #28]
 8000998:	2b07      	cmp	r3, #7
 800099a:	ddf0      	ble.n	800097e <send_frames+0x3e>
	}
	printf("\n");
 800099c:	200a      	movs	r0, #10
 800099e:	f00b f809 	bl	800b9b4 <putchar>

}
 80009a2:	bf00      	nop
 80009a4:	3720      	adds	r7, #32
 80009a6:	46bd      	mov	sp, r7
 80009a8:	bd80      	pop	{r7, pc}
 80009aa:	bf00      	nop
 80009ac:	0800cc1c 	.word	0x0800cc1c
 80009b0:	0800cc24 	.word	0x0800cc24

080009b4 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 80009b4:	b580      	push	{r7, lr}
 80009b6:	b08c      	sub	sp, #48	@ 0x30
 80009b8:	af00      	add	r7, sp, #0
 80009ba:	6078      	str	r0, [r7, #4]
	UNUSED(huart);
	if (huart->Instance == huart3.Instance)	//ESP data
 80009bc:	687b      	ldr	r3, [r7, #4]
 80009be:	681a      	ldr	r2, [r3, #0]
 80009c0:	4bb2      	ldr	r3, [pc, #712]	@ (8000c8c <HAL_UART_RxCpltCallback+0x2d8>)
 80009c2:	681b      	ldr	r3, [r3, #0]
 80009c4:	429a      	cmp	r2, r3
 80009c6:	f040 80f9 	bne.w	8000bbc <HAL_UART_RxCpltCallback+0x208>
			{
		HAL_UART_Receive_DMA(&huart3, uart3_rx_data, sizeof(uart3_rx_data));
 80009ca:	2208      	movs	r2, #8
 80009cc:	49b0      	ldr	r1, [pc, #704]	@ (8000c90 <HAL_UART_RxCpltCallback+0x2dc>)
 80009ce:	48af      	ldr	r0, [pc, #700]	@ (8000c8c <HAL_UART_RxCpltCallback+0x2d8>)
 80009d0:	f007 fe0a 	bl	80085e8 <HAL_UART_Receive_DMA>
		connectorID = uart3_rx_data[5];
 80009d4:	4bae      	ldr	r3, [pc, #696]	@ (8000c90 <HAL_UART_RxCpltCallback+0x2dc>)
 80009d6:	795a      	ldrb	r2, [r3, #5]
 80009d8:	4bae      	ldr	r3, [pc, #696]	@ (8000c94 <HAL_UART_RxCpltCallback+0x2e0>)
 80009da:	701a      	strb	r2, [r3, #0]
		if (uart3_rx_data[2] == 0x15) {
 80009dc:	4bac      	ldr	r3, [pc, #688]	@ (8000c90 <HAL_UART_RxCpltCallback+0x2dc>)
 80009de:	789b      	ldrb	r3, [r3, #2]
 80009e0:	2b15      	cmp	r3, #21
 80009e2:	d170      	bne.n	8000ac6 <HAL_UART_RxCpltCallback+0x112>
			EVSE_state();
 80009e4:	f7ff feba 	bl	800075c <EVSE_state>
			if (connectorID == 255 || status[uart3_rx_data[5] - 1] == 0) {
 80009e8:	4baa      	ldr	r3, [pc, #680]	@ (8000c94 <HAL_UART_RxCpltCallback+0x2e0>)
 80009ea:	781b      	ldrb	r3, [r3, #0]
 80009ec:	2bff      	cmp	r3, #255	@ 0xff
 80009ee:	d007      	beq.n	8000a00 <HAL_UART_RxCpltCallback+0x4c>
 80009f0:	4ba7      	ldr	r3, [pc, #668]	@ (8000c90 <HAL_UART_RxCpltCallback+0x2dc>)
 80009f2:	795b      	ldrb	r3, [r3, #5]
 80009f4:	3b01      	subs	r3, #1
 80009f6:	4aa8      	ldr	r2, [pc, #672]	@ (8000c98 <HAL_UART_RxCpltCallback+0x2e4>)
 80009f8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80009fc:	2b00      	cmp	r3, #0
 80009fe:	d126      	bne.n	8000a4e <HAL_UART_RxCpltCallback+0x9a>
				current_user = uart3_rx_data[4];
 8000a00:	4ba3      	ldr	r3, [pc, #652]	@ (8000c90 <HAL_UART_RxCpltCallback+0x2dc>)
 8000a02:	791a      	ldrb	r2, [r3, #4]
 8000a04:	4ba5      	ldr	r3, [pc, #660]	@ (8000c9c <HAL_UART_RxCpltCallback+0x2e8>)
 8000a06:	701a      	strb	r2, [r3, #0]

				uint8_t data_to_hmi[9] = { 0x70, 0x61, 0x67, 0x65, 0x20, 0x31,
 8000a08:	4aa5      	ldr	r2, [pc, #660]	@ (8000ca0 <HAL_UART_RxCpltCallback+0x2ec>)
 8000a0a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000a0e:	ca07      	ldmia	r2, {r0, r1, r2}
 8000a10:	c303      	stmia	r3!, {r0, r1}
 8000a12:	701a      	strb	r2, [r3, #0]
						0xFF, 0xFF, 0xFF };
				uint8_t status_hmi = HAL_UART_Transmit(&huart4, data_to_hmi, 9, 100);
 8000a14:	f107 0124 	add.w	r1, r7, #36	@ 0x24
 8000a18:	2364      	movs	r3, #100	@ 0x64
 8000a1a:	2209      	movs	r2, #9
 8000a1c:	48a1      	ldr	r0, [pc, #644]	@ (8000ca4 <HAL_UART_RxCpltCallback+0x2f0>)
 8000a1e:	f007 fd4d 	bl	80084bc <HAL_UART_Transmit>
 8000a22:	4603      	mov	r3, r0
 8000a24:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
				sprintf(serial_output_buffer,
 8000a28:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8000a2c:	461a      	mov	r2, r3
 8000a2e:	499e      	ldr	r1, [pc, #632]	@ (8000ca8 <HAL_UART_RxCpltCallback+0x2f4>)
 8000a30:	489e      	ldr	r0, [pc, #632]	@ (8000cac <HAL_UART_RxCpltCallback+0x2f8>)
 8000a32:	f00a ffc7 	bl	800b9c4 <siprintf>
						"Status HMI: %02X",status_hmi);
				Serial_Print();
 8000a36:	f7ff fe7f 	bl	8000738 <Serial_Print>
				HAL_UART_Transmit(&huart4, data_to_hmi, 9, 100);
 8000a3a:	f107 0124 	add.w	r1, r7, #36	@ 0x24
 8000a3e:	2364      	movs	r3, #100	@ 0x64
 8000a40:	2209      	movs	r2, #9
 8000a42:	4898      	ldr	r0, [pc, #608]	@ (8000ca4 <HAL_UART_RxCpltCallback+0x2f0>)
 8000a44:	f007 fd3a 	bl	80084bc <HAL_UART_Transmit>
				EVSE_state();
 8000a48:	f7ff fe88 	bl	800075c <EVSE_state>
			if (connectorID == 255 || status[uart3_rx_data[5] - 1] == 0) {
 8000a4c:	e0b1      	b.n	8000bb2 <HAL_UART_RxCpltCallback+0x1fe>
			} else if (status[connectorID - 1] == 1) { //swipe card to stop
 8000a4e:	4b91      	ldr	r3, [pc, #580]	@ (8000c94 <HAL_UART_RxCpltCallback+0x2e0>)
 8000a50:	781b      	ldrb	r3, [r3, #0]
 8000a52:	3b01      	subs	r3, #1
 8000a54:	4a90      	ldr	r2, [pc, #576]	@ (8000c98 <HAL_UART_RxCpltCallback+0x2e4>)
 8000a56:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000a5a:	2b01      	cmp	r3, #1
 8000a5c:	f040 80a9 	bne.w	8000bb2 <HAL_UART_RxCpltCallback+0x1fe>
				uint8_t data[] = { 0x00, 0x00, uart3_rx_data[5] };
 8000a60:	2300      	movs	r3, #0
 8000a62:	f887 3020 	strb.w	r3, [r7, #32]
 8000a66:	2300      	movs	r3, #0
 8000a68:	f887 3021 	strb.w	r3, [r7, #33]	@ 0x21
 8000a6c:	4b88      	ldr	r3, [pc, #544]	@ (8000c90 <HAL_UART_RxCpltCallback+0x2dc>)
 8000a6e:	795b      	ldrb	r3, [r3, #5]
 8000a70:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
				send_frames(&huart3, 0x18, data, 0x00); // request stop to server
 8000a74:	f107 0220 	add.w	r2, r7, #32
 8000a78:	2300      	movs	r3, #0
 8000a7a:	2118      	movs	r1, #24
 8000a7c:	4883      	ldr	r0, [pc, #524]	@ (8000c8c <HAL_UART_RxCpltCallback+0x2d8>)
 8000a7e:	f7ff ff5f 	bl	8000940 <send_frames>
				current_user = uart3_rx_data[4];
 8000a82:	4b83      	ldr	r3, [pc, #524]	@ (8000c90 <HAL_UART_RxCpltCallback+0x2dc>)
 8000a84:	791a      	ldrb	r2, [r3, #4]
 8000a86:	4b85      	ldr	r3, [pc, #532]	@ (8000c9c <HAL_UART_RxCpltCallback+0x2e8>)
 8000a88:	701a      	strb	r2, [r3, #0]
				// users: số thứ tự connector ; current_user: đại diện cho ID người đến
				if(users[current_user]==2)
 8000a8a:	4b84      	ldr	r3, [pc, #528]	@ (8000c9c <HAL_UART_RxCpltCallback+0x2e8>)
 8000a8c:	781b      	ldrb	r3, [r3, #0]
 8000a8e:	461a      	mov	r2, r3
 8000a90:	4b87      	ldr	r3, [pc, #540]	@ (8000cb0 <HAL_UART_RxCpltCallback+0x2fc>)
 8000a92:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000a96:	2b02      	cmp	r3, #2
 8000a98:	d106      	bne.n	8000aa8 <HAL_UART_RxCpltCallback+0xf4>
				{
					HMI_Compose_Realtime_Data(HMI_TRAN_STATUS2, 0);
 8000a9a:	2100      	movs	r1, #0
 8000a9c:	2044      	movs	r0, #68	@ 0x44
 8000a9e:	f009 fab5 	bl	800a00c <HMI_Compose_Realtime_Data>
					HMI_Print();
 8000aa2:	f7ff fecd 	bl	8000840 <HMI_Print>
 8000aa6:	e084      	b.n	8000bb2 <HAL_UART_RxCpltCallback+0x1fe>
				}
				else if(users[current_user]==1)
 8000aa8:	4b7c      	ldr	r3, [pc, #496]	@ (8000c9c <HAL_UART_RxCpltCallback+0x2e8>)
 8000aaa:	781b      	ldrb	r3, [r3, #0]
 8000aac:	461a      	mov	r2, r3
 8000aae:	4b80      	ldr	r3, [pc, #512]	@ (8000cb0 <HAL_UART_RxCpltCallback+0x2fc>)
 8000ab0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000ab4:	2b01      	cmp	r3, #1
 8000ab6:	d17c      	bne.n	8000bb2 <HAL_UART_RxCpltCallback+0x1fe>
				{
					HMI_Compose_Realtime_Data(HMI_TRAN_STATUS1, 0);
 8000ab8:	2100      	movs	r1, #0
 8000aba:	2043      	movs	r0, #67	@ 0x43
 8000abc:	f009 faa6 	bl	800a00c <HMI_Compose_Realtime_Data>
					HMI_Print();
 8000ac0:	f7ff febe 	bl	8000840 <HMI_Print>
 8000ac4:	e075      	b.n	8000bb2 <HAL_UART_RxCpltCallback+0x1fe>

				}

			}

		 else if (uart3_rx_data[2] == 0x1B) { // confirm from server
 8000ac6:	4b72      	ldr	r3, [pc, #456]	@ (8000c90 <HAL_UART_RxCpltCallback+0x2dc>)
 8000ac8:	789b      	ldrb	r3, [r3, #2]
 8000aca:	2b1b      	cmp	r3, #27
 8000acc:	d171      	bne.n	8000bb2 <HAL_UART_RxCpltCallback+0x1fe>
			if (uart3_rx_data[3]) {
 8000ace:	4b70      	ldr	r3, [pc, #448]	@ (8000c90 <HAL_UART_RxCpltCallback+0x2dc>)
 8000ad0:	78db      	ldrb	r3, [r3, #3]
 8000ad2:	2b00      	cmp	r3, #0
 8000ad4:	d02a      	beq.n	8000b2c <HAL_UART_RxCpltCallback+0x178>
				status[uart3_rx_data[5] - 1] = 1;
 8000ad6:	4b6e      	ldr	r3, [pc, #440]	@ (8000c90 <HAL_UART_RxCpltCallback+0x2dc>)
 8000ad8:	795b      	ldrb	r3, [r3, #5]
 8000ada:	3b01      	subs	r3, #1
 8000adc:	4a6e      	ldr	r2, [pc, #440]	@ (8000c98 <HAL_UART_RxCpltCallback+0x2e4>)
 8000ade:	2101      	movs	r1, #1
 8000ae0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
				//send to EV that EVSE is prepare charge
				PEF_Compose_Contactor_Close_Req();
 8000ae4:	f009 ff40 	bl	800a968 <PEF_Compose_Contactor_Close_Req>
				SPI_QCA7000_Send_Eth_Frame();
 8000ae8:	f009 f91e 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
				sprintf(serial_output_buffer,
 8000aec:	4971      	ldr	r1, [pc, #452]	@ (8000cb4 <HAL_UART_RxCpltCallback+0x300>)
 8000aee:	486f      	ldr	r0, [pc, #444]	@ (8000cac <HAL_UART_RxCpltCallback+0x2f8>)
 8000af0:	f00a ff68 	bl	800b9c4 <siprintf>
						"Send PEF_Compose_Contactor_Close_Req() ");
				Serial_Print();
 8000af4:	f7ff fe20 	bl	8000738 <Serial_Print>
				//send logout to ESP
				uint8_t data[] = { 0x00, current_user, users[current_user] };
 8000af8:	2300      	movs	r3, #0
 8000afa:	773b      	strb	r3, [r7, #28]
 8000afc:	4b67      	ldr	r3, [pc, #412]	@ (8000c9c <HAL_UART_RxCpltCallback+0x2e8>)
 8000afe:	781b      	ldrb	r3, [r3, #0]
 8000b00:	777b      	strb	r3, [r7, #29]
 8000b02:	4b66      	ldr	r3, [pc, #408]	@ (8000c9c <HAL_UART_RxCpltCallback+0x2e8>)
 8000b04:	781b      	ldrb	r3, [r3, #0]
 8000b06:	461a      	mov	r2, r3
 8000b08:	4b69      	ldr	r3, [pc, #420]	@ (8000cb0 <HAL_UART_RxCpltCallback+0x2fc>)
 8000b0a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000b0e:	b2db      	uxtb	r3, r3
 8000b10:	77bb      	strb	r3, [r7, #30]
				send_frames(&huart3, 0x15, data, 0x00);
 8000b12:	f107 021c 	add.w	r2, r7, #28
 8000b16:	2300      	movs	r3, #0
 8000b18:	2115      	movs	r1, #21
 8000b1a:	485c      	ldr	r0, [pc, #368]	@ (8000c8c <HAL_UART_RxCpltCallback+0x2d8>)
 8000b1c:	f7ff ff10 	bl	8000940 <send_frames>
				current_user = 255;
 8000b20:	4b5e      	ldr	r3, [pc, #376]	@ (8000c9c <HAL_UART_RxCpltCallback+0x2e8>)
 8000b22:	22ff      	movs	r2, #255	@ 0xff
 8000b24:	701a      	strb	r2, [r3, #0]
				EVSE_state();
 8000b26:	f7ff fe19 	bl	800075c <EVSE_state>
 8000b2a:	e042      	b.n	8000bb2 <HAL_UART_RxCpltCallback+0x1fe>
			} else { // confirm stop transaction
				status[uart3_rx_data[5] - 1] = 0;
 8000b2c:	4b58      	ldr	r3, [pc, #352]	@ (8000c90 <HAL_UART_RxCpltCallback+0x2dc>)
 8000b2e:	795b      	ldrb	r3, [r3, #5]
 8000b30:	3b01      	subs	r3, #1
 8000b32:	4a59      	ldr	r2, [pc, #356]	@ (8000c98 <HAL_UART_RxCpltCallback+0x2e4>)
 8000b34:	2100      	movs	r1, #0
 8000b36:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
				uint8_t data[] = { 0x00, 0x00, users[current_user] };
 8000b3a:	2300      	movs	r3, #0
 8000b3c:	763b      	strb	r3, [r7, #24]
 8000b3e:	2300      	movs	r3, #0
 8000b40:	767b      	strb	r3, [r7, #25]
 8000b42:	4b56      	ldr	r3, [pc, #344]	@ (8000c9c <HAL_UART_RxCpltCallback+0x2e8>)
 8000b44:	781b      	ldrb	r3, [r3, #0]
 8000b46:	461a      	mov	r2, r3
 8000b48:	4b59      	ldr	r3, [pc, #356]	@ (8000cb0 <HAL_UART_RxCpltCallback+0x2fc>)
 8000b4a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000b4e:	b2db      	uxtb	r3, r3
 8000b50:	76bb      	strb	r3, [r7, #26]
				send_frames(&huart3, 0x17, data, 0x00); // unplugged connector
 8000b52:	f107 0218 	add.w	r2, r7, #24
 8000b56:	2300      	movs	r3, #0
 8000b58:	2117      	movs	r1, #23
 8000b5a:	484c      	ldr	r0, [pc, #304]	@ (8000c8c <HAL_UART_RxCpltCallback+0x2d8>)
 8000b5c:	f7ff fef0 	bl	8000940 <send_frames>

				connectors[users[current_user] - 1] = 0;
 8000b60:	4b4e      	ldr	r3, [pc, #312]	@ (8000c9c <HAL_UART_RxCpltCallback+0x2e8>)
 8000b62:	781b      	ldrb	r3, [r3, #0]
 8000b64:	461a      	mov	r2, r3
 8000b66:	4b52      	ldr	r3, [pc, #328]	@ (8000cb0 <HAL_UART_RxCpltCallback+0x2fc>)
 8000b68:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000b6c:	3b01      	subs	r3, #1
 8000b6e:	4a52      	ldr	r2, [pc, #328]	@ (8000cb8 <HAL_UART_RxCpltCallback+0x304>)
 8000b70:	2100      	movs	r1, #0
 8000b72:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

				data[1] = current_user;
 8000b76:	4b49      	ldr	r3, [pc, #292]	@ (8000c9c <HAL_UART_RxCpltCallback+0x2e8>)
 8000b78:	781b      	ldrb	r3, [r3, #0]
 8000b7a:	767b      	strb	r3, [r7, #25]
				send_frames(&huart3, 0x15, data, 0x00); // logout
 8000b7c:	f107 0218 	add.w	r2, r7, #24
 8000b80:	2300      	movs	r3, #0
 8000b82:	2115      	movs	r1, #21
 8000b84:	4841      	ldr	r0, [pc, #260]	@ (8000c8c <HAL_UART_RxCpltCallback+0x2d8>)
 8000b86:	f7ff fedb 	bl	8000940 <send_frames>
				current_user = 255;
 8000b8a:	4b44      	ldr	r3, [pc, #272]	@ (8000c9c <HAL_UART_RxCpltCallback+0x2e8>)
 8000b8c:	22ff      	movs	r2, #255	@ 0xff
 8000b8e:	701a      	strb	r2, [r3, #0]

				//send to HMI change to begin UI
				uint8_t data_to_hmi[9] = { 0x70, 0x61, 0x67, 0x65, 0x20, 0x30,
 8000b90:	4a4a      	ldr	r2, [pc, #296]	@ (8000cbc <HAL_UART_RxCpltCallback+0x308>)
 8000b92:	f107 030c 	add.w	r3, r7, #12
 8000b96:	ca07      	ldmia	r2, {r0, r1, r2}
 8000b98:	c303      	stmia	r3!, {r0, r1}
 8000b9a:	701a      	strb	r2, [r3, #0]
						0xFF, 0xFF, 0xFF };
				HAL_UART_Transmit(&huart4, data_to_hmi, 9, 100);
 8000b9c:	f107 010c 	add.w	r1, r7, #12
 8000ba0:	2364      	movs	r3, #100	@ 0x64
 8000ba2:	2209      	movs	r2, #9
 8000ba4:	483f      	ldr	r0, [pc, #252]	@ (8000ca4 <HAL_UART_RxCpltCallback+0x2f0>)
 8000ba6:	f007 fc89 	bl	80084bc <HAL_UART_Transmit>
				EVSE_state();
 8000baa:	f7ff fdd7 	bl	800075c <EVSE_state>
				PEF_Reset_RXBUFFER();
 8000bae:	f00a fb69 	bl	800b284 <PEF_Reset_RXBUFFER>
			}
		}
	    memset(uart3_rx_data, 0, sizeof(uart3_rx_data));
 8000bb2:	2208      	movs	r2, #8
 8000bb4:	2100      	movs	r1, #0
 8000bb6:	4836      	ldr	r0, [pc, #216]	@ (8000c90 <HAL_UART_RxCpltCallback+0x2dc>)
 8000bb8:	f00a ff67 	bl	800ba8a <memset>
			}
	if (huart->Instance == huart4.Instance)	//HMI data
 8000bbc:	687b      	ldr	r3, [r7, #4]
 8000bbe:	681a      	ldr	r2, [r3, #0]
 8000bc0:	4b38      	ldr	r3, [pc, #224]	@ (8000ca4 <HAL_UART_RxCpltCallback+0x2f0>)
 8000bc2:	681b      	ldr	r3, [r3, #0]
 8000bc4:	429a      	cmp	r2, r3
 8000bc6:	f040 8095 	bne.w	8000cf4 <HAL_UART_RxCpltCallback+0x340>
			{


		uint8_t uart4_status=HAL_UART_Receive_DMA(&huart4, uart4_rx_data, sizeof(uart4_rx_data));
 8000bca:	2208      	movs	r2, #8
 8000bcc:	493c      	ldr	r1, [pc, #240]	@ (8000cc0 <HAL_UART_RxCpltCallback+0x30c>)
 8000bce:	4835      	ldr	r0, [pc, #212]	@ (8000ca4 <HAL_UART_RxCpltCallback+0x2f0>)
 8000bd0:	f007 fd0a 	bl	80085e8 <HAL_UART_Receive_DMA>
 8000bd4:	4603      	mov	r3, r0
 8000bd6:	f887 302e 	strb.w	r3, [r7, #46]	@ 0x2e
		sprintf(serial_output_buffer, "HMI status: %02X",uart4_status,uart4_rx_data[0]);
 8000bda:	f897 202e 	ldrb.w	r2, [r7, #46]	@ 0x2e
 8000bde:	4b38      	ldr	r3, [pc, #224]	@ (8000cc0 <HAL_UART_RxCpltCallback+0x30c>)
 8000be0:	781b      	ldrb	r3, [r3, #0]
 8000be2:	4938      	ldr	r1, [pc, #224]	@ (8000cc4 <HAL_UART_RxCpltCallback+0x310>)
 8000be4:	4831      	ldr	r0, [pc, #196]	@ (8000cac <HAL_UART_RxCpltCallback+0x2f8>)
 8000be6:	f00a feed 	bl	800b9c4 <siprintf>
		Serial_Print();
 8000bea:	f7ff fda5 	bl	8000738 <Serial_Print>
		if (uart4_rx_data[0] > 0x29 && uart4_rx_data[0] < 0x60) {
 8000bee:	4b34      	ldr	r3, [pc, #208]	@ (8000cc0 <HAL_UART_RxCpltCallback+0x30c>)
 8000bf0:	781b      	ldrb	r3, [r3, #0]
 8000bf2:	2b29      	cmp	r3, #41	@ 0x29
 8000bf4:	d97e      	bls.n	8000cf4 <HAL_UART_RxCpltCallback+0x340>
 8000bf6:	4b32      	ldr	r3, [pc, #200]	@ (8000cc0 <HAL_UART_RxCpltCallback+0x30c>)
 8000bf8:	781b      	ldrb	r3, [r3, #0]
 8000bfa:	2b5f      	cmp	r3, #95	@ 0x5f
 8000bfc:	d87a      	bhi.n	8000cf4 <HAL_UART_RxCpltCallback+0x340>
			uart_flag = 1;
 8000bfe:	4b32      	ldr	r3, [pc, #200]	@ (8000cc8 <HAL_UART_RxCpltCallback+0x314>)
 8000c00:	2201      	movs	r2, #1
 8000c02:	601a      	str	r2, [r3, #0]
			if (uart4_rx_data[0] == 0x40) {
 8000c04:	4b2e      	ldr	r3, [pc, #184]	@ (8000cc0 <HAL_UART_RxCpltCallback+0x30c>)
 8000c06:	781b      	ldrb	r3, [r3, #0]
 8000c08:	2b40      	cmp	r3, #64	@ 0x40
 8000c0a:	d165      	bne.n	8000cd8 <HAL_UART_RxCpltCallback+0x324>
				//start
				sprintf(serial_output_buffer, "HMI gui goi tin Start ");
 8000c0c:	492f      	ldr	r1, [pc, #188]	@ (8000ccc <HAL_UART_RxCpltCallback+0x318>)
 8000c0e:	4827      	ldr	r0, [pc, #156]	@ (8000cac <HAL_UART_RxCpltCallback+0x2f8>)
 8000c10:	f00a fed8 	bl	800b9c4 <siprintf>
				Serial_Print();
 8000c14:	f7ff fd90 	bl	8000738 <Serial_Print>
				uint8_t data_start[] = { 0x00, 0x00, users[current_user] };
 8000c18:	2300      	movs	r3, #0
 8000c1a:	723b      	strb	r3, [r7, #8]
 8000c1c:	2300      	movs	r3, #0
 8000c1e:	727b      	strb	r3, [r7, #9]
 8000c20:	4b1e      	ldr	r3, [pc, #120]	@ (8000c9c <HAL_UART_RxCpltCallback+0x2e8>)
 8000c22:	781b      	ldrb	r3, [r3, #0]
 8000c24:	461a      	mov	r2, r3
 8000c26:	4b22      	ldr	r3, [pc, #136]	@ (8000cb0 <HAL_UART_RxCpltCallback+0x2fc>)
 8000c28:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000c2c:	b2db      	uxtb	r3, r3
 8000c2e:	72bb      	strb	r3, [r7, #10]
				send_frames(&huart3, TYPE_HMI_CONTROL_TRANSACTION, data_start,
 8000c30:	f107 0208 	add.w	r2, r7, #8
 8000c34:	2301      	movs	r3, #1
 8000c36:	2118      	movs	r1, #24
 8000c38:	4814      	ldr	r0, [pc, #80]	@ (8000c8c <HAL_UART_RxCpltCallback+0x2d8>)
 8000c3a:	f7ff fe81 	bl	8000940 <send_frames>
						0x01); // request start to server
				ESP_Data.ESP_Data_voltage = 0;
 8000c3e:	4b24      	ldr	r3, [pc, #144]	@ (8000cd0 <HAL_UART_RxCpltCallback+0x31c>)
 8000c40:	2200      	movs	r2, #0
 8000c42:	805a      	strh	r2, [r3, #2]
				ESP_Data.ESP_Data_current = 0;
 8000c44:	4b22      	ldr	r3, [pc, #136]	@ (8000cd0 <HAL_UART_RxCpltCallback+0x31c>)
 8000c46:	2200      	movs	r2, #0
 8000c48:	809a      	strh	r2, [r3, #4]
				Packet_to_ESP(0x20, users[current_user]);
 8000c4a:	4b14      	ldr	r3, [pc, #80]	@ (8000c9c <HAL_UART_RxCpltCallback+0x2e8>)
 8000c4c:	781b      	ldrb	r3, [r3, #0]
 8000c4e:	461a      	mov	r2, r3
 8000c50:	4b17      	ldr	r3, [pc, #92]	@ (8000cb0 <HAL_UART_RxCpltCallback+0x2fc>)
 8000c52:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000c56:	b2db      	uxtb	r3, r3
 8000c58:	4619      	mov	r1, r3
 8000c5a:	2020      	movs	r0, #32
 8000c5c:	f7ff fcb0 	bl	80005c0 <Packet_to_ESP>
				Packet_to_ESP(0x21, users[current_user]);
 8000c60:	4b0e      	ldr	r3, [pc, #56]	@ (8000c9c <HAL_UART_RxCpltCallback+0x2e8>)
 8000c62:	781b      	ldrb	r3, [r3, #0]
 8000c64:	461a      	mov	r2, r3
 8000c66:	4b12      	ldr	r3, [pc, #72]	@ (8000cb0 <HAL_UART_RxCpltCallback+0x2fc>)
 8000c68:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000c6c:	b2db      	uxtb	r3, r3
 8000c6e:	4619      	mov	r1, r3
 8000c70:	2021      	movs	r0, #33	@ 0x21
 8000c72:	f7ff fca5 	bl	80005c0 <Packet_to_ESP>

				Master_Tx_SPDO_Data.state = CHARGING_ON;
 8000c76:	4b17      	ldr	r3, [pc, #92]	@ (8000cd4 <HAL_UART_RxCpltCallback+0x320>)
 8000c78:	2201      	movs	r2, #1
 8000c7a:	701a      	strb	r2, [r3, #0]
				HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_SET);
 8000c7c:	2201      	movs	r2, #1
 8000c7e:	2120      	movs	r1, #32
 8000c80:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000c84:	f004 fc2c 	bl	80054e0 <HAL_GPIO_WritePin>
 8000c88:	e02f      	b.n	8000cea <HAL_UART_RxCpltCallback+0x336>
 8000c8a:	bf00      	nop
 8000c8c:	20000434 	.word	0x20000434
 8000c90:	20000598 	.word	0x20000598
 8000c94:	200005d4 	.word	0x200005d4
 8000c98:	200005cc 	.word	0x200005cc
 8000c9c:	20000008 	.word	0x20000008
 8000ca0:	0800ccb0 	.word	0x0800ccb0
 8000ca4:	20000284 	.word	0x20000284
 8000ca8:	0800cc2c 	.word	0x0800cc2c
 8000cac:	200005e0 	.word	0x200005e0
 8000cb0:	20000000 	.word	0x20000000
 8000cb4:	0800cc40 	.word	0x0800cc40
 8000cb8:	200005c4 	.word	0x200005c4
 8000cbc:	0800ccbc 	.word	0x0800ccbc
 8000cc0:	20000590 	.word	0x20000590
 8000cc4:	0800cc68 	.word	0x0800cc68
 8000cc8:	200005b8 	.word	0x200005b8
 8000ccc:	0800cc7c 	.word	0x0800cc7c
 8000cd0:	200000a8 	.word	0x200000a8
 8000cd4:	200005a8 	.word	0x200005a8
			}
			else {
				//data
				//Master_Tx_SPDO_Data.state=CHARGING_ON;
				sprintf(serial_output_buffer, "HMI gui goi tin Setting ");
 8000cd8:	4908      	ldr	r1, [pc, #32]	@ (8000cfc <HAL_UART_RxCpltCallback+0x348>)
 8000cda:	4809      	ldr	r0, [pc, #36]	@ (8000d00 <HAL_UART_RxCpltCallback+0x34c>)
 8000cdc:	f00a fe72 	bl	800b9c4 <siprintf>
				Serial_Print();
 8000ce0:	f7ff fd2a 	bl	8000738 <Serial_Print>
				HMI_Evaluate_Setting_Data(uart4_rx_data);
 8000ce4:	4807      	ldr	r0, [pc, #28]	@ (8000d04 <HAL_UART_RxCpltCallback+0x350>)
 8000ce6:	f009 fafb 	bl	800a2e0 <HMI_Evaluate_Setting_Data>
			}

		memset(uart4_rx_data, 0, sizeof(uart4_rx_data));
 8000cea:	2208      	movs	r2, #8
 8000cec:	2100      	movs	r1, #0
 8000cee:	4805      	ldr	r0, [pc, #20]	@ (8000d04 <HAL_UART_RxCpltCallback+0x350>)
 8000cf0:	f00a fecb 	bl	800ba8a <memset>
	}
}

}
 8000cf4:	bf00      	nop
 8000cf6:	3730      	adds	r7, #48	@ 0x30
 8000cf8:	46bd      	mov	sp, r7
 8000cfa:	bd80      	pop	{r7, pc}
 8000cfc:	0800cc94 	.word	0x0800cc94
 8000d00:	200005e0 	.word	0x200005e0
 8000d04:	20000590 	.word	0x20000590

08000d08 <HAL_GPIO_EXTI_Callback>:
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 8000d08:	b580      	push	{r7, lr}
 8000d0a:	b082      	sub	sp, #8
 8000d0c:	af00      	add	r7, sp, #0
 8000d0e:	4603      	mov	r3, r0
 8000d10:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin == GPIO_PIN_13) {
	}

	if (GPIO_Pin == QCA_INT_Pin) {
 8000d12:	88fb      	ldrh	r3, [r7, #6]
 8000d14:	2b02      	cmp	r3, #2
 8000d16:	d101      	bne.n	8000d1c <HAL_GPIO_EXTI_Callback+0x14>
		SPI_QCA7000_Handling_Intr();
 8000d18:	f009 f8b6 	bl	8009e88 <SPI_QCA7000_Handling_Intr>
	}

}
 8000d1c:	bf00      	nop
 8000d1e:	3708      	adds	r7, #8
 8000d20:	46bd      	mov	sp, r7
 8000d22:	bd80      	pop	{r7, pc}

08000d24 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000d24:	b590      	push	{r4, r7, lr}
 8000d26:	b09b      	sub	sp, #108	@ 0x6c
 8000d28:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000d2a:	f001 fe8c 	bl	8002a46 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000d2e:	f000 fd7f 	bl	8001830 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000d32:	f001 f8e1 	bl	8001ef8 <MX_GPIO_Init>
  MX_DMA_Init();
 8000d36:	f001 f8ad 	bl	8001e94 <MX_DMA_Init>
  MX_FDCAN2_Init();
 8000d3a:	f000 fe3d 	bl	80019b8 <MX_FDCAN2_Init>
  MX_UART4_Init();
 8000d3e:	f000 ff79 	bl	8001c34 <MX_UART4_Init>
  MX_TIM17_Init();
 8000d42:	f000 ff4f 	bl	8001be4 <MX_TIM17_Init>
  MX_USART3_UART_Init();
 8000d46:	f001 f859 	bl	8001dfc <MX_USART3_UART_Init>
  MX_ADC1_Init();
 8000d4a:	f000 fdbd 	bl	80018c8 <MX_ADC1_Init>
  MX_SPI2_Init();
 8000d4e:	f000 fe79 	bl	8001a44 <MX_SPI2_Init>
  MX_TIM1_Init();
 8000d52:	f000 feb5 	bl	8001ac0 <MX_TIM1_Init>
  MX_USART1_UART_Init();
 8000d56:	f000 ffb9 	bl	8001ccc <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 8000d5a:	f001 f803 	bl	8001d64 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 8000d5e:	2100      	movs	r1, #0
 8000d60:	4860      	ldr	r0, [pc, #384]	@ (8000ee4 <main+0x1c0>)
 8000d62:	f006 fa07 	bl	8007174 <HAL_TIM_PWM_Start>
	HAL_GPIO_WritePin(QCA_RS_GPIO_Port, QCA_RS_Pin, GPIO_PIN_SET);
 8000d66:	2201      	movs	r2, #1
 8000d68:	2104      	movs	r1, #4
 8000d6a:	485f      	ldr	r0, [pc, #380]	@ (8000ee8 <main+0x1c4>)
 8000d6c:	f004 fbb8 	bl	80054e0 <HAL_GPIO_WritePin>
	//  HAL_GPIO_WritePin(PP_SELECT_GPIO_Port, PP_SELECT_Pin, GPIO_PIN_SET);
	HAL_UART_Receive_DMA(&huart4, uart4_rx_data, sizeof(uart4_rx_data));
 8000d70:	2208      	movs	r2, #8
 8000d72:	495e      	ldr	r1, [pc, #376]	@ (8000eec <main+0x1c8>)
 8000d74:	485e      	ldr	r0, [pc, #376]	@ (8000ef0 <main+0x1cc>)
 8000d76:	f007 fc37 	bl	80085e8 <HAL_UART_Receive_DMA>
	HAL_UART_Receive_DMA(&huart3, uart3_rx_data, sizeof(uart3_rx_data));
 8000d7a:	2208      	movs	r2, #8
 8000d7c:	495d      	ldr	r1, [pc, #372]	@ (8000ef4 <main+0x1d0>)
 8000d7e:	485e      	ldr	r0, [pc, #376]	@ (8000ef8 <main+0x1d4>)
 8000d80:	f007 fc32 	bl	80085e8 <HAL_UART_Receive_DMA>
		uint8_t min, min2;
		uint16_t soc, soc2;
		uint16_t init_soc, init_soc2;
		uint16_t rate_soc, rate_soc2;
		uint16_t soh, soh2;
		TIM1->CCR1 = 50;
 8000d84:	4b5d      	ldr	r3, [pc, #372]	@ (8000efc <main+0x1d8>)
 8000d86:	2232      	movs	r2, #50	@ 0x32
 8000d88:	635a      	str	r2, [r3, #52]	@ 0x34
		uint32_t currenttick = HAL_GetTick(); // Lưu th�?i điểm bắt đầu
 8000d8a:	f001 fec1 	bl	8002b10 <HAL_GetTick>
 8000d8e:	65b8      	str	r0, [r7, #88]	@ 0x58


		if ((currenttick - previoustick_calculate) >= TPDO_Event_Time) //timer 100ms
 8000d90:	4b5b      	ldr	r3, [pc, #364]	@ (8000f00 <main+0x1dc>)
 8000d92:	681b      	ldr	r3, [r3, #0]
 8000d94:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8000d96:	1ad3      	subs	r3, r2, r3
 8000d98:	2b63      	cmp	r3, #99	@ 0x63
 8000d9a:	d906      	bls.n	8000daa <main+0x86>
		{
			previoustick_calculate = currenttick;
 8000d9c:	4a58      	ldr	r2, [pc, #352]	@ (8000f00 <main+0x1dc>)
 8000d9e:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8000da0:	6013      	str	r3, [r2, #0]
			//set duty cho PWM
//		uint32_t duty;
//		if(myEV.charging_current_request<51) duty=myEV.charging_current_request*5/3;
//		else if(myEV.charging_current_request<80) duty=(myEV.charging_current_request*2/5)+64;
//		TIM1->CCR1=duty;	//duty
			__HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 50);
 8000da2:	4b50      	ldr	r3, [pc, #320]	@ (8000ee4 <main+0x1c0>)
 8000da4:	681b      	ldr	r3, [r3, #0]
 8000da6:	2232      	movs	r2, #50	@ 0x32
 8000da8:	635a      	str	r2, [r3, #52]	@ 0x34
		}

		//EV state timer 1s
		if ((currenttick - previoustick_SPI) >= TPDO_Event_Time * 10) {
 8000daa:	4b56      	ldr	r3, [pc, #344]	@ (8000f04 <main+0x1e0>)
 8000dac:	681b      	ldr	r3, [r3, #0]
 8000dae:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8000db0:	1ad3      	subs	r3, r2, r3
 8000db2:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8000db6:	f0c0 830b 	bcc.w	80013d0 <main+0x6ac>
			previoustick_SPI = currenttick;
 8000dba:	4a52      	ldr	r2, [pc, #328]	@ (8000f04 <main+0x1e0>)
 8000dbc:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8000dbe:	6013      	str	r3, [r2, #0]

			EVstate = PEF_Get_Sequence_State();
 8000dc0:	f00a fa4c 	bl	800b25c <PEF_Get_Sequence_State>
 8000dc4:	4603      	mov	r3, r0
 8000dc6:	461a      	mov	r2, r3
 8000dc8:	4b4f      	ldr	r3, [pc, #316]	@ (8000f08 <main+0x1e4>)
 8000dca:	801a      	strh	r2, [r3, #0]
			switch (EVstate) {
 8000dcc:	4b4e      	ldr	r3, [pc, #312]	@ (8000f08 <main+0x1e4>)
 8000dce:	881b      	ldrh	r3, [r3, #0]
 8000dd0:	f24c 1217 	movw	r2, #49431	@ 0xc117
 8000dd4:	4293      	cmp	r3, r2
 8000dd6:	f300 82fb 	bgt.w	80013d0 <main+0x6ac>
 8000dda:	f24c 120c 	movw	r2, #49420	@ 0xc10c
 8000dde:	4293      	cmp	r3, r2
 8000de0:	da07      	bge.n	8000df2 <main+0xce>
 8000de2:	f24b 0209 	movw	r2, #45065	@ 0xb009
 8000de6:	4293      	cmp	r3, r2
 8000de8:	dc66      	bgt.n	8000eb8 <main+0x194>
 8000dea:	f5b3 4f30 	cmp.w	r3, #45056	@ 0xb000
 8000dee:	da47      	bge.n	8000e80 <main+0x15c>
 8000df0:	e2ee      	b.n	80013d0 <main+0x6ac>
 8000df2:	f5a3 4341 	sub.w	r3, r3, #49408	@ 0xc100
 8000df6:	3b0c      	subs	r3, #12
 8000df8:	2b0b      	cmp	r3, #11
 8000dfa:	f200 82e9 	bhi.w	80013d0 <main+0x6ac>
 8000dfe:	a201      	add	r2, pc, #4	@ (adr r2, 8000e04 <main+0xe0>)
 8000e00:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000e04:	080013d1 	.word	0x080013d1
 8000e08:	0800136f 	.word	0x0800136f
 8000e0c:	080013d1 	.word	0x080013d1
 8000e10:	080013d1 	.word	0x080013d1
 8000e14:	0800138d 	.word	0x0800138d
 8000e18:	080013d1 	.word	0x080013d1
 8000e1c:	080013d1 	.word	0x080013d1
 8000e20:	080013d1 	.word	0x080013d1
 8000e24:	08001393 	.word	0x08001393
 8000e28:	080013d1 	.word	0x080013d1
 8000e2c:	080013d1 	.word	0x080013d1
 8000e30:	080013d1 	.word	0x080013d1
 8000e34:	f5a3 4332 	sub.w	r3, r3, #45568	@ 0xb200
 8000e38:	3b18      	subs	r3, #24
 8000e3a:	2b0d      	cmp	r3, #13
 8000e3c:	f200 82c8 	bhi.w	80013d0 <main+0x6ac>
 8000e40:	a201      	add	r2, pc, #4	@ (adr r2, 8000e48 <main+0x124>)
 8000e42:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000e46:	bf00      	nop
 8000e48:	080013d1 	.word	0x080013d1
 8000e4c:	080013d1 	.word	0x080013d1
 8000e50:	080013d1 	.word	0x080013d1
 8000e54:	080013d1 	.word	0x080013d1
 8000e58:	080013d1 	.word	0x080013d1
 8000e5c:	080013d1 	.word	0x080013d1
 8000e60:	080013d1 	.word	0x080013d1
 8000e64:	080013d1 	.word	0x080013d1
 8000e68:	080013d1 	.word	0x080013d1
 8000e6c:	080013d1 	.word	0x080013d1
 8000e70:	080013d1 	.word	0x080013d1
 8000e74:	080013d1 	.word	0x080013d1
 8000e78:	080013d1 	.word	0x080013d1
 8000e7c:	080013c9 	.word	0x080013c9
 8000e80:	f5a3 4330 	sub.w	r3, r3, #45056	@ 0xb000
 8000e84:	2b09      	cmp	r3, #9
 8000e86:	f200 82a3 	bhi.w	80013d0 <main+0x6ac>
 8000e8a:	a201      	add	r2, pc, #4	@ (adr r2, 8000e90 <main+0x16c>)
 8000e8c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000e90:	080013d1 	.word	0x080013d1
 8000e94:	080013d1 	.word	0x080013d1
 8000e98:	080013d1 	.word	0x080013d1
 8000e9c:	080013d1 	.word	0x080013d1
 8000ea0:	080013d1 	.word	0x080013d1
 8000ea4:	080013d1 	.word	0x080013d1
 8000ea8:	080013d1 	.word	0x080013d1
 8000eac:	080013d1 	.word	0x080013d1
 8000eb0:	08000ecd 	.word	0x08000ecd
 8000eb4:	080013d1 	.word	0x080013d1
 8000eb8:	f24b 2225 	movw	r2, #45605	@ 0xb225
 8000ebc:	4293      	cmp	r3, r2
 8000ebe:	f300 8287 	bgt.w	80013d0 <main+0x6ac>
 8000ec2:	f24b 2218 	movw	r2, #45592	@ 0xb218
 8000ec6:	4293      	cmp	r3, r2
 8000ec8:	dab4      	bge.n	8000e34 <main+0x110>
 8000eca:	e281      	b.n	80013d0 <main+0x6ac>
				break;

			case INITIALIZATION + STATE_B + EVSE_CONNECTOR_LOCK + REQUEST: //send connector plugged or not
				//gui connected len HMI
				//simulation that first user always plugged connector 2
				if (current_user == 0) {
 8000ecc:	4b0f      	ldr	r3, [pc, #60]	@ (8000f0c <main+0x1e8>)
 8000ece:	781b      	ldrb	r3, [r3, #0]
 8000ed0:	2b00      	cmp	r3, #0
 8000ed2:	d11f      	bne.n	8000f14 <main+0x1f0>
					users[current_user] = 2;
 8000ed4:	4b0d      	ldr	r3, [pc, #52]	@ (8000f0c <main+0x1e8>)
 8000ed6:	781b      	ldrb	r3, [r3, #0]
 8000ed8:	4619      	mov	r1, r3
 8000eda:	4b0d      	ldr	r3, [pc, #52]	@ (8000f10 <main+0x1ec>)
 8000edc:	2202      	movs	r2, #2
 8000ede:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8000ee2:	e022      	b.n	8000f2a <main+0x206>
 8000ee4:	200001ec 	.word	0x200001ec
 8000ee8:	48000400 	.word	0x48000400
 8000eec:	20000590 	.word	0x20000590
 8000ef0:	20000284 	.word	0x20000284
 8000ef4:	20000598 	.word	0x20000598
 8000ef8:	20000434 	.word	0x20000434
 8000efc:	40012c00 	.word	0x40012c00
 8000f00:	2000058c 	.word	0x2000058c
 8000f04:	20000588 	.word	0x20000588
 8000f08:	200005c0 	.word	0x200005c0
 8000f0c:	20000008 	.word	0x20000008
 8000f10:	20000000 	.word	0x20000000
				} else if (current_user == 1) {
 8000f14:	4bd7      	ldr	r3, [pc, #860]	@ (8001274 <main+0x550>)
 8000f16:	781b      	ldrb	r3, [r3, #0]
 8000f18:	2b01      	cmp	r3, #1
 8000f1a:	d106      	bne.n	8000f2a <main+0x206>
					users[current_user] = 1;
 8000f1c:	4bd5      	ldr	r3, [pc, #852]	@ (8001274 <main+0x550>)
 8000f1e:	781b      	ldrb	r3, [r3, #0]
 8000f20:	4619      	mov	r1, r3
 8000f22:	4bd5      	ldr	r3, [pc, #852]	@ (8001278 <main+0x554>)
 8000f24:	2201      	movs	r2, #1
 8000f26:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
				}
				if(users[current_user]==1)
 8000f2a:	4bd2      	ldr	r3, [pc, #840]	@ (8001274 <main+0x550>)
 8000f2c:	781b      	ldrb	r3, [r3, #0]
 8000f2e:	461a      	mov	r2, r3
 8000f30:	4bd1      	ldr	r3, [pc, #836]	@ (8001278 <main+0x554>)
 8000f32:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000f36:	2b01      	cmp	r3, #1
 8000f38:	f040 80f4 	bne.w	8001124 <main+0x400>
				{
					sprintf(serial_output_buffer, "Hello 1");
 8000f3c:	49cf      	ldr	r1, [pc, #828]	@ (800127c <main+0x558>)
 8000f3e:	48d0      	ldr	r0, [pc, #832]	@ (8001280 <main+0x55c>)
 8000f40:	f00a fd40 	bl	800b9c4 <siprintf>
					Serial_Print();
 8000f44:	f7ff fbf8 	bl	8000738 <Serial_Print>
					HMI_Compose_Status(HMI_CONNECT);
 8000f48:	2011      	movs	r0, #17
 8000f4a:	f009 f959 	bl	800a200 <HMI_Compose_Status>
					HMI_Print();
 8000f4e:	f7ff fc77 	bl	8000840 <HMI_Print>
					uint8_t data_connect[] = { 0x00, 0x00, users[current_user] };
 8000f52:	2300      	movs	r3, #0
 8000f54:	f887 3048 	strb.w	r3, [r7, #72]	@ 0x48
 8000f58:	2300      	movs	r3, #0
 8000f5a:	f887 3049 	strb.w	r3, [r7, #73]	@ 0x49
 8000f5e:	4bc5      	ldr	r3, [pc, #788]	@ (8001274 <main+0x550>)
 8000f60:	781b      	ldrb	r3, [r3, #0]
 8000f62:	461a      	mov	r2, r3
 8000f64:	4bc4      	ldr	r3, [pc, #784]	@ (8001278 <main+0x554>)
 8000f66:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000f6a:	b2db      	uxtb	r3, r3
 8000f6c:	f887 304a 	strb.w	r3, [r7, #74]	@ 0x4a
					send_frames(&huart3, TYPE_CONNECTER_STATUS, data_connect, 0x01);
 8000f70:	f107 0248 	add.w	r2, r7, #72	@ 0x48
 8000f74:	2301      	movs	r3, #1
 8000f76:	2117      	movs	r1, #23
 8000f78:	48c2      	ldr	r0, [pc, #776]	@ (8001284 <main+0x560>)
 8000f7a:	f7ff fce1 	bl	8000940 <send_frames>
					HAL_GPIO_WritePin(CP_SELECT_GPIO_Port, CP_SELECT_Pin,
 8000f7e:	2201      	movs	r2, #1
 8000f80:	2108      	movs	r1, #8
 8000f82:	48c1      	ldr	r0, [pc, #772]	@ (8001288 <main+0x564>)
 8000f84:	f004 faac 	bl	80054e0 <HAL_GPIO_WritePin>
							GPIO_PIN_SET);


					soc = myEV.current_battery;
 8000f88:	4bc0      	ldr	r3, [pc, #768]	@ (800128c <main+0x568>)
 8000f8a:	889b      	ldrh	r3, [r3, #4]
 8000f8c:	f8a7 3062 	strh.w	r3, [r7, #98]	@ 0x62
					init_soc = 105+rand()%5;
 8000f90:	f00a fbfe 	bl	800b790 <rand>
 8000f94:	4602      	mov	r2, r0
 8000f96:	4bbe      	ldr	r3, [pc, #760]	@ (8001290 <main+0x56c>)
 8000f98:	fb83 1302 	smull	r1, r3, r3, r2
 8000f9c:	1059      	asrs	r1, r3, #1
 8000f9e:	17d3      	asrs	r3, r2, #31
 8000fa0:	1ac9      	subs	r1, r1, r3
 8000fa2:	460b      	mov	r3, r1
 8000fa4:	009b      	lsls	r3, r3, #2
 8000fa6:	440b      	add	r3, r1
 8000fa8:	1ad1      	subs	r1, r2, r3
 8000faa:	b28b      	uxth	r3, r1
 8000fac:	3369      	adds	r3, #105	@ 0x69
 8000fae:	f8a7 3056 	strh.w	r3, [r7, #86]	@ 0x56
					soh = 100;
 8000fb2:	2364      	movs	r3, #100	@ 0x64
 8000fb4:	f8a7 3054 	strh.w	r3, [r7, #84]	@ 0x54
					rate_soc =(uint16_t) soc * 100 / soh;
 8000fb8:	f8b7 3062 	ldrh.w	r3, [r7, #98]	@ 0x62
 8000fbc:	2264      	movs	r2, #100	@ 0x64
 8000fbe:	fb03 f202 	mul.w	r2, r3, r2
 8000fc2:	f8b7 3054 	ldrh.w	r3, [r7, #84]	@ 0x54
 8000fc6:	fb92 f3f3 	sdiv	r3, r2, r3
 8000fca:	f8a7 305e 	strh.w	r3, [r7, #94]	@ 0x5e
					hour = (uint8_t) ((100 - rate_soc)/18);
 8000fce:	f8b7 305e 	ldrh.w	r3, [r7, #94]	@ 0x5e
 8000fd2:	f1c3 0364 	rsb	r3, r3, #100	@ 0x64
 8000fd6:	4aaf      	ldr	r2, [pc, #700]	@ (8001294 <main+0x570>)
 8000fd8:	fb82 1203 	smull	r1, r2, r2, r3
 8000fdc:	1092      	asrs	r2, r2, #2
 8000fde:	17db      	asrs	r3, r3, #31
 8000fe0:	1ad3      	subs	r3, r2, r3
 8000fe2:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
					min = ((100 - rate_soc)*60/18) - hour * 60;
 8000fe6:	f8b7 305e 	ldrh.w	r3, [r7, #94]	@ 0x5e
 8000fea:	f1c3 0264 	rsb	r2, r3, #100	@ 0x64
 8000fee:	4613      	mov	r3, r2
 8000ff0:	011b      	lsls	r3, r3, #4
 8000ff2:	1a9b      	subs	r3, r3, r2
 8000ff4:	009b      	lsls	r3, r3, #2
 8000ff6:	4aa7      	ldr	r2, [pc, #668]	@ (8001294 <main+0x570>)
 8000ff8:	fb82 1203 	smull	r1, r2, r2, r3
 8000ffc:	1092      	asrs	r2, r2, #2
 8000ffe:	17db      	asrs	r3, r3, #31
 8001000:	1ad3      	subs	r3, r2, r3
 8001002:	b2da      	uxtb	r2, r3
 8001004:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 8001008:	4619      	mov	r1, r3
 800100a:	011b      	lsls	r3, r3, #4
 800100c:	1acb      	subs	r3, r1, r3
 800100e:	009b      	lsls	r3, r3, #2
 8001010:	b2db      	uxtb	r3, r3
 8001012:	4413      	add	r3, r2
 8001014:	f887 3065 	strb.w	r3, [r7, #101]	@ 0x65
					HMI_Compose_Pre_Charge_Parm(HMI_InitSoC, init_soc);
 8001018:	f8b7 3056 	ldrh.w	r3, [r7, #86]	@ 0x56
 800101c:	4619      	mov	r1, r3
 800101e:	2032      	movs	r0, #50	@ 0x32
 8001020:	f008 ff46 	bl	8009eb0 <HMI_Compose_Pre_Charge_Parm>
					HMI_Print();
 8001024:	f7ff fc0c 	bl	8000840 <HMI_Print>
					HMI_Compose_Pre_Charge_Parm(HMI_SoH, (uint16_t)100*soh/init_soc);
 8001028:	f8b7 3054 	ldrh.w	r3, [r7, #84]	@ 0x54
 800102c:	2264      	movs	r2, #100	@ 0x64
 800102e:	fb03 f202 	mul.w	r2, r3, r2
 8001032:	f8b7 3056 	ldrh.w	r3, [r7, #86]	@ 0x56
 8001036:	fb92 f3f3 	sdiv	r3, r2, r3
 800103a:	b29b      	uxth	r3, r3
 800103c:	4619      	mov	r1, r3
 800103e:	2033      	movs	r0, #51	@ 0x33
 8001040:	f008 ff36 	bl	8009eb0 <HMI_Compose_Pre_Charge_Parm>
					HMI_Print();
 8001044:	f7ff fbfc 	bl	8000840 <HMI_Print>
					HMI_Compose_Pre_Charge_Parm(HMI_SoC, soc);
 8001048:	f8b7 3062 	ldrh.w	r3, [r7, #98]	@ 0x62
 800104c:	4619      	mov	r1, r3
 800104e:	2037      	movs	r0, #55	@ 0x37
 8001050:	f008 ff2e 	bl	8009eb0 <HMI_Compose_Pre_Charge_Parm>
					HMI_Print();
 8001054:	f7ff fbf4 	bl	8000840 <HMI_Print>
					HMI_Compose_Pre_Charge_Parm(HMI_CHARGING_TIME_HOUR, hour);
 8001058:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800105c:	b29b      	uxth	r3, r3
 800105e:	4619      	mov	r1, r3
 8001060:	2034      	movs	r0, #52	@ 0x34
 8001062:	f008 ff25 	bl	8009eb0 <HMI_Compose_Pre_Charge_Parm>
					HMI_Print();
 8001066:	f7ff fbeb 	bl	8000840 <HMI_Print>
					HMI_Compose_Pre_Charge_Parm(HMI_CHARGING_TIME_MIN, min);
 800106a:	f897 3065 	ldrb.w	r3, [r7, #101]	@ 0x65
 800106e:	b29b      	uxth	r3, r3
 8001070:	4619      	mov	r1, r3
 8001072:	2036      	movs	r0, #54	@ 0x36
 8001074:	f008 ff1c 	bl	8009eb0 <HMI_Compose_Pre_Charge_Parm>
					HMI_Print();
 8001078:	f7ff fbe2 	bl	8000840 <HMI_Print>

					//send data init
					uint8_t data_soh[] = { 0x00, (uint8_t) (soh & 0xFF),
 800107c:	2300      	movs	r3, #0
 800107e:	f887 3044 	strb.w	r3, [r7, #68]	@ 0x44
 8001082:	f8b7 3054 	ldrh.w	r3, [r7, #84]	@ 0x54
 8001086:	b2db      	uxtb	r3, r3
 8001088:	f887 3045 	strb.w	r3, [r7, #69]	@ 0x45
							(uint8_t) ((soh >> 8) & 0xFF) };
 800108c:	f8b7 3054 	ldrh.w	r3, [r7, #84]	@ 0x54
 8001090:	0a1b      	lsrs	r3, r3, #8
 8001092:	b29b      	uxth	r3, r3
 8001094:	b2db      	uxtb	r3, r3
					uint8_t data_soh[] = { 0x00, (uint8_t) (soh & 0xFF),
 8001096:	f887 3046 	strb.w	r3, [r7, #70]	@ 0x46
					send_frames(&huart3, TYPE_SOH, data_soh, users[current_user]);
 800109a:	4b76      	ldr	r3, [pc, #472]	@ (8001274 <main+0x550>)
 800109c:	781b      	ldrb	r3, [r3, #0]
 800109e:	461a      	mov	r2, r3
 80010a0:	4b75      	ldr	r3, [pc, #468]	@ (8001278 <main+0x554>)
 80010a2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80010a6:	b2db      	uxtb	r3, r3
 80010a8:	f107 0244 	add.w	r2, r7, #68	@ 0x44
 80010ac:	2127      	movs	r1, #39	@ 0x27
 80010ae:	4875      	ldr	r0, [pc, #468]	@ (8001284 <main+0x560>)
 80010b0:	f7ff fc46 	bl	8000940 <send_frames>
					uint8_t data_init_soc[] = { 0x00, (uint8_t) (init_soc & 0xFF),
 80010b4:	2300      	movs	r3, #0
 80010b6:	f887 3040 	strb.w	r3, [r7, #64]	@ 0x40
 80010ba:	f8b7 3056 	ldrh.w	r3, [r7, #86]	@ 0x56
 80010be:	b2db      	uxtb	r3, r3
 80010c0:	f887 3041 	strb.w	r3, [r7, #65]	@ 0x41
							(uint8_t) ((init_soc >> 8) & 0xFF) };
 80010c4:	f8b7 3056 	ldrh.w	r3, [r7, #86]	@ 0x56
 80010c8:	0a1b      	lsrs	r3, r3, #8
 80010ca:	b29b      	uxth	r3, r3
 80010cc:	b2db      	uxtb	r3, r3
					uint8_t data_init_soc[] = { 0x00, (uint8_t) (init_soc & 0xFF),
 80010ce:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
					send_frames(&huart3, TYPE_INIT_SOC, data_init_soc,
							users[current_user]);
 80010d2:	4b68      	ldr	r3, [pc, #416]	@ (8001274 <main+0x550>)
 80010d4:	781b      	ldrb	r3, [r3, #0]
 80010d6:	461a      	mov	r2, r3
 80010d8:	4b67      	ldr	r3, [pc, #412]	@ (8001278 <main+0x554>)
 80010da:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
					send_frames(&huart3, TYPE_INIT_SOC, data_init_soc,
 80010de:	b2db      	uxtb	r3, r3
 80010e0:	f107 0240 	add.w	r2, r7, #64	@ 0x40
 80010e4:	2125      	movs	r1, #37	@ 0x25
 80010e6:	4867      	ldr	r0, [pc, #412]	@ (8001284 <main+0x560>)
 80010e8:	f7ff fc2a 	bl	8000940 <send_frames>
					uint8_t data_soc[] = { 0x00, (uint8_t) (soc & 0xFF),
 80010ec:	2300      	movs	r3, #0
 80010ee:	f887 303c 	strb.w	r3, [r7, #60]	@ 0x3c
 80010f2:	f8b7 3062 	ldrh.w	r3, [r7, #98]	@ 0x62
 80010f6:	b2db      	uxtb	r3, r3
 80010f8:	f887 303d 	strb.w	r3, [r7, #61]	@ 0x3d
							(uint8_t) ((soc >> 8) & 0xFF) };
 80010fc:	f8b7 3062 	ldrh.w	r3, [r7, #98]	@ 0x62
 8001100:	0a1b      	lsrs	r3, r3, #8
 8001102:	b29b      	uxth	r3, r3
 8001104:	b2db      	uxtb	r3, r3
					uint8_t data_soc[] = { 0x00, (uint8_t) (soc & 0xFF),
 8001106:	f887 303e 	strb.w	r3, [r7, #62]	@ 0x3e
					send_frames(&huart3, TYPE_SOC, data_soc, users[current_user]);
 800110a:	4b5a      	ldr	r3, [pc, #360]	@ (8001274 <main+0x550>)
 800110c:	781b      	ldrb	r3, [r3, #0]
 800110e:	461a      	mov	r2, r3
 8001110:	4b59      	ldr	r3, [pc, #356]	@ (8001278 <main+0x554>)
 8001112:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001116:	b2db      	uxtb	r3, r3
 8001118:	f107 023c 	add.w	r2, r7, #60	@ 0x3c
 800111c:	2126      	movs	r1, #38	@ 0x26
 800111e:	4859      	ldr	r0, [pc, #356]	@ (8001284 <main+0x560>)
 8001120:	f7ff fc0e 	bl	8000940 <send_frames>
				}
				if(users[current_user]==2)
 8001124:	4b53      	ldr	r3, [pc, #332]	@ (8001274 <main+0x550>)
 8001126:	781b      	ldrb	r3, [r3, #0]
 8001128:	461a      	mov	r2, r3
 800112a:	4b53      	ldr	r3, [pc, #332]	@ (8001278 <main+0x554>)
 800112c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001130:	2b02      	cmp	r3, #2
 8001132:	f040 8117 	bne.w	8001364 <main+0x640>
				{
					sprintf(serial_output_buffer, "Hello 0");
 8001136:	4958      	ldr	r1, [pc, #352]	@ (8001298 <main+0x574>)
 8001138:	4851      	ldr	r0, [pc, #324]	@ (8001280 <main+0x55c>)
 800113a:	f00a fc43 	bl	800b9c4 <siprintf>
					Serial_Print();
 800113e:	f7ff fafb 	bl	8000738 <Serial_Print>
					HMI_Compose_Status(HMI_CONNECT2);
 8001142:	2014      	movs	r0, #20
 8001144:	f009 f85c 	bl	800a200 <HMI_Compose_Status>
					HMI_Print();
 8001148:	f7ff fb7a 	bl	8000840 <HMI_Print>
					uint8_t data_connect[] = { 0x00, 0x00, users[current_user] };
 800114c:	2300      	movs	r3, #0
 800114e:	f887 3038 	strb.w	r3, [r7, #56]	@ 0x38
 8001152:	2300      	movs	r3, #0
 8001154:	f887 3039 	strb.w	r3, [r7, #57]	@ 0x39
 8001158:	4b46      	ldr	r3, [pc, #280]	@ (8001274 <main+0x550>)
 800115a:	781b      	ldrb	r3, [r3, #0]
 800115c:	461a      	mov	r2, r3
 800115e:	4b46      	ldr	r3, [pc, #280]	@ (8001278 <main+0x554>)
 8001160:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001164:	b2db      	uxtb	r3, r3
 8001166:	f887 303a 	strb.w	r3, [r7, #58]	@ 0x3a
					send_frames(&huart3, TYPE_CONNECTER_STATUS, data_connect, 0x01);
 800116a:	f107 0238 	add.w	r2, r7, #56	@ 0x38
 800116e:	2301      	movs	r3, #1
 8001170:	2117      	movs	r1, #23
 8001172:	4844      	ldr	r0, [pc, #272]	@ (8001284 <main+0x560>)
 8001174:	f7ff fbe4 	bl	8000940 <send_frames>
					HAL_GPIO_WritePin(CP_SELECT_GPIO_Port, CP_SELECT_Pin,
 8001178:	2201      	movs	r2, #1
 800117a:	2108      	movs	r1, #8
 800117c:	4842      	ldr	r0, [pc, #264]	@ (8001288 <main+0x564>)
 800117e:	f004 f9af 	bl	80054e0 <HAL_GPIO_WritePin>
							GPIO_PIN_SET);

					soc2 = myEV.current_battery+rand()%5;
 8001182:	4b42      	ldr	r3, [pc, #264]	@ (800128c <main+0x568>)
 8001184:	889c      	ldrh	r4, [r3, #4]
 8001186:	f00a fb03 	bl	800b790 <rand>
 800118a:	4602      	mov	r2, r0
 800118c:	4b40      	ldr	r3, [pc, #256]	@ (8001290 <main+0x56c>)
 800118e:	fb83 1302 	smull	r1, r3, r3, r2
 8001192:	1059      	asrs	r1, r3, #1
 8001194:	17d3      	asrs	r3, r2, #31
 8001196:	1ac9      	subs	r1, r1, r3
 8001198:	460b      	mov	r3, r1
 800119a:	009b      	lsls	r3, r3, #2
 800119c:	440b      	add	r3, r1
 800119e:	1ad1      	subs	r1, r2, r3
 80011a0:	b28b      	uxth	r3, r1
 80011a2:	4423      	add	r3, r4
 80011a4:	f8a7 3060 	strh.w	r3, [r7, #96]	@ 0x60
					init_soc2 = 105+rand()%5;
 80011a8:	f00a faf2 	bl	800b790 <rand>
 80011ac:	4602      	mov	r2, r0
 80011ae:	4b38      	ldr	r3, [pc, #224]	@ (8001290 <main+0x56c>)
 80011b0:	fb83 1302 	smull	r1, r3, r3, r2
 80011b4:	1059      	asrs	r1, r3, #1
 80011b6:	17d3      	asrs	r3, r2, #31
 80011b8:	1ac9      	subs	r1, r1, r3
 80011ba:	460b      	mov	r3, r1
 80011bc:	009b      	lsls	r3, r3, #2
 80011be:	440b      	add	r3, r1
 80011c0:	1ad1      	subs	r1, r2, r3
 80011c2:	b28b      	uxth	r3, r1
 80011c4:	3369      	adds	r3, #105	@ 0x69
 80011c6:	f8a7 3052 	strh.w	r3, [r7, #82]	@ 0x52
					soh2 = 100;
 80011ca:	2364      	movs	r3, #100	@ 0x64
 80011cc:	f8a7 3050 	strh.w	r3, [r7, #80]	@ 0x50
					rate_soc2 = (uint16_t)soc2 * 100 / soh2;
 80011d0:	f8b7 3060 	ldrh.w	r3, [r7, #96]	@ 0x60
 80011d4:	2264      	movs	r2, #100	@ 0x64
 80011d6:	fb03 f202 	mul.w	r2, r3, r2
 80011da:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 80011de:	fb92 f3f3 	sdiv	r3, r2, r3
 80011e2:	f8a7 305c 	strh.w	r3, [r7, #92]	@ 0x5c
					hour2 = (uint8_t) ((100 - rate_soc2)/18);
 80011e6:	f8b7 305c 	ldrh.w	r3, [r7, #92]	@ 0x5c
 80011ea:	f1c3 0364 	rsb	r3, r3, #100	@ 0x64
 80011ee:	4a29      	ldr	r2, [pc, #164]	@ (8001294 <main+0x570>)
 80011f0:	fb82 1203 	smull	r1, r2, r2, r3
 80011f4:	1092      	asrs	r2, r2, #2
 80011f6:	17db      	asrs	r3, r3, #31
 80011f8:	1ad3      	subs	r3, r2, r3
 80011fa:	f887 3066 	strb.w	r3, [r7, #102]	@ 0x66
					min2 = ((100 - rate_soc2)*60/18) - hour2 * 60;
 80011fe:	f8b7 305c 	ldrh.w	r3, [r7, #92]	@ 0x5c
 8001202:	f1c3 0264 	rsb	r2, r3, #100	@ 0x64
 8001206:	4613      	mov	r3, r2
 8001208:	011b      	lsls	r3, r3, #4
 800120a:	1a9b      	subs	r3, r3, r2
 800120c:	009b      	lsls	r3, r3, #2
 800120e:	4a21      	ldr	r2, [pc, #132]	@ (8001294 <main+0x570>)
 8001210:	fb82 1203 	smull	r1, r2, r2, r3
 8001214:	1092      	asrs	r2, r2, #2
 8001216:	17db      	asrs	r3, r3, #31
 8001218:	1ad3      	subs	r3, r2, r3
 800121a:	b2da      	uxtb	r2, r3
 800121c:	f897 3066 	ldrb.w	r3, [r7, #102]	@ 0x66
 8001220:	4619      	mov	r1, r3
 8001222:	011b      	lsls	r3, r3, #4
 8001224:	1acb      	subs	r3, r1, r3
 8001226:	009b      	lsls	r3, r3, #2
 8001228:	b2db      	uxtb	r3, r3
 800122a:	4413      	add	r3, r2
 800122c:	f887 3064 	strb.w	r3, [r7, #100]	@ 0x64
					HMI_Compose_Pre_Charge_Parm(HMI_InitSoC2, 100);
 8001230:	2164      	movs	r1, #100	@ 0x64
 8001232:	2038      	movs	r0, #56	@ 0x38
 8001234:	f008 fe3c 	bl	8009eb0 <HMI_Compose_Pre_Charge_Parm>
					HMI_Print();
 8001238:	f7ff fb02 	bl	8000840 <HMI_Print>
					HMI_Compose_Pre_Charge_Parm(HMI_SoH2, (uint16_t)100*soh2/init_soc2);
 800123c:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 8001240:	2264      	movs	r2, #100	@ 0x64
 8001242:	fb03 f202 	mul.w	r2, r3, r2
 8001246:	f8b7 3052 	ldrh.w	r3, [r7, #82]	@ 0x52
 800124a:	fb92 f3f3 	sdiv	r3, r2, r3
 800124e:	b29b      	uxth	r3, r3
 8001250:	4619      	mov	r1, r3
 8001252:	2039      	movs	r0, #57	@ 0x39
 8001254:	f008 fe2c 	bl	8009eb0 <HMI_Compose_Pre_Charge_Parm>
					HMI_Print();
 8001258:	f7ff faf2 	bl	8000840 <HMI_Print>
					HMI_Compose_Pre_Charge_Parm(HMI_SoC2, soc2);
 800125c:	f8b7 3060 	ldrh.w	r3, [r7, #96]	@ 0x60
 8001260:	4619      	mov	r1, r3
 8001262:	2042      	movs	r0, #66	@ 0x42
 8001264:	f008 fe24 	bl	8009eb0 <HMI_Compose_Pre_Charge_Parm>
					HMI_Print();
 8001268:	f7ff faea 	bl	8000840 <HMI_Print>
					HMI_Compose_Pre_Charge_Parm(HMI_CHARGING_TIME_HOUR2, hour2);
 800126c:	f897 3066 	ldrb.w	r3, [r7, #102]	@ 0x66
 8001270:	e014      	b.n	800129c <main+0x578>
 8001272:	bf00      	nop
 8001274:	20000008 	.word	0x20000008
 8001278:	20000000 	.word	0x20000000
 800127c:	0800ccc8 	.word	0x0800ccc8
 8001280:	200005e0 	.word	0x200005e0
 8001284:	20000434 	.word	0x20000434
 8001288:	48000800 	.word	0x48000800
 800128c:	200021b8 	.word	0x200021b8
 8001290:	66666667 	.word	0x66666667
 8001294:	38e38e39 	.word	0x38e38e39
 8001298:	0800ccd0 	.word	0x0800ccd0
 800129c:	b29b      	uxth	r3, r3
 800129e:	4619      	mov	r1, r3
 80012a0:	2040      	movs	r0, #64	@ 0x40
 80012a2:	f008 fe05 	bl	8009eb0 <HMI_Compose_Pre_Charge_Parm>
					HMI_Print();
 80012a6:	f7ff facb 	bl	8000840 <HMI_Print>
					HMI_Compose_Pre_Charge_Parm(HMI_CHARGING_TIME_MIN2, min2);
 80012aa:	f897 3064 	ldrb.w	r3, [r7, #100]	@ 0x64
 80012ae:	b29b      	uxth	r3, r3
 80012b0:	4619      	mov	r1, r3
 80012b2:	2041      	movs	r0, #65	@ 0x41
 80012b4:	f008 fdfc 	bl	8009eb0 <HMI_Compose_Pre_Charge_Parm>
					HMI_Print();
 80012b8:	f7ff fac2 	bl	8000840 <HMI_Print>

					//send data init
					uint8_t data_soh2[] = { 0x00, (uint8_t) (soh2 & 0xFF),
 80012bc:	2300      	movs	r3, #0
 80012be:	f887 3034 	strb.w	r3, [r7, #52]	@ 0x34
 80012c2:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 80012c6:	b2db      	uxtb	r3, r3
 80012c8:	f887 3035 	strb.w	r3, [r7, #53]	@ 0x35
							(uint8_t) ((soh2 >> 8) & 0xFF) };
 80012cc:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 80012d0:	0a1b      	lsrs	r3, r3, #8
 80012d2:	b29b      	uxth	r3, r3
 80012d4:	b2db      	uxtb	r3, r3
					uint8_t data_soh2[] = { 0x00, (uint8_t) (soh2 & 0xFF),
 80012d6:	f887 3036 	strb.w	r3, [r7, #54]	@ 0x36
					send_frames(&huart3, TYPE_SOH, data_soh2, users[current_user]);
 80012da:	4b35      	ldr	r3, [pc, #212]	@ (80013b0 <main+0x68c>)
 80012dc:	781b      	ldrb	r3, [r3, #0]
 80012de:	461a      	mov	r2, r3
 80012e0:	4b34      	ldr	r3, [pc, #208]	@ (80013b4 <main+0x690>)
 80012e2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80012e6:	b2db      	uxtb	r3, r3
 80012e8:	f107 0234 	add.w	r2, r7, #52	@ 0x34
 80012ec:	2127      	movs	r1, #39	@ 0x27
 80012ee:	4832      	ldr	r0, [pc, #200]	@ (80013b8 <main+0x694>)
 80012f0:	f7ff fb26 	bl	8000940 <send_frames>
					uint8_t data_init_soc2[] = { 0x00, (uint8_t) (init_soc2 & 0xFF),
 80012f4:	2300      	movs	r3, #0
 80012f6:	f887 3030 	strb.w	r3, [r7, #48]	@ 0x30
 80012fa:	f8b7 3052 	ldrh.w	r3, [r7, #82]	@ 0x52
 80012fe:	b2db      	uxtb	r3, r3
 8001300:	f887 3031 	strb.w	r3, [r7, #49]	@ 0x31
							(uint8_t) ((init_soc2 >> 8) & 0xFF) };
 8001304:	f8b7 3052 	ldrh.w	r3, [r7, #82]	@ 0x52
 8001308:	0a1b      	lsrs	r3, r3, #8
 800130a:	b29b      	uxth	r3, r3
 800130c:	b2db      	uxtb	r3, r3
					uint8_t data_init_soc2[] = { 0x00, (uint8_t) (init_soc2 & 0xFF),
 800130e:	f887 3032 	strb.w	r3, [r7, #50]	@ 0x32
					send_frames(&huart3, TYPE_INIT_SOC, data_init_soc2,
							users[current_user]);
 8001312:	4b27      	ldr	r3, [pc, #156]	@ (80013b0 <main+0x68c>)
 8001314:	781b      	ldrb	r3, [r3, #0]
 8001316:	461a      	mov	r2, r3
 8001318:	4b26      	ldr	r3, [pc, #152]	@ (80013b4 <main+0x690>)
 800131a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
					send_frames(&huart3, TYPE_INIT_SOC, data_init_soc2,
 800131e:	b2db      	uxtb	r3, r3
 8001320:	f107 0230 	add.w	r2, r7, #48	@ 0x30
 8001324:	2125      	movs	r1, #37	@ 0x25
 8001326:	4824      	ldr	r0, [pc, #144]	@ (80013b8 <main+0x694>)
 8001328:	f7ff fb0a 	bl	8000940 <send_frames>
					uint8_t data_soc2[] = { 0x00, (uint8_t) (soc2 & 0xFF),
 800132c:	2300      	movs	r3, #0
 800132e:	f887 302c 	strb.w	r3, [r7, #44]	@ 0x2c
 8001332:	f8b7 3060 	ldrh.w	r3, [r7, #96]	@ 0x60
 8001336:	b2db      	uxtb	r3, r3
 8001338:	f887 302d 	strb.w	r3, [r7, #45]	@ 0x2d
							(uint8_t) ((soc2 >> 8) & 0xFF) };
 800133c:	f8b7 3060 	ldrh.w	r3, [r7, #96]	@ 0x60
 8001340:	0a1b      	lsrs	r3, r3, #8
 8001342:	b29b      	uxth	r3, r3
 8001344:	b2db      	uxtb	r3, r3
					uint8_t data_soc2[] = { 0x00, (uint8_t) (soc2 & 0xFF),
 8001346:	f887 302e 	strb.w	r3, [r7, #46]	@ 0x2e
					send_frames(&huart3, TYPE_SOC, data_soc2, users[current_user]);
 800134a:	4b19      	ldr	r3, [pc, #100]	@ (80013b0 <main+0x68c>)
 800134c:	781b      	ldrb	r3, [r3, #0]
 800134e:	461a      	mov	r2, r3
 8001350:	4b18      	ldr	r3, [pc, #96]	@ (80013b4 <main+0x690>)
 8001352:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001356:	b2db      	uxtb	r3, r3
 8001358:	f107 022c 	add.w	r2, r7, #44	@ 0x2c
 800135c:	2126      	movs	r1, #38	@ 0x26
 800135e:	4816      	ldr	r0, [pc, #88]	@ (80013b8 <main+0x694>)
 8001360:	f7ff faee 	bl	8000940 <send_frames>
				}
				EVSE_state();
 8001364:	f7ff f9fa 	bl	800075c <EVSE_state>
				PEF_Reset_RXBUFFER();//reset EVState - EV buffer
 8001368:	f009 ff8c 	bl	800b284 <PEF_Reset_RXBUFFER>
				break;
 800136c:	e030      	b.n	80013d0 <main+0x6ac>

				break;

			case ENERGY_TRANSFER + STATE_C + EV_CONTACTOR_CLOSE + CONFIRM:
				//gui ready len HMI, vao trang theo doi realtime data
				CAN_Master_Tx_Data[0] = 0x02;
 800136e:	4b13      	ldr	r3, [pc, #76]	@ (80013bc <main+0x698>)
 8001370:	2202      	movs	r2, #2
 8001372:	701a      	strb	r2, [r3, #0]
				can_setting_confirm_flag = 0;
 8001374:	4b12      	ldr	r3, [pc, #72]	@ (80013c0 <main+0x69c>)
 8001376:	2200      	movs	r2, #0
 8001378:	601a      	str	r2, [r3, #0]
				Master_Tx_SPDO_Data.state = CHARGING_ON;
 800137a:	4b12      	ldr	r3, [pc, #72]	@ (80013c4 <main+0x6a0>)
 800137c:	2201      	movs	r2, #1
 800137e:	701a      	strb	r2, [r3, #0]
				HMI_Compose_Status(HMI_READY);
 8001380:	2012      	movs	r0, #18
 8001382:	f008 ff3d 	bl	800a200 <HMI_Compose_Status>
				HMI_Print();
 8001386:	f7ff fa5b 	bl	8000840 <HMI_Print>

				break;
 800138a:	e021      	b.n	80013d0 <main+0x6ac>

			case ENERGY_TRANSFER + STATE_C + CHARGING_CURRENT_DEMAND + REQUEST:
				//gui cac cai dat qua CAN
				//		HMI_Compose_Pre_Charge_Parm(HMI_CURRENT_BATTERY, myEV.current_battery);
				HMI_Print();
 800138c:	f7ff fa58 	bl	8000840 <HMI_Print>
				break;
 8001390:	e01e      	b.n	80013d0 <main+0x6ac>
			case ENERGY_TRANSFER + STATE_C + CHARGING_CURRENT_DEMAND + RESPONSE:

				break;

			case ENERGY_TRANSFER + STATE_C + CURRENT_SUPPRESSION + REQUEST:
				can_setting_confirm_flag = 0;
 8001392:	4b0b      	ldr	r3, [pc, #44]	@ (80013c0 <main+0x69c>)
 8001394:	2200      	movs	r2, #0
 8001396:	601a      	str	r2, [r3, #0]
				CAN_Master_Tx_Data[0] = 0x02;
 8001398:	4b08      	ldr	r3, [pc, #32]	@ (80013bc <main+0x698>)
 800139a:	2202      	movs	r2, #2
 800139c:	701a      	strb	r2, [r3, #0]
				Master_Tx_SPDO_Data.state = CHARGING_OFF;
 800139e:	4b09      	ldr	r3, [pc, #36]	@ (80013c4 <main+0x6a0>)
 80013a0:	2200      	movs	r2, #0
 80013a2:	701a      	strb	r2, [r3, #0]
				HMI_Compose_Status(HMI_STOP);
 80013a4:	2010      	movs	r0, #16
 80013a6:	f008 ff2b 	bl	800a200 <HMI_Compose_Status>
				HMI_Print();
 80013aa:	f7ff fa49 	bl	8000840 <HMI_Print>

				break;
 80013ae:	e00f      	b.n	80013d0 <main+0x6ac>
 80013b0:	20000008 	.word	0x20000008
 80013b4:	20000000 	.word	0x20000000
 80013b8:	20000434 	.word	0x20000434
 80013bc:	200005a0 	.word	0x200005a0
 80013c0:	200005bc 	.word	0x200005bc
 80013c4:	200005a8 	.word	0x200005a8

				break;

			case SHUT_DOWN + STATE_B + END_OF_CHARGE + CONFIRM:
				//PEF_Handle_End_of_Charge_Cnf();
				uart_flag = 0;
 80013c8:	4bcf      	ldr	r3, [pc, #828]	@ (8001708 <main+0x9e4>)
 80013ca:	2200      	movs	r2, #0
 80013cc:	601a      	str	r2, [r3, #0]
				break;
 80013ce:	bf00      	nop
			}
		}

		if ((currenttick - previoustick_HMI) >= TPDO_Event_Time * 20)//timer 500ms cho HMI. gui realtime data
 80013d0:	4bce      	ldr	r3, [pc, #824]	@ (800170c <main+0x9e8>)
 80013d2:	681b      	ldr	r3, [r3, #0]
 80013d4:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80013d6:	1ad3      	subs	r3, r2, r3
 80013d8:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 80013dc:	f4ff acd2 	bcc.w	8000d84 <main+0x60>
				{
			previoustick_HMI = currenttick;
 80013e0:	4aca      	ldr	r2, [pc, #808]	@ (800170c <main+0x9e8>)
 80013e2:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80013e4:	6013      	str	r3, [r2, #0]
			if (status[0] == 1) { //connector 2
 80013e6:	4bca      	ldr	r3, [pc, #808]	@ (8001710 <main+0x9ec>)
 80013e8:	681b      	ldr	r3, [r3, #0]
 80013ea:	2b01      	cmp	r3, #1
 80013ec:	f040 80fe 	bne.w	80015ec <main+0x8c8>
				if ((EVstate
						== (ENERGY_TRANSFER + STATE_C + CHARGING_CURRENT_DEMAND
 80013f0:	4bc8      	ldr	r3, [pc, #800]	@ (8001714 <main+0x9f0>)
 80013f2:	881b      	ldrh	r3, [r3, #0]
				if ((EVstate
 80013f4:	f24c 1210 	movw	r2, #49424	@ 0xc110
 80013f8:	4293      	cmp	r3, r2
 80013fa:	d00c      	beq.n	8001416 <main+0x6f2>
								+ REQUEST))
						|| (EVstate
								== (ENERGY_TRANSFER + STATE_C
 80013fc:	4bc5      	ldr	r3, [pc, #788]	@ (8001714 <main+0x9f0>)
 80013fe:	881b      	ldrh	r3, [r3, #0]
						|| (EVstate
 8001400:	f24c 1214 	movw	r2, #49428	@ 0xc114
 8001404:	4293      	cmp	r3, r2
 8001406:	d006      	beq.n	8001416 <main+0x6f2>
										+ CURRENT_SUPPRESSION + REQUEST))
						|| (EVstate
								== (ENERGY_TRANSFER + STATE_C
 8001408:	4bc2      	ldr	r3, [pc, #776]	@ (8001714 <main+0x9f0>)
 800140a:	881b      	ldrh	r3, [r3, #0]
						|| (EVstate
 800140c:	f24c 1215 	movw	r2, #49429	@ 0xc115
 8001410:	4293      	cmp	r3, r2
 8001412:	f040 80eb 	bne.w	80015ec <main+0x8c8>
										+ CURRENT_SUPPRESSION + CONFIRM)))//SPI CCC REQ, SPI Current suppression REQ, SPI Current suppression CNF
						{
					uint8_t temp = 50 + (rand() % 2) - (rand() % 2);
 8001416:	f00a f9bb 	bl	800b790 <rand>
 800141a:	4603      	mov	r3, r0
 800141c:	2b00      	cmp	r3, #0
 800141e:	f003 0301 	and.w	r3, r3, #1
 8001422:	bfb8      	it	lt
 8001424:	425b      	neglt	r3, r3
 8001426:	b2dc      	uxtb	r4, r3
 8001428:	f00a f9b2 	bl	800b790 <rand>
 800142c:	4603      	mov	r3, r0
 800142e:	2b00      	cmp	r3, #0
 8001430:	f003 0301 	and.w	r3, r3, #1
 8001434:	bfb8      	it	lt
 8001436:	425b      	neglt	r3, r3
 8001438:	b2db      	uxtb	r3, r3
 800143a:	1ae3      	subs	r3, r4, r3
 800143c:	b2db      	uxtb	r3, r3
 800143e:	3332      	adds	r3, #50	@ 0x32
 8001440:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
					HAL_GPIO_WritePin(EV_Charge_GPIO_Port, EV_Charge_Pin, SET);
 8001444:	2201      	movs	r2, #1
 8001446:	2110      	movs	r1, #16
 8001448:	48b3      	ldr	r0, [pc, #716]	@ (8001718 <main+0x9f4>)
 800144a:	f004 f849 	bl	80054e0 <HAL_GPIO_WritePin>
					HMI_Compose_Pre_Charge_Parm(HMI_CHARGING_TIME_HOUR, hour);
 800144e:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 8001452:	b29b      	uxth	r3, r3
 8001454:	4619      	mov	r1, r3
 8001456:	2034      	movs	r0, #52	@ 0x34
 8001458:	f008 fd2a 	bl	8009eb0 <HMI_Compose_Pre_Charge_Parm>
					HMI_Print();
 800145c:	f7ff f9f0 	bl	8000840 <HMI_Print>
					HMI_Compose_Pre_Charge_Parm(HMI_CHARGING_TIME_MIN, min);
 8001460:	f897 3065 	ldrb.w	r3, [r7, #101]	@ 0x65
 8001464:	b29b      	uxth	r3, r3
 8001466:	4619      	mov	r1, r3
 8001468:	2036      	movs	r0, #54	@ 0x36
 800146a:	f008 fd21 	bl	8009eb0 <HMI_Compose_Pre_Charge_Parm>
					HMI_Print();
 800146e:	f7ff f9e7 	bl	8000840 <HMI_Print>
					HMI_Compose_Realtime_Data(HMI_VOLTAGE, 600);
 8001472:	f44f 7116 	mov.w	r1, #600	@ 0x258
 8001476:	2000      	movs	r0, #0
 8001478:	f008 fdc8 	bl	800a00c <HMI_Compose_Realtime_Data>
					HMI_Print();
 800147c:	f7ff f9e0 	bl	8000840 <HMI_Print>
					HMI_Compose_Realtime_Data(HMI_CURRENT, 30);
 8001480:	211e      	movs	r1, #30
 8001482:	2001      	movs	r0, #1
 8001484:	f008 fdc2 	bl	800a00c <HMI_Compose_Realtime_Data>
					HMI_Print();
 8001488:	f7ff f9da 	bl	8000840 <HMI_Print>
					HMI_Compose_Realtime_Data(HMI_TEMP, 50);
 800148c:	2132      	movs	r1, #50	@ 0x32
 800148e:	2002      	movs	r0, #2
 8001490:	f008 fdbc 	bl	800a00c <HMI_Compose_Realtime_Data>
					HMI_Print();
 8001494:	f7ff f9d4 	bl	8000840 <HMI_Print>
					HMI_Compose_Realtime_Data(HMI_SoC, rate_soc);
 8001498:	f8b7 305e 	ldrh.w	r3, [r7, #94]	@ 0x5e
 800149c:	4619      	mov	r1, r3
 800149e:	2037      	movs	r0, #55	@ 0x37
 80014a0:	f008 fdb4 	bl	800a00c <HMI_Compose_Realtime_Data>
					HMI_Print();
 80014a4:	f7ff f9cc 	bl	8000840 <HMI_Print>
					ESP_Data.ESP_Data_voltage = 600;
 80014a8:	4b9c      	ldr	r3, [pc, #624]	@ (800171c <main+0x9f8>)
 80014aa:	f44f 7216 	mov.w	r2, #600	@ 0x258
 80014ae:	805a      	strh	r2, [r3, #2]
					ESP_Data.ESP_Data_current = 30;
 80014b0:	4b9a      	ldr	r3, [pc, #616]	@ (800171c <main+0x9f8>)
 80014b2:	221e      	movs	r2, #30
 80014b4:	809a      	strh	r2, [r3, #4]
					sprintf(serial_output_buffer, "SOC1: %u and %u",rate_soc,soc);
 80014b6:	f8b7 205e 	ldrh.w	r2, [r7, #94]	@ 0x5e
 80014ba:	f8b7 3062 	ldrh.w	r3, [r7, #98]	@ 0x62
 80014be:	4998      	ldr	r1, [pc, #608]	@ (8001720 <main+0x9fc>)
 80014c0:	4898      	ldr	r0, [pc, #608]	@ (8001724 <main+0xa00>)
 80014c2:	f00a fa7f 	bl	800b9c4 <siprintf>
					Serial_Print();
 80014c6:	f7ff f937 	bl	8000738 <Serial_Print>
					Packet_to_ESP(TYPE_VOLTAGE_VALUE, 2);
 80014ca:	2102      	movs	r1, #2
 80014cc:	2021      	movs	r0, #33	@ 0x21
 80014ce:	f7ff f877 	bl	80005c0 <Packet_to_ESP>
					Packet_to_ESP(TYPE_CURRENT_VALUE, 2);
 80014d2:	2102      	movs	r1, #2
 80014d4:	2020      	movs	r0, #32
 80014d6:	f7ff f873 	bl	80005c0 <Packet_to_ESP>
					uint8_t data_sot_soc[] = { temp, (uint8_t) (rate_soc & 0xFF),
 80014da:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 80014de:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
 80014e2:	f8b7 305e 	ldrh.w	r3, [r7, #94]	@ 0x5e
 80014e6:	b2db      	uxtb	r3, r3
 80014e8:	f887 3029 	strb.w	r3, [r7, #41]	@ 0x29
							(uint8_t) ((rate_soc >> 8) & 0xFF) };
 80014ec:	f8b7 305e 	ldrh.w	r3, [r7, #94]	@ 0x5e
 80014f0:	0a1b      	lsrs	r3, r3, #8
 80014f2:	b29b      	uxth	r3, r3
 80014f4:	b2db      	uxtb	r3, r3
					uint8_t data_sot_soc[] = { temp, (uint8_t) (rate_soc & 0xFF),
 80014f6:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
					send_frames(&huart3, TYPE_SOT_SOC, data_sot_soc,
 80014fa:	f107 0228 	add.w	r2, r7, #40	@ 0x28
 80014fe:	2302      	movs	r3, #2
 8001500:	2122      	movs	r1, #34	@ 0x22
 8001502:	4889      	ldr	r0, [pc, #548]	@ (8001728 <main+0xa04>)
 8001504:	f7ff fa1c 	bl	8000940 <send_frames>
							2);
					rate_soc = rate_soc + 1;
 8001508:	f8b7 305e 	ldrh.w	r3, [r7, #94]	@ 0x5e
 800150c:	3301      	adds	r3, #1
 800150e:	f8a7 305e 	strh.w	r3, [r7, #94]	@ 0x5e
					min = min - ((100 - rate_soc)*60/18)/(100-rate_soc);
 8001512:	f8b7 305e 	ldrh.w	r3, [r7, #94]	@ 0x5e
 8001516:	f1c3 0264 	rsb	r2, r3, #100	@ 0x64
 800151a:	4613      	mov	r3, r2
 800151c:	011b      	lsls	r3, r3, #4
 800151e:	1a9b      	subs	r3, r3, r2
 8001520:	009b      	lsls	r3, r3, #2
 8001522:	4a82      	ldr	r2, [pc, #520]	@ (800172c <main+0xa08>)
 8001524:	fb82 1203 	smull	r1, r2, r2, r3
 8001528:	1092      	asrs	r2, r2, #2
 800152a:	17db      	asrs	r3, r3, #31
 800152c:	1ad2      	subs	r2, r2, r3
 800152e:	f8b7 305e 	ldrh.w	r3, [r7, #94]	@ 0x5e
 8001532:	f1c3 0364 	rsb	r3, r3, #100	@ 0x64
 8001536:	fb92 f3f3 	sdiv	r3, r2, r3
 800153a:	b2db      	uxtb	r3, r3
 800153c:	f897 2065 	ldrb.w	r2, [r7, #101]	@ 0x65
 8001540:	1ad3      	subs	r3, r2, r3
 8001542:	f887 3065 	strb.w	r3, [r7, #101]	@ 0x65
					if (min <=0 && hour > 0) {
 8001546:	f897 3065 	ldrb.w	r3, [r7, #101]	@ 0x65
 800154a:	2b00      	cmp	r3, #0
 800154c:	d10b      	bne.n	8001566 <main+0x842>
 800154e:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 8001552:	2b00      	cmp	r3, #0
 8001554:	d007      	beq.n	8001566 <main+0x842>
						min = 60;
 8001556:	233c      	movs	r3, #60	@ 0x3c
 8001558:	f887 3065 	strb.w	r3, [r7, #101]	@ 0x65
						hour = hour - 1;
 800155c:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 8001560:	3b01      	subs	r3, #1
 8001562:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
					}
					if (min > 0 && hour == 0) {
 8001566:	f897 3065 	ldrb.w	r3, [r7, #101]	@ 0x65
 800156a:	2b00      	cmp	r3, #0
 800156c:	d002      	beq.n	8001574 <main+0x850>
 800156e:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 8001572:	2b00      	cmp	r3, #0
						min = min;
					}
					if (rate_soc >= 100) {
 8001574:	f8b7 305e 	ldrh.w	r3, [r7, #94]	@ 0x5e
 8001578:	2b63      	cmp	r3, #99	@ 0x63
 800157a:	d937      	bls.n	80015ec <main+0x8c8>
						rate_soc = 100;
 800157c:	2364      	movs	r3, #100	@ 0x64
 800157e:	f8a7 305e 	strh.w	r3, [r7, #94]	@ 0x5e
						min = 0;
 8001582:	2300      	movs	r3, #0
 8001584:	f887 3065 	strb.w	r3, [r7, #101]	@ 0x65
						hour = 0;
 8001588:	2300      	movs	r3, #0
 800158a:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
						HMI_Compose_Realtime_Data(HMI_TRAN_STATUS1, 0);
 800158e:	2100      	movs	r1, #0
 8001590:	2043      	movs	r0, #67	@ 0x43
 8001592:	f008 fd3b 	bl	800a00c <HMI_Compose_Realtime_Data>
						HMI_Print();
 8001596:	f7ff f953 	bl	8000840 <HMI_Print>
						uint8_t stop_to_hmi[9] = { 0x70, 0x61, 0x67, 0x65, 0x20,
 800159a:	4a65      	ldr	r2, [pc, #404]	@ (8001730 <main+0xa0c>)
 800159c:	f107 031c 	add.w	r3, r7, #28
 80015a0:	ca07      	ldmia	r2, {r0, r1, r2}
 80015a2:	c303      	stmia	r3!, {r0, r1}
 80015a4:	701a      	strb	r2, [r3, #0]
								0x30, 0xFF, 0xFF, 0xFF };
						HAL_UART_Transmit(&huart4, stop_to_hmi, 9, 100);
 80015a6:	f107 011c 	add.w	r1, r7, #28
 80015aa:	2364      	movs	r3, #100	@ 0x64
 80015ac:	2209      	movs	r2, #9
 80015ae:	4861      	ldr	r0, [pc, #388]	@ (8001734 <main+0xa10>)
 80015b0:	f006 ff84 	bl	80084bc <HAL_UART_Transmit>
						HAL_GPIO_WritePin(EV_Charge_GPIO_Port, EV_Charge_Pin,
 80015b4:	2200      	movs	r2, #0
 80015b6:	2110      	movs	r1, #16
 80015b8:	4857      	ldr	r0, [pc, #348]	@ (8001718 <main+0x9f4>)
 80015ba:	f003 ff91 	bl	80054e0 <HAL_GPIO_WritePin>
								GPIO_PIN_RESET);
						HAL_GPIO_WritePin(CP_SELECT_GPIO_Port, CP_SELECT_Pin,
 80015be:	2200      	movs	r2, #0
 80015c0:	2108      	movs	r1, #8
 80015c2:	4855      	ldr	r0, [pc, #340]	@ (8001718 <main+0x9f4>)
 80015c4:	f003 ff8c 	bl	80054e0 <HAL_GPIO_WritePin>
								GPIO_PIN_RESET);
						uint8_t data_stop[] = { 0x00, 0x00, 2 };
 80015c8:	4a5b      	ldr	r2, [pc, #364]	@ (8001738 <main+0xa14>)
 80015ca:	f107 0318 	add.w	r3, r7, #24
 80015ce:	6812      	ldr	r2, [r2, #0]
 80015d0:	4611      	mov	r1, r2
 80015d2:	8019      	strh	r1, [r3, #0]
 80015d4:	3302      	adds	r3, #2
 80015d6:	0c12      	lsrs	r2, r2, #16
 80015d8:	701a      	strb	r2, [r3, #0]
						send_frames(&huart3, TYPE_HMI_CONTROL_TRANSACTION,
 80015da:	f107 0218 	add.w	r2, r7, #24
 80015de:	2300      	movs	r3, #0
 80015e0:	2118      	movs	r1, #24
 80015e2:	4851      	ldr	r0, [pc, #324]	@ (8001728 <main+0xa04>)
 80015e4:	f7ff f9ac 	bl	8000940 <send_frames>
								data_stop, 0x00);
						PEF_Reset_RXBUFFER();
 80015e8:	f009 fe4c 	bl	800b284 <PEF_Reset_RXBUFFER>

					}
				}
			}
			if (status[1] == 1) {
 80015ec:	4b48      	ldr	r3, [pc, #288]	@ (8001710 <main+0x9ec>)
 80015ee:	685b      	ldr	r3, [r3, #4]
 80015f0:	2b01      	cmp	r3, #1
 80015f2:	f47f abc7 	bne.w	8000d84 <main+0x60>
				if ((EVstate
						== (ENERGY_TRANSFER + STATE_C + CHARGING_CURRENT_DEMAND
 80015f6:	4b47      	ldr	r3, [pc, #284]	@ (8001714 <main+0x9f0>)
 80015f8:	881b      	ldrh	r3, [r3, #0]
				if ((EVstate
 80015fa:	f24c 1210 	movw	r2, #49424	@ 0xc110
 80015fe:	4293      	cmp	r3, r2
 8001600:	d00c      	beq.n	800161c <main+0x8f8>
								+ REQUEST))
						|| (EVstate
								== (ENERGY_TRANSFER + STATE_C
 8001602:	4b44      	ldr	r3, [pc, #272]	@ (8001714 <main+0x9f0>)
 8001604:	881b      	ldrh	r3, [r3, #0]
						|| (EVstate
 8001606:	f24c 1214 	movw	r2, #49428	@ 0xc114
 800160a:	4293      	cmp	r3, r2
 800160c:	d006      	beq.n	800161c <main+0x8f8>
										+ CURRENT_SUPPRESSION + REQUEST))
						|| (EVstate
								== (ENERGY_TRANSFER + STATE_C
 800160e:	4b41      	ldr	r3, [pc, #260]	@ (8001714 <main+0x9f0>)
 8001610:	881b      	ldrh	r3, [r3, #0]
						|| (EVstate
 8001612:	f24c 1215 	movw	r2, #49429	@ 0xc115
 8001616:	4293      	cmp	r3, r2
 8001618:	f47f abb4 	bne.w	8000d84 <main+0x60>
										+ CURRENT_SUPPRESSION + CONFIRM)))//SPI CCC REQ, SPI Current suppression REQ, SPI Current suppression CNF
						{
					uint8_t temp2 = 50 + (rand() % 2) - (rand() % 2);
 800161c:	f00a f8b8 	bl	800b790 <rand>
 8001620:	4603      	mov	r3, r0
 8001622:	2b00      	cmp	r3, #0
 8001624:	f003 0301 	and.w	r3, r3, #1
 8001628:	bfb8      	it	lt
 800162a:	425b      	neglt	r3, r3
 800162c:	b2dc      	uxtb	r4, r3
 800162e:	f00a f8af 	bl	800b790 <rand>
 8001632:	4603      	mov	r3, r0
 8001634:	2b00      	cmp	r3, #0
 8001636:	f003 0301 	and.w	r3, r3, #1
 800163a:	bfb8      	it	lt
 800163c:	425b      	neglt	r3, r3
 800163e:	b2db      	uxtb	r3, r3
 8001640:	1ae3      	subs	r3, r4, r3
 8001642:	b2db      	uxtb	r3, r3
 8001644:	3332      	adds	r3, #50	@ 0x32
 8001646:	f887 304e 	strb.w	r3, [r7, #78]	@ 0x4e
					HAL_GPIO_WritePin(EV_Charge_GPIO_Port, EV_Charge_Pin, SET);
 800164a:	2201      	movs	r2, #1
 800164c:	2110      	movs	r1, #16
 800164e:	4832      	ldr	r0, [pc, #200]	@ (8001718 <main+0x9f4>)
 8001650:	f003 ff46 	bl	80054e0 <HAL_GPIO_WritePin>
					HMI_Compose_Pre_Charge_Parm(HMI_CHARGING_TIME_HOUR2, hour2);
 8001654:	f897 3066 	ldrb.w	r3, [r7, #102]	@ 0x66
 8001658:	b29b      	uxth	r3, r3
 800165a:	4619      	mov	r1, r3
 800165c:	2040      	movs	r0, #64	@ 0x40
 800165e:	f008 fc27 	bl	8009eb0 <HMI_Compose_Pre_Charge_Parm>
					HMI_Print();
 8001662:	f7ff f8ed 	bl	8000840 <HMI_Print>
					HMI_Compose_Pre_Charge_Parm(HMI_CHARGING_TIME_MIN2, min2);
 8001666:	f897 3064 	ldrb.w	r3, [r7, #100]	@ 0x64
 800166a:	b29b      	uxth	r3, r3
 800166c:	4619      	mov	r1, r3
 800166e:	2041      	movs	r0, #65	@ 0x41
 8001670:	f008 fc1e 	bl	8009eb0 <HMI_Compose_Pre_Charge_Parm>
					HMI_Print();
 8001674:	f7ff f8e4 	bl	8000840 <HMI_Print>
					HMI_Compose_Realtime_Data(HMI_VOLTAGE2, 600);
 8001678:	f44f 7116 	mov.w	r1, #600	@ 0x258
 800167c:	2004      	movs	r0, #4
 800167e:	f008 fcc5 	bl	800a00c <HMI_Compose_Realtime_Data>
					HMI_Print();
 8001682:	f7ff f8dd 	bl	8000840 <HMI_Print>
					HMI_Compose_Realtime_Data(HMI_CURRENT2, 30);
 8001686:	211e      	movs	r1, #30
 8001688:	2005      	movs	r0, #5
 800168a:	f008 fcbf 	bl	800a00c <HMI_Compose_Realtime_Data>
					HMI_Print();
 800168e:	f7ff f8d7 	bl	8000840 <HMI_Print>
					HMI_Compose_Realtime_Data(HMI_TEMP2, temp2);
 8001692:	f897 304e 	ldrb.w	r3, [r7, #78]	@ 0x4e
 8001696:	b29b      	uxth	r3, r3
 8001698:	4619      	mov	r1, r3
 800169a:	2006      	movs	r0, #6
 800169c:	f008 fcb6 	bl	800a00c <HMI_Compose_Realtime_Data>
					HMI_Print();
 80016a0:	f7ff f8ce 	bl	8000840 <HMI_Print>
					HMI_Compose_Pre_Charge_Parm(HMI_SoC2, rate_soc2);
 80016a4:	f8b7 305c 	ldrh.w	r3, [r7, #92]	@ 0x5c
 80016a8:	4619      	mov	r1, r3
 80016aa:	2042      	movs	r0, #66	@ 0x42
 80016ac:	f008 fc00 	bl	8009eb0 <HMI_Compose_Pre_Charge_Parm>
					HMI_Print();
 80016b0:	f7ff f8c6 	bl	8000840 <HMI_Print>
					ESP_Data.ESP_Data_voltage = 600;
 80016b4:	4b19      	ldr	r3, [pc, #100]	@ (800171c <main+0x9f8>)
 80016b6:	f44f 7216 	mov.w	r2, #600	@ 0x258
 80016ba:	805a      	strh	r2, [r3, #2]
					ESP_Data.ESP_Data_current = 30;
 80016bc:	4b17      	ldr	r3, [pc, #92]	@ (800171c <main+0x9f8>)
 80016be:	221e      	movs	r2, #30
 80016c0:	809a      	strh	r2, [r3, #4]
					sprintf(serial_output_buffer, "SOC0: %u and %u",rate_soc2,soc2);
 80016c2:	f8b7 205c 	ldrh.w	r2, [r7, #92]	@ 0x5c
 80016c6:	f8b7 3060 	ldrh.w	r3, [r7, #96]	@ 0x60
 80016ca:	491c      	ldr	r1, [pc, #112]	@ (800173c <main+0xa18>)
 80016cc:	4815      	ldr	r0, [pc, #84]	@ (8001724 <main+0xa00>)
 80016ce:	f00a f979 	bl	800b9c4 <siprintf>
					Serial_Print();
 80016d2:	f7ff f831 	bl	8000738 <Serial_Print>
					Packet_to_ESP(TYPE_VOLTAGE_VALUE, 2);
 80016d6:	2102      	movs	r1, #2
 80016d8:	2021      	movs	r0, #33	@ 0x21
 80016da:	f7fe ff71 	bl	80005c0 <Packet_to_ESP>
					Packet_to_ESP(TYPE_CURRENT_VALUE, 2);
 80016de:	2102      	movs	r1, #2
 80016e0:	2020      	movs	r0, #32
 80016e2:	f7fe ff6d 	bl	80005c0 <Packet_to_ESP>
					uint8_t data_sot_soc2[] = { temp2, (uint8_t) (rate_soc2 & 0xFF),
 80016e6:	f897 304e 	ldrb.w	r3, [r7, #78]	@ 0x4e
 80016ea:	753b      	strb	r3, [r7, #20]
 80016ec:	f8b7 305c 	ldrh.w	r3, [r7, #92]	@ 0x5c
 80016f0:	b2db      	uxtb	r3, r3
 80016f2:	757b      	strb	r3, [r7, #21]
							(uint8_t) ((rate_soc2 >> 8) & 0xFF) };
 80016f4:	f8b7 305c 	ldrh.w	r3, [r7, #92]	@ 0x5c
 80016f8:	0a1b      	lsrs	r3, r3, #8
 80016fa:	b29b      	uxth	r3, r3
 80016fc:	b2db      	uxtb	r3, r3
					uint8_t data_sot_soc2[] = { temp2, (uint8_t) (rate_soc2 & 0xFF),
 80016fe:	75bb      	strb	r3, [r7, #22]
					send_frames(&huart3, TYPE_SOT_SOC, data_sot_soc2,
 8001700:	f107 0214 	add.w	r2, r7, #20
 8001704:	2302      	movs	r3, #2
 8001706:	e01b      	b.n	8001740 <main+0xa1c>
 8001708:	200005b8 	.word	0x200005b8
 800170c:	20000584 	.word	0x20000584
 8001710:	200005cc 	.word	0x200005cc
 8001714:	200005c0 	.word	0x200005c0
 8001718:	48000800 	.word	0x48000800
 800171c:	200000a8 	.word	0x200000a8
 8001720:	0800ccd8 	.word	0x0800ccd8
 8001724:	200005e0 	.word	0x200005e0
 8001728:	20000434 	.word	0x20000434
 800172c:	38e38e39 	.word	0x38e38e39
 8001730:	0800ccbc 	.word	0x0800ccbc
 8001734:	20000284 	.word	0x20000284
 8001738:	0800ccf8 	.word	0x0800ccf8
 800173c:	0800cce8 	.word	0x0800cce8
 8001740:	2122      	movs	r1, #34	@ 0x22
 8001742:	4835      	ldr	r0, [pc, #212]	@ (8001818 <main+0xaf4>)
 8001744:	f7ff f8fc 	bl	8000940 <send_frames>
							2);
					rate_soc2 = rate_soc2 + 1;
 8001748:	f8b7 305c 	ldrh.w	r3, [r7, #92]	@ 0x5c
 800174c:	3301      	adds	r3, #1
 800174e:	f8a7 305c 	strh.w	r3, [r7, #92]	@ 0x5c
					hour2 = (uint8_t) ((100 - rate_soc2)/18);
 8001752:	f8b7 305c 	ldrh.w	r3, [r7, #92]	@ 0x5c
 8001756:	f1c3 0364 	rsb	r3, r3, #100	@ 0x64
 800175a:	4a30      	ldr	r2, [pc, #192]	@ (800181c <main+0xaf8>)
 800175c:	fb82 1203 	smull	r1, r2, r2, r3
 8001760:	1092      	asrs	r2, r2, #2
 8001762:	17db      	asrs	r3, r3, #31
 8001764:	1ad3      	subs	r3, r2, r3
 8001766:	f887 3066 	strb.w	r3, [r7, #102]	@ 0x66
					min2 = ((100 - rate_soc2)*60/18) - hour2 * 60;
 800176a:	f8b7 305c 	ldrh.w	r3, [r7, #92]	@ 0x5c
 800176e:	f1c3 0264 	rsb	r2, r3, #100	@ 0x64
 8001772:	4613      	mov	r3, r2
 8001774:	011b      	lsls	r3, r3, #4
 8001776:	1a9b      	subs	r3, r3, r2
 8001778:	009b      	lsls	r3, r3, #2
 800177a:	4a28      	ldr	r2, [pc, #160]	@ (800181c <main+0xaf8>)
 800177c:	fb82 1203 	smull	r1, r2, r2, r3
 8001780:	1092      	asrs	r2, r2, #2
 8001782:	17db      	asrs	r3, r3, #31
 8001784:	1ad3      	subs	r3, r2, r3
 8001786:	b2da      	uxtb	r2, r3
 8001788:	f897 3066 	ldrb.w	r3, [r7, #102]	@ 0x66
 800178c:	4619      	mov	r1, r3
 800178e:	011b      	lsls	r3, r3, #4
 8001790:	1acb      	subs	r3, r1, r3
 8001792:	009b      	lsls	r3, r3, #2
 8001794:	b2db      	uxtb	r3, r3
 8001796:	4413      	add	r3, r2
 8001798:	f887 3064 	strb.w	r3, [r7, #100]	@ 0x64
					if (rate_soc2 > 100) {
 800179c:	f8b7 305c 	ldrh.w	r3, [r7, #92]	@ 0x5c
 80017a0:	2b64      	cmp	r3, #100	@ 0x64
 80017a2:	f67f aaef 	bls.w	8000d84 <main+0x60>
						rate_soc2 = 100;
 80017a6:	2364      	movs	r3, #100	@ 0x64
 80017a8:	f8a7 305c 	strh.w	r3, [r7, #92]	@ 0x5c
						min2 = 0;
 80017ac:	2300      	movs	r3, #0
 80017ae:	f887 3064 	strb.w	r3, [r7, #100]	@ 0x64
						hour2 = 0;
 80017b2:	2300      	movs	r3, #0
 80017b4:	f887 3066 	strb.w	r3, [r7, #102]	@ 0x66
						HMI_Compose_Realtime_Data(HMI_TRAN_STATUS2, 0);
 80017b8:	2100      	movs	r1, #0
 80017ba:	2044      	movs	r0, #68	@ 0x44
 80017bc:	f008 fc26 	bl	800a00c <HMI_Compose_Realtime_Data>
						HMI_Print();
 80017c0:	f7ff f83e 	bl	8000840 <HMI_Print>
						uint8_t stop_to_hmi[9] = { 0x70, 0x61, 0x67, 0x65, 0x20,
 80017c4:	4a16      	ldr	r2, [pc, #88]	@ (8001820 <main+0xafc>)
 80017c6:	f107 0308 	add.w	r3, r7, #8
 80017ca:	ca07      	ldmia	r2, {r0, r1, r2}
 80017cc:	c303      	stmia	r3!, {r0, r1}
 80017ce:	701a      	strb	r2, [r3, #0]
								0x30, 0xFF, 0xFF, 0xFF };
						HAL_UART_Transmit(&huart4, stop_to_hmi, 9, 100);
 80017d0:	f107 0108 	add.w	r1, r7, #8
 80017d4:	2364      	movs	r3, #100	@ 0x64
 80017d6:	2209      	movs	r2, #9
 80017d8:	4812      	ldr	r0, [pc, #72]	@ (8001824 <main+0xb00>)
 80017da:	f006 fe6f 	bl	80084bc <HAL_UART_Transmit>
						HAL_GPIO_WritePin(EV_Charge_GPIO_Port, EV_Charge_Pin,
 80017de:	2200      	movs	r2, #0
 80017e0:	2110      	movs	r1, #16
 80017e2:	4811      	ldr	r0, [pc, #68]	@ (8001828 <main+0xb04>)
 80017e4:	f003 fe7c 	bl	80054e0 <HAL_GPIO_WritePin>
								GPIO_PIN_RESET);
						HAL_GPIO_WritePin(CP_SELECT_GPIO_Port, CP_SELECT_Pin,
 80017e8:	2200      	movs	r2, #0
 80017ea:	2108      	movs	r1, #8
 80017ec:	480e      	ldr	r0, [pc, #56]	@ (8001828 <main+0xb04>)
 80017ee:	f003 fe77 	bl	80054e0 <HAL_GPIO_WritePin>
								GPIO_PIN_RESET);
						uint8_t data_stop[] = { 0x00, 0x00, 2 };
 80017f2:	4a0e      	ldr	r2, [pc, #56]	@ (800182c <main+0xb08>)
 80017f4:	1d3b      	adds	r3, r7, #4
 80017f6:	6812      	ldr	r2, [r2, #0]
 80017f8:	4611      	mov	r1, r2
 80017fa:	8019      	strh	r1, [r3, #0]
 80017fc:	3302      	adds	r3, #2
 80017fe:	0c12      	lsrs	r2, r2, #16
 8001800:	701a      	strb	r2, [r3, #0]
						send_frames(&huart3, TYPE_HMI_CONTROL_TRANSACTION,
 8001802:	1d3a      	adds	r2, r7, #4
 8001804:	2300      	movs	r3, #0
 8001806:	2118      	movs	r1, #24
 8001808:	4803      	ldr	r0, [pc, #12]	@ (8001818 <main+0xaf4>)
 800180a:	f7ff f899 	bl	8000940 <send_frames>
								data_stop, 0x00);
						PEF_Reset_RXBUFFER();
 800180e:	f009 fd39 	bl	800b284 <PEF_Reset_RXBUFFER>
	while (1) {
 8001812:	f7ff bab7 	b.w	8000d84 <main+0x60>
 8001816:	bf00      	nop
 8001818:	20000434 	.word	0x20000434
 800181c:	38e38e39 	.word	0x38e38e39
 8001820:	0800ccbc 	.word	0x0800ccbc
 8001824:	20000284 	.word	0x20000284
 8001828:	48000800 	.word	0x48000800
 800182c:	0800ccf8 	.word	0x0800ccf8

08001830 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001830:	b580      	push	{r7, lr}
 8001832:	b094      	sub	sp, #80	@ 0x50
 8001834:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001836:	f107 0318 	add.w	r3, r7, #24
 800183a:	2238      	movs	r2, #56	@ 0x38
 800183c:	2100      	movs	r1, #0
 800183e:	4618      	mov	r0, r3
 8001840:	f00a f923 	bl	800ba8a <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001844:	1d3b      	adds	r3, r7, #4
 8001846:	2200      	movs	r2, #0
 8001848:	601a      	str	r2, [r3, #0]
 800184a:	605a      	str	r2, [r3, #4]
 800184c:	609a      	str	r2, [r3, #8]
 800184e:	60da      	str	r2, [r3, #12]
 8001850:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001852:	f44f 7000 	mov.w	r0, #512	@ 0x200
 8001856:	f003 fe73 	bl	8005540 <HAL_PWREx_ControlVoltageScaling>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800185a:	2302      	movs	r3, #2
 800185c:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800185e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001862:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001864:	2340      	movs	r3, #64	@ 0x40
 8001866:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001868:	2302      	movs	r3, #2
 800186a:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800186c:	2302      	movs	r3, #2
 800186e:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 8001870:	2301      	movs	r3, #1
 8001872:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 8;
 8001874:	2308      	movs	r3, #8
 8001876:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001878:	2302      	movs	r3, #2
 800187a:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 800187c:	2302      	movs	r3, #2
 800187e:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8001880:	2302      	movs	r3, #2
 8001882:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001884:	f107 0318 	add.w	r3, r7, #24
 8001888:	4618      	mov	r0, r3
 800188a:	f003 ff0d 	bl	80056a8 <HAL_RCC_OscConfig>
 800188e:	4603      	mov	r3, r0
 8001890:	2b00      	cmp	r3, #0
 8001892:	d001      	beq.n	8001898 <SystemClock_Config+0x68>
  {
    Error_Handler();
 8001894:	f000 fbd2 	bl	800203c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001898:	230f      	movs	r3, #15
 800189a:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800189c:	2303      	movs	r3, #3
 800189e:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV4;
 80018a0:	2390      	movs	r3, #144	@ 0x90
 80018a2:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80018a4:	2300      	movs	r3, #0
 80018a6:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80018a8:	2300      	movs	r3, #0
 80018aa:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80018ac:	1d3b      	adds	r3, r7, #4
 80018ae:	2100      	movs	r1, #0
 80018b0:	4618      	mov	r0, r3
 80018b2:	f004 fa11 	bl	8005cd8 <HAL_RCC_ClockConfig>
 80018b6:	4603      	mov	r3, r0
 80018b8:	2b00      	cmp	r3, #0
 80018ba:	d001      	beq.n	80018c0 <SystemClock_Config+0x90>
  {
    Error_Handler();
 80018bc:	f000 fbbe 	bl	800203c <Error_Handler>
  }
}
 80018c0:	bf00      	nop
 80018c2:	3750      	adds	r7, #80	@ 0x50
 80018c4:	46bd      	mov	sp, r7
 80018c6:	bd80      	pop	{r7, pc}

080018c8 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80018c8:	b580      	push	{r7, lr}
 80018ca:	b08c      	sub	sp, #48	@ 0x30
 80018cc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 80018ce:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80018d2:	2200      	movs	r2, #0
 80018d4:	601a      	str	r2, [r3, #0]
 80018d6:	605a      	str	r2, [r3, #4]
 80018d8:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 80018da:	1d3b      	adds	r3, r7, #4
 80018dc:	2220      	movs	r2, #32
 80018de:	2100      	movs	r1, #0
 80018e0:	4618      	mov	r0, r3
 80018e2:	f00a f8d2 	bl	800ba8a <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 80018e6:	4b32      	ldr	r3, [pc, #200]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 80018e8:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
 80018ec:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 80018ee:	4b30      	ldr	r3, [pc, #192]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 80018f0:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 80018f4:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80018f6:	4b2e      	ldr	r3, [pc, #184]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 80018f8:	2200      	movs	r2, #0
 80018fa:	609a      	str	r2, [r3, #8]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80018fc:	4b2c      	ldr	r3, [pc, #176]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 80018fe:	2200      	movs	r2, #0
 8001900:	60da      	str	r2, [r3, #12]
  hadc1.Init.GainCompensation = 0;
 8001902:	4b2b      	ldr	r3, [pc, #172]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 8001904:	2200      	movs	r2, #0
 8001906:	611a      	str	r2, [r3, #16]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8001908:	4b29      	ldr	r3, [pc, #164]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 800190a:	2200      	movs	r2, #0
 800190c:	615a      	str	r2, [r3, #20]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800190e:	4b28      	ldr	r3, [pc, #160]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 8001910:	2204      	movs	r2, #4
 8001912:	619a      	str	r2, [r3, #24]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8001914:	4b26      	ldr	r3, [pc, #152]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 8001916:	2200      	movs	r2, #0
 8001918:	771a      	strb	r2, [r3, #28]
  hadc1.Init.ContinuousConvMode = DISABLE;
 800191a:	4b25      	ldr	r3, [pc, #148]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 800191c:	2200      	movs	r2, #0
 800191e:	775a      	strb	r2, [r3, #29]
  hadc1.Init.NbrOfConversion = 1;
 8001920:	4b23      	ldr	r3, [pc, #140]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 8001922:	2201      	movs	r2, #1
 8001924:	621a      	str	r2, [r3, #32]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001926:	4b22      	ldr	r3, [pc, #136]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 8001928:	2200      	movs	r2, #0
 800192a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800192e:	4b20      	ldr	r3, [pc, #128]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 8001930:	2200      	movs	r2, #0
 8001932:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001934:	4b1e      	ldr	r3, [pc, #120]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 8001936:	2200      	movs	r2, #0
 8001938:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc1.Init.DMAContinuousRequests = DISABLE;
 800193a:	4b1d      	ldr	r3, [pc, #116]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 800193c:	2200      	movs	r2, #0
 800193e:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8001942:	4b1b      	ldr	r3, [pc, #108]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 8001944:	2200      	movs	r2, #0
 8001946:	63da      	str	r2, [r3, #60]	@ 0x3c
  hadc1.Init.OversamplingMode = DISABLE;
 8001948:	4b19      	ldr	r3, [pc, #100]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 800194a:	2200      	movs	r2, #0
 800194c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001950:	4817      	ldr	r0, [pc, #92]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 8001952:	f001 fb05 	bl	8002f60 <HAL_ADC_Init>
 8001956:	4603      	mov	r3, r0
 8001958:	2b00      	cmp	r3, #0
 800195a:	d001      	beq.n	8001960 <MX_ADC1_Init+0x98>
  {
    Error_Handler();
 800195c:	f000 fb6e 	bl	800203c <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 8001960:	2300      	movs	r3, #0
 8001962:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 8001964:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001968:	4619      	mov	r1, r3
 800196a:	4811      	ldr	r0, [pc, #68]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 800196c:	f002 fbd0 	bl	8004110 <HAL_ADCEx_MultiModeConfigChannel>
 8001970:	4603      	mov	r3, r0
 8001972:	2b00      	cmp	r3, #0
 8001974:	d001      	beq.n	800197a <MX_ADC1_Init+0xb2>
  {
    Error_Handler();
 8001976:	f000 fb61 	bl	800203c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_1;
 800197a:	4b0e      	ldr	r3, [pc, #56]	@ (80019b4 <MX_ADC1_Init+0xec>)
 800197c:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 800197e:	2306      	movs	r3, #6
 8001980:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 8001982:	2300      	movs	r3, #0
 8001984:	60fb      	str	r3, [r7, #12]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8001986:	237f      	movs	r3, #127	@ 0x7f
 8001988:	613b      	str	r3, [r7, #16]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 800198a:	2304      	movs	r3, #4
 800198c:	617b      	str	r3, [r7, #20]
  sConfig.Offset = 0;
 800198e:	2300      	movs	r3, #0
 8001990:	61bb      	str	r3, [r7, #24]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001992:	1d3b      	adds	r3, r7, #4
 8001994:	4619      	mov	r1, r3
 8001996:	4806      	ldr	r0, [pc, #24]	@ (80019b0 <MX_ADC1_Init+0xe8>)
 8001998:	f001 ff22 	bl	80037e0 <HAL_ADC_ConfigChannel>
 800199c:	4603      	mov	r3, r0
 800199e:	2b00      	cmp	r3, #0
 80019a0:	d001      	beq.n	80019a6 <MX_ADC1_Init+0xde>
  {
    Error_Handler();
 80019a2:	f000 fb4b 	bl	800203c <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80019a6:	bf00      	nop
 80019a8:	3730      	adds	r7, #48	@ 0x30
 80019aa:	46bd      	mov	sp, r7
 80019ac:	bd80      	pop	{r7, pc}
 80019ae:	bf00      	nop
 80019b0:	200000b8 	.word	0x200000b8
 80019b4:	04300002 	.word	0x04300002

080019b8 <MX_FDCAN2_Init>:
  * @brief FDCAN2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_FDCAN2_Init(void)
{
 80019b8:	b580      	push	{r7, lr}
 80019ba:	af00      	add	r7, sp, #0
  /* USER CODE END FDCAN2_Init 0 */

  /* USER CODE BEGIN FDCAN2_Init 1 */

  /* USER CODE END FDCAN2_Init 1 */
  hfdcan2.Instance = FDCAN2;
 80019bc:	4b1f      	ldr	r3, [pc, #124]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 80019be:	4a20      	ldr	r2, [pc, #128]	@ (8001a40 <MX_FDCAN2_Init+0x88>)
 80019c0:	601a      	str	r2, [r3, #0]
  hfdcan2.Init.ClockDivider = FDCAN_CLOCK_DIV1;
 80019c2:	4b1e      	ldr	r3, [pc, #120]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 80019c4:	2200      	movs	r2, #0
 80019c6:	605a      	str	r2, [r3, #4]
  hfdcan2.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 80019c8:	4b1c      	ldr	r3, [pc, #112]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 80019ca:	2200      	movs	r2, #0
 80019cc:	609a      	str	r2, [r3, #8]
  hfdcan2.Init.Mode = FDCAN_MODE_NORMAL;
 80019ce:	4b1b      	ldr	r3, [pc, #108]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 80019d0:	2200      	movs	r2, #0
 80019d2:	60da      	str	r2, [r3, #12]
  hfdcan2.Init.AutoRetransmission = ENABLE;
 80019d4:	4b19      	ldr	r3, [pc, #100]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 80019d6:	2201      	movs	r2, #1
 80019d8:	741a      	strb	r2, [r3, #16]
  hfdcan2.Init.TransmitPause = DISABLE;
 80019da:	4b18      	ldr	r3, [pc, #96]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 80019dc:	2200      	movs	r2, #0
 80019de:	745a      	strb	r2, [r3, #17]
  hfdcan2.Init.ProtocolException = DISABLE;
 80019e0:	4b16      	ldr	r3, [pc, #88]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 80019e2:	2200      	movs	r2, #0
 80019e4:	749a      	strb	r2, [r3, #18]
  hfdcan2.Init.NominalPrescaler = 16;
 80019e6:	4b15      	ldr	r3, [pc, #84]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 80019e8:	2210      	movs	r2, #16
 80019ea:	615a      	str	r2, [r3, #20]
  hfdcan2.Init.NominalSyncJumpWidth = 1;
 80019ec:	4b13      	ldr	r3, [pc, #76]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 80019ee:	2201      	movs	r2, #1
 80019f0:	619a      	str	r2, [r3, #24]
  hfdcan2.Init.NominalTimeSeg1 = 4;
 80019f2:	4b12      	ldr	r3, [pc, #72]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 80019f4:	2204      	movs	r2, #4
 80019f6:	61da      	str	r2, [r3, #28]
  hfdcan2.Init.NominalTimeSeg2 = 3;
 80019f8:	4b10      	ldr	r3, [pc, #64]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 80019fa:	2203      	movs	r2, #3
 80019fc:	621a      	str	r2, [r3, #32]
  hfdcan2.Init.DataPrescaler = 1;
 80019fe:	4b0f      	ldr	r3, [pc, #60]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 8001a00:	2201      	movs	r2, #1
 8001a02:	625a      	str	r2, [r3, #36]	@ 0x24
  hfdcan2.Init.DataSyncJumpWidth = 1;
 8001a04:	4b0d      	ldr	r3, [pc, #52]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 8001a06:	2201      	movs	r2, #1
 8001a08:	629a      	str	r2, [r3, #40]	@ 0x28
  hfdcan2.Init.DataTimeSeg1 = 1;
 8001a0a:	4b0c      	ldr	r3, [pc, #48]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 8001a0c:	2201      	movs	r2, #1
 8001a0e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hfdcan2.Init.DataTimeSeg2 = 1;
 8001a10:	4b0a      	ldr	r3, [pc, #40]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 8001a12:	2201      	movs	r2, #1
 8001a14:	631a      	str	r2, [r3, #48]	@ 0x30
  hfdcan2.Init.StdFiltersNbr = 0;
 8001a16:	4b09      	ldr	r3, [pc, #36]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 8001a18:	2200      	movs	r2, #0
 8001a1a:	635a      	str	r2, [r3, #52]	@ 0x34
  hfdcan2.Init.ExtFiltersNbr = 0;
 8001a1c:	4b07      	ldr	r3, [pc, #28]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 8001a1e:	2200      	movs	r2, #0
 8001a20:	639a      	str	r2, [r3, #56]	@ 0x38
  hfdcan2.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 8001a22:	4b06      	ldr	r3, [pc, #24]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 8001a24:	2200      	movs	r2, #0
 8001a26:	63da      	str	r2, [r3, #60]	@ 0x3c
  if (HAL_FDCAN_Init(&hfdcan2) != HAL_OK)
 8001a28:	4804      	ldr	r0, [pc, #16]	@ (8001a3c <MX_FDCAN2_Init+0x84>)
 8001a2a:	f003 f863 	bl	8004af4 <HAL_FDCAN_Init>
 8001a2e:	4603      	mov	r3, r0
 8001a30:	2b00      	cmp	r3, #0
 8001a32:	d001      	beq.n	8001a38 <MX_FDCAN2_Init+0x80>
  {
    Error_Handler();
 8001a34:	f000 fb02 	bl	800203c <Error_Handler>
  }
  /* USER CODE BEGIN FDCAN2_Init 2 */

  /* USER CODE END FDCAN2_Init 2 */

}
 8001a38:	bf00      	nop
 8001a3a:	bd80      	pop	{r7, pc}
 8001a3c:	20000124 	.word	0x20000124
 8001a40:	40006800 	.word	0x40006800

08001a44 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8001a44:	b580      	push	{r7, lr}
 8001a46:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8001a48:	4b1b      	ldr	r3, [pc, #108]	@ (8001ab8 <MX_SPI2_Init+0x74>)
 8001a4a:	4a1c      	ldr	r2, [pc, #112]	@ (8001abc <MX_SPI2_Init+0x78>)
 8001a4c:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8001a4e:	4b1a      	ldr	r3, [pc, #104]	@ (8001ab8 <MX_SPI2_Init+0x74>)
 8001a50:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8001a54:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8001a56:	4b18      	ldr	r3, [pc, #96]	@ (8001ab8 <MX_SPI2_Init+0x74>)
 8001a58:	2200      	movs	r2, #0
 8001a5a:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8001a5c:	4b16      	ldr	r3, [pc, #88]	@ (8001ab8 <MX_SPI2_Init+0x74>)
 8001a5e:	f44f 62e0 	mov.w	r2, #1792	@ 0x700
 8001a62:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_HIGH;
 8001a64:	4b14      	ldr	r3, [pc, #80]	@ (8001ab8 <MX_SPI2_Init+0x74>)
 8001a66:	2202      	movs	r2, #2
 8001a68:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_2EDGE;
 8001a6a:	4b13      	ldr	r3, [pc, #76]	@ (8001ab8 <MX_SPI2_Init+0x74>)
 8001a6c:	2201      	movs	r2, #1
 8001a6e:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8001a70:	4b11      	ldr	r3, [pc, #68]	@ (8001ab8 <MX_SPI2_Init+0x74>)
 8001a72:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001a76:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001a78:	4b0f      	ldr	r3, [pc, #60]	@ (8001ab8 <MX_SPI2_Init+0x74>)
 8001a7a:	2200      	movs	r2, #0
 8001a7c:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001a7e:	4b0e      	ldr	r3, [pc, #56]	@ (8001ab8 <MX_SPI2_Init+0x74>)
 8001a80:	2200      	movs	r2, #0
 8001a82:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8001a84:	4b0c      	ldr	r3, [pc, #48]	@ (8001ab8 <MX_SPI2_Init+0x74>)
 8001a86:	2200      	movs	r2, #0
 8001a88:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001a8a:	4b0b      	ldr	r3, [pc, #44]	@ (8001ab8 <MX_SPI2_Init+0x74>)
 8001a8c:	2200      	movs	r2, #0
 8001a8e:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 7;
 8001a90:	4b09      	ldr	r3, [pc, #36]	@ (8001ab8 <MX_SPI2_Init+0x74>)
 8001a92:	2207      	movs	r2, #7
 8001a94:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8001a96:	4b08      	ldr	r3, [pc, #32]	@ (8001ab8 <MX_SPI2_Init+0x74>)
 8001a98:	2200      	movs	r2, #0
 8001a9a:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 8001a9c:	4b06      	ldr	r3, [pc, #24]	@ (8001ab8 <MX_SPI2_Init+0x74>)
 8001a9e:	2200      	movs	r2, #0
 8001aa0:	635a      	str	r2, [r3, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8001aa2:	4805      	ldr	r0, [pc, #20]	@ (8001ab8 <MX_SPI2_Init+0x74>)
 8001aa4:	f004 fd82 	bl	80065ac <HAL_SPI_Init>
 8001aa8:	4603      	mov	r3, r0
 8001aaa:	2b00      	cmp	r3, #0
 8001aac:	d001      	beq.n	8001ab2 <MX_SPI2_Init+0x6e>
  {
    Error_Handler();
 8001aae:	f000 fac5 	bl	800203c <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8001ab2:	bf00      	nop
 8001ab4:	bd80      	pop	{r7, pc}
 8001ab6:	bf00      	nop
 8001ab8:	20000188 	.word	0x20000188
 8001abc:	40003800 	.word	0x40003800

08001ac0 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8001ac0:	b580      	push	{r7, lr}
 8001ac2:	b098      	sub	sp, #96	@ 0x60
 8001ac4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001ac6:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001aca:	2200      	movs	r2, #0
 8001acc:	601a      	str	r2, [r3, #0]
 8001ace:	605a      	str	r2, [r3, #4]
 8001ad0:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001ad2:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8001ad6:	2200      	movs	r2, #0
 8001ad8:	601a      	str	r2, [r3, #0]
 8001ada:	605a      	str	r2, [r3, #4]
 8001adc:	609a      	str	r2, [r3, #8]
 8001ade:	60da      	str	r2, [r3, #12]
 8001ae0:	611a      	str	r2, [r3, #16]
 8001ae2:	615a      	str	r2, [r3, #20]
 8001ae4:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8001ae6:	1d3b      	adds	r3, r7, #4
 8001ae8:	2234      	movs	r2, #52	@ 0x34
 8001aea:	2100      	movs	r1, #0
 8001aec:	4618      	mov	r0, r3
 8001aee:	f009 ffcc 	bl	800ba8a <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001af2:	4b3a      	ldr	r3, [pc, #232]	@ (8001bdc <MX_TIM1_Init+0x11c>)
 8001af4:	4a3a      	ldr	r2, [pc, #232]	@ (8001be0 <MX_TIM1_Init+0x120>)
 8001af6:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 159;
 8001af8:	4b38      	ldr	r3, [pc, #224]	@ (8001bdc <MX_TIM1_Init+0x11c>)
 8001afa:	229f      	movs	r2, #159	@ 0x9f
 8001afc:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001afe:	4b37      	ldr	r3, [pc, #220]	@ (8001bdc <MX_TIM1_Init+0x11c>)
 8001b00:	2200      	movs	r2, #0
 8001b02:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 99;
 8001b04:	4b35      	ldr	r3, [pc, #212]	@ (8001bdc <MX_TIM1_Init+0x11c>)
 8001b06:	2263      	movs	r2, #99	@ 0x63
 8001b08:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001b0a:	4b34      	ldr	r3, [pc, #208]	@ (8001bdc <MX_TIM1_Init+0x11c>)
 8001b0c:	2200      	movs	r2, #0
 8001b0e:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8001b10:	4b32      	ldr	r3, [pc, #200]	@ (8001bdc <MX_TIM1_Init+0x11c>)
 8001b12:	2200      	movs	r2, #0
 8001b14:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001b16:	4b31      	ldr	r3, [pc, #196]	@ (8001bdc <MX_TIM1_Init+0x11c>)
 8001b18:	2280      	movs	r2, #128	@ 0x80
 8001b1a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8001b1c:	482f      	ldr	r0, [pc, #188]	@ (8001bdc <MX_TIM1_Init+0x11c>)
 8001b1e:	f005 fad2 	bl	80070c6 <HAL_TIM_PWM_Init>
 8001b22:	4603      	mov	r3, r0
 8001b24:	2b00      	cmp	r3, #0
 8001b26:	d001      	beq.n	8001b2c <MX_TIM1_Init+0x6c>
  {
    Error_Handler();
 8001b28:	f000 fa88 	bl	800203c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001b2c:	2300      	movs	r3, #0
 8001b2e:	657b      	str	r3, [r7, #84]	@ 0x54
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8001b30:	2300      	movs	r3, #0
 8001b32:	65bb      	str	r3, [r7, #88]	@ 0x58
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001b34:	2300      	movs	r3, #0
 8001b36:	65fb      	str	r3, [r7, #92]	@ 0x5c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001b38:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001b3c:	4619      	mov	r1, r3
 8001b3e:	4827      	ldr	r0, [pc, #156]	@ (8001bdc <MX_TIM1_Init+0x11c>)
 8001b40:	f006 fade 	bl	8008100 <HAL_TIMEx_MasterConfigSynchronization>
 8001b44:	4603      	mov	r3, r0
 8001b46:	2b00      	cmp	r3, #0
 8001b48:	d001      	beq.n	8001b4e <MX_TIM1_Init+0x8e>
  {
    Error_Handler();
 8001b4a:	f000 fa77 	bl	800203c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001b4e:	2360      	movs	r3, #96	@ 0x60
 8001b50:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.Pulse = 0;
 8001b52:	2300      	movs	r3, #0
 8001b54:	63fb      	str	r3, [r7, #60]	@ 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001b56:	2300      	movs	r3, #0
 8001b58:	643b      	str	r3, [r7, #64]	@ 0x40
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8001b5a:	2300      	movs	r3, #0
 8001b5c:	647b      	str	r3, [r7, #68]	@ 0x44
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001b5e:	2300      	movs	r3, #0
 8001b60:	64bb      	str	r3, [r7, #72]	@ 0x48
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8001b62:	2300      	movs	r3, #0
 8001b64:	64fb      	str	r3, [r7, #76]	@ 0x4c
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8001b66:	2300      	movs	r3, #0
 8001b68:	653b      	str	r3, [r7, #80]	@ 0x50
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001b6a:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8001b6e:	2200      	movs	r2, #0
 8001b70:	4619      	mov	r1, r3
 8001b72:	481a      	ldr	r0, [pc, #104]	@ (8001bdc <MX_TIM1_Init+0x11c>)
 8001b74:	f005 fd90 	bl	8007698 <HAL_TIM_PWM_ConfigChannel>
 8001b78:	4603      	mov	r3, r0
 8001b7a:	2b00      	cmp	r3, #0
 8001b7c:	d001      	beq.n	8001b82 <MX_TIM1_Init+0xc2>
  {
    Error_Handler();
 8001b7e:	f000 fa5d 	bl	800203c <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8001b82:	2300      	movs	r3, #0
 8001b84:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8001b86:	2300      	movs	r3, #0
 8001b88:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8001b8a:	2300      	movs	r3, #0
 8001b8c:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8001b8e:	2300      	movs	r3, #0
 8001b90:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8001b92:	2300      	movs	r3, #0
 8001b94:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8001b96:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001b9a:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 8001b9c:	2300      	movs	r3, #0
 8001b9e:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 8001ba0:	2300      	movs	r3, #0
 8001ba2:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 8001ba4:	2300      	movs	r3, #0
 8001ba6:	627b      	str	r3, [r7, #36]	@ 0x24
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 8001ba8:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8001bac:	62bb      	str	r3, [r7, #40]	@ 0x28
  sBreakDeadTimeConfig.Break2Filter = 0;
 8001bae:	2300      	movs	r3, #0
 8001bb0:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 8001bb2:	2300      	movs	r3, #0
 8001bb4:	633b      	str	r3, [r7, #48]	@ 0x30
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001bb6:	2300      	movs	r3, #0
 8001bb8:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8001bba:	1d3b      	adds	r3, r7, #4
 8001bbc:	4619      	mov	r1, r3
 8001bbe:	4807      	ldr	r0, [pc, #28]	@ (8001bdc <MX_TIM1_Init+0x11c>)
 8001bc0:	f006 fb34 	bl	800822c <HAL_TIMEx_ConfigBreakDeadTime>
 8001bc4:	4603      	mov	r3, r0
 8001bc6:	2b00      	cmp	r3, #0
 8001bc8:	d001      	beq.n	8001bce <MX_TIM1_Init+0x10e>
  {
    Error_Handler();
 8001bca:	f000 fa37 	bl	800203c <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8001bce:	4803      	ldr	r0, [pc, #12]	@ (8001bdc <MX_TIM1_Init+0x11c>)
 8001bd0:	f000 fbc4 	bl	800235c <HAL_TIM_MspPostInit>

}
 8001bd4:	bf00      	nop
 8001bd6:	3760      	adds	r7, #96	@ 0x60
 8001bd8:	46bd      	mov	sp, r7
 8001bda:	bd80      	pop	{r7, pc}
 8001bdc:	200001ec 	.word	0x200001ec
 8001be0:	40012c00 	.word	0x40012c00

08001be4 <MX_TIM17_Init>:
  * @brief TIM17 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM17_Init(void)
{
 8001be4:	b580      	push	{r7, lr}
 8001be6:	af00      	add	r7, sp, #0
  /* USER CODE END TIM17_Init 0 */

  /* USER CODE BEGIN TIM17_Init 1 */

  /* USER CODE END TIM17_Init 1 */
  htim17.Instance = TIM17;
 8001be8:	4b10      	ldr	r3, [pc, #64]	@ (8001c2c <MX_TIM17_Init+0x48>)
 8001bea:	4a11      	ldr	r2, [pc, #68]	@ (8001c30 <MX_TIM17_Init+0x4c>)
 8001bec:	601a      	str	r2, [r3, #0]
  htim17.Init.Prescaler = 319;
 8001bee:	4b0f      	ldr	r3, [pc, #60]	@ (8001c2c <MX_TIM17_Init+0x48>)
 8001bf0:	f240 123f 	movw	r2, #319	@ 0x13f
 8001bf4:	605a      	str	r2, [r3, #4]
  htim17.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001bf6:	4b0d      	ldr	r3, [pc, #52]	@ (8001c2c <MX_TIM17_Init+0x48>)
 8001bf8:	2200      	movs	r2, #0
 8001bfa:	609a      	str	r2, [r3, #8]
  htim17.Init.Period = 9999;
 8001bfc:	4b0b      	ldr	r3, [pc, #44]	@ (8001c2c <MX_TIM17_Init+0x48>)
 8001bfe:	f242 720f 	movw	r2, #9999	@ 0x270f
 8001c02:	60da      	str	r2, [r3, #12]
  htim17.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001c04:	4b09      	ldr	r3, [pc, #36]	@ (8001c2c <MX_TIM17_Init+0x48>)
 8001c06:	2200      	movs	r2, #0
 8001c08:	611a      	str	r2, [r3, #16]
  htim17.Init.RepetitionCounter = 0;
 8001c0a:	4b08      	ldr	r3, [pc, #32]	@ (8001c2c <MX_TIM17_Init+0x48>)
 8001c0c:	2200      	movs	r2, #0
 8001c0e:	615a      	str	r2, [r3, #20]
  htim17.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001c10:	4b06      	ldr	r3, [pc, #24]	@ (8001c2c <MX_TIM17_Init+0x48>)
 8001c12:	2280      	movs	r2, #128	@ 0x80
 8001c14:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim17) != HAL_OK)
 8001c16:	4805      	ldr	r0, [pc, #20]	@ (8001c2c <MX_TIM17_Init+0x48>)
 8001c18:	f005 f9fe 	bl	8007018 <HAL_TIM_Base_Init>
 8001c1c:	4603      	mov	r3, r0
 8001c1e:	2b00      	cmp	r3, #0
 8001c20:	d001      	beq.n	8001c26 <MX_TIM17_Init+0x42>
  {
    Error_Handler();
 8001c22:	f000 fa0b 	bl	800203c <Error_Handler>
  }
  /* USER CODE BEGIN TIM17_Init 2 */

  /* USER CODE END TIM17_Init 2 */

}
 8001c26:	bf00      	nop
 8001c28:	bd80      	pop	{r7, pc}
 8001c2a:	bf00      	nop
 8001c2c:	20000238 	.word	0x20000238
 8001c30:	40014800 	.word	0x40014800

08001c34 <MX_UART4_Init>:
  * @brief UART4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART4_Init(void)
{
 8001c34:	b580      	push	{r7, lr}
 8001c36:	af00      	add	r7, sp, #0
  /* USER CODE END UART4_Init 0 */

  /* USER CODE BEGIN UART4_Init 1 */

  /* USER CODE END UART4_Init 1 */
  huart4.Instance = UART4;
 8001c38:	4b22      	ldr	r3, [pc, #136]	@ (8001cc4 <MX_UART4_Init+0x90>)
 8001c3a:	4a23      	ldr	r2, [pc, #140]	@ (8001cc8 <MX_UART4_Init+0x94>)
 8001c3c:	601a      	str	r2, [r3, #0]
  huart4.Init.BaudRate = 115200;
 8001c3e:	4b21      	ldr	r3, [pc, #132]	@ (8001cc4 <MX_UART4_Init+0x90>)
 8001c40:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001c44:	605a      	str	r2, [r3, #4]
  huart4.Init.WordLength = UART_WORDLENGTH_8B;
 8001c46:	4b1f      	ldr	r3, [pc, #124]	@ (8001cc4 <MX_UART4_Init+0x90>)
 8001c48:	2200      	movs	r2, #0
 8001c4a:	609a      	str	r2, [r3, #8]
  huart4.Init.StopBits = UART_STOPBITS_1;
 8001c4c:	4b1d      	ldr	r3, [pc, #116]	@ (8001cc4 <MX_UART4_Init+0x90>)
 8001c4e:	2200      	movs	r2, #0
 8001c50:	60da      	str	r2, [r3, #12]
  huart4.Init.Parity = UART_PARITY_NONE;
 8001c52:	4b1c      	ldr	r3, [pc, #112]	@ (8001cc4 <MX_UART4_Init+0x90>)
 8001c54:	2200      	movs	r2, #0
 8001c56:	611a      	str	r2, [r3, #16]
  huart4.Init.Mode = UART_MODE_TX_RX;
 8001c58:	4b1a      	ldr	r3, [pc, #104]	@ (8001cc4 <MX_UART4_Init+0x90>)
 8001c5a:	220c      	movs	r2, #12
 8001c5c:	615a      	str	r2, [r3, #20]
  huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001c5e:	4b19      	ldr	r3, [pc, #100]	@ (8001cc4 <MX_UART4_Init+0x90>)
 8001c60:	2200      	movs	r2, #0
 8001c62:	619a      	str	r2, [r3, #24]
  huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 8001c64:	4b17      	ldr	r3, [pc, #92]	@ (8001cc4 <MX_UART4_Init+0x90>)
 8001c66:	2200      	movs	r2, #0
 8001c68:	61da      	str	r2, [r3, #28]
  huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001c6a:	4b16      	ldr	r3, [pc, #88]	@ (8001cc4 <MX_UART4_Init+0x90>)
 8001c6c:	2200      	movs	r2, #0
 8001c6e:	621a      	str	r2, [r3, #32]
  huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8001c70:	4b14      	ldr	r3, [pc, #80]	@ (8001cc4 <MX_UART4_Init+0x90>)
 8001c72:	2200      	movs	r2, #0
 8001c74:	625a      	str	r2, [r3, #36]	@ 0x24
  huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001c76:	4b13      	ldr	r3, [pc, #76]	@ (8001cc4 <MX_UART4_Init+0x90>)
 8001c78:	2200      	movs	r2, #0
 8001c7a:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart4) != HAL_OK)
 8001c7c:	4811      	ldr	r0, [pc, #68]	@ (8001cc4 <MX_UART4_Init+0x90>)
 8001c7e:	f006 fbcd 	bl	800841c <HAL_UART_Init>
 8001c82:	4603      	mov	r3, r0
 8001c84:	2b00      	cmp	r3, #0
 8001c86:	d001      	beq.n	8001c8c <MX_UART4_Init+0x58>
  {
    Error_Handler();
 8001c88:	f000 f9d8 	bl	800203c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart4, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001c8c:	2100      	movs	r1, #0
 8001c8e:	480d      	ldr	r0, [pc, #52]	@ (8001cc4 <MX_UART4_Init+0x90>)
 8001c90:	f007 fc49 	bl	8009526 <HAL_UARTEx_SetTxFifoThreshold>
 8001c94:	4603      	mov	r3, r0
 8001c96:	2b00      	cmp	r3, #0
 8001c98:	d001      	beq.n	8001c9e <MX_UART4_Init+0x6a>
  {
    Error_Handler();
 8001c9a:	f000 f9cf 	bl	800203c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart4, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001c9e:	2100      	movs	r1, #0
 8001ca0:	4808      	ldr	r0, [pc, #32]	@ (8001cc4 <MX_UART4_Init+0x90>)
 8001ca2:	f007 fc7e 	bl	80095a2 <HAL_UARTEx_SetRxFifoThreshold>
 8001ca6:	4603      	mov	r3, r0
 8001ca8:	2b00      	cmp	r3, #0
 8001caa:	d001      	beq.n	8001cb0 <MX_UART4_Init+0x7c>
  {
    Error_Handler();
 8001cac:	f000 f9c6 	bl	800203c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart4) != HAL_OK)
 8001cb0:	4804      	ldr	r0, [pc, #16]	@ (8001cc4 <MX_UART4_Init+0x90>)
 8001cb2:	f007 fbff 	bl	80094b4 <HAL_UARTEx_DisableFifoMode>
 8001cb6:	4603      	mov	r3, r0
 8001cb8:	2b00      	cmp	r3, #0
 8001cba:	d001      	beq.n	8001cc0 <MX_UART4_Init+0x8c>
  {
    Error_Handler();
 8001cbc:	f000 f9be 	bl	800203c <Error_Handler>
  }
  /* USER CODE BEGIN UART4_Init 2 */

  /* USER CODE END UART4_Init 2 */

}
 8001cc0:	bf00      	nop
 8001cc2:	bd80      	pop	{r7, pc}
 8001cc4:	20000284 	.word	0x20000284
 8001cc8:	40004c00 	.word	0x40004c00

08001ccc <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8001ccc:	b580      	push	{r7, lr}
 8001cce:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001cd0:	4b22      	ldr	r3, [pc, #136]	@ (8001d5c <MX_USART1_UART_Init+0x90>)
 8001cd2:	4a23      	ldr	r2, [pc, #140]	@ (8001d60 <MX_USART1_UART_Init+0x94>)
 8001cd4:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8001cd6:	4b21      	ldr	r3, [pc, #132]	@ (8001d5c <MX_USART1_UART_Init+0x90>)
 8001cd8:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001cdc:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001cde:	4b1f      	ldr	r3, [pc, #124]	@ (8001d5c <MX_USART1_UART_Init+0x90>)
 8001ce0:	2200      	movs	r2, #0
 8001ce2:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001ce4:	4b1d      	ldr	r3, [pc, #116]	@ (8001d5c <MX_USART1_UART_Init+0x90>)
 8001ce6:	2200      	movs	r2, #0
 8001ce8:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001cea:	4b1c      	ldr	r3, [pc, #112]	@ (8001d5c <MX_USART1_UART_Init+0x90>)
 8001cec:	2200      	movs	r2, #0
 8001cee:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001cf0:	4b1a      	ldr	r3, [pc, #104]	@ (8001d5c <MX_USART1_UART_Init+0x90>)
 8001cf2:	220c      	movs	r2, #12
 8001cf4:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001cf6:	4b19      	ldr	r3, [pc, #100]	@ (8001d5c <MX_USART1_UART_Init+0x90>)
 8001cf8:	2200      	movs	r2, #0
 8001cfa:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001cfc:	4b17      	ldr	r3, [pc, #92]	@ (8001d5c <MX_USART1_UART_Init+0x90>)
 8001cfe:	2200      	movs	r2, #0
 8001d00:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001d02:	4b16      	ldr	r3, [pc, #88]	@ (8001d5c <MX_USART1_UART_Init+0x90>)
 8001d04:	2200      	movs	r2, #0
 8001d06:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8001d08:	4b14      	ldr	r3, [pc, #80]	@ (8001d5c <MX_USART1_UART_Init+0x90>)
 8001d0a:	2200      	movs	r2, #0
 8001d0c:	625a      	str	r2, [r3, #36]	@ 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001d0e:	4b13      	ldr	r3, [pc, #76]	@ (8001d5c <MX_USART1_UART_Init+0x90>)
 8001d10:	2200      	movs	r2, #0
 8001d12:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001d14:	4811      	ldr	r0, [pc, #68]	@ (8001d5c <MX_USART1_UART_Init+0x90>)
 8001d16:	f006 fb81 	bl	800841c <HAL_UART_Init>
 8001d1a:	4603      	mov	r3, r0
 8001d1c:	2b00      	cmp	r3, #0
 8001d1e:	d001      	beq.n	8001d24 <MX_USART1_UART_Init+0x58>
  {
    Error_Handler();
 8001d20:	f000 f98c 	bl	800203c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001d24:	2100      	movs	r1, #0
 8001d26:	480d      	ldr	r0, [pc, #52]	@ (8001d5c <MX_USART1_UART_Init+0x90>)
 8001d28:	f007 fbfd 	bl	8009526 <HAL_UARTEx_SetTxFifoThreshold>
 8001d2c:	4603      	mov	r3, r0
 8001d2e:	2b00      	cmp	r3, #0
 8001d30:	d001      	beq.n	8001d36 <MX_USART1_UART_Init+0x6a>
  {
    Error_Handler();
 8001d32:	f000 f983 	bl	800203c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001d36:	2100      	movs	r1, #0
 8001d38:	4808      	ldr	r0, [pc, #32]	@ (8001d5c <MX_USART1_UART_Init+0x90>)
 8001d3a:	f007 fc32 	bl	80095a2 <HAL_UARTEx_SetRxFifoThreshold>
 8001d3e:	4603      	mov	r3, r0
 8001d40:	2b00      	cmp	r3, #0
 8001d42:	d001      	beq.n	8001d48 <MX_USART1_UART_Init+0x7c>
  {
    Error_Handler();
 8001d44:	f000 f97a 	bl	800203c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 8001d48:	4804      	ldr	r0, [pc, #16]	@ (8001d5c <MX_USART1_UART_Init+0x90>)
 8001d4a:	f007 fbb3 	bl	80094b4 <HAL_UARTEx_DisableFifoMode>
 8001d4e:	4603      	mov	r3, r0
 8001d50:	2b00      	cmp	r3, #0
 8001d52:	d001      	beq.n	8001d58 <MX_USART1_UART_Init+0x8c>
  {
    Error_Handler();
 8001d54:	f000 f972 	bl	800203c <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8001d58:	bf00      	nop
 8001d5a:	bd80      	pop	{r7, pc}
 8001d5c:	20000314 	.word	0x20000314
 8001d60:	40013800 	.word	0x40013800

08001d64 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001d64:	b580      	push	{r7, lr}
 8001d66:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001d68:	4b22      	ldr	r3, [pc, #136]	@ (8001df4 <MX_USART2_UART_Init+0x90>)
 8001d6a:	4a23      	ldr	r2, [pc, #140]	@ (8001df8 <MX_USART2_UART_Init+0x94>)
 8001d6c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8001d6e:	4b21      	ldr	r3, [pc, #132]	@ (8001df4 <MX_USART2_UART_Init+0x90>)
 8001d70:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001d74:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8001d76:	4b1f      	ldr	r3, [pc, #124]	@ (8001df4 <MX_USART2_UART_Init+0x90>)
 8001d78:	2200      	movs	r2, #0
 8001d7a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001d7c:	4b1d      	ldr	r3, [pc, #116]	@ (8001df4 <MX_USART2_UART_Init+0x90>)
 8001d7e:	2200      	movs	r2, #0
 8001d80:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8001d82:	4b1c      	ldr	r3, [pc, #112]	@ (8001df4 <MX_USART2_UART_Init+0x90>)
 8001d84:	2200      	movs	r2, #0
 8001d86:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001d88:	4b1a      	ldr	r3, [pc, #104]	@ (8001df4 <MX_USART2_UART_Init+0x90>)
 8001d8a:	220c      	movs	r2, #12
 8001d8c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001d8e:	4b19      	ldr	r3, [pc, #100]	@ (8001df4 <MX_USART2_UART_Init+0x90>)
 8001d90:	2200      	movs	r2, #0
 8001d92:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001d94:	4b17      	ldr	r3, [pc, #92]	@ (8001df4 <MX_USART2_UART_Init+0x90>)
 8001d96:	2200      	movs	r2, #0
 8001d98:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001d9a:	4b16      	ldr	r3, [pc, #88]	@ (8001df4 <MX_USART2_UART_Init+0x90>)
 8001d9c:	2200      	movs	r2, #0
 8001d9e:	621a      	str	r2, [r3, #32]
  huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8001da0:	4b14      	ldr	r3, [pc, #80]	@ (8001df4 <MX_USART2_UART_Init+0x90>)
 8001da2:	2200      	movs	r2, #0
 8001da4:	625a      	str	r2, [r3, #36]	@ 0x24
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001da6:	4b13      	ldr	r3, [pc, #76]	@ (8001df4 <MX_USART2_UART_Init+0x90>)
 8001da8:	2200      	movs	r2, #0
 8001daa:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8001dac:	4811      	ldr	r0, [pc, #68]	@ (8001df4 <MX_USART2_UART_Init+0x90>)
 8001dae:	f006 fb35 	bl	800841c <HAL_UART_Init>
 8001db2:	4603      	mov	r3, r0
 8001db4:	2b00      	cmp	r3, #0
 8001db6:	d001      	beq.n	8001dbc <MX_USART2_UART_Init+0x58>
  {
    Error_Handler();
 8001db8:	f000 f940 	bl	800203c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart2, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001dbc:	2100      	movs	r1, #0
 8001dbe:	480d      	ldr	r0, [pc, #52]	@ (8001df4 <MX_USART2_UART_Init+0x90>)
 8001dc0:	f007 fbb1 	bl	8009526 <HAL_UARTEx_SetTxFifoThreshold>
 8001dc4:	4603      	mov	r3, r0
 8001dc6:	2b00      	cmp	r3, #0
 8001dc8:	d001      	beq.n	8001dce <MX_USART2_UART_Init+0x6a>
  {
    Error_Handler();
 8001dca:	f000 f937 	bl	800203c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart2, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001dce:	2100      	movs	r1, #0
 8001dd0:	4808      	ldr	r0, [pc, #32]	@ (8001df4 <MX_USART2_UART_Init+0x90>)
 8001dd2:	f007 fbe6 	bl	80095a2 <HAL_UARTEx_SetRxFifoThreshold>
 8001dd6:	4603      	mov	r3, r0
 8001dd8:	2b00      	cmp	r3, #0
 8001dda:	d001      	beq.n	8001de0 <MX_USART2_UART_Init+0x7c>
  {
    Error_Handler();
 8001ddc:	f000 f92e 	bl	800203c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart2) != HAL_OK)
 8001de0:	4804      	ldr	r0, [pc, #16]	@ (8001df4 <MX_USART2_UART_Init+0x90>)
 8001de2:	f007 fb67 	bl	80094b4 <HAL_UARTEx_DisableFifoMode>
 8001de6:	4603      	mov	r3, r0
 8001de8:	2b00      	cmp	r3, #0
 8001dea:	d001      	beq.n	8001df0 <MX_USART2_UART_Init+0x8c>
  {
    Error_Handler();
 8001dec:	f000 f926 	bl	800203c <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8001df0:	bf00      	nop
 8001df2:	bd80      	pop	{r7, pc}
 8001df4:	200003a4 	.word	0x200003a4
 8001df8:	40004400 	.word	0x40004400

08001dfc <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8001dfc:	b580      	push	{r7, lr}
 8001dfe:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8001e00:	4b22      	ldr	r3, [pc, #136]	@ (8001e8c <MX_USART3_UART_Init+0x90>)
 8001e02:	4a23      	ldr	r2, [pc, #140]	@ (8001e90 <MX_USART3_UART_Init+0x94>)
 8001e04:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 8001e06:	4b21      	ldr	r3, [pc, #132]	@ (8001e8c <MX_USART3_UART_Init+0x90>)
 8001e08:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001e0c:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8001e0e:	4b1f      	ldr	r3, [pc, #124]	@ (8001e8c <MX_USART3_UART_Init+0x90>)
 8001e10:	2200      	movs	r2, #0
 8001e12:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8001e14:	4b1d      	ldr	r3, [pc, #116]	@ (8001e8c <MX_USART3_UART_Init+0x90>)
 8001e16:	2200      	movs	r2, #0
 8001e18:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8001e1a:	4b1c      	ldr	r3, [pc, #112]	@ (8001e8c <MX_USART3_UART_Init+0x90>)
 8001e1c:	2200      	movs	r2, #0
 8001e1e:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8001e20:	4b1a      	ldr	r3, [pc, #104]	@ (8001e8c <MX_USART3_UART_Init+0x90>)
 8001e22:	220c      	movs	r2, #12
 8001e24:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001e26:	4b19      	ldr	r3, [pc, #100]	@ (8001e8c <MX_USART3_UART_Init+0x90>)
 8001e28:	2200      	movs	r2, #0
 8001e2a:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8001e2c:	4b17      	ldr	r3, [pc, #92]	@ (8001e8c <MX_USART3_UART_Init+0x90>)
 8001e2e:	2200      	movs	r2, #0
 8001e30:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001e32:	4b16      	ldr	r3, [pc, #88]	@ (8001e8c <MX_USART3_UART_Init+0x90>)
 8001e34:	2200      	movs	r2, #0
 8001e36:	621a      	str	r2, [r3, #32]
  huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8001e38:	4b14      	ldr	r3, [pc, #80]	@ (8001e8c <MX_USART3_UART_Init+0x90>)
 8001e3a:	2200      	movs	r2, #0
 8001e3c:	625a      	str	r2, [r3, #36]	@ 0x24
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001e3e:	4b13      	ldr	r3, [pc, #76]	@ (8001e8c <MX_USART3_UART_Init+0x90>)
 8001e40:	2200      	movs	r2, #0
 8001e42:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8001e44:	4811      	ldr	r0, [pc, #68]	@ (8001e8c <MX_USART3_UART_Init+0x90>)
 8001e46:	f006 fae9 	bl	800841c <HAL_UART_Init>
 8001e4a:	4603      	mov	r3, r0
 8001e4c:	2b00      	cmp	r3, #0
 8001e4e:	d001      	beq.n	8001e54 <MX_USART3_UART_Init+0x58>
  {
    Error_Handler();
 8001e50:	f000 f8f4 	bl	800203c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001e54:	2100      	movs	r1, #0
 8001e56:	480d      	ldr	r0, [pc, #52]	@ (8001e8c <MX_USART3_UART_Init+0x90>)
 8001e58:	f007 fb65 	bl	8009526 <HAL_UARTEx_SetTxFifoThreshold>
 8001e5c:	4603      	mov	r3, r0
 8001e5e:	2b00      	cmp	r3, #0
 8001e60:	d001      	beq.n	8001e66 <MX_USART3_UART_Init+0x6a>
  {
    Error_Handler();
 8001e62:	f000 f8eb 	bl	800203c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001e66:	2100      	movs	r1, #0
 8001e68:	4808      	ldr	r0, [pc, #32]	@ (8001e8c <MX_USART3_UART_Init+0x90>)
 8001e6a:	f007 fb9a 	bl	80095a2 <HAL_UARTEx_SetRxFifoThreshold>
 8001e6e:	4603      	mov	r3, r0
 8001e70:	2b00      	cmp	r3, #0
 8001e72:	d001      	beq.n	8001e78 <MX_USART3_UART_Init+0x7c>
  {
    Error_Handler();
 8001e74:	f000 f8e2 	bl	800203c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
 8001e78:	4804      	ldr	r0, [pc, #16]	@ (8001e8c <MX_USART3_UART_Init+0x90>)
 8001e7a:	f007 fb1b 	bl	80094b4 <HAL_UARTEx_DisableFifoMode>
 8001e7e:	4603      	mov	r3, r0
 8001e80:	2b00      	cmp	r3, #0
 8001e82:	d001      	beq.n	8001e88 <MX_USART3_UART_Init+0x8c>
  {
    Error_Handler();
 8001e84:	f000 f8da 	bl	800203c <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8001e88:	bf00      	nop
 8001e8a:	bd80      	pop	{r7, pc}
 8001e8c:	20000434 	.word	0x20000434
 8001e90:	40004800 	.word	0x40004800

08001e94 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8001e94:	b580      	push	{r7, lr}
 8001e96:	b082      	sub	sp, #8
 8001e98:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMAMUX1_CLK_ENABLE();
 8001e9a:	4b16      	ldr	r3, [pc, #88]	@ (8001ef4 <MX_DMA_Init+0x60>)
 8001e9c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001e9e:	4a15      	ldr	r2, [pc, #84]	@ (8001ef4 <MX_DMA_Init+0x60>)
 8001ea0:	f043 0304 	orr.w	r3, r3, #4
 8001ea4:	6493      	str	r3, [r2, #72]	@ 0x48
 8001ea6:	4b13      	ldr	r3, [pc, #76]	@ (8001ef4 <MX_DMA_Init+0x60>)
 8001ea8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001eaa:	f003 0304 	and.w	r3, r3, #4
 8001eae:	607b      	str	r3, [r7, #4]
 8001eb0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001eb2:	4b10      	ldr	r3, [pc, #64]	@ (8001ef4 <MX_DMA_Init+0x60>)
 8001eb4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001eb6:	4a0f      	ldr	r2, [pc, #60]	@ (8001ef4 <MX_DMA_Init+0x60>)
 8001eb8:	f043 0301 	orr.w	r3, r3, #1
 8001ebc:	6493      	str	r3, [r2, #72]	@ 0x48
 8001ebe:	4b0d      	ldr	r3, [pc, #52]	@ (8001ef4 <MX_DMA_Init+0x60>)
 8001ec0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001ec2:	f003 0301 	and.w	r3, r3, #1
 8001ec6:	603b      	str	r3, [r7, #0]
 8001ec8:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Channel1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8001eca:	2200      	movs	r2, #0
 8001ecc:	2100      	movs	r1, #0
 8001ece:	200b      	movs	r0, #11
 8001ed0:	f002 fb01 	bl	80044d6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 8001ed4:	200b      	movs	r0, #11
 8001ed6:	f002 fb18 	bl	800450a <HAL_NVIC_EnableIRQ>
  /* DMA1_Channel2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 8001eda:	2200      	movs	r2, #0
 8001edc:	2100      	movs	r1, #0
 8001ede:	200c      	movs	r0, #12
 8001ee0:	f002 faf9 	bl	80044d6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 8001ee4:	200c      	movs	r0, #12
 8001ee6:	f002 fb10 	bl	800450a <HAL_NVIC_EnableIRQ>

}
 8001eea:	bf00      	nop
 8001eec:	3708      	adds	r7, #8
 8001eee:	46bd      	mov	sp, r7
 8001ef0:	bd80      	pop	{r7, pc}
 8001ef2:	bf00      	nop
 8001ef4:	40021000 	.word	0x40021000

08001ef8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001ef8:	b580      	push	{r7, lr}
 8001efa:	b088      	sub	sp, #32
 8001efc:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001efe:	f107 030c 	add.w	r3, r7, #12
 8001f02:	2200      	movs	r2, #0
 8001f04:	601a      	str	r2, [r3, #0]
 8001f06:	605a      	str	r2, [r3, #4]
 8001f08:	609a      	str	r2, [r3, #8]
 8001f0a:	60da      	str	r2, [r3, #12]
 8001f0c:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f0e:	4b48      	ldr	r3, [pc, #288]	@ (8002030 <MX_GPIO_Init+0x138>)
 8001f10:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001f12:	4a47      	ldr	r2, [pc, #284]	@ (8002030 <MX_GPIO_Init+0x138>)
 8001f14:	f043 0304 	orr.w	r3, r3, #4
 8001f18:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001f1a:	4b45      	ldr	r3, [pc, #276]	@ (8002030 <MX_GPIO_Init+0x138>)
 8001f1c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001f1e:	f003 0304 	and.w	r3, r3, #4
 8001f22:	60bb      	str	r3, [r7, #8]
 8001f24:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f26:	4b42      	ldr	r3, [pc, #264]	@ (8002030 <MX_GPIO_Init+0x138>)
 8001f28:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001f2a:	4a41      	ldr	r2, [pc, #260]	@ (8002030 <MX_GPIO_Init+0x138>)
 8001f2c:	f043 0301 	orr.w	r3, r3, #1
 8001f30:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001f32:	4b3f      	ldr	r3, [pc, #252]	@ (8002030 <MX_GPIO_Init+0x138>)
 8001f34:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001f36:	f003 0301 	and.w	r3, r3, #1
 8001f3a:	607b      	str	r3, [r7, #4]
 8001f3c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001f3e:	4b3c      	ldr	r3, [pc, #240]	@ (8002030 <MX_GPIO_Init+0x138>)
 8001f40:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001f42:	4a3b      	ldr	r2, [pc, #236]	@ (8002030 <MX_GPIO_Init+0x138>)
 8001f44:	f043 0302 	orr.w	r3, r3, #2
 8001f48:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001f4a:	4b39      	ldr	r3, [pc, #228]	@ (8002030 <MX_GPIO_Init+0x138>)
 8001f4c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001f4e:	f003 0302 	and.w	r3, r3, #2
 8001f52:	603b      	str	r3, [r7, #0]
 8001f54:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, PP_SELECT_Pin|CP_SELECT_Pin|EV_Charge_Pin, GPIO_PIN_RESET);
 8001f56:	2200      	movs	r2, #0
 8001f58:	211c      	movs	r1, #28
 8001f5a:	4836      	ldr	r0, [pc, #216]	@ (8002034 <MX_GPIO_Init+0x13c>)
 8001f5c:	f003 fac0 	bl	80054e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
 8001f60:	2200      	movs	r2, #0
 8001f62:	2120      	movs	r1, #32
 8001f64:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001f68:	f003 faba 	bl	80054e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, QCA_RS_Pin|SPI2_CS_Pin, GPIO_PIN_RESET);
 8001f6c:	2200      	movs	r2, #0
 8001f6e:	f241 0104 	movw	r1, #4100	@ 0x1004
 8001f72:	4831      	ldr	r0, [pc, #196]	@ (8002038 <MX_GPIO_Init+0x140>)
 8001f74:	f003 fab4 	bl	80054e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : BUTTON_INT_Pin */
  GPIO_InitStruct.Pin = BUTTON_INT_Pin;
 8001f78:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001f7c:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001f7e:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8001f82:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f84:	2300      	movs	r3, #0
 8001f86:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(BUTTON_INT_GPIO_Port, &GPIO_InitStruct);
 8001f88:	f107 030c 	add.w	r3, r7, #12
 8001f8c:	4619      	mov	r1, r3
 8001f8e:	4829      	ldr	r0, [pc, #164]	@ (8002034 <MX_GPIO_Init+0x13c>)
 8001f90:	f003 f924 	bl	80051dc <HAL_GPIO_Init>

  /*Configure GPIO pins : PP_SELECT_Pin CP_SELECT_Pin EV_Charge_Pin */
  GPIO_InitStruct.Pin = PP_SELECT_Pin|CP_SELECT_Pin|EV_Charge_Pin;
 8001f94:	231c      	movs	r3, #28
 8001f96:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f98:	2301      	movs	r3, #1
 8001f9a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f9c:	2300      	movs	r3, #0
 8001f9e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001fa0:	2300      	movs	r3, #0
 8001fa2:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fa4:	f107 030c 	add.w	r3, r7, #12
 8001fa8:	4619      	mov	r1, r3
 8001faa:	4822      	ldr	r0, [pc, #136]	@ (8002034 <MX_GPIO_Init+0x13c>)
 8001fac:	f003 f916 	bl	80051dc <HAL_GPIO_Init>

  /*Configure GPIO pin : LED1_Pin */
  GPIO_InitStruct.Pin = LED1_Pin;
 8001fb0:	2320      	movs	r3, #32
 8001fb2:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001fb4:	2301      	movs	r3, #1
 8001fb6:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fb8:	2300      	movs	r3, #0
 8001fba:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001fbc:	2300      	movs	r3, #0
 8001fbe:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(LED1_GPIO_Port, &GPIO_InitStruct);
 8001fc0:	f107 030c 	add.w	r3, r7, #12
 8001fc4:	4619      	mov	r1, r3
 8001fc6:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001fca:	f003 f907 	bl	80051dc <HAL_GPIO_Init>

  /*Configure GPIO pin : QCA_INT_Pin */
  GPIO_InitStruct.Pin = QCA_INT_Pin;
 8001fce:	2302      	movs	r3, #2
 8001fd0:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001fd2:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8001fd6:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fd8:	2300      	movs	r3, #0
 8001fda:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(QCA_INT_GPIO_Port, &GPIO_InitStruct);
 8001fdc:	f107 030c 	add.w	r3, r7, #12
 8001fe0:	4619      	mov	r1, r3
 8001fe2:	4815      	ldr	r0, [pc, #84]	@ (8002038 <MX_GPIO_Init+0x140>)
 8001fe4:	f003 f8fa 	bl	80051dc <HAL_GPIO_Init>

  /*Configure GPIO pins : QCA_RS_Pin SPI2_CS_Pin */
  GPIO_InitStruct.Pin = QCA_RS_Pin|SPI2_CS_Pin;
 8001fe8:	f241 0304 	movw	r3, #4100	@ 0x1004
 8001fec:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001fee:	2301      	movs	r3, #1
 8001ff0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ff2:	2300      	movs	r3, #0
 8001ff4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ff6:	2300      	movs	r3, #0
 8001ff8:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ffa:	f107 030c 	add.w	r3, r7, #12
 8001ffe:	4619      	mov	r1, r3
 8002000:	480d      	ldr	r0, [pc, #52]	@ (8002038 <MX_GPIO_Init+0x140>)
 8002002:	f003 f8eb 	bl	80051dc <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
 8002006:	2200      	movs	r2, #0
 8002008:	2100      	movs	r1, #0
 800200a:	2007      	movs	r0, #7
 800200c:	f002 fa63 	bl	80044d6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 8002010:	2007      	movs	r0, #7
 8002012:	f002 fa7a 	bl	800450a <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8002016:	2200      	movs	r2, #0
 8002018:	2100      	movs	r1, #0
 800201a:	2028      	movs	r0, #40	@ 0x28
 800201c:	f002 fa5b 	bl	80044d6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8002020:	2028      	movs	r0, #40	@ 0x28
 8002022:	f002 fa72 	bl	800450a <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8002026:	bf00      	nop
 8002028:	3720      	adds	r7, #32
 800202a:	46bd      	mov	sp, r7
 800202c:	bd80      	pop	{r7, pc}
 800202e:	bf00      	nop
 8002030:	40021000 	.word	0x40021000
 8002034:	48000800 	.word	0x48000800
 8002038:	48000400 	.word	0x48000400

0800203c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800203c:	b480      	push	{r7}
 800203e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002040:	b672      	cpsid	i
}
 8002042:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8002044:	bf00      	nop
 8002046:	e7fd      	b.n	8002044 <Error_Handler+0x8>

08002048 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002048:	b580      	push	{r7, lr}
 800204a:	b082      	sub	sp, #8
 800204c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800204e:	4b0f      	ldr	r3, [pc, #60]	@ (800208c <HAL_MspInit+0x44>)
 8002050:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002052:	4a0e      	ldr	r2, [pc, #56]	@ (800208c <HAL_MspInit+0x44>)
 8002054:	f043 0301 	orr.w	r3, r3, #1
 8002058:	6613      	str	r3, [r2, #96]	@ 0x60
 800205a:	4b0c      	ldr	r3, [pc, #48]	@ (800208c <HAL_MspInit+0x44>)
 800205c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800205e:	f003 0301 	and.w	r3, r3, #1
 8002062:	607b      	str	r3, [r7, #4]
 8002064:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002066:	4b09      	ldr	r3, [pc, #36]	@ (800208c <HAL_MspInit+0x44>)
 8002068:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800206a:	4a08      	ldr	r2, [pc, #32]	@ (800208c <HAL_MspInit+0x44>)
 800206c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002070:	6593      	str	r3, [r2, #88]	@ 0x58
 8002072:	4b06      	ldr	r3, [pc, #24]	@ (800208c <HAL_MspInit+0x44>)
 8002074:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002076:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800207a:	603b      	str	r3, [r7, #0]
 800207c:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/

  /** Disable the internal Pull-Up in Dead Battery pins of UCPD peripheral
  */
  HAL_PWREx_DisableUCPDDeadBattery();
 800207e:	f003 fb03 	bl	8005688 <HAL_PWREx_DisableUCPDDeadBattery>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002082:	bf00      	nop
 8002084:	3708      	adds	r7, #8
 8002086:	46bd      	mov	sp, r7
 8002088:	bd80      	pop	{r7, pc}
 800208a:	bf00      	nop
 800208c:	40021000 	.word	0x40021000

08002090 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8002090:	b580      	push	{r7, lr}
 8002092:	b09e      	sub	sp, #120	@ 0x78
 8002094:	af00      	add	r7, sp, #0
 8002096:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002098:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800209c:	2200      	movs	r2, #0
 800209e:	601a      	str	r2, [r3, #0]
 80020a0:	605a      	str	r2, [r3, #4]
 80020a2:	609a      	str	r2, [r3, #8]
 80020a4:	60da      	str	r2, [r3, #12]
 80020a6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80020a8:	f107 0310 	add.w	r3, r7, #16
 80020ac:	2254      	movs	r2, #84	@ 0x54
 80020ae:	2100      	movs	r1, #0
 80020b0:	4618      	mov	r0, r3
 80020b2:	f009 fcea 	bl	800ba8a <memset>
  if(hadc->Instance==ADC1)
 80020b6:	687b      	ldr	r3, [r7, #4]
 80020b8:	681b      	ldr	r3, [r3, #0]
 80020ba:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80020be:	d13c      	bne.n	800213a <HAL_ADC_MspInit+0xaa>

  /* USER CODE END ADC1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC12;
 80020c0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80020c4:	613b      	str	r3, [r7, #16]
    PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 80020c6:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 80020ca:	657b      	str	r3, [r7, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80020cc:	f107 0310 	add.w	r3, r7, #16
 80020d0:	4618      	mov	r0, r3
 80020d2:	f004 f81d 	bl	8006110 <HAL_RCCEx_PeriphCLKConfig>
 80020d6:	4603      	mov	r3, r0
 80020d8:	2b00      	cmp	r3, #0
 80020da:	d001      	beq.n	80020e0 <HAL_ADC_MspInit+0x50>
    {
      Error_Handler();
 80020dc:	f7ff ffae 	bl	800203c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_ADC12_CLK_ENABLE();
 80020e0:	4b18      	ldr	r3, [pc, #96]	@ (8002144 <HAL_ADC_MspInit+0xb4>)
 80020e2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80020e4:	4a17      	ldr	r2, [pc, #92]	@ (8002144 <HAL_ADC_MspInit+0xb4>)
 80020e6:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80020ea:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80020ec:	4b15      	ldr	r3, [pc, #84]	@ (8002144 <HAL_ADC_MspInit+0xb4>)
 80020ee:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80020f0:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80020f4:	60fb      	str	r3, [r7, #12]
 80020f6:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80020f8:	4b12      	ldr	r3, [pc, #72]	@ (8002144 <HAL_ADC_MspInit+0xb4>)
 80020fa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80020fc:	4a11      	ldr	r2, [pc, #68]	@ (8002144 <HAL_ADC_MspInit+0xb4>)
 80020fe:	f043 0301 	orr.w	r3, r3, #1
 8002102:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002104:	4b0f      	ldr	r3, [pc, #60]	@ (8002144 <HAL_ADC_MspInit+0xb4>)
 8002106:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002108:	f003 0301 	and.w	r3, r3, #1
 800210c:	60bb      	str	r3, [r7, #8]
 800210e:	68bb      	ldr	r3, [r7, #8]
    /**ADC1 GPIO Configuration
    PA0     ------> ADC1_IN1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002110:	2301      	movs	r3, #1
 8002112:	667b      	str	r3, [r7, #100]	@ 0x64
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002114:	2303      	movs	r3, #3
 8002116:	66bb      	str	r3, [r7, #104]	@ 0x68
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002118:	2300      	movs	r3, #0
 800211a:	66fb      	str	r3, [r7, #108]	@ 0x6c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800211c:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 8002120:	4619      	mov	r1, r3
 8002122:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002126:	f003 f859 	bl	80051dc <HAL_GPIO_Init>

    /* ADC1 interrupt Init */
    HAL_NVIC_SetPriority(ADC1_2_IRQn, 0, 0);
 800212a:	2200      	movs	r2, #0
 800212c:	2100      	movs	r1, #0
 800212e:	2012      	movs	r0, #18
 8002130:	f002 f9d1 	bl	80044d6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
 8002134:	2012      	movs	r0, #18
 8002136:	f002 f9e8 	bl	800450a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 800213a:	bf00      	nop
 800213c:	3778      	adds	r7, #120	@ 0x78
 800213e:	46bd      	mov	sp, r7
 8002140:	bd80      	pop	{r7, pc}
 8002142:	bf00      	nop
 8002144:	40021000 	.word	0x40021000

08002148 <HAL_FDCAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hfdcan: FDCAN handle pointer
* @retval None
*/
void HAL_FDCAN_MspInit(FDCAN_HandleTypeDef* hfdcan)
{
 8002148:	b580      	push	{r7, lr}
 800214a:	b09e      	sub	sp, #120	@ 0x78
 800214c:	af00      	add	r7, sp, #0
 800214e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002150:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 8002154:	2200      	movs	r2, #0
 8002156:	601a      	str	r2, [r3, #0]
 8002158:	605a      	str	r2, [r3, #4]
 800215a:	609a      	str	r2, [r3, #8]
 800215c:	60da      	str	r2, [r3, #12]
 800215e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002160:	f107 0310 	add.w	r3, r7, #16
 8002164:	2254      	movs	r2, #84	@ 0x54
 8002166:	2100      	movs	r1, #0
 8002168:	4618      	mov	r0, r3
 800216a:	f009 fc8e 	bl	800ba8a <memset>
  if(hfdcan->Instance==FDCAN2)
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	681b      	ldr	r3, [r3, #0]
 8002172:	4a23      	ldr	r2, [pc, #140]	@ (8002200 <HAL_FDCAN_MspInit+0xb8>)
 8002174:	4293      	cmp	r3, r2
 8002176:	d13f      	bne.n	80021f8 <HAL_FDCAN_MspInit+0xb0>

  /* USER CODE END FDCAN2_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_FDCAN;
 8002178:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800217c:	613b      	str	r3, [r7, #16]
    PeriphClkInit.FdcanClockSelection = RCC_FDCANCLKSOURCE_PCLK1;
 800217e:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8002182:	64bb      	str	r3, [r7, #72]	@ 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002184:	f107 0310 	add.w	r3, r7, #16
 8002188:	4618      	mov	r0, r3
 800218a:	f003 ffc1 	bl	8006110 <HAL_RCCEx_PeriphCLKConfig>
 800218e:	4603      	mov	r3, r0
 8002190:	2b00      	cmp	r3, #0
 8002192:	d001      	beq.n	8002198 <HAL_FDCAN_MspInit+0x50>
    {
      Error_Handler();
 8002194:	f7ff ff52 	bl	800203c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_FDCAN_CLK_ENABLE();
 8002198:	4b1a      	ldr	r3, [pc, #104]	@ (8002204 <HAL_FDCAN_MspInit+0xbc>)
 800219a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800219c:	4a19      	ldr	r2, [pc, #100]	@ (8002204 <HAL_FDCAN_MspInit+0xbc>)
 800219e:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80021a2:	6593      	str	r3, [r2, #88]	@ 0x58
 80021a4:	4b17      	ldr	r3, [pc, #92]	@ (8002204 <HAL_FDCAN_MspInit+0xbc>)
 80021a6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80021a8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80021ac:	60fb      	str	r3, [r7, #12]
 80021ae:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80021b0:	4b14      	ldr	r3, [pc, #80]	@ (8002204 <HAL_FDCAN_MspInit+0xbc>)
 80021b2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80021b4:	4a13      	ldr	r2, [pc, #76]	@ (8002204 <HAL_FDCAN_MspInit+0xbc>)
 80021b6:	f043 0302 	orr.w	r3, r3, #2
 80021ba:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80021bc:	4b11      	ldr	r3, [pc, #68]	@ (8002204 <HAL_FDCAN_MspInit+0xbc>)
 80021be:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80021c0:	f003 0302 	and.w	r3, r3, #2
 80021c4:	60bb      	str	r3, [r7, #8]
 80021c6:	68bb      	ldr	r3, [r7, #8]
    /**FDCAN2 GPIO Configuration
    PB5     ------> FDCAN2_RX
    PB6     ------> FDCAN2_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80021c8:	2360      	movs	r3, #96	@ 0x60
 80021ca:	667b      	str	r3, [r7, #100]	@ 0x64
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021cc:	2302      	movs	r3, #2
 80021ce:	66bb      	str	r3, [r7, #104]	@ 0x68
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021d0:	2300      	movs	r3, #0
 80021d2:	66fb      	str	r3, [r7, #108]	@ 0x6c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80021d4:	2300      	movs	r3, #0
 80021d6:	673b      	str	r3, [r7, #112]	@ 0x70
    GPIO_InitStruct.Alternate = GPIO_AF9_FDCAN2;
 80021d8:	2309      	movs	r3, #9
 80021da:	677b      	str	r3, [r7, #116]	@ 0x74
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80021dc:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 80021e0:	4619      	mov	r1, r3
 80021e2:	4809      	ldr	r0, [pc, #36]	@ (8002208 <HAL_FDCAN_MspInit+0xc0>)
 80021e4:	f002 fffa 	bl	80051dc <HAL_GPIO_Init>

    /* FDCAN2 interrupt Init */
    HAL_NVIC_SetPriority(FDCAN2_IT0_IRQn, 0, 0);
 80021e8:	2200      	movs	r2, #0
 80021ea:	2100      	movs	r1, #0
 80021ec:	2056      	movs	r0, #86	@ 0x56
 80021ee:	f002 f972 	bl	80044d6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(FDCAN2_IT0_IRQn);
 80021f2:	2056      	movs	r0, #86	@ 0x56
 80021f4:	f002 f989 	bl	800450a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN FDCAN2_MspInit 1 */

  /* USER CODE END FDCAN2_MspInit 1 */
  }

}
 80021f8:	bf00      	nop
 80021fa:	3778      	adds	r7, #120	@ 0x78
 80021fc:	46bd      	mov	sp, r7
 80021fe:	bd80      	pop	{r7, pc}
 8002200:	40006800 	.word	0x40006800
 8002204:	40021000 	.word	0x40021000
 8002208:	48000400 	.word	0x48000400

0800220c <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 800220c:	b580      	push	{r7, lr}
 800220e:	b08a      	sub	sp, #40	@ 0x28
 8002210:	af00      	add	r7, sp, #0
 8002212:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002214:	f107 0314 	add.w	r3, r7, #20
 8002218:	2200      	movs	r2, #0
 800221a:	601a      	str	r2, [r3, #0]
 800221c:	605a      	str	r2, [r3, #4]
 800221e:	609a      	str	r2, [r3, #8]
 8002220:	60da      	str	r2, [r3, #12]
 8002222:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI2)
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	681b      	ldr	r3, [r3, #0]
 8002228:	4a1b      	ldr	r2, [pc, #108]	@ (8002298 <HAL_SPI_MspInit+0x8c>)
 800222a:	4293      	cmp	r3, r2
 800222c:	d130      	bne.n	8002290 <HAL_SPI_MspInit+0x84>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 800222e:	4b1b      	ldr	r3, [pc, #108]	@ (800229c <HAL_SPI_MspInit+0x90>)
 8002230:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002232:	4a1a      	ldr	r2, [pc, #104]	@ (800229c <HAL_SPI_MspInit+0x90>)
 8002234:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002238:	6593      	str	r3, [r2, #88]	@ 0x58
 800223a:	4b18      	ldr	r3, [pc, #96]	@ (800229c <HAL_SPI_MspInit+0x90>)
 800223c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800223e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002242:	613b      	str	r3, [r7, #16]
 8002244:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002246:	4b15      	ldr	r3, [pc, #84]	@ (800229c <HAL_SPI_MspInit+0x90>)
 8002248:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800224a:	4a14      	ldr	r2, [pc, #80]	@ (800229c <HAL_SPI_MspInit+0x90>)
 800224c:	f043 0302 	orr.w	r3, r3, #2
 8002250:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002252:	4b12      	ldr	r3, [pc, #72]	@ (800229c <HAL_SPI_MspInit+0x90>)
 8002254:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002256:	f003 0302 	and.w	r3, r3, #2
 800225a:	60fb      	str	r3, [r7, #12]
 800225c:	68fb      	ldr	r3, [r7, #12]
    /**SPI2 GPIO Configuration
    PB13     ------> SPI2_SCK
    PB14     ------> SPI2_MISO
    PB15     ------> SPI2_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 800225e:	f44f 4360 	mov.w	r3, #57344	@ 0xe000
 8002262:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002264:	2302      	movs	r3, #2
 8002266:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002268:	2300      	movs	r3, #0
 800226a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800226c:	2300      	movs	r3, #0
 800226e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8002270:	2305      	movs	r3, #5
 8002272:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002274:	f107 0314 	add.w	r3, r7, #20
 8002278:	4619      	mov	r1, r3
 800227a:	4809      	ldr	r0, [pc, #36]	@ (80022a0 <HAL_SPI_MspInit+0x94>)
 800227c:	f002 ffae 	bl	80051dc <HAL_GPIO_Init>

    /* SPI2 interrupt Init */
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 8002280:	2200      	movs	r2, #0
 8002282:	2100      	movs	r1, #0
 8002284:	2024      	movs	r0, #36	@ 0x24
 8002286:	f002 f926 	bl	80044d6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 800228a:	2024      	movs	r0, #36	@ 0x24
 800228c:	f002 f93d 	bl	800450a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 8002290:	bf00      	nop
 8002292:	3728      	adds	r7, #40	@ 0x28
 8002294:	46bd      	mov	sp, r7
 8002296:	bd80      	pop	{r7, pc}
 8002298:	40003800 	.word	0x40003800
 800229c:	40021000 	.word	0x40021000
 80022a0:	48000400 	.word	0x48000400

080022a4 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 80022a4:	b580      	push	{r7, lr}
 80022a6:	b084      	sub	sp, #16
 80022a8:	af00      	add	r7, sp, #0
 80022aa:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM1)
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	681b      	ldr	r3, [r3, #0]
 80022b0:	4a15      	ldr	r2, [pc, #84]	@ (8002308 <HAL_TIM_PWM_MspInit+0x64>)
 80022b2:	4293      	cmp	r3, r2
 80022b4:	d123      	bne.n	80022fe <HAL_TIM_PWM_MspInit+0x5a>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80022b6:	4b15      	ldr	r3, [pc, #84]	@ (800230c <HAL_TIM_PWM_MspInit+0x68>)
 80022b8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80022ba:	4a14      	ldr	r2, [pc, #80]	@ (800230c <HAL_TIM_PWM_MspInit+0x68>)
 80022bc:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 80022c0:	6613      	str	r3, [r2, #96]	@ 0x60
 80022c2:	4b12      	ldr	r3, [pc, #72]	@ (800230c <HAL_TIM_PWM_MspInit+0x68>)
 80022c4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80022c6:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80022ca:	60fb      	str	r3, [r7, #12]
 80022cc:	68fb      	ldr	r3, [r7, #12]
    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_BRK_TIM15_IRQn, 0, 0);
 80022ce:	2200      	movs	r2, #0
 80022d0:	2100      	movs	r1, #0
 80022d2:	2018      	movs	r0, #24
 80022d4:	f002 f8ff 	bl	80044d6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_BRK_TIM15_IRQn);
 80022d8:	2018      	movs	r0, #24
 80022da:	f002 f916 	bl	800450a <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, 0, 0);
 80022de:	2200      	movs	r2, #0
 80022e0:	2100      	movs	r1, #0
 80022e2:	2019      	movs	r0, #25
 80022e4:	f002 f8f7 	bl	80044d6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 80022e8:	2019      	movs	r0, #25
 80022ea:	f002 f90e 	bl	800450a <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(TIM1_TRG_COM_TIM17_IRQn, 0, 0);
 80022ee:	2200      	movs	r2, #0
 80022f0:	2100      	movs	r1, #0
 80022f2:	201a      	movs	r0, #26
 80022f4:	f002 f8ef 	bl	80044d6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 80022f8:	201a      	movs	r0, #26
 80022fa:	f002 f906 	bl	800450a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 80022fe:	bf00      	nop
 8002300:	3710      	adds	r7, #16
 8002302:	46bd      	mov	sp, r7
 8002304:	bd80      	pop	{r7, pc}
 8002306:	bf00      	nop
 8002308:	40012c00 	.word	0x40012c00
 800230c:	40021000 	.word	0x40021000

08002310 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002310:	b580      	push	{r7, lr}
 8002312:	b084      	sub	sp, #16
 8002314:	af00      	add	r7, sp, #0
 8002316:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM17)
 8002318:	687b      	ldr	r3, [r7, #4]
 800231a:	681b      	ldr	r3, [r3, #0]
 800231c:	4a0d      	ldr	r2, [pc, #52]	@ (8002354 <HAL_TIM_Base_MspInit+0x44>)
 800231e:	4293      	cmp	r3, r2
 8002320:	d113      	bne.n	800234a <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM17_MspInit 0 */

  /* USER CODE END TIM17_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM17_CLK_ENABLE();
 8002322:	4b0d      	ldr	r3, [pc, #52]	@ (8002358 <HAL_TIM_Base_MspInit+0x48>)
 8002324:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002326:	4a0c      	ldr	r2, [pc, #48]	@ (8002358 <HAL_TIM_Base_MspInit+0x48>)
 8002328:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800232c:	6613      	str	r3, [r2, #96]	@ 0x60
 800232e:	4b0a      	ldr	r3, [pc, #40]	@ (8002358 <HAL_TIM_Base_MspInit+0x48>)
 8002330:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002332:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002336:	60fb      	str	r3, [r7, #12]
 8002338:	68fb      	ldr	r3, [r7, #12]
    /* TIM17 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_TRG_COM_TIM17_IRQn, 0, 0);
 800233a:	2200      	movs	r2, #0
 800233c:	2100      	movs	r1, #0
 800233e:	201a      	movs	r0, #26
 8002340:	f002 f8c9 	bl	80044d6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 8002344:	201a      	movs	r0, #26
 8002346:	f002 f8e0 	bl	800450a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM17_MspInit 1 */

  /* USER CODE END TIM17_MspInit 1 */
  }

}
 800234a:	bf00      	nop
 800234c:	3710      	adds	r7, #16
 800234e:	46bd      	mov	sp, r7
 8002350:	bd80      	pop	{r7, pc}
 8002352:	bf00      	nop
 8002354:	40014800 	.word	0x40014800
 8002358:	40021000 	.word	0x40021000

0800235c <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 800235c:	b580      	push	{r7, lr}
 800235e:	b088      	sub	sp, #32
 8002360:	af00      	add	r7, sp, #0
 8002362:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002364:	f107 030c 	add.w	r3, r7, #12
 8002368:	2200      	movs	r2, #0
 800236a:	601a      	str	r2, [r3, #0]
 800236c:	605a      	str	r2, [r3, #4]
 800236e:	609a      	str	r2, [r3, #8]
 8002370:	60da      	str	r2, [r3, #12]
 8002372:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	4a11      	ldr	r2, [pc, #68]	@ (80023c0 <HAL_TIM_MspPostInit+0x64>)
 800237a:	4293      	cmp	r3, r2
 800237c:	d11b      	bne.n	80023b6 <HAL_TIM_MspPostInit+0x5a>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800237e:	4b11      	ldr	r3, [pc, #68]	@ (80023c4 <HAL_TIM_MspPostInit+0x68>)
 8002380:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002382:	4a10      	ldr	r2, [pc, #64]	@ (80023c4 <HAL_TIM_MspPostInit+0x68>)
 8002384:	f043 0304 	orr.w	r3, r3, #4
 8002388:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800238a:	4b0e      	ldr	r3, [pc, #56]	@ (80023c4 <HAL_TIM_MspPostInit+0x68>)
 800238c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800238e:	f003 0304 	and.w	r3, r3, #4
 8002392:	60bb      	str	r3, [r7, #8]
 8002394:	68bb      	ldr	r3, [r7, #8]
    /**TIM1 GPIO Configuration
    PC0     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002396:	2301      	movs	r3, #1
 8002398:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800239a:	2302      	movs	r3, #2
 800239c:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800239e:	2300      	movs	r3, #0
 80023a0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80023a2:	2300      	movs	r3, #0
 80023a4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM1;
 80023a6:	2302      	movs	r3, #2
 80023a8:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023aa:	f107 030c 	add.w	r3, r7, #12
 80023ae:	4619      	mov	r1, r3
 80023b0:	4805      	ldr	r0, [pc, #20]	@ (80023c8 <HAL_TIM_MspPostInit+0x6c>)
 80023b2:	f002 ff13 	bl	80051dc <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM1_MspPostInit 1 */

  /* USER CODE END TIM1_MspPostInit 1 */
  }

}
 80023b6:	bf00      	nop
 80023b8:	3720      	adds	r7, #32
 80023ba:	46bd      	mov	sp, r7
 80023bc:	bd80      	pop	{r7, pc}
 80023be:	bf00      	nop
 80023c0:	40012c00 	.word	0x40012c00
 80023c4:	40021000 	.word	0x40021000
 80023c8:	48000800 	.word	0x48000800

080023cc <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80023cc:	b580      	push	{r7, lr}
 80023ce:	b0a6      	sub	sp, #152	@ 0x98
 80023d0:	af00      	add	r7, sp, #0
 80023d2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80023d4:	f107 0384 	add.w	r3, r7, #132	@ 0x84
 80023d8:	2200      	movs	r2, #0
 80023da:	601a      	str	r2, [r3, #0]
 80023dc:	605a      	str	r2, [r3, #4]
 80023de:	609a      	str	r2, [r3, #8]
 80023e0:	60da      	str	r2, [r3, #12]
 80023e2:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80023e4:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80023e8:	2254      	movs	r2, #84	@ 0x54
 80023ea:	2100      	movs	r1, #0
 80023ec:	4618      	mov	r0, r3
 80023ee:	f009 fb4c 	bl	800ba8a <memset>
  if(huart->Instance==UART4)
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	681b      	ldr	r3, [r3, #0]
 80023f6:	4a87      	ldr	r2, [pc, #540]	@ (8002614 <HAL_UART_MspInit+0x248>)
 80023f8:	4293      	cmp	r3, r2
 80023fa:	d165      	bne.n	80024c8 <HAL_UART_MspInit+0xfc>

  /* USER CODE END UART4_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_UART4;
 80023fc:	2308      	movs	r3, #8
 80023fe:	633b      	str	r3, [r7, #48]	@ 0x30
    PeriphClkInit.Uart4ClockSelection = RCC_UART4CLKSOURCE_PCLK1;
 8002400:	2300      	movs	r3, #0
 8002402:	643b      	str	r3, [r7, #64]	@ 0x40
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002404:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8002408:	4618      	mov	r0, r3
 800240a:	f003 fe81 	bl	8006110 <HAL_RCCEx_PeriphCLKConfig>
 800240e:	4603      	mov	r3, r0
 8002410:	2b00      	cmp	r3, #0
 8002412:	d001      	beq.n	8002418 <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 8002414:	f7ff fe12 	bl	800203c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_UART4_CLK_ENABLE();
 8002418:	4b7f      	ldr	r3, [pc, #508]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 800241a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800241c:	4a7e      	ldr	r2, [pc, #504]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 800241e:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8002422:	6593      	str	r3, [r2, #88]	@ 0x58
 8002424:	4b7c      	ldr	r3, [pc, #496]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 8002426:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002428:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800242c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800242e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002430:	4b79      	ldr	r3, [pc, #484]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 8002432:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002434:	4a78      	ldr	r2, [pc, #480]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 8002436:	f043 0304 	orr.w	r3, r3, #4
 800243a:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800243c:	4b76      	ldr	r3, [pc, #472]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 800243e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002440:	f003 0304 	and.w	r3, r3, #4
 8002444:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002446:	6abb      	ldr	r3, [r7, #40]	@ 0x28
    /**UART4 GPIO Configuration
    PC10     ------> UART4_TX
    PC11     ------> UART4_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 8002448:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 800244c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002450:	2302      	movs	r3, #2
 8002452:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002456:	2300      	movs	r3, #0
 8002458:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800245c:	2300      	movs	r3, #0
 800245e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
    GPIO_InitStruct.Alternate = GPIO_AF5_UART4;
 8002462:	2305      	movs	r3, #5
 8002464:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002468:	f107 0384 	add.w	r3, r7, #132	@ 0x84
 800246c:	4619      	mov	r1, r3
 800246e:	486b      	ldr	r0, [pc, #428]	@ (800261c <HAL_UART_MspInit+0x250>)
 8002470:	f002 feb4 	bl	80051dc <HAL_GPIO_Init>

    /* UART4 DMA Init */
    /* UART4_RX Init */
    hdma_uart4_rx.Instance = DMA1_Channel1;
 8002474:	4b6a      	ldr	r3, [pc, #424]	@ (8002620 <HAL_UART_MspInit+0x254>)
 8002476:	4a6b      	ldr	r2, [pc, #428]	@ (8002624 <HAL_UART_MspInit+0x258>)
 8002478:	601a      	str	r2, [r3, #0]
    hdma_uart4_rx.Init.Request = DMA_REQUEST_UART4_RX;
 800247a:	4b69      	ldr	r3, [pc, #420]	@ (8002620 <HAL_UART_MspInit+0x254>)
 800247c:	221e      	movs	r2, #30
 800247e:	605a      	str	r2, [r3, #4]
    hdma_uart4_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8002480:	4b67      	ldr	r3, [pc, #412]	@ (8002620 <HAL_UART_MspInit+0x254>)
 8002482:	2200      	movs	r2, #0
 8002484:	609a      	str	r2, [r3, #8]
    hdma_uart4_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002486:	4b66      	ldr	r3, [pc, #408]	@ (8002620 <HAL_UART_MspInit+0x254>)
 8002488:	2200      	movs	r2, #0
 800248a:	60da      	str	r2, [r3, #12]
    hdma_uart4_rx.Init.MemInc = DMA_MINC_ENABLE;
 800248c:	4b64      	ldr	r3, [pc, #400]	@ (8002620 <HAL_UART_MspInit+0x254>)
 800248e:	2280      	movs	r2, #128	@ 0x80
 8002490:	611a      	str	r2, [r3, #16]
    hdma_uart4_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002492:	4b63      	ldr	r3, [pc, #396]	@ (8002620 <HAL_UART_MspInit+0x254>)
 8002494:	2200      	movs	r2, #0
 8002496:	615a      	str	r2, [r3, #20]
    hdma_uart4_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002498:	4b61      	ldr	r3, [pc, #388]	@ (8002620 <HAL_UART_MspInit+0x254>)
 800249a:	2200      	movs	r2, #0
 800249c:	619a      	str	r2, [r3, #24]
    hdma_uart4_rx.Init.Mode = DMA_NORMAL;
 800249e:	4b60      	ldr	r3, [pc, #384]	@ (8002620 <HAL_UART_MspInit+0x254>)
 80024a0:	2200      	movs	r2, #0
 80024a2:	61da      	str	r2, [r3, #28]
    hdma_uart4_rx.Init.Priority = DMA_PRIORITY_LOW;
 80024a4:	4b5e      	ldr	r3, [pc, #376]	@ (8002620 <HAL_UART_MspInit+0x254>)
 80024a6:	2200      	movs	r2, #0
 80024a8:	621a      	str	r2, [r3, #32]
    if (HAL_DMA_Init(&hdma_uart4_rx) != HAL_OK)
 80024aa:	485d      	ldr	r0, [pc, #372]	@ (8002620 <HAL_UART_MspInit+0x254>)
 80024ac:	f002 f848 	bl	8004540 <HAL_DMA_Init>
 80024b0:	4603      	mov	r3, r0
 80024b2:	2b00      	cmp	r3, #0
 80024b4:	d001      	beq.n	80024ba <HAL_UART_MspInit+0xee>
    {
      Error_Handler();
 80024b6:	f7ff fdc1 	bl	800203c <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmarx,hdma_uart4_rx);
 80024ba:	687b      	ldr	r3, [r7, #4]
 80024bc:	4a58      	ldr	r2, [pc, #352]	@ (8002620 <HAL_UART_MspInit+0x254>)
 80024be:	67da      	str	r2, [r3, #124]	@ 0x7c
 80024c0:	4a57      	ldr	r2, [pc, #348]	@ (8002620 <HAL_UART_MspInit+0x254>)
 80024c2:	687b      	ldr	r3, [r7, #4]
 80024c4:	6293      	str	r3, [r2, #40]	@ 0x28
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 80024c6:	e11d      	b.n	8002704 <HAL_UART_MspInit+0x338>
  else if(huart->Instance==USART1)
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	681b      	ldr	r3, [r3, #0]
 80024cc:	4a56      	ldr	r2, [pc, #344]	@ (8002628 <HAL_UART_MspInit+0x25c>)
 80024ce:	4293      	cmp	r3, r2
 80024d0:	d15e      	bne.n	8002590 <HAL_UART_MspInit+0x1c4>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 80024d2:	2301      	movs	r3, #1
 80024d4:	633b      	str	r3, [r7, #48]	@ 0x30
    PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 80024d6:	2300      	movs	r3, #0
 80024d8:	637b      	str	r3, [r7, #52]	@ 0x34
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80024da:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80024de:	4618      	mov	r0, r3
 80024e0:	f003 fe16 	bl	8006110 <HAL_RCCEx_PeriphCLKConfig>
 80024e4:	4603      	mov	r3, r0
 80024e6:	2b00      	cmp	r3, #0
 80024e8:	d001      	beq.n	80024ee <HAL_UART_MspInit+0x122>
      Error_Handler();
 80024ea:	f7ff fda7 	bl	800203c <Error_Handler>
    __HAL_RCC_USART1_CLK_ENABLE();
 80024ee:	4b4a      	ldr	r3, [pc, #296]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 80024f0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80024f2:	4a49      	ldr	r2, [pc, #292]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 80024f4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80024f8:	6613      	str	r3, [r2, #96]	@ 0x60
 80024fa:	4b47      	ldr	r3, [pc, #284]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 80024fc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80024fe:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002502:	627b      	str	r3, [r7, #36]	@ 0x24
 8002504:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002506:	4b44      	ldr	r3, [pc, #272]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 8002508:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800250a:	4a43      	ldr	r2, [pc, #268]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 800250c:	f043 0304 	orr.w	r3, r3, #4
 8002510:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002512:	4b41      	ldr	r3, [pc, #260]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 8002514:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002516:	f003 0304 	and.w	r3, r3, #4
 800251a:	623b      	str	r3, [r7, #32]
 800251c:	6a3b      	ldr	r3, [r7, #32]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800251e:	4b3e      	ldr	r3, [pc, #248]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 8002520:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002522:	4a3d      	ldr	r2, [pc, #244]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 8002524:	f043 0301 	orr.w	r3, r3, #1
 8002528:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800252a:	4b3b      	ldr	r3, [pc, #236]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 800252c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800252e:	f003 0301 	and.w	r3, r3, #1
 8002532:	61fb      	str	r3, [r7, #28]
 8002534:	69fb      	ldr	r3, [r7, #28]
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 8002536:	2320      	movs	r3, #32
 8002538:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800253c:	2302      	movs	r3, #2
 800253e:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002542:	2300      	movs	r3, #0
 8002544:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002548:	2300      	movs	r3, #0
 800254a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800254e:	2307      	movs	r3, #7
 8002550:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002554:	f107 0384 	add.w	r3, r7, #132	@ 0x84
 8002558:	4619      	mov	r1, r3
 800255a:	4830      	ldr	r0, [pc, #192]	@ (800261c <HAL_UART_MspInit+0x250>)
 800255c:	f002 fe3e 	bl	80051dc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8002560:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8002564:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002568:	2302      	movs	r3, #2
 800256a:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800256e:	2300      	movs	r3, #0
 8002570:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002574:	2300      	movs	r3, #0
 8002576:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800257a:	2307      	movs	r3, #7
 800257c:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002580:	f107 0384 	add.w	r3, r7, #132	@ 0x84
 8002584:	4619      	mov	r1, r3
 8002586:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800258a:	f002 fe27 	bl	80051dc <HAL_GPIO_Init>
}
 800258e:	e0b9      	b.n	8002704 <HAL_UART_MspInit+0x338>
  else if(huart->Instance==USART2)
 8002590:	687b      	ldr	r3, [r7, #4]
 8002592:	681b      	ldr	r3, [r3, #0]
 8002594:	4a25      	ldr	r2, [pc, #148]	@ (800262c <HAL_UART_MspInit+0x260>)
 8002596:	4293      	cmp	r3, r2
 8002598:	d14a      	bne.n	8002630 <HAL_UART_MspInit+0x264>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 800259a:	2302      	movs	r3, #2
 800259c:	633b      	str	r3, [r7, #48]	@ 0x30
    PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 800259e:	2300      	movs	r3, #0
 80025a0:	63bb      	str	r3, [r7, #56]	@ 0x38
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80025a2:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80025a6:	4618      	mov	r0, r3
 80025a8:	f003 fdb2 	bl	8006110 <HAL_RCCEx_PeriphCLKConfig>
 80025ac:	4603      	mov	r3, r0
 80025ae:	2b00      	cmp	r3, #0
 80025b0:	d001      	beq.n	80025b6 <HAL_UART_MspInit+0x1ea>
      Error_Handler();
 80025b2:	f7ff fd43 	bl	800203c <Error_Handler>
    __HAL_RCC_USART2_CLK_ENABLE();
 80025b6:	4b18      	ldr	r3, [pc, #96]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 80025b8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80025ba:	4a17      	ldr	r2, [pc, #92]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 80025bc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80025c0:	6593      	str	r3, [r2, #88]	@ 0x58
 80025c2:	4b15      	ldr	r3, [pc, #84]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 80025c4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80025c6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80025ca:	61bb      	str	r3, [r7, #24]
 80025cc:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025ce:	4b12      	ldr	r3, [pc, #72]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 80025d0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80025d2:	4a11      	ldr	r2, [pc, #68]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 80025d4:	f043 0301 	orr.w	r3, r3, #1
 80025d8:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80025da:	4b0f      	ldr	r3, [pc, #60]	@ (8002618 <HAL_UART_MspInit+0x24c>)
 80025dc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80025de:	f003 0301 	and.w	r3, r3, #1
 80025e2:	617b      	str	r3, [r7, #20]
 80025e4:	697b      	ldr	r3, [r7, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 80025e6:	230c      	movs	r3, #12
 80025e8:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025ec:	2302      	movs	r3, #2
 80025ee:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80025f2:	2300      	movs	r3, #0
 80025f4:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80025f8:	2300      	movs	r3, #0
 80025fa:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80025fe:	2307      	movs	r3, #7
 8002600:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002604:	f107 0384 	add.w	r3, r7, #132	@ 0x84
 8002608:	4619      	mov	r1, r3
 800260a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800260e:	f002 fde5 	bl	80051dc <HAL_GPIO_Init>
}
 8002612:	e077      	b.n	8002704 <HAL_UART_MspInit+0x338>
 8002614:	40004c00 	.word	0x40004c00
 8002618:	40021000 	.word	0x40021000
 800261c:	48000800 	.word	0x48000800
 8002620:	200004c4 	.word	0x200004c4
 8002624:	40020008 	.word	0x40020008
 8002628:	40013800 	.word	0x40013800
 800262c:	40004400 	.word	0x40004400
  else if(huart->Instance==USART3)
 8002630:	687b      	ldr	r3, [r7, #4]
 8002632:	681b      	ldr	r3, [r3, #0]
 8002634:	4a35      	ldr	r2, [pc, #212]	@ (800270c <HAL_UART_MspInit+0x340>)
 8002636:	4293      	cmp	r3, r2
 8002638:	d164      	bne.n	8002704 <HAL_UART_MspInit+0x338>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART3;
 800263a:	2304      	movs	r3, #4
 800263c:	633b      	str	r3, [r7, #48]	@ 0x30
    PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 800263e:	2300      	movs	r3, #0
 8002640:	63fb      	str	r3, [r7, #60]	@ 0x3c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002642:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8002646:	4618      	mov	r0, r3
 8002648:	f003 fd62 	bl	8006110 <HAL_RCCEx_PeriphCLKConfig>
 800264c:	4603      	mov	r3, r0
 800264e:	2b00      	cmp	r3, #0
 8002650:	d001      	beq.n	8002656 <HAL_UART_MspInit+0x28a>
      Error_Handler();
 8002652:	f7ff fcf3 	bl	800203c <Error_Handler>
    __HAL_RCC_USART3_CLK_ENABLE();
 8002656:	4b2e      	ldr	r3, [pc, #184]	@ (8002710 <HAL_UART_MspInit+0x344>)
 8002658:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800265a:	4a2d      	ldr	r2, [pc, #180]	@ (8002710 <HAL_UART_MspInit+0x344>)
 800265c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002660:	6593      	str	r3, [r2, #88]	@ 0x58
 8002662:	4b2b      	ldr	r3, [pc, #172]	@ (8002710 <HAL_UART_MspInit+0x344>)
 8002664:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002666:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800266a:	613b      	str	r3, [r7, #16]
 800266c:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800266e:	4b28      	ldr	r3, [pc, #160]	@ (8002710 <HAL_UART_MspInit+0x344>)
 8002670:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002672:	4a27      	ldr	r2, [pc, #156]	@ (8002710 <HAL_UART_MspInit+0x344>)
 8002674:	f043 0302 	orr.w	r3, r3, #2
 8002678:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800267a:	4b25      	ldr	r3, [pc, #148]	@ (8002710 <HAL_UART_MspInit+0x344>)
 800267c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800267e:	f003 0302 	and.w	r3, r3, #2
 8002682:	60fb      	str	r3, [r7, #12]
 8002684:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 8002686:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 800268a:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800268e:	2302      	movs	r3, #2
 8002690:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002694:	2300      	movs	r3, #0
 8002696:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800269a:	2300      	movs	r3, #0
 800269c:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 80026a0:	2307      	movs	r3, #7
 80026a2:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026a6:	f107 0384 	add.w	r3, r7, #132	@ 0x84
 80026aa:	4619      	mov	r1, r3
 80026ac:	4819      	ldr	r0, [pc, #100]	@ (8002714 <HAL_UART_MspInit+0x348>)
 80026ae:	f002 fd95 	bl	80051dc <HAL_GPIO_Init>
    hdma_usart3_rx.Instance = DMA1_Channel2;
 80026b2:	4b19      	ldr	r3, [pc, #100]	@ (8002718 <HAL_UART_MspInit+0x34c>)
 80026b4:	4a19      	ldr	r2, [pc, #100]	@ (800271c <HAL_UART_MspInit+0x350>)
 80026b6:	601a      	str	r2, [r3, #0]
    hdma_usart3_rx.Init.Request = DMA_REQUEST_USART3_RX;
 80026b8:	4b17      	ldr	r3, [pc, #92]	@ (8002718 <HAL_UART_MspInit+0x34c>)
 80026ba:	221c      	movs	r2, #28
 80026bc:	605a      	str	r2, [r3, #4]
    hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80026be:	4b16      	ldr	r3, [pc, #88]	@ (8002718 <HAL_UART_MspInit+0x34c>)
 80026c0:	2200      	movs	r2, #0
 80026c2:	609a      	str	r2, [r3, #8]
    hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 80026c4:	4b14      	ldr	r3, [pc, #80]	@ (8002718 <HAL_UART_MspInit+0x34c>)
 80026c6:	2200      	movs	r2, #0
 80026c8:	60da      	str	r2, [r3, #12]
    hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 80026ca:	4b13      	ldr	r3, [pc, #76]	@ (8002718 <HAL_UART_MspInit+0x34c>)
 80026cc:	2280      	movs	r2, #128	@ 0x80
 80026ce:	611a      	str	r2, [r3, #16]
    hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80026d0:	4b11      	ldr	r3, [pc, #68]	@ (8002718 <HAL_UART_MspInit+0x34c>)
 80026d2:	2200      	movs	r2, #0
 80026d4:	615a      	str	r2, [r3, #20]
    hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80026d6:	4b10      	ldr	r3, [pc, #64]	@ (8002718 <HAL_UART_MspInit+0x34c>)
 80026d8:	2200      	movs	r2, #0
 80026da:	619a      	str	r2, [r3, #24]
    hdma_usart3_rx.Init.Mode = DMA_NORMAL;
 80026dc:	4b0e      	ldr	r3, [pc, #56]	@ (8002718 <HAL_UART_MspInit+0x34c>)
 80026de:	2200      	movs	r2, #0
 80026e0:	61da      	str	r2, [r3, #28]
    hdma_usart3_rx.Init.Priority = DMA_PRIORITY_LOW;
 80026e2:	4b0d      	ldr	r3, [pc, #52]	@ (8002718 <HAL_UART_MspInit+0x34c>)
 80026e4:	2200      	movs	r2, #0
 80026e6:	621a      	str	r2, [r3, #32]
    if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 80026e8:	480b      	ldr	r0, [pc, #44]	@ (8002718 <HAL_UART_MspInit+0x34c>)
 80026ea:	f001 ff29 	bl	8004540 <HAL_DMA_Init>
 80026ee:	4603      	mov	r3, r0
 80026f0:	2b00      	cmp	r3, #0
 80026f2:	d001      	beq.n	80026f8 <HAL_UART_MspInit+0x32c>
      Error_Handler();
 80026f4:	f7ff fca2 	bl	800203c <Error_Handler>
    __HAL_LINKDMA(huart,hdmarx,hdma_usart3_rx);
 80026f8:	687b      	ldr	r3, [r7, #4]
 80026fa:	4a07      	ldr	r2, [pc, #28]	@ (8002718 <HAL_UART_MspInit+0x34c>)
 80026fc:	67da      	str	r2, [r3, #124]	@ 0x7c
 80026fe:	4a06      	ldr	r2, [pc, #24]	@ (8002718 <HAL_UART_MspInit+0x34c>)
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	6293      	str	r3, [r2, #40]	@ 0x28
}
 8002704:	bf00      	nop
 8002706:	3798      	adds	r7, #152	@ 0x98
 8002708:	46bd      	mov	sp, r7
 800270a:	bd80      	pop	{r7, pc}
 800270c:	40004800 	.word	0x40004800
 8002710:	40021000 	.word	0x40021000
 8002714:	48000400 	.word	0x48000400
 8002718:	20000524 	.word	0x20000524
 800271c:	4002001c 	.word	0x4002001c

08002720 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002720:	b480      	push	{r7}
 8002722:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002724:	bf00      	nop
 8002726:	e7fd      	b.n	8002724 <NMI_Handler+0x4>

08002728 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002728:	b480      	push	{r7}
 800272a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800272c:	bf00      	nop
 800272e:	e7fd      	b.n	800272c <HardFault_Handler+0x4>

08002730 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002730:	b480      	push	{r7}
 8002732:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002734:	bf00      	nop
 8002736:	e7fd      	b.n	8002734 <MemManage_Handler+0x4>

08002738 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002738:	b480      	push	{r7}
 800273a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800273c:	bf00      	nop
 800273e:	e7fd      	b.n	800273c <BusFault_Handler+0x4>

08002740 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002740:	b480      	push	{r7}
 8002742:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002744:	bf00      	nop
 8002746:	e7fd      	b.n	8002744 <UsageFault_Handler+0x4>

08002748 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002748:	b480      	push	{r7}
 800274a:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800274c:	bf00      	nop
 800274e:	46bd      	mov	sp, r7
 8002750:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002754:	4770      	bx	lr

08002756 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002756:	b480      	push	{r7}
 8002758:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800275a:	bf00      	nop
 800275c:	46bd      	mov	sp, r7
 800275e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002762:	4770      	bx	lr

08002764 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002764:	b480      	push	{r7}
 8002766:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002768:	bf00      	nop
 800276a:	46bd      	mov	sp, r7
 800276c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002770:	4770      	bx	lr

08002772 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002772:	b580      	push	{r7, lr}
 8002774:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002776:	f000 f9b9 	bl	8002aec <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800277a:	bf00      	nop
 800277c:	bd80      	pop	{r7, pc}

0800277e <EXTI1_IRQHandler>:

/**
  * @brief This function handles EXTI line1 interrupt.
  */
void EXTI1_IRQHandler(void)
{
 800277e:	b580      	push	{r7, lr}
 8002780:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI1_IRQn 0 */

  /* USER CODE END EXTI1_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(QCA_INT_Pin);
 8002782:	2002      	movs	r0, #2
 8002784:	f002 fec4 	bl	8005510 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI1_IRQn 1 */

  /* USER CODE END EXTI1_IRQn 1 */
}
 8002788:	bf00      	nop
 800278a:	bd80      	pop	{r7, pc}

0800278c <DMA1_Channel1_IRQHandler>:

/**
  * @brief This function handles DMA1 channel1 global interrupt.
  */
void DMA1_Channel1_IRQHandler(void)
{
 800278c:	b580      	push	{r7, lr}
 800278e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */

  /* USER CODE END DMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_uart4_rx);
 8002790:	4802      	ldr	r0, [pc, #8]	@ (800279c <DMA1_Channel1_IRQHandler+0x10>)
 8002792:	f002 f85f 	bl	8004854 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */

  /* USER CODE END DMA1_Channel1_IRQn 1 */
}
 8002796:	bf00      	nop
 8002798:	bd80      	pop	{r7, pc}
 800279a:	bf00      	nop
 800279c:	200004c4 	.word	0x200004c4

080027a0 <DMA1_Channel2_IRQHandler>:

/**
  * @brief This function handles DMA1 channel2 global interrupt.
  */
void DMA1_Channel2_IRQHandler(void)
{
 80027a0:	b580      	push	{r7, lr}
 80027a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */

  /* USER CODE END DMA1_Channel2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart3_rx);
 80027a4:	4802      	ldr	r0, [pc, #8]	@ (80027b0 <DMA1_Channel2_IRQHandler+0x10>)
 80027a6:	f002 f855 	bl	8004854 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel2_IRQn 1 */

  /* USER CODE END DMA1_Channel2_IRQn 1 */
}
 80027aa:	bf00      	nop
 80027ac:	bd80      	pop	{r7, pc}
 80027ae:	bf00      	nop
 80027b0:	20000524 	.word	0x20000524

080027b4 <ADC1_2_IRQHandler>:

/**
  * @brief This function handles ADC1 and ADC2 global interrupt.
  */
void ADC1_2_IRQHandler(void)
{
 80027b4:	b580      	push	{r7, lr}
 80027b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN ADC1_2_IRQn 0 */

  /* USER CODE END ADC1_2_IRQn 0 */
  HAL_ADC_IRQHandler(&hadc1);
 80027b8:	4802      	ldr	r0, [pc, #8]	@ (80027c4 <ADC1_2_IRQHandler+0x10>)
 80027ba:	f000 fd93 	bl	80032e4 <HAL_ADC_IRQHandler>
  /* USER CODE BEGIN ADC1_2_IRQn 1 */

  /* USER CODE END ADC1_2_IRQn 1 */
}
 80027be:	bf00      	nop
 80027c0:	bd80      	pop	{r7, pc}
 80027c2:	bf00      	nop
 80027c4:	200000b8 	.word	0x200000b8

080027c8 <TIM1_BRK_TIM15_IRQHandler>:

/**
  * @brief This function handles TIM1 break interrupt and TIM15 global interrupt.
  */
void TIM1_BRK_TIM15_IRQHandler(void)
{
 80027c8:	b580      	push	{r7, lr}
 80027ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_BRK_TIM15_IRQn 0 */

  /* USER CODE END TIM1_BRK_TIM15_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 80027cc:	4802      	ldr	r0, [pc, #8]	@ (80027d8 <TIM1_BRK_TIM15_IRQHandler+0x10>)
 80027ce:	f004 fde3 	bl	8007398 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_BRK_TIM15_IRQn 1 */

  /* USER CODE END TIM1_BRK_TIM15_IRQn 1 */
}
 80027d2:	bf00      	nop
 80027d4:	bd80      	pop	{r7, pc}
 80027d6:	bf00      	nop
 80027d8:	200001ec 	.word	0x200001ec

080027dc <TIM1_UP_TIM16_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt and TIM16 global interrupt.
  */
void TIM1_UP_TIM16_IRQHandler(void)
{
 80027dc:	b580      	push	{r7, lr}
 80027de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 80027e0:	4802      	ldr	r0, [pc, #8]	@ (80027ec <TIM1_UP_TIM16_IRQHandler+0x10>)
 80027e2:	f004 fdd9 	bl	8007398 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
}
 80027e6:	bf00      	nop
 80027e8:	bd80      	pop	{r7, pc}
 80027ea:	bf00      	nop
 80027ec:	200001ec 	.word	0x200001ec

080027f0 <TIM1_TRG_COM_TIM17_IRQHandler>:

/**
  * @brief This function handles TIM1 trigger and commutation interrupts and TIM17 global interrupt.
  */
void TIM1_TRG_COM_TIM17_IRQHandler(void)
{
 80027f0:	b580      	push	{r7, lr}
 80027f2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_TRG_COM_TIM17_IRQn 0 */

  /* USER CODE END TIM1_TRG_COM_TIM17_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 80027f4:	4803      	ldr	r0, [pc, #12]	@ (8002804 <TIM1_TRG_COM_TIM17_IRQHandler+0x14>)
 80027f6:	f004 fdcf 	bl	8007398 <HAL_TIM_IRQHandler>
  HAL_TIM_IRQHandler(&htim17);
 80027fa:	4803      	ldr	r0, [pc, #12]	@ (8002808 <TIM1_TRG_COM_TIM17_IRQHandler+0x18>)
 80027fc:	f004 fdcc 	bl	8007398 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_TRG_COM_TIM17_IRQn 1 */

  /* USER CODE END TIM1_TRG_COM_TIM17_IRQn 1 */
}
 8002800:	bf00      	nop
 8002802:	bd80      	pop	{r7, pc}
 8002804:	200001ec 	.word	0x200001ec
 8002808:	20000238 	.word	0x20000238

0800280c <SPI2_IRQHandler>:

/**
  * @brief This function handles SPI2 global interrupt.
  */
void SPI2_IRQHandler(void)
{
 800280c:	b580      	push	{r7, lr}
 800280e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 8002810:	4802      	ldr	r0, [pc, #8]	@ (800281c <SPI2_IRQHandler+0x10>)
 8002812:	f004 f989 	bl	8006b28 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI2_IRQn 1 */

  /* USER CODE END SPI2_IRQn 1 */
}
 8002816:	bf00      	nop
 8002818:	bd80      	pop	{r7, pc}
 800281a:	bf00      	nop
 800281c:	20000188 	.word	0x20000188

08002820 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8002820:	b580      	push	{r7, lr}
 8002822:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(BUTTON_INT_Pin);
 8002824:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 8002828:	f002 fe72 	bl	8005510 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 800282c:	bf00      	nop
 800282e:	bd80      	pop	{r7, pc}

08002830 <FDCAN2_IT0_IRQHandler>:

/**
  * @brief This function handles FDCAN2 interrupt 0.
  */
void FDCAN2_IT0_IRQHandler(void)
{
 8002830:	b580      	push	{r7, lr}
 8002832:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FDCAN2_IT0_IRQn 0 */

  /* USER CODE END FDCAN2_IT0_IRQn 0 */
  HAL_FDCAN_IRQHandler(&hfdcan2);
 8002834:	4802      	ldr	r0, [pc, #8]	@ (8002840 <FDCAN2_IT0_IRQHandler+0x10>)
 8002836:	f002 fab7 	bl	8004da8 <HAL_FDCAN_IRQHandler>
  /* USER CODE BEGIN FDCAN2_IT0_IRQn 1 */

  /* USER CODE END FDCAN2_IT0_IRQn 1 */
}
 800283a:	bf00      	nop
 800283c:	bd80      	pop	{r7, pc}
 800283e:	bf00      	nop
 8002840:	20000124 	.word	0x20000124

08002844 <_getpid>:
 8002844:	b480      	push	{r7}
 8002846:	af00      	add	r7, sp, #0
 8002848:	2301      	movs	r3, #1
 800284a:	4618      	mov	r0, r3
 800284c:	46bd      	mov	sp, r7
 800284e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002852:	4770      	bx	lr

08002854 <_kill>:
 8002854:	b580      	push	{r7, lr}
 8002856:	b082      	sub	sp, #8
 8002858:	af00      	add	r7, sp, #0
 800285a:	6078      	str	r0, [r7, #4]
 800285c:	6039      	str	r1, [r7, #0]
 800285e:	f009 f963 	bl	800bb28 <__errno>
 8002862:	4603      	mov	r3, r0
 8002864:	2216      	movs	r2, #22
 8002866:	601a      	str	r2, [r3, #0]
 8002868:	f04f 33ff 	mov.w	r3, #4294967295
 800286c:	4618      	mov	r0, r3
 800286e:	3708      	adds	r7, #8
 8002870:	46bd      	mov	sp, r7
 8002872:	bd80      	pop	{r7, pc}

08002874 <_exit>:
 8002874:	b580      	push	{r7, lr}
 8002876:	b082      	sub	sp, #8
 8002878:	af00      	add	r7, sp, #0
 800287a:	6078      	str	r0, [r7, #4]
 800287c:	f04f 31ff 	mov.w	r1, #4294967295
 8002880:	6878      	ldr	r0, [r7, #4]
 8002882:	f7ff ffe7 	bl	8002854 <_kill>
 8002886:	bf00      	nop
 8002888:	e7fd      	b.n	8002886 <_exit+0x12>

0800288a <_read>:
 800288a:	b580      	push	{r7, lr}
 800288c:	b086      	sub	sp, #24
 800288e:	af00      	add	r7, sp, #0
 8002890:	60f8      	str	r0, [r7, #12]
 8002892:	60b9      	str	r1, [r7, #8]
 8002894:	607a      	str	r2, [r7, #4]
 8002896:	2300      	movs	r3, #0
 8002898:	617b      	str	r3, [r7, #20]
 800289a:	e00a      	b.n	80028b2 <_read+0x28>
 800289c:	f3af 8000 	nop.w
 80028a0:	4601      	mov	r1, r0
 80028a2:	68bb      	ldr	r3, [r7, #8]
 80028a4:	1c5a      	adds	r2, r3, #1
 80028a6:	60ba      	str	r2, [r7, #8]
 80028a8:	b2ca      	uxtb	r2, r1
 80028aa:	701a      	strb	r2, [r3, #0]
 80028ac:	697b      	ldr	r3, [r7, #20]
 80028ae:	3301      	adds	r3, #1
 80028b0:	617b      	str	r3, [r7, #20]
 80028b2:	697a      	ldr	r2, [r7, #20]
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	429a      	cmp	r2, r3
 80028b8:	dbf0      	blt.n	800289c <_read+0x12>
 80028ba:	687b      	ldr	r3, [r7, #4]
 80028bc:	4618      	mov	r0, r3
 80028be:	3718      	adds	r7, #24
 80028c0:	46bd      	mov	sp, r7
 80028c2:	bd80      	pop	{r7, pc}

080028c4 <_write>:
 80028c4:	b580      	push	{r7, lr}
 80028c6:	b086      	sub	sp, #24
 80028c8:	af00      	add	r7, sp, #0
 80028ca:	60f8      	str	r0, [r7, #12]
 80028cc:	60b9      	str	r1, [r7, #8]
 80028ce:	607a      	str	r2, [r7, #4]
 80028d0:	2300      	movs	r3, #0
 80028d2:	617b      	str	r3, [r7, #20]
 80028d4:	e009      	b.n	80028ea <_write+0x26>
 80028d6:	68bb      	ldr	r3, [r7, #8]
 80028d8:	1c5a      	adds	r2, r3, #1
 80028da:	60ba      	str	r2, [r7, #8]
 80028dc:	781b      	ldrb	r3, [r3, #0]
 80028de:	4618      	mov	r0, r3
 80028e0:	f3af 8000 	nop.w
 80028e4:	697b      	ldr	r3, [r7, #20]
 80028e6:	3301      	adds	r3, #1
 80028e8:	617b      	str	r3, [r7, #20]
 80028ea:	697a      	ldr	r2, [r7, #20]
 80028ec:	687b      	ldr	r3, [r7, #4]
 80028ee:	429a      	cmp	r2, r3
 80028f0:	dbf1      	blt.n	80028d6 <_write+0x12>
 80028f2:	687b      	ldr	r3, [r7, #4]
 80028f4:	4618      	mov	r0, r3
 80028f6:	3718      	adds	r7, #24
 80028f8:	46bd      	mov	sp, r7
 80028fa:	bd80      	pop	{r7, pc}

080028fc <_close>:
 80028fc:	b480      	push	{r7}
 80028fe:	b083      	sub	sp, #12
 8002900:	af00      	add	r7, sp, #0
 8002902:	6078      	str	r0, [r7, #4]
 8002904:	f04f 33ff 	mov.w	r3, #4294967295
 8002908:	4618      	mov	r0, r3
 800290a:	370c      	adds	r7, #12
 800290c:	46bd      	mov	sp, r7
 800290e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002912:	4770      	bx	lr

08002914 <_fstat>:
 8002914:	b480      	push	{r7}
 8002916:	b083      	sub	sp, #12
 8002918:	af00      	add	r7, sp, #0
 800291a:	6078      	str	r0, [r7, #4]
 800291c:	6039      	str	r1, [r7, #0]
 800291e:	683b      	ldr	r3, [r7, #0]
 8002920:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002924:	605a      	str	r2, [r3, #4]
 8002926:	2300      	movs	r3, #0
 8002928:	4618      	mov	r0, r3
 800292a:	370c      	adds	r7, #12
 800292c:	46bd      	mov	sp, r7
 800292e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002932:	4770      	bx	lr

08002934 <_isatty>:
 8002934:	b480      	push	{r7}
 8002936:	b083      	sub	sp, #12
 8002938:	af00      	add	r7, sp, #0
 800293a:	6078      	str	r0, [r7, #4]
 800293c:	2301      	movs	r3, #1
 800293e:	4618      	mov	r0, r3
 8002940:	370c      	adds	r7, #12
 8002942:	46bd      	mov	sp, r7
 8002944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002948:	4770      	bx	lr

0800294a <_lseek>:
 800294a:	b480      	push	{r7}
 800294c:	b085      	sub	sp, #20
 800294e:	af00      	add	r7, sp, #0
 8002950:	60f8      	str	r0, [r7, #12]
 8002952:	60b9      	str	r1, [r7, #8]
 8002954:	607a      	str	r2, [r7, #4]
 8002956:	2300      	movs	r3, #0
 8002958:	4618      	mov	r0, r3
 800295a:	3714      	adds	r7, #20
 800295c:	46bd      	mov	sp, r7
 800295e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002962:	4770      	bx	lr

08002964 <_sbrk>:
 8002964:	b580      	push	{r7, lr}
 8002966:	b086      	sub	sp, #24
 8002968:	af00      	add	r7, sp, #0
 800296a:	6078      	str	r0, [r7, #4]
 800296c:	4a14      	ldr	r2, [pc, #80]	@ (80029c0 <_sbrk+0x5c>)
 800296e:	4b15      	ldr	r3, [pc, #84]	@ (80029c4 <_sbrk+0x60>)
 8002970:	1ad3      	subs	r3, r2, r3
 8002972:	617b      	str	r3, [r7, #20]
 8002974:	697b      	ldr	r3, [r7, #20]
 8002976:	613b      	str	r3, [r7, #16]
 8002978:	4b13      	ldr	r3, [pc, #76]	@ (80029c8 <_sbrk+0x64>)
 800297a:	681b      	ldr	r3, [r3, #0]
 800297c:	2b00      	cmp	r3, #0
 800297e:	d102      	bne.n	8002986 <_sbrk+0x22>
 8002980:	4b11      	ldr	r3, [pc, #68]	@ (80029c8 <_sbrk+0x64>)
 8002982:	4a12      	ldr	r2, [pc, #72]	@ (80029cc <_sbrk+0x68>)
 8002984:	601a      	str	r2, [r3, #0]
 8002986:	4b10      	ldr	r3, [pc, #64]	@ (80029c8 <_sbrk+0x64>)
 8002988:	681a      	ldr	r2, [r3, #0]
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	4413      	add	r3, r2
 800298e:	693a      	ldr	r2, [r7, #16]
 8002990:	429a      	cmp	r2, r3
 8002992:	d207      	bcs.n	80029a4 <_sbrk+0x40>
 8002994:	f009 f8c8 	bl	800bb28 <__errno>
 8002998:	4603      	mov	r3, r0
 800299a:	220c      	movs	r2, #12
 800299c:	601a      	str	r2, [r3, #0]
 800299e:	f04f 33ff 	mov.w	r3, #4294967295
 80029a2:	e009      	b.n	80029b8 <_sbrk+0x54>
 80029a4:	4b08      	ldr	r3, [pc, #32]	@ (80029c8 <_sbrk+0x64>)
 80029a6:	681b      	ldr	r3, [r3, #0]
 80029a8:	60fb      	str	r3, [r7, #12]
 80029aa:	4b07      	ldr	r3, [pc, #28]	@ (80029c8 <_sbrk+0x64>)
 80029ac:	681a      	ldr	r2, [r3, #0]
 80029ae:	687b      	ldr	r3, [r7, #4]
 80029b0:	4413      	add	r3, r2
 80029b2:	4a05      	ldr	r2, [pc, #20]	@ (80029c8 <_sbrk+0x64>)
 80029b4:	6013      	str	r3, [r2, #0]
 80029b6:	68fb      	ldr	r3, [r7, #12]
 80029b8:	4618      	mov	r0, r3
 80029ba:	3718      	adds	r7, #24
 80029bc:	46bd      	mov	sp, r7
 80029be:	bd80      	pop	{r7, pc}
 80029c0:	20020000 	.word	0x20020000
 80029c4:	00000400 	.word	0x00000400
 80029c8:	200005d8 	.word	0x200005d8
 80029cc:	20002330 	.word	0x20002330

080029d0 <SystemInit>:
 80029d0:	b480      	push	{r7}
 80029d2:	af00      	add	r7, sp, #0
 80029d4:	4b06      	ldr	r3, [pc, #24]	@ (80029f0 <SystemInit+0x20>)
 80029d6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80029da:	4a05      	ldr	r2, [pc, #20]	@ (80029f0 <SystemInit+0x20>)
 80029dc:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80029e0:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80029e4:	bf00      	nop
 80029e6:	46bd      	mov	sp, r7
 80029e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029ec:	4770      	bx	lr
 80029ee:	bf00      	nop
 80029f0:	e000ed00 	.word	0xe000ed00

080029f4 <Reset_Handler>:
 80029f4:	480d      	ldr	r0, [pc, #52]	@ (8002a2c <LoopForever+0x2>)
 80029f6:	4685      	mov	sp, r0
 80029f8:	480d      	ldr	r0, [pc, #52]	@ (8002a30 <LoopForever+0x6>)
 80029fa:	490e      	ldr	r1, [pc, #56]	@ (8002a34 <LoopForever+0xa>)
 80029fc:	4a0e      	ldr	r2, [pc, #56]	@ (8002a38 <LoopForever+0xe>)
 80029fe:	2300      	movs	r3, #0
 8002a00:	e002      	b.n	8002a08 <LoopCopyDataInit>

08002a02 <CopyDataInit>:
 8002a02:	58d4      	ldr	r4, [r2, r3]
 8002a04:	50c4      	str	r4, [r0, r3]
 8002a06:	3304      	adds	r3, #4

08002a08 <LoopCopyDataInit>:
 8002a08:	18c4      	adds	r4, r0, r3
 8002a0a:	428c      	cmp	r4, r1
 8002a0c:	d3f9      	bcc.n	8002a02 <CopyDataInit>
 8002a0e:	4a0b      	ldr	r2, [pc, #44]	@ (8002a3c <LoopForever+0x12>)
 8002a10:	4c0b      	ldr	r4, [pc, #44]	@ (8002a40 <LoopForever+0x16>)
 8002a12:	2300      	movs	r3, #0
 8002a14:	e001      	b.n	8002a1a <LoopFillZerobss>

08002a16 <FillZerobss>:
 8002a16:	6013      	str	r3, [r2, #0]
 8002a18:	3204      	adds	r2, #4

08002a1a <LoopFillZerobss>:
 8002a1a:	42a2      	cmp	r2, r4
 8002a1c:	d3fb      	bcc.n	8002a16 <FillZerobss>
 8002a1e:	f7ff ffd7 	bl	80029d0 <SystemInit>
 8002a22:	f009 f887 	bl	800bb34 <__libc_init_array>
 8002a26:	f7fe f97d 	bl	8000d24 <main>

08002a2a <LoopForever>:
 8002a2a:	e7fe      	b.n	8002a2a <LoopForever>
 8002a2c:	20020000 	.word	0x20020000
 8002a30:	20000000 	.word	0x20000000
 8002a34:	2000008c 	.word	0x2000008c
 8002a38:	0800d47c 	.word	0x0800d47c
 8002a3c:	2000008c 	.word	0x2000008c
 8002a40:	2000232c 	.word	0x2000232c

08002a44 <ADC3_IRQHandler>:
 8002a44:	e7fe      	b.n	8002a44 <ADC3_IRQHandler>

08002a46 <HAL_Init>:
 8002a46:	b580      	push	{r7, lr}
 8002a48:	b082      	sub	sp, #8
 8002a4a:	af00      	add	r7, sp, #0
 8002a4c:	2300      	movs	r3, #0
 8002a4e:	71fb      	strb	r3, [r7, #7]
 8002a50:	2003      	movs	r0, #3
 8002a52:	f001 fd35 	bl	80044c0 <HAL_NVIC_SetPriorityGrouping>
 8002a56:	200f      	movs	r0, #15
 8002a58:	f000 f80e 	bl	8002a78 <HAL_InitTick>
 8002a5c:	4603      	mov	r3, r0
 8002a5e:	2b00      	cmp	r3, #0
 8002a60:	d002      	beq.n	8002a68 <HAL_Init+0x22>
 8002a62:	2301      	movs	r3, #1
 8002a64:	71fb      	strb	r3, [r7, #7]
 8002a66:	e001      	b.n	8002a6c <HAL_Init+0x26>
 8002a68:	f7ff faee 	bl	8002048 <HAL_MspInit>
 8002a6c:	79fb      	ldrb	r3, [r7, #7]
 8002a6e:	4618      	mov	r0, r3
 8002a70:	3708      	adds	r7, #8
 8002a72:	46bd      	mov	sp, r7
 8002a74:	bd80      	pop	{r7, pc}
	...

08002a78 <HAL_InitTick>:
 8002a78:	b580      	push	{r7, lr}
 8002a7a:	b084      	sub	sp, #16
 8002a7c:	af00      	add	r7, sp, #0
 8002a7e:	6078      	str	r0, [r7, #4]
 8002a80:	2300      	movs	r3, #0
 8002a82:	73fb      	strb	r3, [r7, #15]
 8002a84:	4b16      	ldr	r3, [pc, #88]	@ (8002ae0 <HAL_InitTick+0x68>)
 8002a86:	681b      	ldr	r3, [r3, #0]
 8002a88:	2b00      	cmp	r3, #0
 8002a8a:	d022      	beq.n	8002ad2 <HAL_InitTick+0x5a>
 8002a8c:	4b15      	ldr	r3, [pc, #84]	@ (8002ae4 <HAL_InitTick+0x6c>)
 8002a8e:	681a      	ldr	r2, [r3, #0]
 8002a90:	4b13      	ldr	r3, [pc, #76]	@ (8002ae0 <HAL_InitTick+0x68>)
 8002a92:	681b      	ldr	r3, [r3, #0]
 8002a94:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8002a98:	fbb1 f3f3 	udiv	r3, r1, r3
 8002a9c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002aa0:	4618      	mov	r0, r3
 8002aa2:	f001 fd40 	bl	8004526 <HAL_SYSTICK_Config>
 8002aa6:	4603      	mov	r3, r0
 8002aa8:	2b00      	cmp	r3, #0
 8002aaa:	d10f      	bne.n	8002acc <HAL_InitTick+0x54>
 8002aac:	687b      	ldr	r3, [r7, #4]
 8002aae:	2b0f      	cmp	r3, #15
 8002ab0:	d809      	bhi.n	8002ac6 <HAL_InitTick+0x4e>
 8002ab2:	2200      	movs	r2, #0
 8002ab4:	6879      	ldr	r1, [r7, #4]
 8002ab6:	f04f 30ff 	mov.w	r0, #4294967295
 8002aba:	f001 fd0c 	bl	80044d6 <HAL_NVIC_SetPriority>
 8002abe:	4a0a      	ldr	r2, [pc, #40]	@ (8002ae8 <HAL_InitTick+0x70>)
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	6013      	str	r3, [r2, #0]
 8002ac4:	e007      	b.n	8002ad6 <HAL_InitTick+0x5e>
 8002ac6:	2301      	movs	r3, #1
 8002ac8:	73fb      	strb	r3, [r7, #15]
 8002aca:	e004      	b.n	8002ad6 <HAL_InitTick+0x5e>
 8002acc:	2301      	movs	r3, #1
 8002ace:	73fb      	strb	r3, [r7, #15]
 8002ad0:	e001      	b.n	8002ad6 <HAL_InitTick+0x5e>
 8002ad2:	2301      	movs	r3, #1
 8002ad4:	73fb      	strb	r3, [r7, #15]
 8002ad6:	7bfb      	ldrb	r3, [r7, #15]
 8002ad8:	4618      	mov	r0, r3
 8002ada:	3710      	adds	r7, #16
 8002adc:	46bd      	mov	sp, r7
 8002ade:	bd80      	pop	{r7, pc}
 8002ae0:	20000014 	.word	0x20000014
 8002ae4:	2000000c 	.word	0x2000000c
 8002ae8:	20000010 	.word	0x20000010

08002aec <HAL_IncTick>:
 8002aec:	b480      	push	{r7}
 8002aee:	af00      	add	r7, sp, #0
 8002af0:	4b05      	ldr	r3, [pc, #20]	@ (8002b08 <HAL_IncTick+0x1c>)
 8002af2:	681a      	ldr	r2, [r3, #0]
 8002af4:	4b05      	ldr	r3, [pc, #20]	@ (8002b0c <HAL_IncTick+0x20>)
 8002af6:	681b      	ldr	r3, [r3, #0]
 8002af8:	4413      	add	r3, r2
 8002afa:	4a03      	ldr	r2, [pc, #12]	@ (8002b08 <HAL_IncTick+0x1c>)
 8002afc:	6013      	str	r3, [r2, #0]
 8002afe:	bf00      	nop
 8002b00:	46bd      	mov	sp, r7
 8002b02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b06:	4770      	bx	lr
 8002b08:	200005dc 	.word	0x200005dc
 8002b0c:	20000014 	.word	0x20000014

08002b10 <HAL_GetTick>:
 8002b10:	b480      	push	{r7}
 8002b12:	af00      	add	r7, sp, #0
 8002b14:	4b03      	ldr	r3, [pc, #12]	@ (8002b24 <HAL_GetTick+0x14>)
 8002b16:	681b      	ldr	r3, [r3, #0]
 8002b18:	4618      	mov	r0, r3
 8002b1a:	46bd      	mov	sp, r7
 8002b1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b20:	4770      	bx	lr
 8002b22:	bf00      	nop
 8002b24:	200005dc 	.word	0x200005dc

08002b28 <LL_ADC_SetCommonClock>:
 8002b28:	b480      	push	{r7}
 8002b2a:	b083      	sub	sp, #12
 8002b2c:	af00      	add	r7, sp, #0
 8002b2e:	6078      	str	r0, [r7, #4]
 8002b30:	6039      	str	r1, [r7, #0]
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	689b      	ldr	r3, [r3, #8]
 8002b36:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 8002b3a:	683b      	ldr	r3, [r7, #0]
 8002b3c:	431a      	orrs	r2, r3
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	609a      	str	r2, [r3, #8]
 8002b42:	bf00      	nop
 8002b44:	370c      	adds	r7, #12
 8002b46:	46bd      	mov	sp, r7
 8002b48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b4c:	4770      	bx	lr

08002b4e <LL_ADC_SetCommonPathInternalCh>:
 8002b4e:	b480      	push	{r7}
 8002b50:	b083      	sub	sp, #12
 8002b52:	af00      	add	r7, sp, #0
 8002b54:	6078      	str	r0, [r7, #4]
 8002b56:	6039      	str	r1, [r7, #0]
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	689b      	ldr	r3, [r3, #8]
 8002b5c:	f023 72e0 	bic.w	r2, r3, #29360128	@ 0x1c00000
 8002b60:	683b      	ldr	r3, [r7, #0]
 8002b62:	431a      	orrs	r2, r3
 8002b64:	687b      	ldr	r3, [r7, #4]
 8002b66:	609a      	str	r2, [r3, #8]
 8002b68:	bf00      	nop
 8002b6a:	370c      	adds	r7, #12
 8002b6c:	46bd      	mov	sp, r7
 8002b6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b72:	4770      	bx	lr

08002b74 <LL_ADC_GetCommonPathInternalCh>:
 8002b74:	b480      	push	{r7}
 8002b76:	b083      	sub	sp, #12
 8002b78:	af00      	add	r7, sp, #0
 8002b7a:	6078      	str	r0, [r7, #4]
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	689b      	ldr	r3, [r3, #8]
 8002b80:	f003 73e0 	and.w	r3, r3, #29360128	@ 0x1c00000
 8002b84:	4618      	mov	r0, r3
 8002b86:	370c      	adds	r7, #12
 8002b88:	46bd      	mov	sp, r7
 8002b8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b8e:	4770      	bx	lr

08002b90 <LL_ADC_SetOffset>:
 8002b90:	b480      	push	{r7}
 8002b92:	b087      	sub	sp, #28
 8002b94:	af00      	add	r7, sp, #0
 8002b96:	60f8      	str	r0, [r7, #12]
 8002b98:	60b9      	str	r1, [r7, #8]
 8002b9a:	607a      	str	r2, [r7, #4]
 8002b9c:	603b      	str	r3, [r7, #0]
 8002b9e:	68fb      	ldr	r3, [r7, #12]
 8002ba0:	3360      	adds	r3, #96	@ 0x60
 8002ba2:	461a      	mov	r2, r3
 8002ba4:	68bb      	ldr	r3, [r7, #8]
 8002ba6:	009b      	lsls	r3, r3, #2
 8002ba8:	4413      	add	r3, r2
 8002baa:	617b      	str	r3, [r7, #20]
 8002bac:	697b      	ldr	r3, [r7, #20]
 8002bae:	681a      	ldr	r2, [r3, #0]
 8002bb0:	4b08      	ldr	r3, [pc, #32]	@ (8002bd4 <LL_ADC_SetOffset+0x44>)
 8002bb2:	4013      	ands	r3, r2
 8002bb4:	687a      	ldr	r2, [r7, #4]
 8002bb6:	f002 41f8 	and.w	r1, r2, #2080374784	@ 0x7c000000
 8002bba:	683a      	ldr	r2, [r7, #0]
 8002bbc:	430a      	orrs	r2, r1
 8002bbe:	4313      	orrs	r3, r2
 8002bc0:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 8002bc4:	697b      	ldr	r3, [r7, #20]
 8002bc6:	601a      	str	r2, [r3, #0]
 8002bc8:	bf00      	nop
 8002bca:	371c      	adds	r7, #28
 8002bcc:	46bd      	mov	sp, r7
 8002bce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bd2:	4770      	bx	lr
 8002bd4:	03fff000 	.word	0x03fff000

08002bd8 <LL_ADC_GetOffsetChannel>:
 8002bd8:	b480      	push	{r7}
 8002bda:	b085      	sub	sp, #20
 8002bdc:	af00      	add	r7, sp, #0
 8002bde:	6078      	str	r0, [r7, #4]
 8002be0:	6039      	str	r1, [r7, #0]
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	3360      	adds	r3, #96	@ 0x60
 8002be6:	461a      	mov	r2, r3
 8002be8:	683b      	ldr	r3, [r7, #0]
 8002bea:	009b      	lsls	r3, r3, #2
 8002bec:	4413      	add	r3, r2
 8002bee:	60fb      	str	r3, [r7, #12]
 8002bf0:	68fb      	ldr	r3, [r7, #12]
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	f003 43f8 	and.w	r3, r3, #2080374784	@ 0x7c000000
 8002bf8:	4618      	mov	r0, r3
 8002bfa:	3714      	adds	r7, #20
 8002bfc:	46bd      	mov	sp, r7
 8002bfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c02:	4770      	bx	lr

08002c04 <LL_ADC_SetOffsetState>:
 8002c04:	b480      	push	{r7}
 8002c06:	b087      	sub	sp, #28
 8002c08:	af00      	add	r7, sp, #0
 8002c0a:	60f8      	str	r0, [r7, #12]
 8002c0c:	60b9      	str	r1, [r7, #8]
 8002c0e:	607a      	str	r2, [r7, #4]
 8002c10:	68fb      	ldr	r3, [r7, #12]
 8002c12:	3360      	adds	r3, #96	@ 0x60
 8002c14:	461a      	mov	r2, r3
 8002c16:	68bb      	ldr	r3, [r7, #8]
 8002c18:	009b      	lsls	r3, r3, #2
 8002c1a:	4413      	add	r3, r2
 8002c1c:	617b      	str	r3, [r7, #20]
 8002c1e:	697b      	ldr	r3, [r7, #20]
 8002c20:	681b      	ldr	r3, [r3, #0]
 8002c22:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	431a      	orrs	r2, r3
 8002c2a:	697b      	ldr	r3, [r7, #20]
 8002c2c:	601a      	str	r2, [r3, #0]
 8002c2e:	bf00      	nop
 8002c30:	371c      	adds	r7, #28
 8002c32:	46bd      	mov	sp, r7
 8002c34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c38:	4770      	bx	lr

08002c3a <LL_ADC_SetOffsetSign>:
 8002c3a:	b480      	push	{r7}
 8002c3c:	b087      	sub	sp, #28
 8002c3e:	af00      	add	r7, sp, #0
 8002c40:	60f8      	str	r0, [r7, #12]
 8002c42:	60b9      	str	r1, [r7, #8]
 8002c44:	607a      	str	r2, [r7, #4]
 8002c46:	68fb      	ldr	r3, [r7, #12]
 8002c48:	3360      	adds	r3, #96	@ 0x60
 8002c4a:	461a      	mov	r2, r3
 8002c4c:	68bb      	ldr	r3, [r7, #8]
 8002c4e:	009b      	lsls	r3, r3, #2
 8002c50:	4413      	add	r3, r2
 8002c52:	617b      	str	r3, [r7, #20]
 8002c54:	697b      	ldr	r3, [r7, #20]
 8002c56:	681b      	ldr	r3, [r3, #0]
 8002c58:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	431a      	orrs	r2, r3
 8002c60:	697b      	ldr	r3, [r7, #20]
 8002c62:	601a      	str	r2, [r3, #0]
 8002c64:	bf00      	nop
 8002c66:	371c      	adds	r7, #28
 8002c68:	46bd      	mov	sp, r7
 8002c6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c6e:	4770      	bx	lr

08002c70 <LL_ADC_SetOffsetSaturation>:
 8002c70:	b480      	push	{r7}
 8002c72:	b087      	sub	sp, #28
 8002c74:	af00      	add	r7, sp, #0
 8002c76:	60f8      	str	r0, [r7, #12]
 8002c78:	60b9      	str	r1, [r7, #8]
 8002c7a:	607a      	str	r2, [r7, #4]
 8002c7c:	68fb      	ldr	r3, [r7, #12]
 8002c7e:	3360      	adds	r3, #96	@ 0x60
 8002c80:	461a      	mov	r2, r3
 8002c82:	68bb      	ldr	r3, [r7, #8]
 8002c84:	009b      	lsls	r3, r3, #2
 8002c86:	4413      	add	r3, r2
 8002c88:	617b      	str	r3, [r7, #20]
 8002c8a:	697b      	ldr	r3, [r7, #20]
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	431a      	orrs	r2, r3
 8002c96:	697b      	ldr	r3, [r7, #20]
 8002c98:	601a      	str	r2, [r3, #0]
 8002c9a:	bf00      	nop
 8002c9c:	371c      	adds	r7, #28
 8002c9e:	46bd      	mov	sp, r7
 8002ca0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ca4:	4770      	bx	lr

08002ca6 <LL_ADC_SetSamplingTimeCommonConfig>:
 8002ca6:	b480      	push	{r7}
 8002ca8:	b083      	sub	sp, #12
 8002caa:	af00      	add	r7, sp, #0
 8002cac:	6078      	str	r0, [r7, #4]
 8002cae:	6039      	str	r1, [r7, #0]
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	695b      	ldr	r3, [r3, #20]
 8002cb4:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8002cb8:	683b      	ldr	r3, [r7, #0]
 8002cba:	431a      	orrs	r2, r3
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	615a      	str	r2, [r3, #20]
 8002cc0:	bf00      	nop
 8002cc2:	370c      	adds	r7, #12
 8002cc4:	46bd      	mov	sp, r7
 8002cc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cca:	4770      	bx	lr

08002ccc <LL_ADC_REG_IsTriggerSourceSWStart>:
 8002ccc:	b480      	push	{r7}
 8002cce:	b083      	sub	sp, #12
 8002cd0:	af00      	add	r7, sp, #0
 8002cd2:	6078      	str	r0, [r7, #4]
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	68db      	ldr	r3, [r3, #12]
 8002cd8:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8002cdc:	2b00      	cmp	r3, #0
 8002cde:	d101      	bne.n	8002ce4 <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 8002ce0:	2301      	movs	r3, #1
 8002ce2:	e000      	b.n	8002ce6 <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 8002ce4:	2300      	movs	r3, #0
 8002ce6:	4618      	mov	r0, r3
 8002ce8:	370c      	adds	r7, #12
 8002cea:	46bd      	mov	sp, r7
 8002cec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cf0:	4770      	bx	lr

08002cf2 <LL_ADC_REG_SetSequencerRanks>:
 8002cf2:	b480      	push	{r7}
 8002cf4:	b087      	sub	sp, #28
 8002cf6:	af00      	add	r7, sp, #0
 8002cf8:	60f8      	str	r0, [r7, #12]
 8002cfa:	60b9      	str	r1, [r7, #8]
 8002cfc:	607a      	str	r2, [r7, #4]
 8002cfe:	68fb      	ldr	r3, [r7, #12]
 8002d00:	3330      	adds	r3, #48	@ 0x30
 8002d02:	461a      	mov	r2, r3
 8002d04:	68bb      	ldr	r3, [r7, #8]
 8002d06:	0a1b      	lsrs	r3, r3, #8
 8002d08:	009b      	lsls	r3, r3, #2
 8002d0a:	f003 030c 	and.w	r3, r3, #12
 8002d0e:	4413      	add	r3, r2
 8002d10:	617b      	str	r3, [r7, #20]
 8002d12:	697b      	ldr	r3, [r7, #20]
 8002d14:	681a      	ldr	r2, [r3, #0]
 8002d16:	68bb      	ldr	r3, [r7, #8]
 8002d18:	f003 031f 	and.w	r3, r3, #31
 8002d1c:	211f      	movs	r1, #31
 8002d1e:	fa01 f303 	lsl.w	r3, r1, r3
 8002d22:	43db      	mvns	r3, r3
 8002d24:	401a      	ands	r2, r3
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	0e9b      	lsrs	r3, r3, #26
 8002d2a:	f003 011f 	and.w	r1, r3, #31
 8002d2e:	68bb      	ldr	r3, [r7, #8]
 8002d30:	f003 031f 	and.w	r3, r3, #31
 8002d34:	fa01 f303 	lsl.w	r3, r1, r3
 8002d38:	431a      	orrs	r2, r3
 8002d3a:	697b      	ldr	r3, [r7, #20]
 8002d3c:	601a      	str	r2, [r3, #0]
 8002d3e:	bf00      	nop
 8002d40:	371c      	adds	r7, #28
 8002d42:	46bd      	mov	sp, r7
 8002d44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d48:	4770      	bx	lr

08002d4a <LL_ADC_INJ_IsTriggerSourceSWStart>:
 8002d4a:	b480      	push	{r7}
 8002d4c:	b083      	sub	sp, #12
 8002d4e:	af00      	add	r7, sp, #0
 8002d50:	6078      	str	r0, [r7, #4]
 8002d52:	687b      	ldr	r3, [r7, #4]
 8002d54:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002d56:	f403 73c0 	and.w	r3, r3, #384	@ 0x180
 8002d5a:	2b00      	cmp	r3, #0
 8002d5c:	d101      	bne.n	8002d62 <LL_ADC_INJ_IsTriggerSourceSWStart+0x18>
 8002d5e:	2301      	movs	r3, #1
 8002d60:	e000      	b.n	8002d64 <LL_ADC_INJ_IsTriggerSourceSWStart+0x1a>
 8002d62:	2300      	movs	r3, #0
 8002d64:	4618      	mov	r0, r3
 8002d66:	370c      	adds	r7, #12
 8002d68:	46bd      	mov	sp, r7
 8002d6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d6e:	4770      	bx	lr

08002d70 <LL_ADC_SetChannelSamplingTime>:
 8002d70:	b480      	push	{r7}
 8002d72:	b087      	sub	sp, #28
 8002d74:	af00      	add	r7, sp, #0
 8002d76:	60f8      	str	r0, [r7, #12]
 8002d78:	60b9      	str	r1, [r7, #8]
 8002d7a:	607a      	str	r2, [r7, #4]
 8002d7c:	68fb      	ldr	r3, [r7, #12]
 8002d7e:	3314      	adds	r3, #20
 8002d80:	461a      	mov	r2, r3
 8002d82:	68bb      	ldr	r3, [r7, #8]
 8002d84:	0e5b      	lsrs	r3, r3, #25
 8002d86:	009b      	lsls	r3, r3, #2
 8002d88:	f003 0304 	and.w	r3, r3, #4
 8002d8c:	4413      	add	r3, r2
 8002d8e:	617b      	str	r3, [r7, #20]
 8002d90:	697b      	ldr	r3, [r7, #20]
 8002d92:	681a      	ldr	r2, [r3, #0]
 8002d94:	68bb      	ldr	r3, [r7, #8]
 8002d96:	0d1b      	lsrs	r3, r3, #20
 8002d98:	f003 031f 	and.w	r3, r3, #31
 8002d9c:	2107      	movs	r1, #7
 8002d9e:	fa01 f303 	lsl.w	r3, r1, r3
 8002da2:	43db      	mvns	r3, r3
 8002da4:	401a      	ands	r2, r3
 8002da6:	68bb      	ldr	r3, [r7, #8]
 8002da8:	0d1b      	lsrs	r3, r3, #20
 8002daa:	f003 031f 	and.w	r3, r3, #31
 8002dae:	6879      	ldr	r1, [r7, #4]
 8002db0:	fa01 f303 	lsl.w	r3, r1, r3
 8002db4:	431a      	orrs	r2, r3
 8002db6:	697b      	ldr	r3, [r7, #20]
 8002db8:	601a      	str	r2, [r3, #0]
 8002dba:	bf00      	nop
 8002dbc:	371c      	adds	r7, #28
 8002dbe:	46bd      	mov	sp, r7
 8002dc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dc4:	4770      	bx	lr
	...

08002dc8 <LL_ADC_SetChannelSingleDiff>:
 8002dc8:	b480      	push	{r7}
 8002dca:	b085      	sub	sp, #20
 8002dcc:	af00      	add	r7, sp, #0
 8002dce:	60f8      	str	r0, [r7, #12]
 8002dd0:	60b9      	str	r1, [r7, #8]
 8002dd2:	607a      	str	r2, [r7, #4]
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	4a0f      	ldr	r2, [pc, #60]	@ (8002e14 <LL_ADC_SetChannelSingleDiff+0x4c>)
 8002dd8:	4293      	cmp	r3, r2
 8002dda:	d10a      	bne.n	8002df2 <LL_ADC_SetChannelSingleDiff+0x2a>
 8002ddc:	68fb      	ldr	r3, [r7, #12]
 8002dde:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 8002de2:	68bb      	ldr	r3, [r7, #8]
 8002de4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002de8:	431a      	orrs	r2, r3
 8002dea:	68fb      	ldr	r3, [r7, #12]
 8002dec:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 8002df0:	e00a      	b.n	8002e08 <LL_ADC_SetChannelSingleDiff+0x40>
 8002df2:	68fb      	ldr	r3, [r7, #12]
 8002df4:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 8002df8:	68bb      	ldr	r3, [r7, #8]
 8002dfa:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002dfe:	43db      	mvns	r3, r3
 8002e00:	401a      	ands	r2, r3
 8002e02:	68fb      	ldr	r3, [r7, #12]
 8002e04:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 8002e08:	bf00      	nop
 8002e0a:	3714      	adds	r7, #20
 8002e0c:	46bd      	mov	sp, r7
 8002e0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e12:	4770      	bx	lr
 8002e14:	407f0000 	.word	0x407f0000

08002e18 <LL_ADC_GetMultimode>:
 8002e18:	b480      	push	{r7}
 8002e1a:	b083      	sub	sp, #12
 8002e1c:	af00      	add	r7, sp, #0
 8002e1e:	6078      	str	r0, [r7, #4]
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	689b      	ldr	r3, [r3, #8]
 8002e24:	f003 031f 	and.w	r3, r3, #31
 8002e28:	4618      	mov	r0, r3
 8002e2a:	370c      	adds	r7, #12
 8002e2c:	46bd      	mov	sp, r7
 8002e2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e32:	4770      	bx	lr

08002e34 <LL_ADC_GetMultiDMATransfer>:
 8002e34:	b480      	push	{r7}
 8002e36:	b083      	sub	sp, #12
 8002e38:	af00      	add	r7, sp, #0
 8002e3a:	6078      	str	r0, [r7, #4]
 8002e3c:	687b      	ldr	r3, [r7, #4]
 8002e3e:	689b      	ldr	r3, [r3, #8]
 8002e40:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 8002e44:	4618      	mov	r0, r3
 8002e46:	370c      	adds	r7, #12
 8002e48:	46bd      	mov	sp, r7
 8002e4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e4e:	4770      	bx	lr

08002e50 <LL_ADC_DisableDeepPowerDown>:
 8002e50:	b480      	push	{r7}
 8002e52:	b083      	sub	sp, #12
 8002e54:	af00      	add	r7, sp, #0
 8002e56:	6078      	str	r0, [r7, #4]
 8002e58:	687b      	ldr	r3, [r7, #4]
 8002e5a:	689b      	ldr	r3, [r3, #8]
 8002e5c:	f023 4320 	bic.w	r3, r3, #2684354560	@ 0xa0000000
 8002e60:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002e64:	687a      	ldr	r2, [r7, #4]
 8002e66:	6093      	str	r3, [r2, #8]
 8002e68:	bf00      	nop
 8002e6a:	370c      	adds	r7, #12
 8002e6c:	46bd      	mov	sp, r7
 8002e6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e72:	4770      	bx	lr

08002e74 <LL_ADC_IsDeepPowerDownEnabled>:
 8002e74:	b480      	push	{r7}
 8002e76:	b083      	sub	sp, #12
 8002e78:	af00      	add	r7, sp, #0
 8002e7a:	6078      	str	r0, [r7, #4]
 8002e7c:	687b      	ldr	r3, [r7, #4]
 8002e7e:	689b      	ldr	r3, [r3, #8]
 8002e80:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8002e84:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8002e88:	d101      	bne.n	8002e8e <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 8002e8a:	2301      	movs	r3, #1
 8002e8c:	e000      	b.n	8002e90 <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 8002e8e:	2300      	movs	r3, #0
 8002e90:	4618      	mov	r0, r3
 8002e92:	370c      	adds	r7, #12
 8002e94:	46bd      	mov	sp, r7
 8002e96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e9a:	4770      	bx	lr

08002e9c <LL_ADC_EnableInternalRegulator>:
 8002e9c:	b480      	push	{r7}
 8002e9e:	b083      	sub	sp, #12
 8002ea0:	af00      	add	r7, sp, #0
 8002ea2:	6078      	str	r0, [r7, #4]
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	689b      	ldr	r3, [r3, #8]
 8002ea8:	f023 4310 	bic.w	r3, r3, #2415919104	@ 0x90000000
 8002eac:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002eb0:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 8002eb4:	687b      	ldr	r3, [r7, #4]
 8002eb6:	609a      	str	r2, [r3, #8]
 8002eb8:	bf00      	nop
 8002eba:	370c      	adds	r7, #12
 8002ebc:	46bd      	mov	sp, r7
 8002ebe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ec2:	4770      	bx	lr

08002ec4 <LL_ADC_IsInternalRegulatorEnabled>:
 8002ec4:	b480      	push	{r7}
 8002ec6:	b083      	sub	sp, #12
 8002ec8:	af00      	add	r7, sp, #0
 8002eca:	6078      	str	r0, [r7, #4]
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	689b      	ldr	r3, [r3, #8]
 8002ed0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002ed4:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8002ed8:	d101      	bne.n	8002ede <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 8002eda:	2301      	movs	r3, #1
 8002edc:	e000      	b.n	8002ee0 <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 8002ede:	2300      	movs	r3, #0
 8002ee0:	4618      	mov	r0, r3
 8002ee2:	370c      	adds	r7, #12
 8002ee4:	46bd      	mov	sp, r7
 8002ee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002eea:	4770      	bx	lr

08002eec <LL_ADC_IsEnabled>:
 8002eec:	b480      	push	{r7}
 8002eee:	b083      	sub	sp, #12
 8002ef0:	af00      	add	r7, sp, #0
 8002ef2:	6078      	str	r0, [r7, #4]
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	689b      	ldr	r3, [r3, #8]
 8002ef8:	f003 0301 	and.w	r3, r3, #1
 8002efc:	2b01      	cmp	r3, #1
 8002efe:	d101      	bne.n	8002f04 <LL_ADC_IsEnabled+0x18>
 8002f00:	2301      	movs	r3, #1
 8002f02:	e000      	b.n	8002f06 <LL_ADC_IsEnabled+0x1a>
 8002f04:	2300      	movs	r3, #0
 8002f06:	4618      	mov	r0, r3
 8002f08:	370c      	adds	r7, #12
 8002f0a:	46bd      	mov	sp, r7
 8002f0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f10:	4770      	bx	lr

08002f12 <LL_ADC_REG_IsConversionOngoing>:
 8002f12:	b480      	push	{r7}
 8002f14:	b083      	sub	sp, #12
 8002f16:	af00      	add	r7, sp, #0
 8002f18:	6078      	str	r0, [r7, #4]
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	689b      	ldr	r3, [r3, #8]
 8002f1e:	f003 0304 	and.w	r3, r3, #4
 8002f22:	2b04      	cmp	r3, #4
 8002f24:	d101      	bne.n	8002f2a <LL_ADC_REG_IsConversionOngoing+0x18>
 8002f26:	2301      	movs	r3, #1
 8002f28:	e000      	b.n	8002f2c <LL_ADC_REG_IsConversionOngoing+0x1a>
 8002f2a:	2300      	movs	r3, #0
 8002f2c:	4618      	mov	r0, r3
 8002f2e:	370c      	adds	r7, #12
 8002f30:	46bd      	mov	sp, r7
 8002f32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f36:	4770      	bx	lr

08002f38 <LL_ADC_INJ_IsConversionOngoing>:
 8002f38:	b480      	push	{r7}
 8002f3a:	b083      	sub	sp, #12
 8002f3c:	af00      	add	r7, sp, #0
 8002f3e:	6078      	str	r0, [r7, #4]
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	689b      	ldr	r3, [r3, #8]
 8002f44:	f003 0308 	and.w	r3, r3, #8
 8002f48:	2b08      	cmp	r3, #8
 8002f4a:	d101      	bne.n	8002f50 <LL_ADC_INJ_IsConversionOngoing+0x18>
 8002f4c:	2301      	movs	r3, #1
 8002f4e:	e000      	b.n	8002f52 <LL_ADC_INJ_IsConversionOngoing+0x1a>
 8002f50:	2300      	movs	r3, #0
 8002f52:	4618      	mov	r0, r3
 8002f54:	370c      	adds	r7, #12
 8002f56:	46bd      	mov	sp, r7
 8002f58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f5c:	4770      	bx	lr
	...

08002f60 <HAL_ADC_Init>:
 8002f60:	b590      	push	{r4, r7, lr}
 8002f62:	b089      	sub	sp, #36	@ 0x24
 8002f64:	af00      	add	r7, sp, #0
 8002f66:	6078      	str	r0, [r7, #4]
 8002f68:	2300      	movs	r3, #0
 8002f6a:	77fb      	strb	r3, [r7, #31]
 8002f6c:	2300      	movs	r3, #0
 8002f6e:	60bb      	str	r3, [r7, #8]
 8002f70:	687b      	ldr	r3, [r7, #4]
 8002f72:	2b00      	cmp	r3, #0
 8002f74:	d101      	bne.n	8002f7a <HAL_ADC_Init+0x1a>
 8002f76:	2301      	movs	r3, #1
 8002f78:	e1af      	b.n	80032da <HAL_ADC_Init+0x37a>
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	695b      	ldr	r3, [r3, #20]
 8002f7e:	2b00      	cmp	r3, #0
 8002f80:	687b      	ldr	r3, [r7, #4]
 8002f82:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002f84:	2b00      	cmp	r3, #0
 8002f86:	d109      	bne.n	8002f9c <HAL_ADC_Init+0x3c>
 8002f88:	6878      	ldr	r0, [r7, #4]
 8002f8a:	f7ff f881 	bl	8002090 <HAL_ADC_MspInit>
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	2200      	movs	r2, #0
 8002f92:	661a      	str	r2, [r3, #96]	@ 0x60
 8002f94:	687b      	ldr	r3, [r7, #4]
 8002f96:	2200      	movs	r2, #0
 8002f98:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002f9c:	687b      	ldr	r3, [r7, #4]
 8002f9e:	681b      	ldr	r3, [r3, #0]
 8002fa0:	4618      	mov	r0, r3
 8002fa2:	f7ff ff67 	bl	8002e74 <LL_ADC_IsDeepPowerDownEnabled>
 8002fa6:	4603      	mov	r3, r0
 8002fa8:	2b00      	cmp	r3, #0
 8002faa:	d004      	beq.n	8002fb6 <HAL_ADC_Init+0x56>
 8002fac:	687b      	ldr	r3, [r7, #4]
 8002fae:	681b      	ldr	r3, [r3, #0]
 8002fb0:	4618      	mov	r0, r3
 8002fb2:	f7ff ff4d 	bl	8002e50 <LL_ADC_DisableDeepPowerDown>
 8002fb6:	687b      	ldr	r3, [r7, #4]
 8002fb8:	681b      	ldr	r3, [r3, #0]
 8002fba:	4618      	mov	r0, r3
 8002fbc:	f7ff ff82 	bl	8002ec4 <LL_ADC_IsInternalRegulatorEnabled>
 8002fc0:	4603      	mov	r3, r0
 8002fc2:	2b00      	cmp	r3, #0
 8002fc4:	d115      	bne.n	8002ff2 <HAL_ADC_Init+0x92>
 8002fc6:	687b      	ldr	r3, [r7, #4]
 8002fc8:	681b      	ldr	r3, [r3, #0]
 8002fca:	4618      	mov	r0, r3
 8002fcc:	f7ff ff66 	bl	8002e9c <LL_ADC_EnableInternalRegulator>
 8002fd0:	4b9f      	ldr	r3, [pc, #636]	@ (8003250 <HAL_ADC_Init+0x2f0>)
 8002fd2:	681b      	ldr	r3, [r3, #0]
 8002fd4:	099b      	lsrs	r3, r3, #6
 8002fd6:	4a9f      	ldr	r2, [pc, #636]	@ (8003254 <HAL_ADC_Init+0x2f4>)
 8002fd8:	fba2 2303 	umull	r2, r3, r2, r3
 8002fdc:	099b      	lsrs	r3, r3, #6
 8002fde:	3301      	adds	r3, #1
 8002fe0:	005b      	lsls	r3, r3, #1
 8002fe2:	60bb      	str	r3, [r7, #8]
 8002fe4:	e002      	b.n	8002fec <HAL_ADC_Init+0x8c>
 8002fe6:	68bb      	ldr	r3, [r7, #8]
 8002fe8:	3b01      	subs	r3, #1
 8002fea:	60bb      	str	r3, [r7, #8]
 8002fec:	68bb      	ldr	r3, [r7, #8]
 8002fee:	2b00      	cmp	r3, #0
 8002ff0:	d1f9      	bne.n	8002fe6 <HAL_ADC_Init+0x86>
 8002ff2:	687b      	ldr	r3, [r7, #4]
 8002ff4:	681b      	ldr	r3, [r3, #0]
 8002ff6:	4618      	mov	r0, r3
 8002ff8:	f7ff ff64 	bl	8002ec4 <LL_ADC_IsInternalRegulatorEnabled>
 8002ffc:	4603      	mov	r3, r0
 8002ffe:	2b00      	cmp	r3, #0
 8003000:	d10d      	bne.n	800301e <HAL_ADC_Init+0xbe>
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003006:	f043 0210 	orr.w	r2, r3, #16
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800300e:	687b      	ldr	r3, [r7, #4]
 8003010:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003012:	f043 0201 	orr.w	r2, r3, #1
 8003016:	687b      	ldr	r3, [r7, #4]
 8003018:	661a      	str	r2, [r3, #96]	@ 0x60
 800301a:	2301      	movs	r3, #1
 800301c:	77fb      	strb	r3, [r7, #31]
 800301e:	687b      	ldr	r3, [r7, #4]
 8003020:	681b      	ldr	r3, [r3, #0]
 8003022:	4618      	mov	r0, r3
 8003024:	f7ff ff75 	bl	8002f12 <LL_ADC_REG_IsConversionOngoing>
 8003028:	6178      	str	r0, [r7, #20]
 800302a:	687b      	ldr	r3, [r7, #4]
 800302c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800302e:	f003 0310 	and.w	r3, r3, #16
 8003032:	2b00      	cmp	r3, #0
 8003034:	f040 8148 	bne.w	80032c8 <HAL_ADC_Init+0x368>
 8003038:	697b      	ldr	r3, [r7, #20]
 800303a:	2b00      	cmp	r3, #0
 800303c:	f040 8144 	bne.w	80032c8 <HAL_ADC_Init+0x368>
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003044:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 8003048:	f043 0202 	orr.w	r2, r3, #2
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	681b      	ldr	r3, [r3, #0]
 8003054:	4618      	mov	r0, r3
 8003056:	f7ff ff49 	bl	8002eec <LL_ADC_IsEnabled>
 800305a:	4603      	mov	r3, r0
 800305c:	2b00      	cmp	r3, #0
 800305e:	d141      	bne.n	80030e4 <HAL_ADC_Init+0x184>
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	681b      	ldr	r3, [r3, #0]
 8003064:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8003068:	d004      	beq.n	8003074 <HAL_ADC_Init+0x114>
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	681b      	ldr	r3, [r3, #0]
 800306e:	4a7a      	ldr	r2, [pc, #488]	@ (8003258 <HAL_ADC_Init+0x2f8>)
 8003070:	4293      	cmp	r3, r2
 8003072:	d10f      	bne.n	8003094 <HAL_ADC_Init+0x134>
 8003074:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 8003078:	f7ff ff38 	bl	8002eec <LL_ADC_IsEnabled>
 800307c:	4604      	mov	r4, r0
 800307e:	4876      	ldr	r0, [pc, #472]	@ (8003258 <HAL_ADC_Init+0x2f8>)
 8003080:	f7ff ff34 	bl	8002eec <LL_ADC_IsEnabled>
 8003084:	4603      	mov	r3, r0
 8003086:	4323      	orrs	r3, r4
 8003088:	2b00      	cmp	r3, #0
 800308a:	bf0c      	ite	eq
 800308c:	2301      	moveq	r3, #1
 800308e:	2300      	movne	r3, #0
 8003090:	b2db      	uxtb	r3, r3
 8003092:	e012      	b.n	80030ba <HAL_ADC_Init+0x15a>
 8003094:	4871      	ldr	r0, [pc, #452]	@ (800325c <HAL_ADC_Init+0x2fc>)
 8003096:	f7ff ff29 	bl	8002eec <LL_ADC_IsEnabled>
 800309a:	4604      	mov	r4, r0
 800309c:	4870      	ldr	r0, [pc, #448]	@ (8003260 <HAL_ADC_Init+0x300>)
 800309e:	f7ff ff25 	bl	8002eec <LL_ADC_IsEnabled>
 80030a2:	4603      	mov	r3, r0
 80030a4:	431c      	orrs	r4, r3
 80030a6:	486f      	ldr	r0, [pc, #444]	@ (8003264 <HAL_ADC_Init+0x304>)
 80030a8:	f7ff ff20 	bl	8002eec <LL_ADC_IsEnabled>
 80030ac:	4603      	mov	r3, r0
 80030ae:	4323      	orrs	r3, r4
 80030b0:	2b00      	cmp	r3, #0
 80030b2:	bf0c      	ite	eq
 80030b4:	2301      	moveq	r3, #1
 80030b6:	2300      	movne	r3, #0
 80030b8:	b2db      	uxtb	r3, r3
 80030ba:	2b00      	cmp	r3, #0
 80030bc:	d012      	beq.n	80030e4 <HAL_ADC_Init+0x184>
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	681b      	ldr	r3, [r3, #0]
 80030c2:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80030c6:	d004      	beq.n	80030d2 <HAL_ADC_Init+0x172>
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	681b      	ldr	r3, [r3, #0]
 80030cc:	4a62      	ldr	r2, [pc, #392]	@ (8003258 <HAL_ADC_Init+0x2f8>)
 80030ce:	4293      	cmp	r3, r2
 80030d0:	d101      	bne.n	80030d6 <HAL_ADC_Init+0x176>
 80030d2:	4a65      	ldr	r2, [pc, #404]	@ (8003268 <HAL_ADC_Init+0x308>)
 80030d4:	e000      	b.n	80030d8 <HAL_ADC_Init+0x178>
 80030d6:	4a65      	ldr	r2, [pc, #404]	@ (800326c <HAL_ADC_Init+0x30c>)
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	685b      	ldr	r3, [r3, #4]
 80030dc:	4619      	mov	r1, r3
 80030de:	4610      	mov	r0, r2
 80030e0:	f7ff fd22 	bl	8002b28 <LL_ADC_SetCommonClock>
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	7f5b      	ldrb	r3, [r3, #29]
 80030e8:	035a      	lsls	r2, r3, #13
 80030ea:	687b      	ldr	r3, [r7, #4]
 80030ec:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80030ee:	431a      	orrs	r2, r3
 80030f0:	687b      	ldr	r3, [r7, #4]
 80030f2:	68db      	ldr	r3, [r3, #12]
 80030f4:	431a      	orrs	r2, r3
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	689b      	ldr	r3, [r3, #8]
 80030fa:	431a      	orrs	r2, r3
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8003102:	041b      	lsls	r3, r3, #16
 8003104:	4313      	orrs	r3, r2
 8003106:	61bb      	str	r3, [r7, #24]
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800310e:	2b01      	cmp	r3, #1
 8003110:	d106      	bne.n	8003120 <HAL_ADC_Init+0x1c0>
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003116:	3b01      	subs	r3, #1
 8003118:	045b      	lsls	r3, r3, #17
 800311a:	69ba      	ldr	r2, [r7, #24]
 800311c:	4313      	orrs	r3, r2
 800311e:	61bb      	str	r3, [r7, #24]
 8003120:	687b      	ldr	r3, [r7, #4]
 8003122:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003124:	2b00      	cmp	r3, #0
 8003126:	d009      	beq.n	800313c <HAL_ADC_Init+0x1dc>
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800312c:	f403 7278 	and.w	r2, r3, #992	@ 0x3e0
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003134:	4313      	orrs	r3, r2
 8003136:	69ba      	ldr	r2, [r7, #24]
 8003138:	4313      	orrs	r3, r2
 800313a:	61bb      	str	r3, [r7, #24]
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	681b      	ldr	r3, [r3, #0]
 8003140:	68da      	ldr	r2, [r3, #12]
 8003142:	4b4b      	ldr	r3, [pc, #300]	@ (8003270 <HAL_ADC_Init+0x310>)
 8003144:	4013      	ands	r3, r2
 8003146:	687a      	ldr	r2, [r7, #4]
 8003148:	6812      	ldr	r2, [r2, #0]
 800314a:	69b9      	ldr	r1, [r7, #24]
 800314c:	430b      	orrs	r3, r1
 800314e:	60d3      	str	r3, [r2, #12]
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	681b      	ldr	r3, [r3, #0]
 8003154:	691b      	ldr	r3, [r3, #16]
 8003156:	f023 6140 	bic.w	r1, r3, #201326592	@ 0xc000000
 800315a:	687b      	ldr	r3, [r7, #4]
 800315c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	681b      	ldr	r3, [r3, #0]
 8003162:	430a      	orrs	r2, r1
 8003164:	611a      	str	r2, [r3, #16]
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	681b      	ldr	r3, [r3, #0]
 800316a:	4618      	mov	r0, r3
 800316c:	f7ff fed1 	bl	8002f12 <LL_ADC_REG_IsConversionOngoing>
 8003170:	6138      	str	r0, [r7, #16]
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	4618      	mov	r0, r3
 8003178:	f7ff fede 	bl	8002f38 <LL_ADC_INJ_IsConversionOngoing>
 800317c:	60f8      	str	r0, [r7, #12]
 800317e:	693b      	ldr	r3, [r7, #16]
 8003180:	2b00      	cmp	r3, #0
 8003182:	d17f      	bne.n	8003284 <HAL_ADC_Init+0x324>
 8003184:	68fb      	ldr	r3, [r7, #12]
 8003186:	2b00      	cmp	r3, #0
 8003188:	d17c      	bne.n	8003284 <HAL_ADC_Init+0x324>
 800318a:	687b      	ldr	r3, [r7, #4]
 800318c:	7f1b      	ldrb	r3, [r3, #28]
 800318e:	039a      	lsls	r2, r3, #14
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8003196:	005b      	lsls	r3, r3, #1
 8003198:	4313      	orrs	r3, r2
 800319a:	61bb      	str	r3, [r7, #24]
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	681b      	ldr	r3, [r3, #0]
 80031a0:	68db      	ldr	r3, [r3, #12]
 80031a2:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80031a6:	f023 0302 	bic.w	r3, r3, #2
 80031aa:	687a      	ldr	r2, [r7, #4]
 80031ac:	6812      	ldr	r2, [r2, #0]
 80031ae:	69b9      	ldr	r1, [r7, #24]
 80031b0:	430b      	orrs	r3, r1
 80031b2:	60d3      	str	r3, [r2, #12]
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	691b      	ldr	r3, [r3, #16]
 80031b8:	2b00      	cmp	r3, #0
 80031ba:	d017      	beq.n	80031ec <HAL_ADC_Init+0x28c>
 80031bc:	687b      	ldr	r3, [r7, #4]
 80031be:	681b      	ldr	r3, [r3, #0]
 80031c0:	691a      	ldr	r2, [r3, #16]
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	681b      	ldr	r3, [r3, #0]
 80031c6:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 80031ca:	611a      	str	r2, [r3, #16]
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	681b      	ldr	r3, [r3, #0]
 80031d0:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 80031d4:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 80031d8:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80031dc:	687a      	ldr	r2, [r7, #4]
 80031de:	6911      	ldr	r1, [r2, #16]
 80031e0:	687a      	ldr	r2, [r7, #4]
 80031e2:	6812      	ldr	r2, [r2, #0]
 80031e4:	430b      	orrs	r3, r1
 80031e6:	f8c2 30c0 	str.w	r3, [r2, #192]	@ 0xc0
 80031ea:	e013      	b.n	8003214 <HAL_ADC_Init+0x2b4>
 80031ec:	687b      	ldr	r3, [r7, #4]
 80031ee:	681b      	ldr	r3, [r3, #0]
 80031f0:	691a      	ldr	r2, [r3, #16]
 80031f2:	687b      	ldr	r3, [r7, #4]
 80031f4:	681b      	ldr	r3, [r3, #0]
 80031f6:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80031fa:	611a      	str	r2, [r3, #16]
 80031fc:	687b      	ldr	r3, [r7, #4]
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8003204:	687a      	ldr	r2, [r7, #4]
 8003206:	6812      	ldr	r2, [r2, #0]
 8003208:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 800320c:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8003210:	f8c2 30c0 	str.w	r3, [r2, #192]	@ 0xc0
 8003214:	687b      	ldr	r3, [r7, #4]
 8003216:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800321a:	2b01      	cmp	r3, #1
 800321c:	d12a      	bne.n	8003274 <HAL_ADC_Init+0x314>
 800321e:	687b      	ldr	r3, [r7, #4]
 8003220:	681b      	ldr	r3, [r3, #0]
 8003222:	691b      	ldr	r3, [r3, #16]
 8003224:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8003228:	f023 0304 	bic.w	r3, r3, #4
 800322c:	687a      	ldr	r2, [r7, #4]
 800322e:	6c51      	ldr	r1, [r2, #68]	@ 0x44
 8003230:	687a      	ldr	r2, [r7, #4]
 8003232:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 8003234:	4311      	orrs	r1, r2
 8003236:	687a      	ldr	r2, [r7, #4]
 8003238:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 800323a:	4311      	orrs	r1, r2
 800323c:	687a      	ldr	r2, [r7, #4]
 800323e:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8003240:	430a      	orrs	r2, r1
 8003242:	431a      	orrs	r2, r3
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	681b      	ldr	r3, [r3, #0]
 8003248:	f042 0201 	orr.w	r2, r2, #1
 800324c:	611a      	str	r2, [r3, #16]
 800324e:	e019      	b.n	8003284 <HAL_ADC_Init+0x324>
 8003250:	2000000c 	.word	0x2000000c
 8003254:	053e2d63 	.word	0x053e2d63
 8003258:	50000100 	.word	0x50000100
 800325c:	50000400 	.word	0x50000400
 8003260:	50000500 	.word	0x50000500
 8003264:	50000600 	.word	0x50000600
 8003268:	50000300 	.word	0x50000300
 800326c:	50000700 	.word	0x50000700
 8003270:	fff04007 	.word	0xfff04007
 8003274:	687b      	ldr	r3, [r7, #4]
 8003276:	681b      	ldr	r3, [r3, #0]
 8003278:	691a      	ldr	r2, [r3, #16]
 800327a:	687b      	ldr	r3, [r7, #4]
 800327c:	681b      	ldr	r3, [r3, #0]
 800327e:	f022 0201 	bic.w	r2, r2, #1
 8003282:	611a      	str	r2, [r3, #16]
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	695b      	ldr	r3, [r3, #20]
 8003288:	2b01      	cmp	r3, #1
 800328a:	d10c      	bne.n	80032a6 <HAL_ADC_Init+0x346>
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	681b      	ldr	r3, [r3, #0]
 8003290:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003292:	f023 010f 	bic.w	r1, r3, #15
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	6a1b      	ldr	r3, [r3, #32]
 800329a:	1e5a      	subs	r2, r3, #1
 800329c:	687b      	ldr	r3, [r7, #4]
 800329e:	681b      	ldr	r3, [r3, #0]
 80032a0:	430a      	orrs	r2, r1
 80032a2:	631a      	str	r2, [r3, #48]	@ 0x30
 80032a4:	e007      	b.n	80032b6 <HAL_ADC_Init+0x356>
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	681b      	ldr	r3, [r3, #0]
 80032aa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	681b      	ldr	r3, [r3, #0]
 80032b0:	f022 020f 	bic.w	r2, r2, #15
 80032b4:	631a      	str	r2, [r3, #48]	@ 0x30
 80032b6:	687b      	ldr	r3, [r7, #4]
 80032b8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80032ba:	f023 0303 	bic.w	r3, r3, #3
 80032be:	f043 0201 	orr.w	r2, r3, #1
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	65da      	str	r2, [r3, #92]	@ 0x5c
 80032c6:	e007      	b.n	80032d8 <HAL_ADC_Init+0x378>
 80032c8:	687b      	ldr	r3, [r7, #4]
 80032ca:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80032cc:	f043 0210 	orr.w	r2, r3, #16
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	65da      	str	r2, [r3, #92]	@ 0x5c
 80032d4:	2301      	movs	r3, #1
 80032d6:	77fb      	strb	r3, [r7, #31]
 80032d8:	7ffb      	ldrb	r3, [r7, #31]
 80032da:	4618      	mov	r0, r3
 80032dc:	3724      	adds	r7, #36	@ 0x24
 80032de:	46bd      	mov	sp, r7
 80032e0:	bd90      	pop	{r4, r7, pc}
 80032e2:	bf00      	nop

080032e4 <HAL_ADC_IRQHandler>:
 80032e4:	b580      	push	{r7, lr}
 80032e6:	b08a      	sub	sp, #40	@ 0x28
 80032e8:	af00      	add	r7, sp, #0
 80032ea:	6078      	str	r0, [r7, #4]
 80032ec:	2300      	movs	r3, #0
 80032ee:	627b      	str	r3, [r7, #36]	@ 0x24
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	681b      	ldr	r3, [r3, #0]
 80032f4:	681b      	ldr	r3, [r3, #0]
 80032f6:	61fb      	str	r3, [r7, #28]
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	681b      	ldr	r3, [r3, #0]
 80032fc:	685b      	ldr	r3, [r3, #4]
 80032fe:	61bb      	str	r3, [r7, #24]
 8003300:	687b      	ldr	r3, [r7, #4]
 8003302:	681b      	ldr	r3, [r3, #0]
 8003304:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8003308:	d004      	beq.n	8003314 <HAL_ADC_IRQHandler+0x30>
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	4a8e      	ldr	r2, [pc, #568]	@ (8003548 <HAL_ADC_IRQHandler+0x264>)
 8003310:	4293      	cmp	r3, r2
 8003312:	d101      	bne.n	8003318 <HAL_ADC_IRQHandler+0x34>
 8003314:	4b8d      	ldr	r3, [pc, #564]	@ (800354c <HAL_ADC_IRQHandler+0x268>)
 8003316:	e000      	b.n	800331a <HAL_ADC_IRQHandler+0x36>
 8003318:	4b8d      	ldr	r3, [pc, #564]	@ (8003550 <HAL_ADC_IRQHandler+0x26c>)
 800331a:	4618      	mov	r0, r3
 800331c:	f7ff fd7c 	bl	8002e18 <LL_ADC_GetMultimode>
 8003320:	6178      	str	r0, [r7, #20]
 8003322:	69fb      	ldr	r3, [r7, #28]
 8003324:	f003 0302 	and.w	r3, r3, #2
 8003328:	2b00      	cmp	r3, #0
 800332a:	d017      	beq.n	800335c <HAL_ADC_IRQHandler+0x78>
 800332c:	69bb      	ldr	r3, [r7, #24]
 800332e:	f003 0302 	and.w	r3, r3, #2
 8003332:	2b00      	cmp	r3, #0
 8003334:	d012      	beq.n	800335c <HAL_ADC_IRQHandler+0x78>
 8003336:	687b      	ldr	r3, [r7, #4]
 8003338:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800333a:	f003 0310 	and.w	r3, r3, #16
 800333e:	2b00      	cmp	r3, #0
 8003340:	d105      	bne.n	800334e <HAL_ADC_IRQHandler+0x6a>
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003346:	f443 6200 	orr.w	r2, r3, #2048	@ 0x800
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800334e:	6878      	ldr	r0, [r7, #4]
 8003350:	f000 fed4 	bl	80040fc <HAL_ADCEx_EndOfSamplingCallback>
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	681b      	ldr	r3, [r3, #0]
 8003358:	2202      	movs	r2, #2
 800335a:	601a      	str	r2, [r3, #0]
 800335c:	69fb      	ldr	r3, [r7, #28]
 800335e:	f003 0304 	and.w	r3, r3, #4
 8003362:	2b00      	cmp	r3, #0
 8003364:	d004      	beq.n	8003370 <HAL_ADC_IRQHandler+0x8c>
 8003366:	69bb      	ldr	r3, [r7, #24]
 8003368:	f003 0304 	and.w	r3, r3, #4
 800336c:	2b00      	cmp	r3, #0
 800336e:	d10b      	bne.n	8003388 <HAL_ADC_IRQHandler+0xa4>
 8003370:	69fb      	ldr	r3, [r7, #28]
 8003372:	f003 0308 	and.w	r3, r3, #8
 8003376:	2b00      	cmp	r3, #0
 8003378:	f000 8094 	beq.w	80034a4 <HAL_ADC_IRQHandler+0x1c0>
 800337c:	69bb      	ldr	r3, [r7, #24]
 800337e:	f003 0308 	and.w	r3, r3, #8
 8003382:	2b00      	cmp	r3, #0
 8003384:	f000 808e 	beq.w	80034a4 <HAL_ADC_IRQHandler+0x1c0>
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800338c:	f003 0310 	and.w	r3, r3, #16
 8003390:	2b00      	cmp	r3, #0
 8003392:	d105      	bne.n	80033a0 <HAL_ADC_IRQHandler+0xbc>
 8003394:	687b      	ldr	r3, [r7, #4]
 8003396:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003398:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	65da      	str	r2, [r3, #92]	@ 0x5c
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	681b      	ldr	r3, [r3, #0]
 80033a4:	4618      	mov	r0, r3
 80033a6:	f7ff fc91 	bl	8002ccc <LL_ADC_REG_IsTriggerSourceSWStart>
 80033aa:	4603      	mov	r3, r0
 80033ac:	2b00      	cmp	r3, #0
 80033ae:	d072      	beq.n	8003496 <HAL_ADC_IRQHandler+0x1b2>
 80033b0:	687b      	ldr	r3, [r7, #4]
 80033b2:	681b      	ldr	r3, [r3, #0]
 80033b4:	4a64      	ldr	r2, [pc, #400]	@ (8003548 <HAL_ADC_IRQHandler+0x264>)
 80033b6:	4293      	cmp	r3, r2
 80033b8:	d009      	beq.n	80033ce <HAL_ADC_IRQHandler+0xea>
 80033ba:	687b      	ldr	r3, [r7, #4]
 80033bc:	681b      	ldr	r3, [r3, #0]
 80033be:	4a65      	ldr	r2, [pc, #404]	@ (8003554 <HAL_ADC_IRQHandler+0x270>)
 80033c0:	4293      	cmp	r3, r2
 80033c2:	d002      	beq.n	80033ca <HAL_ADC_IRQHandler+0xe6>
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	681b      	ldr	r3, [r3, #0]
 80033c8:	e003      	b.n	80033d2 <HAL_ADC_IRQHandler+0xee>
 80033ca:	4b63      	ldr	r3, [pc, #396]	@ (8003558 <HAL_ADC_IRQHandler+0x274>)
 80033cc:	e001      	b.n	80033d2 <HAL_ADC_IRQHandler+0xee>
 80033ce:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 80033d2:	687a      	ldr	r2, [r7, #4]
 80033d4:	6812      	ldr	r2, [r2, #0]
 80033d6:	4293      	cmp	r3, r2
 80033d8:	d008      	beq.n	80033ec <HAL_ADC_IRQHandler+0x108>
 80033da:	697b      	ldr	r3, [r7, #20]
 80033dc:	2b00      	cmp	r3, #0
 80033de:	d005      	beq.n	80033ec <HAL_ADC_IRQHandler+0x108>
 80033e0:	697b      	ldr	r3, [r7, #20]
 80033e2:	2b05      	cmp	r3, #5
 80033e4:	d002      	beq.n	80033ec <HAL_ADC_IRQHandler+0x108>
 80033e6:	697b      	ldr	r3, [r7, #20]
 80033e8:	2b09      	cmp	r3, #9
 80033ea:	d104      	bne.n	80033f6 <HAL_ADC_IRQHandler+0x112>
 80033ec:	687b      	ldr	r3, [r7, #4]
 80033ee:	681b      	ldr	r3, [r3, #0]
 80033f0:	68db      	ldr	r3, [r3, #12]
 80033f2:	623b      	str	r3, [r7, #32]
 80033f4:	e014      	b.n	8003420 <HAL_ADC_IRQHandler+0x13c>
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	681b      	ldr	r3, [r3, #0]
 80033fa:	4a53      	ldr	r2, [pc, #332]	@ (8003548 <HAL_ADC_IRQHandler+0x264>)
 80033fc:	4293      	cmp	r3, r2
 80033fe:	d009      	beq.n	8003414 <HAL_ADC_IRQHandler+0x130>
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	681b      	ldr	r3, [r3, #0]
 8003404:	4a53      	ldr	r2, [pc, #332]	@ (8003554 <HAL_ADC_IRQHandler+0x270>)
 8003406:	4293      	cmp	r3, r2
 8003408:	d002      	beq.n	8003410 <HAL_ADC_IRQHandler+0x12c>
 800340a:	687b      	ldr	r3, [r7, #4]
 800340c:	681b      	ldr	r3, [r3, #0]
 800340e:	e003      	b.n	8003418 <HAL_ADC_IRQHandler+0x134>
 8003410:	4b51      	ldr	r3, [pc, #324]	@ (8003558 <HAL_ADC_IRQHandler+0x274>)
 8003412:	e001      	b.n	8003418 <HAL_ADC_IRQHandler+0x134>
 8003414:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8003418:	613b      	str	r3, [r7, #16]
 800341a:	693b      	ldr	r3, [r7, #16]
 800341c:	68db      	ldr	r3, [r3, #12]
 800341e:	623b      	str	r3, [r7, #32]
 8003420:	6a3b      	ldr	r3, [r7, #32]
 8003422:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8003426:	2b00      	cmp	r3, #0
 8003428:	d135      	bne.n	8003496 <HAL_ADC_IRQHandler+0x1b2>
 800342a:	687b      	ldr	r3, [r7, #4]
 800342c:	681b      	ldr	r3, [r3, #0]
 800342e:	681b      	ldr	r3, [r3, #0]
 8003430:	f003 0308 	and.w	r3, r3, #8
 8003434:	2b08      	cmp	r3, #8
 8003436:	d12e      	bne.n	8003496 <HAL_ADC_IRQHandler+0x1b2>
 8003438:	687b      	ldr	r3, [r7, #4]
 800343a:	681b      	ldr	r3, [r3, #0]
 800343c:	4618      	mov	r0, r3
 800343e:	f7ff fd68 	bl	8002f12 <LL_ADC_REG_IsConversionOngoing>
 8003442:	4603      	mov	r3, r0
 8003444:	2b00      	cmp	r3, #0
 8003446:	d11a      	bne.n	800347e <HAL_ADC_IRQHandler+0x19a>
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	681b      	ldr	r3, [r3, #0]
 800344c:	685a      	ldr	r2, [r3, #4]
 800344e:	687b      	ldr	r3, [r7, #4]
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	f022 020c 	bic.w	r2, r2, #12
 8003456:	605a      	str	r2, [r3, #4]
 8003458:	687b      	ldr	r3, [r7, #4]
 800345a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800345c:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8003460:	687b      	ldr	r3, [r7, #4]
 8003462:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003468:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800346c:	2b00      	cmp	r3, #0
 800346e:	d112      	bne.n	8003496 <HAL_ADC_IRQHandler+0x1b2>
 8003470:	687b      	ldr	r3, [r7, #4]
 8003472:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003474:	f043 0201 	orr.w	r2, r3, #1
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800347c:	e00b      	b.n	8003496 <HAL_ADC_IRQHandler+0x1b2>
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003482:	f043 0210 	orr.w	r2, r3, #16
 8003486:	687b      	ldr	r3, [r7, #4]
 8003488:	65da      	str	r2, [r3, #92]	@ 0x5c
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800348e:	f043 0201 	orr.w	r2, r3, #1
 8003492:	687b      	ldr	r3, [r7, #4]
 8003494:	661a      	str	r2, [r3, #96]	@ 0x60
 8003496:	6878      	ldr	r0, [r7, #4]
 8003498:	f000 f984 	bl	80037a4 <HAL_ADC_ConvCpltCallback>
 800349c:	687b      	ldr	r3, [r7, #4]
 800349e:	681b      	ldr	r3, [r3, #0]
 80034a0:	220c      	movs	r2, #12
 80034a2:	601a      	str	r2, [r3, #0]
 80034a4:	69fb      	ldr	r3, [r7, #28]
 80034a6:	f003 0320 	and.w	r3, r3, #32
 80034aa:	2b00      	cmp	r3, #0
 80034ac:	d004      	beq.n	80034b8 <HAL_ADC_IRQHandler+0x1d4>
 80034ae:	69bb      	ldr	r3, [r7, #24]
 80034b0:	f003 0320 	and.w	r3, r3, #32
 80034b4:	2b00      	cmp	r3, #0
 80034b6:	d10b      	bne.n	80034d0 <HAL_ADC_IRQHandler+0x1ec>
 80034b8:	69fb      	ldr	r3, [r7, #28]
 80034ba:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80034be:	2b00      	cmp	r3, #0
 80034c0:	f000 80b3 	beq.w	800362a <HAL_ADC_IRQHandler+0x346>
 80034c4:	69bb      	ldr	r3, [r7, #24]
 80034c6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80034ca:	2b00      	cmp	r3, #0
 80034cc:	f000 80ad 	beq.w	800362a <HAL_ADC_IRQHandler+0x346>
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80034d4:	f003 0310 	and.w	r3, r3, #16
 80034d8:	2b00      	cmp	r3, #0
 80034da:	d105      	bne.n	80034e8 <HAL_ADC_IRQHandler+0x204>
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80034e0:	f443 5200 	orr.w	r2, r3, #8192	@ 0x2000
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	65da      	str	r2, [r3, #92]	@ 0x5c
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	681b      	ldr	r3, [r3, #0]
 80034ec:	4618      	mov	r0, r3
 80034ee:	f7ff fc2c 	bl	8002d4a <LL_ADC_INJ_IsTriggerSourceSWStart>
 80034f2:	60f8      	str	r0, [r7, #12]
 80034f4:	687b      	ldr	r3, [r7, #4]
 80034f6:	681b      	ldr	r3, [r3, #0]
 80034f8:	4618      	mov	r0, r3
 80034fa:	f7ff fbe7 	bl	8002ccc <LL_ADC_REG_IsTriggerSourceSWStart>
 80034fe:	60b8      	str	r0, [r7, #8]
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	681b      	ldr	r3, [r3, #0]
 8003504:	4a10      	ldr	r2, [pc, #64]	@ (8003548 <HAL_ADC_IRQHandler+0x264>)
 8003506:	4293      	cmp	r3, r2
 8003508:	d009      	beq.n	800351e <HAL_ADC_IRQHandler+0x23a>
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	681b      	ldr	r3, [r3, #0]
 800350e:	4a11      	ldr	r2, [pc, #68]	@ (8003554 <HAL_ADC_IRQHandler+0x270>)
 8003510:	4293      	cmp	r3, r2
 8003512:	d002      	beq.n	800351a <HAL_ADC_IRQHandler+0x236>
 8003514:	687b      	ldr	r3, [r7, #4]
 8003516:	681b      	ldr	r3, [r3, #0]
 8003518:	e003      	b.n	8003522 <HAL_ADC_IRQHandler+0x23e>
 800351a:	4b0f      	ldr	r3, [pc, #60]	@ (8003558 <HAL_ADC_IRQHandler+0x274>)
 800351c:	e001      	b.n	8003522 <HAL_ADC_IRQHandler+0x23e>
 800351e:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8003522:	687a      	ldr	r2, [r7, #4]
 8003524:	6812      	ldr	r2, [r2, #0]
 8003526:	4293      	cmp	r3, r2
 8003528:	d008      	beq.n	800353c <HAL_ADC_IRQHandler+0x258>
 800352a:	697b      	ldr	r3, [r7, #20]
 800352c:	2b00      	cmp	r3, #0
 800352e:	d005      	beq.n	800353c <HAL_ADC_IRQHandler+0x258>
 8003530:	697b      	ldr	r3, [r7, #20]
 8003532:	2b06      	cmp	r3, #6
 8003534:	d002      	beq.n	800353c <HAL_ADC_IRQHandler+0x258>
 8003536:	697b      	ldr	r3, [r7, #20]
 8003538:	2b07      	cmp	r3, #7
 800353a:	d10f      	bne.n	800355c <HAL_ADC_IRQHandler+0x278>
 800353c:	687b      	ldr	r3, [r7, #4]
 800353e:	681b      	ldr	r3, [r3, #0]
 8003540:	68db      	ldr	r3, [r3, #12]
 8003542:	623b      	str	r3, [r7, #32]
 8003544:	e01f      	b.n	8003586 <HAL_ADC_IRQHandler+0x2a2>
 8003546:	bf00      	nop
 8003548:	50000100 	.word	0x50000100
 800354c:	50000300 	.word	0x50000300
 8003550:	50000700 	.word	0x50000700
 8003554:	50000500 	.word	0x50000500
 8003558:	50000400 	.word	0x50000400
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	4a8b      	ldr	r2, [pc, #556]	@ (8003790 <HAL_ADC_IRQHandler+0x4ac>)
 8003562:	4293      	cmp	r3, r2
 8003564:	d009      	beq.n	800357a <HAL_ADC_IRQHandler+0x296>
 8003566:	687b      	ldr	r3, [r7, #4]
 8003568:	681b      	ldr	r3, [r3, #0]
 800356a:	4a8a      	ldr	r2, [pc, #552]	@ (8003794 <HAL_ADC_IRQHandler+0x4b0>)
 800356c:	4293      	cmp	r3, r2
 800356e:	d002      	beq.n	8003576 <HAL_ADC_IRQHandler+0x292>
 8003570:	687b      	ldr	r3, [r7, #4]
 8003572:	681b      	ldr	r3, [r3, #0]
 8003574:	e003      	b.n	800357e <HAL_ADC_IRQHandler+0x29a>
 8003576:	4b88      	ldr	r3, [pc, #544]	@ (8003798 <HAL_ADC_IRQHandler+0x4b4>)
 8003578:	e001      	b.n	800357e <HAL_ADC_IRQHandler+0x29a>
 800357a:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 800357e:	613b      	str	r3, [r7, #16]
 8003580:	693b      	ldr	r3, [r7, #16]
 8003582:	68db      	ldr	r3, [r3, #12]
 8003584:	623b      	str	r3, [r7, #32]
 8003586:	68fb      	ldr	r3, [r7, #12]
 8003588:	2b00      	cmp	r3, #0
 800358a:	d047      	beq.n	800361c <HAL_ADC_IRQHandler+0x338>
 800358c:	6a3b      	ldr	r3, [r7, #32]
 800358e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003592:	2b00      	cmp	r3, #0
 8003594:	d007      	beq.n	80035a6 <HAL_ADC_IRQHandler+0x2c2>
 8003596:	68bb      	ldr	r3, [r7, #8]
 8003598:	2b00      	cmp	r3, #0
 800359a:	d03f      	beq.n	800361c <HAL_ADC_IRQHandler+0x338>
 800359c:	6a3b      	ldr	r3, [r7, #32]
 800359e:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80035a2:	2b00      	cmp	r3, #0
 80035a4:	d13a      	bne.n	800361c <HAL_ADC_IRQHandler+0x338>
 80035a6:	687b      	ldr	r3, [r7, #4]
 80035a8:	681b      	ldr	r3, [r3, #0]
 80035aa:	681b      	ldr	r3, [r3, #0]
 80035ac:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80035b0:	2b40      	cmp	r3, #64	@ 0x40
 80035b2:	d133      	bne.n	800361c <HAL_ADC_IRQHandler+0x338>
 80035b4:	6a3b      	ldr	r3, [r7, #32]
 80035b6:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80035ba:	2b00      	cmp	r3, #0
 80035bc:	d12e      	bne.n	800361c <HAL_ADC_IRQHandler+0x338>
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	681b      	ldr	r3, [r3, #0]
 80035c2:	4618      	mov	r0, r3
 80035c4:	f7ff fcb8 	bl	8002f38 <LL_ADC_INJ_IsConversionOngoing>
 80035c8:	4603      	mov	r3, r0
 80035ca:	2b00      	cmp	r3, #0
 80035cc:	d11a      	bne.n	8003604 <HAL_ADC_IRQHandler+0x320>
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	681b      	ldr	r3, [r3, #0]
 80035d2:	685a      	ldr	r2, [r3, #4]
 80035d4:	687b      	ldr	r3, [r7, #4]
 80035d6:	681b      	ldr	r3, [r3, #0]
 80035d8:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80035dc:	605a      	str	r2, [r3, #4]
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80035e2:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	65da      	str	r2, [r3, #92]	@ 0x5c
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80035ee:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80035f2:	2b00      	cmp	r3, #0
 80035f4:	d112      	bne.n	800361c <HAL_ADC_IRQHandler+0x338>
 80035f6:	687b      	ldr	r3, [r7, #4]
 80035f8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80035fa:	f043 0201 	orr.w	r2, r3, #1
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003602:	e00b      	b.n	800361c <HAL_ADC_IRQHandler+0x338>
 8003604:	687b      	ldr	r3, [r7, #4]
 8003606:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003608:	f043 0210 	orr.w	r2, r3, #16
 800360c:	687b      	ldr	r3, [r7, #4]
 800360e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003610:	687b      	ldr	r3, [r7, #4]
 8003612:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003614:	f043 0201 	orr.w	r2, r3, #1
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	661a      	str	r2, [r3, #96]	@ 0x60
 800361c:	6878      	ldr	r0, [r7, #4]
 800361e:	f000 fd45 	bl	80040ac <HAL_ADCEx_InjectedConvCpltCallback>
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	2260      	movs	r2, #96	@ 0x60
 8003628:	601a      	str	r2, [r3, #0]
 800362a:	69fb      	ldr	r3, [r7, #28]
 800362c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003630:	2b00      	cmp	r3, #0
 8003632:	d011      	beq.n	8003658 <HAL_ADC_IRQHandler+0x374>
 8003634:	69bb      	ldr	r3, [r7, #24]
 8003636:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800363a:	2b00      	cmp	r3, #0
 800363c:	d00c      	beq.n	8003658 <HAL_ADC_IRQHandler+0x374>
 800363e:	687b      	ldr	r3, [r7, #4]
 8003640:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003642:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	65da      	str	r2, [r3, #92]	@ 0x5c
 800364a:	6878      	ldr	r0, [r7, #4]
 800364c:	f000 f8b4 	bl	80037b8 <HAL_ADC_LevelOutOfWindowCallback>
 8003650:	687b      	ldr	r3, [r7, #4]
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	2280      	movs	r2, #128	@ 0x80
 8003656:	601a      	str	r2, [r3, #0]
 8003658:	69fb      	ldr	r3, [r7, #28]
 800365a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800365e:	2b00      	cmp	r3, #0
 8003660:	d012      	beq.n	8003688 <HAL_ADC_IRQHandler+0x3a4>
 8003662:	69bb      	ldr	r3, [r7, #24]
 8003664:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003668:	2b00      	cmp	r3, #0
 800366a:	d00d      	beq.n	8003688 <HAL_ADC_IRQHandler+0x3a4>
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003670:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003678:	6878      	ldr	r0, [r7, #4]
 800367a:	f000 fd2b 	bl	80040d4 <HAL_ADCEx_LevelOutOfWindow2Callback>
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	681b      	ldr	r3, [r3, #0]
 8003682:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003686:	601a      	str	r2, [r3, #0]
 8003688:	69fb      	ldr	r3, [r7, #28]
 800368a:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800368e:	2b00      	cmp	r3, #0
 8003690:	d012      	beq.n	80036b8 <HAL_ADC_IRQHandler+0x3d4>
 8003692:	69bb      	ldr	r3, [r7, #24]
 8003694:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8003698:	2b00      	cmp	r3, #0
 800369a:	d00d      	beq.n	80036b8 <HAL_ADC_IRQHandler+0x3d4>
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80036a0:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 80036a4:	687b      	ldr	r3, [r7, #4]
 80036a6:	65da      	str	r2, [r3, #92]	@ 0x5c
 80036a8:	6878      	ldr	r0, [r7, #4]
 80036aa:	f000 fd1d 	bl	80040e8 <HAL_ADCEx_LevelOutOfWindow3Callback>
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	681b      	ldr	r3, [r3, #0]
 80036b2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80036b6:	601a      	str	r2, [r3, #0]
 80036b8:	69fb      	ldr	r3, [r7, #28]
 80036ba:	f003 0310 	and.w	r3, r3, #16
 80036be:	2b00      	cmp	r3, #0
 80036c0:	d043      	beq.n	800374a <HAL_ADC_IRQHandler+0x466>
 80036c2:	69bb      	ldr	r3, [r7, #24]
 80036c4:	f003 0310 	and.w	r3, r3, #16
 80036c8:	2b00      	cmp	r3, #0
 80036ca:	d03e      	beq.n	800374a <HAL_ADC_IRQHandler+0x466>
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80036d0:	2b00      	cmp	r3, #0
 80036d2:	d102      	bne.n	80036da <HAL_ADC_IRQHandler+0x3f6>
 80036d4:	2301      	movs	r3, #1
 80036d6:	627b      	str	r3, [r7, #36]	@ 0x24
 80036d8:	e021      	b.n	800371e <HAL_ADC_IRQHandler+0x43a>
 80036da:	697b      	ldr	r3, [r7, #20]
 80036dc:	2b00      	cmp	r3, #0
 80036de:	d015      	beq.n	800370c <HAL_ADC_IRQHandler+0x428>
 80036e0:	687b      	ldr	r3, [r7, #4]
 80036e2:	681b      	ldr	r3, [r3, #0]
 80036e4:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80036e8:	d004      	beq.n	80036f4 <HAL_ADC_IRQHandler+0x410>
 80036ea:	687b      	ldr	r3, [r7, #4]
 80036ec:	681b      	ldr	r3, [r3, #0]
 80036ee:	4a28      	ldr	r2, [pc, #160]	@ (8003790 <HAL_ADC_IRQHandler+0x4ac>)
 80036f0:	4293      	cmp	r3, r2
 80036f2:	d101      	bne.n	80036f8 <HAL_ADC_IRQHandler+0x414>
 80036f4:	4b29      	ldr	r3, [pc, #164]	@ (800379c <HAL_ADC_IRQHandler+0x4b8>)
 80036f6:	e000      	b.n	80036fa <HAL_ADC_IRQHandler+0x416>
 80036f8:	4b29      	ldr	r3, [pc, #164]	@ (80037a0 <HAL_ADC_IRQHandler+0x4bc>)
 80036fa:	4618      	mov	r0, r3
 80036fc:	f7ff fb9a 	bl	8002e34 <LL_ADC_GetMultiDMATransfer>
 8003700:	4603      	mov	r3, r0
 8003702:	2b00      	cmp	r3, #0
 8003704:	d00b      	beq.n	800371e <HAL_ADC_IRQHandler+0x43a>
 8003706:	2301      	movs	r3, #1
 8003708:	627b      	str	r3, [r7, #36]	@ 0x24
 800370a:	e008      	b.n	800371e <HAL_ADC_IRQHandler+0x43a>
 800370c:	687b      	ldr	r3, [r7, #4]
 800370e:	681b      	ldr	r3, [r3, #0]
 8003710:	68db      	ldr	r3, [r3, #12]
 8003712:	f003 0301 	and.w	r3, r3, #1
 8003716:	2b00      	cmp	r3, #0
 8003718:	d001      	beq.n	800371e <HAL_ADC_IRQHandler+0x43a>
 800371a:	2301      	movs	r3, #1
 800371c:	627b      	str	r3, [r7, #36]	@ 0x24
 800371e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003720:	2b01      	cmp	r3, #1
 8003722:	d10e      	bne.n	8003742 <HAL_ADC_IRQHandler+0x45e>
 8003724:	687b      	ldr	r3, [r7, #4]
 8003726:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003728:	f443 6280 	orr.w	r2, r3, #1024	@ 0x400
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003734:	f043 0202 	orr.w	r2, r3, #2
 8003738:	687b      	ldr	r3, [r7, #4]
 800373a:	661a      	str	r2, [r3, #96]	@ 0x60
 800373c:	6878      	ldr	r0, [r7, #4]
 800373e:	f000 f845 	bl	80037cc <HAL_ADC_ErrorCallback>
 8003742:	687b      	ldr	r3, [r7, #4]
 8003744:	681b      	ldr	r3, [r3, #0]
 8003746:	2210      	movs	r2, #16
 8003748:	601a      	str	r2, [r3, #0]
 800374a:	69fb      	ldr	r3, [r7, #28]
 800374c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003750:	2b00      	cmp	r3, #0
 8003752:	d018      	beq.n	8003786 <HAL_ADC_IRQHandler+0x4a2>
 8003754:	69bb      	ldr	r3, [r7, #24]
 8003756:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800375a:	2b00      	cmp	r3, #0
 800375c:	d013      	beq.n	8003786 <HAL_ADC_IRQHandler+0x4a2>
 800375e:	687b      	ldr	r3, [r7, #4]
 8003760:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003762:	f443 4280 	orr.w	r2, r3, #16384	@ 0x4000
 8003766:	687b      	ldr	r3, [r7, #4]
 8003768:	65da      	str	r2, [r3, #92]	@ 0x5c
 800376a:	687b      	ldr	r3, [r7, #4]
 800376c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800376e:	f043 0208 	orr.w	r2, r3, #8
 8003772:	687b      	ldr	r3, [r7, #4]
 8003774:	661a      	str	r2, [r3, #96]	@ 0x60
 8003776:	687b      	ldr	r3, [r7, #4]
 8003778:	681b      	ldr	r3, [r3, #0]
 800377a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800377e:	601a      	str	r2, [r3, #0]
 8003780:	6878      	ldr	r0, [r7, #4]
 8003782:	f000 fc9d 	bl	80040c0 <HAL_ADCEx_InjectedQueueOverflowCallback>
 8003786:	bf00      	nop
 8003788:	3728      	adds	r7, #40	@ 0x28
 800378a:	46bd      	mov	sp, r7
 800378c:	bd80      	pop	{r7, pc}
 800378e:	bf00      	nop
 8003790:	50000100 	.word	0x50000100
 8003794:	50000500 	.word	0x50000500
 8003798:	50000400 	.word	0x50000400
 800379c:	50000300 	.word	0x50000300
 80037a0:	50000700 	.word	0x50000700

080037a4 <HAL_ADC_ConvCpltCallback>:
 80037a4:	b480      	push	{r7}
 80037a6:	b083      	sub	sp, #12
 80037a8:	af00      	add	r7, sp, #0
 80037aa:	6078      	str	r0, [r7, #4]
 80037ac:	bf00      	nop
 80037ae:	370c      	adds	r7, #12
 80037b0:	46bd      	mov	sp, r7
 80037b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037b6:	4770      	bx	lr

080037b8 <HAL_ADC_LevelOutOfWindowCallback>:
 80037b8:	b480      	push	{r7}
 80037ba:	b083      	sub	sp, #12
 80037bc:	af00      	add	r7, sp, #0
 80037be:	6078      	str	r0, [r7, #4]
 80037c0:	bf00      	nop
 80037c2:	370c      	adds	r7, #12
 80037c4:	46bd      	mov	sp, r7
 80037c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037ca:	4770      	bx	lr

080037cc <HAL_ADC_ErrorCallback>:
 80037cc:	b480      	push	{r7}
 80037ce:	b083      	sub	sp, #12
 80037d0:	af00      	add	r7, sp, #0
 80037d2:	6078      	str	r0, [r7, #4]
 80037d4:	bf00      	nop
 80037d6:	370c      	adds	r7, #12
 80037d8:	46bd      	mov	sp, r7
 80037da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037de:	4770      	bx	lr

080037e0 <HAL_ADC_ConfigChannel>:
 80037e0:	b580      	push	{r7, lr}
 80037e2:	b0b6      	sub	sp, #216	@ 0xd8
 80037e4:	af00      	add	r7, sp, #0
 80037e6:	6078      	str	r0, [r7, #4]
 80037e8:	6039      	str	r1, [r7, #0]
 80037ea:	2300      	movs	r3, #0
 80037ec:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 80037f0:	2300      	movs	r3, #0
 80037f2:	60fb      	str	r3, [r7, #12]
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 80037fa:	2b01      	cmp	r3, #1
 80037fc:	d102      	bne.n	8003804 <HAL_ADC_ConfigChannel+0x24>
 80037fe:	2302      	movs	r3, #2
 8003800:	f000 bc13 	b.w	800402a <HAL_ADC_ConfigChannel+0x84a>
 8003804:	687b      	ldr	r3, [r7, #4]
 8003806:	2201      	movs	r2, #1
 8003808:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 800380c:	687b      	ldr	r3, [r7, #4]
 800380e:	681b      	ldr	r3, [r3, #0]
 8003810:	4618      	mov	r0, r3
 8003812:	f7ff fb7e 	bl	8002f12 <LL_ADC_REG_IsConversionOngoing>
 8003816:	4603      	mov	r3, r0
 8003818:	2b00      	cmp	r3, #0
 800381a:	f040 83f3 	bne.w	8004004 <HAL_ADC_ConfigChannel+0x824>
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	6818      	ldr	r0, [r3, #0]
 8003822:	683b      	ldr	r3, [r7, #0]
 8003824:	6859      	ldr	r1, [r3, #4]
 8003826:	683b      	ldr	r3, [r7, #0]
 8003828:	681b      	ldr	r3, [r3, #0]
 800382a:	461a      	mov	r2, r3
 800382c:	f7ff fa61 	bl	8002cf2 <LL_ADC_REG_SetSequencerRanks>
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	681b      	ldr	r3, [r3, #0]
 8003834:	4618      	mov	r0, r3
 8003836:	f7ff fb6c 	bl	8002f12 <LL_ADC_REG_IsConversionOngoing>
 800383a:	f8c7 00d0 	str.w	r0, [r7, #208]	@ 0xd0
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	681b      	ldr	r3, [r3, #0]
 8003842:	4618      	mov	r0, r3
 8003844:	f7ff fb78 	bl	8002f38 <LL_ADC_INJ_IsConversionOngoing>
 8003848:	f8c7 00cc 	str.w	r0, [r7, #204]	@ 0xcc
 800384c:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 8003850:	2b00      	cmp	r3, #0
 8003852:	f040 81d9 	bne.w	8003c08 <HAL_ADC_ConfigChannel+0x428>
 8003856:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 800385a:	2b00      	cmp	r3, #0
 800385c:	f040 81d4 	bne.w	8003c08 <HAL_ADC_ConfigChannel+0x428>
 8003860:	683b      	ldr	r3, [r7, #0]
 8003862:	689b      	ldr	r3, [r3, #8]
 8003864:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8003868:	d10f      	bne.n	800388a <HAL_ADC_ConfigChannel+0xaa>
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	6818      	ldr	r0, [r3, #0]
 800386e:	683b      	ldr	r3, [r7, #0]
 8003870:	681b      	ldr	r3, [r3, #0]
 8003872:	2200      	movs	r2, #0
 8003874:	4619      	mov	r1, r3
 8003876:	f7ff fa7b 	bl	8002d70 <LL_ADC_SetChannelSamplingTime>
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 8003882:	4618      	mov	r0, r3
 8003884:	f7ff fa0f 	bl	8002ca6 <LL_ADC_SetSamplingTimeCommonConfig>
 8003888:	e00e      	b.n	80038a8 <HAL_ADC_ConfigChannel+0xc8>
 800388a:	687b      	ldr	r3, [r7, #4]
 800388c:	6818      	ldr	r0, [r3, #0]
 800388e:	683b      	ldr	r3, [r7, #0]
 8003890:	6819      	ldr	r1, [r3, #0]
 8003892:	683b      	ldr	r3, [r7, #0]
 8003894:	689b      	ldr	r3, [r3, #8]
 8003896:	461a      	mov	r2, r3
 8003898:	f7ff fa6a 	bl	8002d70 <LL_ADC_SetChannelSamplingTime>
 800389c:	687b      	ldr	r3, [r7, #4]
 800389e:	681b      	ldr	r3, [r3, #0]
 80038a0:	2100      	movs	r1, #0
 80038a2:	4618      	mov	r0, r3
 80038a4:	f7ff f9ff 	bl	8002ca6 <LL_ADC_SetSamplingTimeCommonConfig>
 80038a8:	683b      	ldr	r3, [r7, #0]
 80038aa:	695a      	ldr	r2, [r3, #20]
 80038ac:	687b      	ldr	r3, [r7, #4]
 80038ae:	681b      	ldr	r3, [r3, #0]
 80038b0:	68db      	ldr	r3, [r3, #12]
 80038b2:	08db      	lsrs	r3, r3, #3
 80038b4:	f003 0303 	and.w	r3, r3, #3
 80038b8:	005b      	lsls	r3, r3, #1
 80038ba:	fa02 f303 	lsl.w	r3, r2, r3
 80038be:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80038c2:	683b      	ldr	r3, [r7, #0]
 80038c4:	691b      	ldr	r3, [r3, #16]
 80038c6:	2b04      	cmp	r3, #4
 80038c8:	d022      	beq.n	8003910 <HAL_ADC_ConfigChannel+0x130>
 80038ca:	687b      	ldr	r3, [r7, #4]
 80038cc:	6818      	ldr	r0, [r3, #0]
 80038ce:	683b      	ldr	r3, [r7, #0]
 80038d0:	6919      	ldr	r1, [r3, #16]
 80038d2:	683b      	ldr	r3, [r7, #0]
 80038d4:	681a      	ldr	r2, [r3, #0]
 80038d6:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 80038da:	f7ff f959 	bl	8002b90 <LL_ADC_SetOffset>
 80038de:	687b      	ldr	r3, [r7, #4]
 80038e0:	6818      	ldr	r0, [r3, #0]
 80038e2:	683b      	ldr	r3, [r7, #0]
 80038e4:	6919      	ldr	r1, [r3, #16]
 80038e6:	683b      	ldr	r3, [r7, #0]
 80038e8:	699b      	ldr	r3, [r3, #24]
 80038ea:	461a      	mov	r2, r3
 80038ec:	f7ff f9a5 	bl	8002c3a <LL_ADC_SetOffsetSign>
 80038f0:	687b      	ldr	r3, [r7, #4]
 80038f2:	6818      	ldr	r0, [r3, #0]
 80038f4:	683b      	ldr	r3, [r7, #0]
 80038f6:	6919      	ldr	r1, [r3, #16]
 80038f8:	683b      	ldr	r3, [r7, #0]
 80038fa:	7f1b      	ldrb	r3, [r3, #28]
 80038fc:	2b01      	cmp	r3, #1
 80038fe:	d102      	bne.n	8003906 <HAL_ADC_ConfigChannel+0x126>
 8003900:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8003904:	e000      	b.n	8003908 <HAL_ADC_ConfigChannel+0x128>
 8003906:	2300      	movs	r3, #0
 8003908:	461a      	mov	r2, r3
 800390a:	f7ff f9b1 	bl	8002c70 <LL_ADC_SetOffsetSaturation>
 800390e:	e17b      	b.n	8003c08 <HAL_ADC_ConfigChannel+0x428>
 8003910:	687b      	ldr	r3, [r7, #4]
 8003912:	681b      	ldr	r3, [r3, #0]
 8003914:	2100      	movs	r1, #0
 8003916:	4618      	mov	r0, r3
 8003918:	f7ff f95e 	bl	8002bd8 <LL_ADC_GetOffsetChannel>
 800391c:	4603      	mov	r3, r0
 800391e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003922:	2b00      	cmp	r3, #0
 8003924:	d10a      	bne.n	800393c <HAL_ADC_ConfigChannel+0x15c>
 8003926:	687b      	ldr	r3, [r7, #4]
 8003928:	681b      	ldr	r3, [r3, #0]
 800392a:	2100      	movs	r1, #0
 800392c:	4618      	mov	r0, r3
 800392e:	f7ff f953 	bl	8002bd8 <LL_ADC_GetOffsetChannel>
 8003932:	4603      	mov	r3, r0
 8003934:	0e9b      	lsrs	r3, r3, #26
 8003936:	f003 021f 	and.w	r2, r3, #31
 800393a:	e01e      	b.n	800397a <HAL_ADC_ConfigChannel+0x19a>
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	681b      	ldr	r3, [r3, #0]
 8003940:	2100      	movs	r1, #0
 8003942:	4618      	mov	r0, r3
 8003944:	f7ff f948 	bl	8002bd8 <LL_ADC_GetOffsetChannel>
 8003948:	4603      	mov	r3, r0
 800394a:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 800394e:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 8003952:	fa93 f3a3 	rbit	r3, r3
 8003956:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800395a:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800395e:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8003962:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8003966:	2b00      	cmp	r3, #0
 8003968:	d101      	bne.n	800396e <HAL_ADC_ConfigChannel+0x18e>
 800396a:	2320      	movs	r3, #32
 800396c:	e004      	b.n	8003978 <HAL_ADC_ConfigChannel+0x198>
 800396e:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8003972:	fab3 f383 	clz	r3, r3
 8003976:	b2db      	uxtb	r3, r3
 8003978:	461a      	mov	r2, r3
 800397a:	683b      	ldr	r3, [r7, #0]
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003982:	2b00      	cmp	r3, #0
 8003984:	d105      	bne.n	8003992 <HAL_ADC_ConfigChannel+0x1b2>
 8003986:	683b      	ldr	r3, [r7, #0]
 8003988:	681b      	ldr	r3, [r3, #0]
 800398a:	0e9b      	lsrs	r3, r3, #26
 800398c:	f003 031f 	and.w	r3, r3, #31
 8003990:	e018      	b.n	80039c4 <HAL_ADC_ConfigChannel+0x1e4>
 8003992:	683b      	ldr	r3, [r7, #0]
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800399a:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 800399e:	fa93 f3a3 	rbit	r3, r3
 80039a2:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80039a6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80039aa:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80039ae:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 80039b2:	2b00      	cmp	r3, #0
 80039b4:	d101      	bne.n	80039ba <HAL_ADC_ConfigChannel+0x1da>
 80039b6:	2320      	movs	r3, #32
 80039b8:	e004      	b.n	80039c4 <HAL_ADC_ConfigChannel+0x1e4>
 80039ba:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 80039be:	fab3 f383 	clz	r3, r3
 80039c2:	b2db      	uxtb	r3, r3
 80039c4:	429a      	cmp	r2, r3
 80039c6:	d106      	bne.n	80039d6 <HAL_ADC_ConfigChannel+0x1f6>
 80039c8:	687b      	ldr	r3, [r7, #4]
 80039ca:	681b      	ldr	r3, [r3, #0]
 80039cc:	2200      	movs	r2, #0
 80039ce:	2100      	movs	r1, #0
 80039d0:	4618      	mov	r0, r3
 80039d2:	f7ff f917 	bl	8002c04 <LL_ADC_SetOffsetState>
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	681b      	ldr	r3, [r3, #0]
 80039da:	2101      	movs	r1, #1
 80039dc:	4618      	mov	r0, r3
 80039de:	f7ff f8fb 	bl	8002bd8 <LL_ADC_GetOffsetChannel>
 80039e2:	4603      	mov	r3, r0
 80039e4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80039e8:	2b00      	cmp	r3, #0
 80039ea:	d10a      	bne.n	8003a02 <HAL_ADC_ConfigChannel+0x222>
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	681b      	ldr	r3, [r3, #0]
 80039f0:	2101      	movs	r1, #1
 80039f2:	4618      	mov	r0, r3
 80039f4:	f7ff f8f0 	bl	8002bd8 <LL_ADC_GetOffsetChannel>
 80039f8:	4603      	mov	r3, r0
 80039fa:	0e9b      	lsrs	r3, r3, #26
 80039fc:	f003 021f 	and.w	r2, r3, #31
 8003a00:	e01e      	b.n	8003a40 <HAL_ADC_ConfigChannel+0x260>
 8003a02:	687b      	ldr	r3, [r7, #4]
 8003a04:	681b      	ldr	r3, [r3, #0]
 8003a06:	2101      	movs	r1, #1
 8003a08:	4618      	mov	r0, r3
 8003a0a:	f7ff f8e5 	bl	8002bd8 <LL_ADC_GetOffsetChannel>
 8003a0e:	4603      	mov	r3, r0
 8003a10:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8003a14:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8003a18:	fa93 f3a3 	rbit	r3, r3
 8003a1c:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8003a20:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8003a24:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8003a28:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8003a2c:	2b00      	cmp	r3, #0
 8003a2e:	d101      	bne.n	8003a34 <HAL_ADC_ConfigChannel+0x254>
 8003a30:	2320      	movs	r3, #32
 8003a32:	e004      	b.n	8003a3e <HAL_ADC_ConfigChannel+0x25e>
 8003a34:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8003a38:	fab3 f383 	clz	r3, r3
 8003a3c:	b2db      	uxtb	r3, r3
 8003a3e:	461a      	mov	r2, r3
 8003a40:	683b      	ldr	r3, [r7, #0]
 8003a42:	681b      	ldr	r3, [r3, #0]
 8003a44:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003a48:	2b00      	cmp	r3, #0
 8003a4a:	d105      	bne.n	8003a58 <HAL_ADC_ConfigChannel+0x278>
 8003a4c:	683b      	ldr	r3, [r7, #0]
 8003a4e:	681b      	ldr	r3, [r3, #0]
 8003a50:	0e9b      	lsrs	r3, r3, #26
 8003a52:	f003 031f 	and.w	r3, r3, #31
 8003a56:	e018      	b.n	8003a8a <HAL_ADC_ConfigChannel+0x2aa>
 8003a58:	683b      	ldr	r3, [r7, #0]
 8003a5a:	681b      	ldr	r3, [r3, #0]
 8003a5c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8003a60:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8003a64:	fa93 f3a3 	rbit	r3, r3
 8003a68:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8003a6c:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 8003a70:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8003a74:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8003a78:	2b00      	cmp	r3, #0
 8003a7a:	d101      	bne.n	8003a80 <HAL_ADC_ConfigChannel+0x2a0>
 8003a7c:	2320      	movs	r3, #32
 8003a7e:	e004      	b.n	8003a8a <HAL_ADC_ConfigChannel+0x2aa>
 8003a80:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8003a84:	fab3 f383 	clz	r3, r3
 8003a88:	b2db      	uxtb	r3, r3
 8003a8a:	429a      	cmp	r2, r3
 8003a8c:	d106      	bne.n	8003a9c <HAL_ADC_ConfigChannel+0x2bc>
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	681b      	ldr	r3, [r3, #0]
 8003a92:	2200      	movs	r2, #0
 8003a94:	2101      	movs	r1, #1
 8003a96:	4618      	mov	r0, r3
 8003a98:	f7ff f8b4 	bl	8002c04 <LL_ADC_SetOffsetState>
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	681b      	ldr	r3, [r3, #0]
 8003aa0:	2102      	movs	r1, #2
 8003aa2:	4618      	mov	r0, r3
 8003aa4:	f7ff f898 	bl	8002bd8 <LL_ADC_GetOffsetChannel>
 8003aa8:	4603      	mov	r3, r0
 8003aaa:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003aae:	2b00      	cmp	r3, #0
 8003ab0:	d10a      	bne.n	8003ac8 <HAL_ADC_ConfigChannel+0x2e8>
 8003ab2:	687b      	ldr	r3, [r7, #4]
 8003ab4:	681b      	ldr	r3, [r3, #0]
 8003ab6:	2102      	movs	r1, #2
 8003ab8:	4618      	mov	r0, r3
 8003aba:	f7ff f88d 	bl	8002bd8 <LL_ADC_GetOffsetChannel>
 8003abe:	4603      	mov	r3, r0
 8003ac0:	0e9b      	lsrs	r3, r3, #26
 8003ac2:	f003 021f 	and.w	r2, r3, #31
 8003ac6:	e01e      	b.n	8003b06 <HAL_ADC_ConfigChannel+0x326>
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	681b      	ldr	r3, [r3, #0]
 8003acc:	2102      	movs	r1, #2
 8003ace:	4618      	mov	r0, r3
 8003ad0:	f7ff f882 	bl	8002bd8 <LL_ADC_GetOffsetChannel>
 8003ad4:	4603      	mov	r3, r0
 8003ad6:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8003ada:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003ade:	fa93 f3a3 	rbit	r3, r3
 8003ae2:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8003ae6:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8003aea:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003aee:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8003af2:	2b00      	cmp	r3, #0
 8003af4:	d101      	bne.n	8003afa <HAL_ADC_ConfigChannel+0x31a>
 8003af6:	2320      	movs	r3, #32
 8003af8:	e004      	b.n	8003b04 <HAL_ADC_ConfigChannel+0x324>
 8003afa:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8003afe:	fab3 f383 	clz	r3, r3
 8003b02:	b2db      	uxtb	r3, r3
 8003b04:	461a      	mov	r2, r3
 8003b06:	683b      	ldr	r3, [r7, #0]
 8003b08:	681b      	ldr	r3, [r3, #0]
 8003b0a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003b0e:	2b00      	cmp	r3, #0
 8003b10:	d105      	bne.n	8003b1e <HAL_ADC_ConfigChannel+0x33e>
 8003b12:	683b      	ldr	r3, [r7, #0]
 8003b14:	681b      	ldr	r3, [r3, #0]
 8003b16:	0e9b      	lsrs	r3, r3, #26
 8003b18:	f003 031f 	and.w	r3, r3, #31
 8003b1c:	e016      	b.n	8003b4c <HAL_ADC_ConfigChannel+0x36c>
 8003b1e:	683b      	ldr	r3, [r7, #0]
 8003b20:	681b      	ldr	r3, [r3, #0]
 8003b22:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8003b26:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8003b2a:	fa93 f3a3 	rbit	r3, r3
 8003b2e:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8003b30:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8003b32:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003b36:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8003b3a:	2b00      	cmp	r3, #0
 8003b3c:	d101      	bne.n	8003b42 <HAL_ADC_ConfigChannel+0x362>
 8003b3e:	2320      	movs	r3, #32
 8003b40:	e004      	b.n	8003b4c <HAL_ADC_ConfigChannel+0x36c>
 8003b42:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8003b46:	fab3 f383 	clz	r3, r3
 8003b4a:	b2db      	uxtb	r3, r3
 8003b4c:	429a      	cmp	r2, r3
 8003b4e:	d106      	bne.n	8003b5e <HAL_ADC_ConfigChannel+0x37e>
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	681b      	ldr	r3, [r3, #0]
 8003b54:	2200      	movs	r2, #0
 8003b56:	2102      	movs	r1, #2
 8003b58:	4618      	mov	r0, r3
 8003b5a:	f7ff f853 	bl	8002c04 <LL_ADC_SetOffsetState>
 8003b5e:	687b      	ldr	r3, [r7, #4]
 8003b60:	681b      	ldr	r3, [r3, #0]
 8003b62:	2103      	movs	r1, #3
 8003b64:	4618      	mov	r0, r3
 8003b66:	f7ff f837 	bl	8002bd8 <LL_ADC_GetOffsetChannel>
 8003b6a:	4603      	mov	r3, r0
 8003b6c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003b70:	2b00      	cmp	r3, #0
 8003b72:	d10a      	bne.n	8003b8a <HAL_ADC_ConfigChannel+0x3aa>
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	681b      	ldr	r3, [r3, #0]
 8003b78:	2103      	movs	r1, #3
 8003b7a:	4618      	mov	r0, r3
 8003b7c:	f7ff f82c 	bl	8002bd8 <LL_ADC_GetOffsetChannel>
 8003b80:	4603      	mov	r3, r0
 8003b82:	0e9b      	lsrs	r3, r3, #26
 8003b84:	f003 021f 	and.w	r2, r3, #31
 8003b88:	e017      	b.n	8003bba <HAL_ADC_ConfigChannel+0x3da>
 8003b8a:	687b      	ldr	r3, [r7, #4]
 8003b8c:	681b      	ldr	r3, [r3, #0]
 8003b8e:	2103      	movs	r1, #3
 8003b90:	4618      	mov	r0, r3
 8003b92:	f7ff f821 	bl	8002bd8 <LL_ADC_GetOffsetChannel>
 8003b96:	4603      	mov	r3, r0
 8003b98:	677b      	str	r3, [r7, #116]	@ 0x74
 8003b9a:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003b9c:	fa93 f3a3 	rbit	r3, r3
 8003ba0:	673b      	str	r3, [r7, #112]	@ 0x70
 8003ba2:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8003ba4:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003ba6:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8003ba8:	2b00      	cmp	r3, #0
 8003baa:	d101      	bne.n	8003bb0 <HAL_ADC_ConfigChannel+0x3d0>
 8003bac:	2320      	movs	r3, #32
 8003bae:	e003      	b.n	8003bb8 <HAL_ADC_ConfigChannel+0x3d8>
 8003bb0:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8003bb2:	fab3 f383 	clz	r3, r3
 8003bb6:	b2db      	uxtb	r3, r3
 8003bb8:	461a      	mov	r2, r3
 8003bba:	683b      	ldr	r3, [r7, #0]
 8003bbc:	681b      	ldr	r3, [r3, #0]
 8003bbe:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003bc2:	2b00      	cmp	r3, #0
 8003bc4:	d105      	bne.n	8003bd2 <HAL_ADC_ConfigChannel+0x3f2>
 8003bc6:	683b      	ldr	r3, [r7, #0]
 8003bc8:	681b      	ldr	r3, [r3, #0]
 8003bca:	0e9b      	lsrs	r3, r3, #26
 8003bcc:	f003 031f 	and.w	r3, r3, #31
 8003bd0:	e011      	b.n	8003bf6 <HAL_ADC_ConfigChannel+0x416>
 8003bd2:	683b      	ldr	r3, [r7, #0]
 8003bd4:	681b      	ldr	r3, [r3, #0]
 8003bd6:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003bd8:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8003bda:	fa93 f3a3 	rbit	r3, r3
 8003bde:	667b      	str	r3, [r7, #100]	@ 0x64
 8003be0:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8003be2:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8003be4:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8003be6:	2b00      	cmp	r3, #0
 8003be8:	d101      	bne.n	8003bee <HAL_ADC_ConfigChannel+0x40e>
 8003bea:	2320      	movs	r3, #32
 8003bec:	e003      	b.n	8003bf6 <HAL_ADC_ConfigChannel+0x416>
 8003bee:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8003bf0:	fab3 f383 	clz	r3, r3
 8003bf4:	b2db      	uxtb	r3, r3
 8003bf6:	429a      	cmp	r2, r3
 8003bf8:	d106      	bne.n	8003c08 <HAL_ADC_ConfigChannel+0x428>
 8003bfa:	687b      	ldr	r3, [r7, #4]
 8003bfc:	681b      	ldr	r3, [r3, #0]
 8003bfe:	2200      	movs	r2, #0
 8003c00:	2103      	movs	r1, #3
 8003c02:	4618      	mov	r0, r3
 8003c04:	f7fe fffe 	bl	8002c04 <LL_ADC_SetOffsetState>
 8003c08:	687b      	ldr	r3, [r7, #4]
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	4618      	mov	r0, r3
 8003c0e:	f7ff f96d 	bl	8002eec <LL_ADC_IsEnabled>
 8003c12:	4603      	mov	r3, r0
 8003c14:	2b00      	cmp	r3, #0
 8003c16:	f040 813d 	bne.w	8003e94 <HAL_ADC_ConfigChannel+0x6b4>
 8003c1a:	687b      	ldr	r3, [r7, #4]
 8003c1c:	6818      	ldr	r0, [r3, #0]
 8003c1e:	683b      	ldr	r3, [r7, #0]
 8003c20:	6819      	ldr	r1, [r3, #0]
 8003c22:	683b      	ldr	r3, [r7, #0]
 8003c24:	68db      	ldr	r3, [r3, #12]
 8003c26:	461a      	mov	r2, r3
 8003c28:	f7ff f8ce 	bl	8002dc8 <LL_ADC_SetChannelSingleDiff>
 8003c2c:	683b      	ldr	r3, [r7, #0]
 8003c2e:	68db      	ldr	r3, [r3, #12]
 8003c30:	4aa2      	ldr	r2, [pc, #648]	@ (8003ebc <HAL_ADC_ConfigChannel+0x6dc>)
 8003c32:	4293      	cmp	r3, r2
 8003c34:	f040 812e 	bne.w	8003e94 <HAL_ADC_ConfigChannel+0x6b4>
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	6818      	ldr	r0, [r3, #0]
 8003c3c:	683b      	ldr	r3, [r7, #0]
 8003c3e:	681b      	ldr	r3, [r3, #0]
 8003c40:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003c44:	2b00      	cmp	r3, #0
 8003c46:	d10b      	bne.n	8003c60 <HAL_ADC_ConfigChannel+0x480>
 8003c48:	683b      	ldr	r3, [r7, #0]
 8003c4a:	681b      	ldr	r3, [r3, #0]
 8003c4c:	0e9b      	lsrs	r3, r3, #26
 8003c4e:	3301      	adds	r3, #1
 8003c50:	f003 031f 	and.w	r3, r3, #31
 8003c54:	2b09      	cmp	r3, #9
 8003c56:	bf94      	ite	ls
 8003c58:	2301      	movls	r3, #1
 8003c5a:	2300      	movhi	r3, #0
 8003c5c:	b2db      	uxtb	r3, r3
 8003c5e:	e019      	b.n	8003c94 <HAL_ADC_ConfigChannel+0x4b4>
 8003c60:	683b      	ldr	r3, [r7, #0]
 8003c62:	681b      	ldr	r3, [r3, #0]
 8003c64:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003c66:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8003c68:	fa93 f3a3 	rbit	r3, r3
 8003c6c:	65bb      	str	r3, [r7, #88]	@ 0x58
 8003c6e:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8003c70:	663b      	str	r3, [r7, #96]	@ 0x60
 8003c72:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8003c74:	2b00      	cmp	r3, #0
 8003c76:	d101      	bne.n	8003c7c <HAL_ADC_ConfigChannel+0x49c>
 8003c78:	2320      	movs	r3, #32
 8003c7a:	e003      	b.n	8003c84 <HAL_ADC_ConfigChannel+0x4a4>
 8003c7c:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8003c7e:	fab3 f383 	clz	r3, r3
 8003c82:	b2db      	uxtb	r3, r3
 8003c84:	3301      	adds	r3, #1
 8003c86:	f003 031f 	and.w	r3, r3, #31
 8003c8a:	2b09      	cmp	r3, #9
 8003c8c:	bf94      	ite	ls
 8003c8e:	2301      	movls	r3, #1
 8003c90:	2300      	movhi	r3, #0
 8003c92:	b2db      	uxtb	r3, r3
 8003c94:	2b00      	cmp	r3, #0
 8003c96:	d079      	beq.n	8003d8c <HAL_ADC_ConfigChannel+0x5ac>
 8003c98:	683b      	ldr	r3, [r7, #0]
 8003c9a:	681b      	ldr	r3, [r3, #0]
 8003c9c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003ca0:	2b00      	cmp	r3, #0
 8003ca2:	d107      	bne.n	8003cb4 <HAL_ADC_ConfigChannel+0x4d4>
 8003ca4:	683b      	ldr	r3, [r7, #0]
 8003ca6:	681b      	ldr	r3, [r3, #0]
 8003ca8:	0e9b      	lsrs	r3, r3, #26
 8003caa:	3301      	adds	r3, #1
 8003cac:	069b      	lsls	r3, r3, #26
 8003cae:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8003cb2:	e015      	b.n	8003ce0 <HAL_ADC_ConfigChannel+0x500>
 8003cb4:	683b      	ldr	r3, [r7, #0]
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	653b      	str	r3, [r7, #80]	@ 0x50
 8003cba:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8003cbc:	fa93 f3a3 	rbit	r3, r3
 8003cc0:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003cc2:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8003cc4:	657b      	str	r3, [r7, #84]	@ 0x54
 8003cc6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003cc8:	2b00      	cmp	r3, #0
 8003cca:	d101      	bne.n	8003cd0 <HAL_ADC_ConfigChannel+0x4f0>
 8003ccc:	2320      	movs	r3, #32
 8003cce:	e003      	b.n	8003cd8 <HAL_ADC_ConfigChannel+0x4f8>
 8003cd0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003cd2:	fab3 f383 	clz	r3, r3
 8003cd6:	b2db      	uxtb	r3, r3
 8003cd8:	3301      	adds	r3, #1
 8003cda:	069b      	lsls	r3, r3, #26
 8003cdc:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8003ce0:	683b      	ldr	r3, [r7, #0]
 8003ce2:	681b      	ldr	r3, [r3, #0]
 8003ce4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003ce8:	2b00      	cmp	r3, #0
 8003cea:	d109      	bne.n	8003d00 <HAL_ADC_ConfigChannel+0x520>
 8003cec:	683b      	ldr	r3, [r7, #0]
 8003cee:	681b      	ldr	r3, [r3, #0]
 8003cf0:	0e9b      	lsrs	r3, r3, #26
 8003cf2:	3301      	adds	r3, #1
 8003cf4:	f003 031f 	and.w	r3, r3, #31
 8003cf8:	2101      	movs	r1, #1
 8003cfa:	fa01 f303 	lsl.w	r3, r1, r3
 8003cfe:	e017      	b.n	8003d30 <HAL_ADC_ConfigChannel+0x550>
 8003d00:	683b      	ldr	r3, [r7, #0]
 8003d02:	681b      	ldr	r3, [r3, #0]
 8003d04:	647b      	str	r3, [r7, #68]	@ 0x44
 8003d06:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8003d08:	fa93 f3a3 	rbit	r3, r3
 8003d0c:	643b      	str	r3, [r7, #64]	@ 0x40
 8003d0e:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8003d10:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003d12:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003d14:	2b00      	cmp	r3, #0
 8003d16:	d101      	bne.n	8003d1c <HAL_ADC_ConfigChannel+0x53c>
 8003d18:	2320      	movs	r3, #32
 8003d1a:	e003      	b.n	8003d24 <HAL_ADC_ConfigChannel+0x544>
 8003d1c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003d1e:	fab3 f383 	clz	r3, r3
 8003d22:	b2db      	uxtb	r3, r3
 8003d24:	3301      	adds	r3, #1
 8003d26:	f003 031f 	and.w	r3, r3, #31
 8003d2a:	2101      	movs	r1, #1
 8003d2c:	fa01 f303 	lsl.w	r3, r1, r3
 8003d30:	ea42 0103 	orr.w	r1, r2, r3
 8003d34:	683b      	ldr	r3, [r7, #0]
 8003d36:	681b      	ldr	r3, [r3, #0]
 8003d38:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003d3c:	2b00      	cmp	r3, #0
 8003d3e:	d10a      	bne.n	8003d56 <HAL_ADC_ConfigChannel+0x576>
 8003d40:	683b      	ldr	r3, [r7, #0]
 8003d42:	681b      	ldr	r3, [r3, #0]
 8003d44:	0e9b      	lsrs	r3, r3, #26
 8003d46:	3301      	adds	r3, #1
 8003d48:	f003 021f 	and.w	r2, r3, #31
 8003d4c:	4613      	mov	r3, r2
 8003d4e:	005b      	lsls	r3, r3, #1
 8003d50:	4413      	add	r3, r2
 8003d52:	051b      	lsls	r3, r3, #20
 8003d54:	e018      	b.n	8003d88 <HAL_ADC_ConfigChannel+0x5a8>
 8003d56:	683b      	ldr	r3, [r7, #0]
 8003d58:	681b      	ldr	r3, [r3, #0]
 8003d5a:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003d5c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003d5e:	fa93 f3a3 	rbit	r3, r3
 8003d62:	637b      	str	r3, [r7, #52]	@ 0x34
 8003d64:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003d66:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003d68:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003d6a:	2b00      	cmp	r3, #0
 8003d6c:	d101      	bne.n	8003d72 <HAL_ADC_ConfigChannel+0x592>
 8003d6e:	2320      	movs	r3, #32
 8003d70:	e003      	b.n	8003d7a <HAL_ADC_ConfigChannel+0x59a>
 8003d72:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003d74:	fab3 f383 	clz	r3, r3
 8003d78:	b2db      	uxtb	r3, r3
 8003d7a:	3301      	adds	r3, #1
 8003d7c:	f003 021f 	and.w	r2, r3, #31
 8003d80:	4613      	mov	r3, r2
 8003d82:	005b      	lsls	r3, r3, #1
 8003d84:	4413      	add	r3, r2
 8003d86:	051b      	lsls	r3, r3, #20
 8003d88:	430b      	orrs	r3, r1
 8003d8a:	e07e      	b.n	8003e8a <HAL_ADC_ConfigChannel+0x6aa>
 8003d8c:	683b      	ldr	r3, [r7, #0]
 8003d8e:	681b      	ldr	r3, [r3, #0]
 8003d90:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003d94:	2b00      	cmp	r3, #0
 8003d96:	d107      	bne.n	8003da8 <HAL_ADC_ConfigChannel+0x5c8>
 8003d98:	683b      	ldr	r3, [r7, #0]
 8003d9a:	681b      	ldr	r3, [r3, #0]
 8003d9c:	0e9b      	lsrs	r3, r3, #26
 8003d9e:	3301      	adds	r3, #1
 8003da0:	069b      	lsls	r3, r3, #26
 8003da2:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8003da6:	e015      	b.n	8003dd4 <HAL_ADC_ConfigChannel+0x5f4>
 8003da8:	683b      	ldr	r3, [r7, #0]
 8003daa:	681b      	ldr	r3, [r3, #0]
 8003dac:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003dae:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003db0:	fa93 f3a3 	rbit	r3, r3
 8003db4:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003db6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003db8:	633b      	str	r3, [r7, #48]	@ 0x30
 8003dba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003dbc:	2b00      	cmp	r3, #0
 8003dbe:	d101      	bne.n	8003dc4 <HAL_ADC_ConfigChannel+0x5e4>
 8003dc0:	2320      	movs	r3, #32
 8003dc2:	e003      	b.n	8003dcc <HAL_ADC_ConfigChannel+0x5ec>
 8003dc4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003dc6:	fab3 f383 	clz	r3, r3
 8003dca:	b2db      	uxtb	r3, r3
 8003dcc:	3301      	adds	r3, #1
 8003dce:	069b      	lsls	r3, r3, #26
 8003dd0:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8003dd4:	683b      	ldr	r3, [r7, #0]
 8003dd6:	681b      	ldr	r3, [r3, #0]
 8003dd8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003ddc:	2b00      	cmp	r3, #0
 8003dde:	d109      	bne.n	8003df4 <HAL_ADC_ConfigChannel+0x614>
 8003de0:	683b      	ldr	r3, [r7, #0]
 8003de2:	681b      	ldr	r3, [r3, #0]
 8003de4:	0e9b      	lsrs	r3, r3, #26
 8003de6:	3301      	adds	r3, #1
 8003de8:	f003 031f 	and.w	r3, r3, #31
 8003dec:	2101      	movs	r1, #1
 8003dee:	fa01 f303 	lsl.w	r3, r1, r3
 8003df2:	e017      	b.n	8003e24 <HAL_ADC_ConfigChannel+0x644>
 8003df4:	683b      	ldr	r3, [r7, #0]
 8003df6:	681b      	ldr	r3, [r3, #0]
 8003df8:	623b      	str	r3, [r7, #32]
 8003dfa:	6a3b      	ldr	r3, [r7, #32]
 8003dfc:	fa93 f3a3 	rbit	r3, r3
 8003e00:	61fb      	str	r3, [r7, #28]
 8003e02:	69fb      	ldr	r3, [r7, #28]
 8003e04:	627b      	str	r3, [r7, #36]	@ 0x24
 8003e06:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003e08:	2b00      	cmp	r3, #0
 8003e0a:	d101      	bne.n	8003e10 <HAL_ADC_ConfigChannel+0x630>
 8003e0c:	2320      	movs	r3, #32
 8003e0e:	e003      	b.n	8003e18 <HAL_ADC_ConfigChannel+0x638>
 8003e10:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003e12:	fab3 f383 	clz	r3, r3
 8003e16:	b2db      	uxtb	r3, r3
 8003e18:	3301      	adds	r3, #1
 8003e1a:	f003 031f 	and.w	r3, r3, #31
 8003e1e:	2101      	movs	r1, #1
 8003e20:	fa01 f303 	lsl.w	r3, r1, r3
 8003e24:	ea42 0103 	orr.w	r1, r2, r3
 8003e28:	683b      	ldr	r3, [r7, #0]
 8003e2a:	681b      	ldr	r3, [r3, #0]
 8003e2c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003e30:	2b00      	cmp	r3, #0
 8003e32:	d10d      	bne.n	8003e50 <HAL_ADC_ConfigChannel+0x670>
 8003e34:	683b      	ldr	r3, [r7, #0]
 8003e36:	681b      	ldr	r3, [r3, #0]
 8003e38:	0e9b      	lsrs	r3, r3, #26
 8003e3a:	3301      	adds	r3, #1
 8003e3c:	f003 021f 	and.w	r2, r3, #31
 8003e40:	4613      	mov	r3, r2
 8003e42:	005b      	lsls	r3, r3, #1
 8003e44:	4413      	add	r3, r2
 8003e46:	3b1e      	subs	r3, #30
 8003e48:	051b      	lsls	r3, r3, #20
 8003e4a:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8003e4e:	e01b      	b.n	8003e88 <HAL_ADC_ConfigChannel+0x6a8>
 8003e50:	683b      	ldr	r3, [r7, #0]
 8003e52:	681b      	ldr	r3, [r3, #0]
 8003e54:	617b      	str	r3, [r7, #20]
 8003e56:	697b      	ldr	r3, [r7, #20]
 8003e58:	fa93 f3a3 	rbit	r3, r3
 8003e5c:	613b      	str	r3, [r7, #16]
 8003e5e:	693b      	ldr	r3, [r7, #16]
 8003e60:	61bb      	str	r3, [r7, #24]
 8003e62:	69bb      	ldr	r3, [r7, #24]
 8003e64:	2b00      	cmp	r3, #0
 8003e66:	d101      	bne.n	8003e6c <HAL_ADC_ConfigChannel+0x68c>
 8003e68:	2320      	movs	r3, #32
 8003e6a:	e003      	b.n	8003e74 <HAL_ADC_ConfigChannel+0x694>
 8003e6c:	69bb      	ldr	r3, [r7, #24]
 8003e6e:	fab3 f383 	clz	r3, r3
 8003e72:	b2db      	uxtb	r3, r3
 8003e74:	3301      	adds	r3, #1
 8003e76:	f003 021f 	and.w	r2, r3, #31
 8003e7a:	4613      	mov	r3, r2
 8003e7c:	005b      	lsls	r3, r3, #1
 8003e7e:	4413      	add	r3, r2
 8003e80:	3b1e      	subs	r3, #30
 8003e82:	051b      	lsls	r3, r3, #20
 8003e84:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8003e88:	430b      	orrs	r3, r1
 8003e8a:	683a      	ldr	r2, [r7, #0]
 8003e8c:	6892      	ldr	r2, [r2, #8]
 8003e8e:	4619      	mov	r1, r3
 8003e90:	f7fe ff6e 	bl	8002d70 <LL_ADC_SetChannelSamplingTime>
 8003e94:	683b      	ldr	r3, [r7, #0]
 8003e96:	681a      	ldr	r2, [r3, #0]
 8003e98:	4b09      	ldr	r3, [pc, #36]	@ (8003ec0 <HAL_ADC_ConfigChannel+0x6e0>)
 8003e9a:	4013      	ands	r3, r2
 8003e9c:	2b00      	cmp	r3, #0
 8003e9e:	f000 80be 	beq.w	800401e <HAL_ADC_ConfigChannel+0x83e>
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	681b      	ldr	r3, [r3, #0]
 8003ea6:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8003eaa:	d004      	beq.n	8003eb6 <HAL_ADC_ConfigChannel+0x6d6>
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	681b      	ldr	r3, [r3, #0]
 8003eb0:	4a04      	ldr	r2, [pc, #16]	@ (8003ec4 <HAL_ADC_ConfigChannel+0x6e4>)
 8003eb2:	4293      	cmp	r3, r2
 8003eb4:	d10a      	bne.n	8003ecc <HAL_ADC_ConfigChannel+0x6ec>
 8003eb6:	4b04      	ldr	r3, [pc, #16]	@ (8003ec8 <HAL_ADC_ConfigChannel+0x6e8>)
 8003eb8:	e009      	b.n	8003ece <HAL_ADC_ConfigChannel+0x6ee>
 8003eba:	bf00      	nop
 8003ebc:	407f0000 	.word	0x407f0000
 8003ec0:	80080000 	.word	0x80080000
 8003ec4:	50000100 	.word	0x50000100
 8003ec8:	50000300 	.word	0x50000300
 8003ecc:	4b59      	ldr	r3, [pc, #356]	@ (8004034 <HAL_ADC_ConfigChannel+0x854>)
 8003ece:	4618      	mov	r0, r3
 8003ed0:	f7fe fe50 	bl	8002b74 <LL_ADC_GetCommonPathInternalCh>
 8003ed4:	f8c7 00c4 	str.w	r0, [r7, #196]	@ 0xc4
 8003ed8:	683b      	ldr	r3, [r7, #0]
 8003eda:	681b      	ldr	r3, [r3, #0]
 8003edc:	4a56      	ldr	r2, [pc, #344]	@ (8004038 <HAL_ADC_ConfigChannel+0x858>)
 8003ede:	4293      	cmp	r3, r2
 8003ee0:	d004      	beq.n	8003eec <HAL_ADC_ConfigChannel+0x70c>
 8003ee2:	683b      	ldr	r3, [r7, #0]
 8003ee4:	681b      	ldr	r3, [r3, #0]
 8003ee6:	4a55      	ldr	r2, [pc, #340]	@ (800403c <HAL_ADC_ConfigChannel+0x85c>)
 8003ee8:	4293      	cmp	r3, r2
 8003eea:	d13a      	bne.n	8003f62 <HAL_ADC_ConfigChannel+0x782>
 8003eec:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003ef0:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8003ef4:	2b00      	cmp	r3, #0
 8003ef6:	d134      	bne.n	8003f62 <HAL_ADC_ConfigChannel+0x782>
 8003ef8:	687b      	ldr	r3, [r7, #4]
 8003efa:	681b      	ldr	r3, [r3, #0]
 8003efc:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8003f00:	d005      	beq.n	8003f0e <HAL_ADC_ConfigChannel+0x72e>
 8003f02:	687b      	ldr	r3, [r7, #4]
 8003f04:	681b      	ldr	r3, [r3, #0]
 8003f06:	4a4e      	ldr	r2, [pc, #312]	@ (8004040 <HAL_ADC_ConfigChannel+0x860>)
 8003f08:	4293      	cmp	r3, r2
 8003f0a:	f040 8085 	bne.w	8004018 <HAL_ADC_ConfigChannel+0x838>
 8003f0e:	687b      	ldr	r3, [r7, #4]
 8003f10:	681b      	ldr	r3, [r3, #0]
 8003f12:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8003f16:	d004      	beq.n	8003f22 <HAL_ADC_ConfigChannel+0x742>
 8003f18:	687b      	ldr	r3, [r7, #4]
 8003f1a:	681b      	ldr	r3, [r3, #0]
 8003f1c:	4a49      	ldr	r2, [pc, #292]	@ (8004044 <HAL_ADC_ConfigChannel+0x864>)
 8003f1e:	4293      	cmp	r3, r2
 8003f20:	d101      	bne.n	8003f26 <HAL_ADC_ConfigChannel+0x746>
 8003f22:	4a49      	ldr	r2, [pc, #292]	@ (8004048 <HAL_ADC_ConfigChannel+0x868>)
 8003f24:	e000      	b.n	8003f28 <HAL_ADC_ConfigChannel+0x748>
 8003f26:	4a43      	ldr	r2, [pc, #268]	@ (8004034 <HAL_ADC_ConfigChannel+0x854>)
 8003f28:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003f2c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8003f30:	4619      	mov	r1, r3
 8003f32:	4610      	mov	r0, r2
 8003f34:	f7fe fe0b 	bl	8002b4e <LL_ADC_SetCommonPathInternalCh>
 8003f38:	4b44      	ldr	r3, [pc, #272]	@ (800404c <HAL_ADC_ConfigChannel+0x86c>)
 8003f3a:	681b      	ldr	r3, [r3, #0]
 8003f3c:	099b      	lsrs	r3, r3, #6
 8003f3e:	4a44      	ldr	r2, [pc, #272]	@ (8004050 <HAL_ADC_ConfigChannel+0x870>)
 8003f40:	fba2 2303 	umull	r2, r3, r2, r3
 8003f44:	099b      	lsrs	r3, r3, #6
 8003f46:	1c5a      	adds	r2, r3, #1
 8003f48:	4613      	mov	r3, r2
 8003f4a:	005b      	lsls	r3, r3, #1
 8003f4c:	4413      	add	r3, r2
 8003f4e:	009b      	lsls	r3, r3, #2
 8003f50:	60fb      	str	r3, [r7, #12]
 8003f52:	e002      	b.n	8003f5a <HAL_ADC_ConfigChannel+0x77a>
 8003f54:	68fb      	ldr	r3, [r7, #12]
 8003f56:	3b01      	subs	r3, #1
 8003f58:	60fb      	str	r3, [r7, #12]
 8003f5a:	68fb      	ldr	r3, [r7, #12]
 8003f5c:	2b00      	cmp	r3, #0
 8003f5e:	d1f9      	bne.n	8003f54 <HAL_ADC_ConfigChannel+0x774>
 8003f60:	e05a      	b.n	8004018 <HAL_ADC_ConfigChannel+0x838>
 8003f62:	683b      	ldr	r3, [r7, #0]
 8003f64:	681b      	ldr	r3, [r3, #0]
 8003f66:	4a3b      	ldr	r2, [pc, #236]	@ (8004054 <HAL_ADC_ConfigChannel+0x874>)
 8003f68:	4293      	cmp	r3, r2
 8003f6a:	d125      	bne.n	8003fb8 <HAL_ADC_ConfigChannel+0x7d8>
 8003f6c:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003f70:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003f74:	2b00      	cmp	r3, #0
 8003f76:	d11f      	bne.n	8003fb8 <HAL_ADC_ConfigChannel+0x7d8>
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	4a31      	ldr	r2, [pc, #196]	@ (8004044 <HAL_ADC_ConfigChannel+0x864>)
 8003f7e:	4293      	cmp	r3, r2
 8003f80:	d104      	bne.n	8003f8c <HAL_ADC_ConfigChannel+0x7ac>
 8003f82:	687b      	ldr	r3, [r7, #4]
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	4a34      	ldr	r2, [pc, #208]	@ (8004058 <HAL_ADC_ConfigChannel+0x878>)
 8003f88:	4293      	cmp	r3, r2
 8003f8a:	d047      	beq.n	800401c <HAL_ADC_ConfigChannel+0x83c>
 8003f8c:	687b      	ldr	r3, [r7, #4]
 8003f8e:	681b      	ldr	r3, [r3, #0]
 8003f90:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8003f94:	d004      	beq.n	8003fa0 <HAL_ADC_ConfigChannel+0x7c0>
 8003f96:	687b      	ldr	r3, [r7, #4]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	4a2a      	ldr	r2, [pc, #168]	@ (8004044 <HAL_ADC_ConfigChannel+0x864>)
 8003f9c:	4293      	cmp	r3, r2
 8003f9e:	d101      	bne.n	8003fa4 <HAL_ADC_ConfigChannel+0x7c4>
 8003fa0:	4a29      	ldr	r2, [pc, #164]	@ (8004048 <HAL_ADC_ConfigChannel+0x868>)
 8003fa2:	e000      	b.n	8003fa6 <HAL_ADC_ConfigChannel+0x7c6>
 8003fa4:	4a23      	ldr	r2, [pc, #140]	@ (8004034 <HAL_ADC_ConfigChannel+0x854>)
 8003fa6:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003faa:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8003fae:	4619      	mov	r1, r3
 8003fb0:	4610      	mov	r0, r2
 8003fb2:	f7fe fdcc 	bl	8002b4e <LL_ADC_SetCommonPathInternalCh>
 8003fb6:	e031      	b.n	800401c <HAL_ADC_ConfigChannel+0x83c>
 8003fb8:	683b      	ldr	r3, [r7, #0]
 8003fba:	681b      	ldr	r3, [r3, #0]
 8003fbc:	4a27      	ldr	r2, [pc, #156]	@ (800405c <HAL_ADC_ConfigChannel+0x87c>)
 8003fbe:	4293      	cmp	r3, r2
 8003fc0:	d12d      	bne.n	800401e <HAL_ADC_ConfigChannel+0x83e>
 8003fc2:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003fc6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003fca:	2b00      	cmp	r3, #0
 8003fcc:	d127      	bne.n	800401e <HAL_ADC_ConfigChannel+0x83e>
 8003fce:	687b      	ldr	r3, [r7, #4]
 8003fd0:	681b      	ldr	r3, [r3, #0]
 8003fd2:	4a1c      	ldr	r2, [pc, #112]	@ (8004044 <HAL_ADC_ConfigChannel+0x864>)
 8003fd4:	4293      	cmp	r3, r2
 8003fd6:	d022      	beq.n	800401e <HAL_ADC_ConfigChannel+0x83e>
 8003fd8:	687b      	ldr	r3, [r7, #4]
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8003fe0:	d004      	beq.n	8003fec <HAL_ADC_ConfigChannel+0x80c>
 8003fe2:	687b      	ldr	r3, [r7, #4]
 8003fe4:	681b      	ldr	r3, [r3, #0]
 8003fe6:	4a17      	ldr	r2, [pc, #92]	@ (8004044 <HAL_ADC_ConfigChannel+0x864>)
 8003fe8:	4293      	cmp	r3, r2
 8003fea:	d101      	bne.n	8003ff0 <HAL_ADC_ConfigChannel+0x810>
 8003fec:	4a16      	ldr	r2, [pc, #88]	@ (8004048 <HAL_ADC_ConfigChannel+0x868>)
 8003fee:	e000      	b.n	8003ff2 <HAL_ADC_ConfigChannel+0x812>
 8003ff0:	4a10      	ldr	r2, [pc, #64]	@ (8004034 <HAL_ADC_ConfigChannel+0x854>)
 8003ff2:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003ff6:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8003ffa:	4619      	mov	r1, r3
 8003ffc:	4610      	mov	r0, r2
 8003ffe:	f7fe fda6 	bl	8002b4e <LL_ADC_SetCommonPathInternalCh>
 8004002:	e00c      	b.n	800401e <HAL_ADC_ConfigChannel+0x83e>
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004008:	f043 0220 	orr.w	r2, r3, #32
 800400c:	687b      	ldr	r3, [r7, #4]
 800400e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004010:	2301      	movs	r3, #1
 8004012:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 8004016:	e002      	b.n	800401e <HAL_ADC_ConfigChannel+0x83e>
 8004018:	bf00      	nop
 800401a:	e000      	b.n	800401e <HAL_ADC_ConfigChannel+0x83e>
 800401c:	bf00      	nop
 800401e:	687b      	ldr	r3, [r7, #4]
 8004020:	2200      	movs	r2, #0
 8004022:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004026:	f897 30d7 	ldrb.w	r3, [r7, #215]	@ 0xd7
 800402a:	4618      	mov	r0, r3
 800402c:	37d8      	adds	r7, #216	@ 0xd8
 800402e:	46bd      	mov	sp, r7
 8004030:	bd80      	pop	{r7, pc}
 8004032:	bf00      	nop
 8004034:	50000700 	.word	0x50000700
 8004038:	c3210000 	.word	0xc3210000
 800403c:	90c00010 	.word	0x90c00010
 8004040:	50000600 	.word	0x50000600
 8004044:	50000100 	.word	0x50000100
 8004048:	50000300 	.word	0x50000300
 800404c:	2000000c 	.word	0x2000000c
 8004050:	053e2d63 	.word	0x053e2d63
 8004054:	c7520000 	.word	0xc7520000
 8004058:	50000500 	.word	0x50000500
 800405c:	cb840000 	.word	0xcb840000

08004060 <LL_ADC_IsEnabled>:
 8004060:	b480      	push	{r7}
 8004062:	b083      	sub	sp, #12
 8004064:	af00      	add	r7, sp, #0
 8004066:	6078      	str	r0, [r7, #4]
 8004068:	687b      	ldr	r3, [r7, #4]
 800406a:	689b      	ldr	r3, [r3, #8]
 800406c:	f003 0301 	and.w	r3, r3, #1
 8004070:	2b01      	cmp	r3, #1
 8004072:	d101      	bne.n	8004078 <LL_ADC_IsEnabled+0x18>
 8004074:	2301      	movs	r3, #1
 8004076:	e000      	b.n	800407a <LL_ADC_IsEnabled+0x1a>
 8004078:	2300      	movs	r3, #0
 800407a:	4618      	mov	r0, r3
 800407c:	370c      	adds	r7, #12
 800407e:	46bd      	mov	sp, r7
 8004080:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004084:	4770      	bx	lr

08004086 <LL_ADC_REG_IsConversionOngoing>:
 8004086:	b480      	push	{r7}
 8004088:	b083      	sub	sp, #12
 800408a:	af00      	add	r7, sp, #0
 800408c:	6078      	str	r0, [r7, #4]
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	689b      	ldr	r3, [r3, #8]
 8004092:	f003 0304 	and.w	r3, r3, #4
 8004096:	2b04      	cmp	r3, #4
 8004098:	d101      	bne.n	800409e <LL_ADC_REG_IsConversionOngoing+0x18>
 800409a:	2301      	movs	r3, #1
 800409c:	e000      	b.n	80040a0 <LL_ADC_REG_IsConversionOngoing+0x1a>
 800409e:	2300      	movs	r3, #0
 80040a0:	4618      	mov	r0, r3
 80040a2:	370c      	adds	r7, #12
 80040a4:	46bd      	mov	sp, r7
 80040a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040aa:	4770      	bx	lr

080040ac <HAL_ADCEx_InjectedConvCpltCallback>:
 80040ac:	b480      	push	{r7}
 80040ae:	b083      	sub	sp, #12
 80040b0:	af00      	add	r7, sp, #0
 80040b2:	6078      	str	r0, [r7, #4]
 80040b4:	bf00      	nop
 80040b6:	370c      	adds	r7, #12
 80040b8:	46bd      	mov	sp, r7
 80040ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040be:	4770      	bx	lr

080040c0 <HAL_ADCEx_InjectedQueueOverflowCallback>:
 80040c0:	b480      	push	{r7}
 80040c2:	b083      	sub	sp, #12
 80040c4:	af00      	add	r7, sp, #0
 80040c6:	6078      	str	r0, [r7, #4]
 80040c8:	bf00      	nop
 80040ca:	370c      	adds	r7, #12
 80040cc:	46bd      	mov	sp, r7
 80040ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040d2:	4770      	bx	lr

080040d4 <HAL_ADCEx_LevelOutOfWindow2Callback>:
 80040d4:	b480      	push	{r7}
 80040d6:	b083      	sub	sp, #12
 80040d8:	af00      	add	r7, sp, #0
 80040da:	6078      	str	r0, [r7, #4]
 80040dc:	bf00      	nop
 80040de:	370c      	adds	r7, #12
 80040e0:	46bd      	mov	sp, r7
 80040e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040e6:	4770      	bx	lr

080040e8 <HAL_ADCEx_LevelOutOfWindow3Callback>:
 80040e8:	b480      	push	{r7}
 80040ea:	b083      	sub	sp, #12
 80040ec:	af00      	add	r7, sp, #0
 80040ee:	6078      	str	r0, [r7, #4]
 80040f0:	bf00      	nop
 80040f2:	370c      	adds	r7, #12
 80040f4:	46bd      	mov	sp, r7
 80040f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040fa:	4770      	bx	lr

080040fc <HAL_ADCEx_EndOfSamplingCallback>:
 80040fc:	b480      	push	{r7}
 80040fe:	b083      	sub	sp, #12
 8004100:	af00      	add	r7, sp, #0
 8004102:	6078      	str	r0, [r7, #4]
 8004104:	bf00      	nop
 8004106:	370c      	adds	r7, #12
 8004108:	46bd      	mov	sp, r7
 800410a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800410e:	4770      	bx	lr

08004110 <HAL_ADCEx_MultiModeConfigChannel>:
 8004110:	b590      	push	{r4, r7, lr}
 8004112:	b0a1      	sub	sp, #132	@ 0x84
 8004114:	af00      	add	r7, sp, #0
 8004116:	6078      	str	r0, [r7, #4]
 8004118:	6039      	str	r1, [r7, #0]
 800411a:	2300      	movs	r3, #0
 800411c:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8004126:	2b01      	cmp	r3, #1
 8004128:	d101      	bne.n	800412e <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 800412a:	2302      	movs	r3, #2
 800412c:	e0e7      	b.n	80042fe <HAL_ADCEx_MultiModeConfigChannel+0x1ee>
 800412e:	687b      	ldr	r3, [r7, #4]
 8004130:	2201      	movs	r2, #1
 8004132:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004136:	2300      	movs	r3, #0
 8004138:	667b      	str	r3, [r7, #100]	@ 0x64
 800413a:	2300      	movs	r3, #0
 800413c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800413e:	687b      	ldr	r3, [r7, #4]
 8004140:	681b      	ldr	r3, [r3, #0]
 8004142:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8004146:	d102      	bne.n	800414e <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 8004148:	4b6f      	ldr	r3, [pc, #444]	@ (8004308 <HAL_ADCEx_MultiModeConfigChannel+0x1f8>)
 800414a:	60bb      	str	r3, [r7, #8]
 800414c:	e009      	b.n	8004162 <HAL_ADCEx_MultiModeConfigChannel+0x52>
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	681b      	ldr	r3, [r3, #0]
 8004152:	4a6e      	ldr	r2, [pc, #440]	@ (800430c <HAL_ADCEx_MultiModeConfigChannel+0x1fc>)
 8004154:	4293      	cmp	r3, r2
 8004156:	d102      	bne.n	800415e <HAL_ADCEx_MultiModeConfigChannel+0x4e>
 8004158:	4b6d      	ldr	r3, [pc, #436]	@ (8004310 <HAL_ADCEx_MultiModeConfigChannel+0x200>)
 800415a:	60bb      	str	r3, [r7, #8]
 800415c:	e001      	b.n	8004162 <HAL_ADCEx_MultiModeConfigChannel+0x52>
 800415e:	2300      	movs	r3, #0
 8004160:	60bb      	str	r3, [r7, #8]
 8004162:	68bb      	ldr	r3, [r7, #8]
 8004164:	2b00      	cmp	r3, #0
 8004166:	d10b      	bne.n	8004180 <HAL_ADCEx_MultiModeConfigChannel+0x70>
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800416c:	f043 0220 	orr.w	r2, r3, #32
 8004170:	687b      	ldr	r3, [r7, #4]
 8004172:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004174:	687b      	ldr	r3, [r7, #4]
 8004176:	2200      	movs	r2, #0
 8004178:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 800417c:	2301      	movs	r3, #1
 800417e:	e0be      	b.n	80042fe <HAL_ADCEx_MultiModeConfigChannel+0x1ee>
 8004180:	68bb      	ldr	r3, [r7, #8]
 8004182:	4618      	mov	r0, r3
 8004184:	f7ff ff7f 	bl	8004086 <LL_ADC_REG_IsConversionOngoing>
 8004188:	67b8      	str	r0, [r7, #120]	@ 0x78
 800418a:	687b      	ldr	r3, [r7, #4]
 800418c:	681b      	ldr	r3, [r3, #0]
 800418e:	4618      	mov	r0, r3
 8004190:	f7ff ff79 	bl	8004086 <LL_ADC_REG_IsConversionOngoing>
 8004194:	4603      	mov	r3, r0
 8004196:	2b00      	cmp	r3, #0
 8004198:	f040 80a0 	bne.w	80042dc <HAL_ADCEx_MultiModeConfigChannel+0x1cc>
 800419c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800419e:	2b00      	cmp	r3, #0
 80041a0:	f040 809c 	bne.w	80042dc <HAL_ADCEx_MultiModeConfigChannel+0x1cc>
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	681b      	ldr	r3, [r3, #0]
 80041a8:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80041ac:	d004      	beq.n	80041b8 <HAL_ADCEx_MultiModeConfigChannel+0xa8>
 80041ae:	687b      	ldr	r3, [r7, #4]
 80041b0:	681b      	ldr	r3, [r3, #0]
 80041b2:	4a55      	ldr	r2, [pc, #340]	@ (8004308 <HAL_ADCEx_MultiModeConfigChannel+0x1f8>)
 80041b4:	4293      	cmp	r3, r2
 80041b6:	d101      	bne.n	80041bc <HAL_ADCEx_MultiModeConfigChannel+0xac>
 80041b8:	4b56      	ldr	r3, [pc, #344]	@ (8004314 <HAL_ADCEx_MultiModeConfigChannel+0x204>)
 80041ba:	e000      	b.n	80041be <HAL_ADCEx_MultiModeConfigChannel+0xae>
 80041bc:	4b56      	ldr	r3, [pc, #344]	@ (8004318 <HAL_ADCEx_MultiModeConfigChannel+0x208>)
 80041be:	677b      	str	r3, [r7, #116]	@ 0x74
 80041c0:	683b      	ldr	r3, [r7, #0]
 80041c2:	681b      	ldr	r3, [r3, #0]
 80041c4:	2b00      	cmp	r3, #0
 80041c6:	d04b      	beq.n	8004260 <HAL_ADCEx_MultiModeConfigChannel+0x150>
 80041c8:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80041ca:	689b      	ldr	r3, [r3, #8]
 80041cc:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80041d0:	683b      	ldr	r3, [r7, #0]
 80041d2:	6859      	ldr	r1, [r3, #4]
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 80041da:	035b      	lsls	r3, r3, #13
 80041dc:	430b      	orrs	r3, r1
 80041de:	431a      	orrs	r2, r3
 80041e0:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80041e2:	609a      	str	r2, [r3, #8]
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	681b      	ldr	r3, [r3, #0]
 80041e8:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80041ec:	d004      	beq.n	80041f8 <HAL_ADCEx_MultiModeConfigChannel+0xe8>
 80041ee:	687b      	ldr	r3, [r7, #4]
 80041f0:	681b      	ldr	r3, [r3, #0]
 80041f2:	4a45      	ldr	r2, [pc, #276]	@ (8004308 <HAL_ADCEx_MultiModeConfigChannel+0x1f8>)
 80041f4:	4293      	cmp	r3, r2
 80041f6:	d10f      	bne.n	8004218 <HAL_ADCEx_MultiModeConfigChannel+0x108>
 80041f8:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 80041fc:	f7ff ff30 	bl	8004060 <LL_ADC_IsEnabled>
 8004200:	4604      	mov	r4, r0
 8004202:	4841      	ldr	r0, [pc, #260]	@ (8004308 <HAL_ADCEx_MultiModeConfigChannel+0x1f8>)
 8004204:	f7ff ff2c 	bl	8004060 <LL_ADC_IsEnabled>
 8004208:	4603      	mov	r3, r0
 800420a:	4323      	orrs	r3, r4
 800420c:	2b00      	cmp	r3, #0
 800420e:	bf0c      	ite	eq
 8004210:	2301      	moveq	r3, #1
 8004212:	2300      	movne	r3, #0
 8004214:	b2db      	uxtb	r3, r3
 8004216:	e012      	b.n	800423e <HAL_ADCEx_MultiModeConfigChannel+0x12e>
 8004218:	483c      	ldr	r0, [pc, #240]	@ (800430c <HAL_ADCEx_MultiModeConfigChannel+0x1fc>)
 800421a:	f7ff ff21 	bl	8004060 <LL_ADC_IsEnabled>
 800421e:	4604      	mov	r4, r0
 8004220:	483b      	ldr	r0, [pc, #236]	@ (8004310 <HAL_ADCEx_MultiModeConfigChannel+0x200>)
 8004222:	f7ff ff1d 	bl	8004060 <LL_ADC_IsEnabled>
 8004226:	4603      	mov	r3, r0
 8004228:	431c      	orrs	r4, r3
 800422a:	483c      	ldr	r0, [pc, #240]	@ (800431c <HAL_ADCEx_MultiModeConfigChannel+0x20c>)
 800422c:	f7ff ff18 	bl	8004060 <LL_ADC_IsEnabled>
 8004230:	4603      	mov	r3, r0
 8004232:	4323      	orrs	r3, r4
 8004234:	2b00      	cmp	r3, #0
 8004236:	bf0c      	ite	eq
 8004238:	2301      	moveq	r3, #1
 800423a:	2300      	movne	r3, #0
 800423c:	b2db      	uxtb	r3, r3
 800423e:	2b00      	cmp	r3, #0
 8004240:	d056      	beq.n	80042f0 <HAL_ADCEx_MultiModeConfigChannel+0x1e0>
 8004242:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004244:	689b      	ldr	r3, [r3, #8]
 8004246:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 800424a:	f023 030f 	bic.w	r3, r3, #15
 800424e:	683a      	ldr	r2, [r7, #0]
 8004250:	6811      	ldr	r1, [r2, #0]
 8004252:	683a      	ldr	r2, [r7, #0]
 8004254:	6892      	ldr	r2, [r2, #8]
 8004256:	430a      	orrs	r2, r1
 8004258:	431a      	orrs	r2, r3
 800425a:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800425c:	609a      	str	r2, [r3, #8]
 800425e:	e047      	b.n	80042f0 <HAL_ADCEx_MultiModeConfigChannel+0x1e0>
 8004260:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004262:	689b      	ldr	r3, [r3, #8]
 8004264:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8004268:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800426a:	609a      	str	r2, [r3, #8]
 800426c:	687b      	ldr	r3, [r7, #4]
 800426e:	681b      	ldr	r3, [r3, #0]
 8004270:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8004274:	d004      	beq.n	8004280 <HAL_ADCEx_MultiModeConfigChannel+0x170>
 8004276:	687b      	ldr	r3, [r7, #4]
 8004278:	681b      	ldr	r3, [r3, #0]
 800427a:	4a23      	ldr	r2, [pc, #140]	@ (8004308 <HAL_ADCEx_MultiModeConfigChannel+0x1f8>)
 800427c:	4293      	cmp	r3, r2
 800427e:	d10f      	bne.n	80042a0 <HAL_ADCEx_MultiModeConfigChannel+0x190>
 8004280:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 8004284:	f7ff feec 	bl	8004060 <LL_ADC_IsEnabled>
 8004288:	4604      	mov	r4, r0
 800428a:	481f      	ldr	r0, [pc, #124]	@ (8004308 <HAL_ADCEx_MultiModeConfigChannel+0x1f8>)
 800428c:	f7ff fee8 	bl	8004060 <LL_ADC_IsEnabled>
 8004290:	4603      	mov	r3, r0
 8004292:	4323      	orrs	r3, r4
 8004294:	2b00      	cmp	r3, #0
 8004296:	bf0c      	ite	eq
 8004298:	2301      	moveq	r3, #1
 800429a:	2300      	movne	r3, #0
 800429c:	b2db      	uxtb	r3, r3
 800429e:	e012      	b.n	80042c6 <HAL_ADCEx_MultiModeConfigChannel+0x1b6>
 80042a0:	481a      	ldr	r0, [pc, #104]	@ (800430c <HAL_ADCEx_MultiModeConfigChannel+0x1fc>)
 80042a2:	f7ff fedd 	bl	8004060 <LL_ADC_IsEnabled>
 80042a6:	4604      	mov	r4, r0
 80042a8:	4819      	ldr	r0, [pc, #100]	@ (8004310 <HAL_ADCEx_MultiModeConfigChannel+0x200>)
 80042aa:	f7ff fed9 	bl	8004060 <LL_ADC_IsEnabled>
 80042ae:	4603      	mov	r3, r0
 80042b0:	431c      	orrs	r4, r3
 80042b2:	481a      	ldr	r0, [pc, #104]	@ (800431c <HAL_ADCEx_MultiModeConfigChannel+0x20c>)
 80042b4:	f7ff fed4 	bl	8004060 <LL_ADC_IsEnabled>
 80042b8:	4603      	mov	r3, r0
 80042ba:	4323      	orrs	r3, r4
 80042bc:	2b00      	cmp	r3, #0
 80042be:	bf0c      	ite	eq
 80042c0:	2301      	moveq	r3, #1
 80042c2:	2300      	movne	r3, #0
 80042c4:	b2db      	uxtb	r3, r3
 80042c6:	2b00      	cmp	r3, #0
 80042c8:	d012      	beq.n	80042f0 <HAL_ADCEx_MultiModeConfigChannel+0x1e0>
 80042ca:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80042cc:	689b      	ldr	r3, [r3, #8]
 80042ce:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 80042d2:	f023 030f 	bic.w	r3, r3, #15
 80042d6:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 80042d8:	6093      	str	r3, [r2, #8]
 80042da:	e009      	b.n	80042f0 <HAL_ADCEx_MultiModeConfigChannel+0x1e0>
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80042e0:	f043 0220 	orr.w	r2, r3, #32
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	65da      	str	r2, [r3, #92]	@ 0x5c
 80042e8:	2301      	movs	r3, #1
 80042ea:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 80042ee:	e000      	b.n	80042f2 <HAL_ADCEx_MultiModeConfigChannel+0x1e2>
 80042f0:	bf00      	nop
 80042f2:	687b      	ldr	r3, [r7, #4]
 80042f4:	2200      	movs	r2, #0
 80042f6:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80042fa:	f897 307f 	ldrb.w	r3, [r7, #127]	@ 0x7f
 80042fe:	4618      	mov	r0, r3
 8004300:	3784      	adds	r7, #132	@ 0x84
 8004302:	46bd      	mov	sp, r7
 8004304:	bd90      	pop	{r4, r7, pc}
 8004306:	bf00      	nop
 8004308:	50000100 	.word	0x50000100
 800430c:	50000400 	.word	0x50000400
 8004310:	50000500 	.word	0x50000500
 8004314:	50000300 	.word	0x50000300
 8004318:	50000700 	.word	0x50000700
 800431c:	50000600 	.word	0x50000600

08004320 <__NVIC_SetPriorityGrouping>:
 8004320:	b480      	push	{r7}
 8004322:	b085      	sub	sp, #20
 8004324:	af00      	add	r7, sp, #0
 8004326:	6078      	str	r0, [r7, #4]
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	f003 0307 	and.w	r3, r3, #7
 800432e:	60fb      	str	r3, [r7, #12]
 8004330:	4b0c      	ldr	r3, [pc, #48]	@ (8004364 <__NVIC_SetPriorityGrouping+0x44>)
 8004332:	68db      	ldr	r3, [r3, #12]
 8004334:	60bb      	str	r3, [r7, #8]
 8004336:	68ba      	ldr	r2, [r7, #8]
 8004338:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800433c:	4013      	ands	r3, r2
 800433e:	60bb      	str	r3, [r7, #8]
 8004340:	68fb      	ldr	r3, [r7, #12]
 8004342:	021a      	lsls	r2, r3, #8
 8004344:	68bb      	ldr	r3, [r7, #8]
 8004346:	4313      	orrs	r3, r2
 8004348:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800434c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004350:	60bb      	str	r3, [r7, #8]
 8004352:	4a04      	ldr	r2, [pc, #16]	@ (8004364 <__NVIC_SetPriorityGrouping+0x44>)
 8004354:	68bb      	ldr	r3, [r7, #8]
 8004356:	60d3      	str	r3, [r2, #12]
 8004358:	bf00      	nop
 800435a:	3714      	adds	r7, #20
 800435c:	46bd      	mov	sp, r7
 800435e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004362:	4770      	bx	lr
 8004364:	e000ed00 	.word	0xe000ed00

08004368 <__NVIC_GetPriorityGrouping>:
 8004368:	b480      	push	{r7}
 800436a:	af00      	add	r7, sp, #0
 800436c:	4b04      	ldr	r3, [pc, #16]	@ (8004380 <__NVIC_GetPriorityGrouping+0x18>)
 800436e:	68db      	ldr	r3, [r3, #12]
 8004370:	0a1b      	lsrs	r3, r3, #8
 8004372:	f003 0307 	and.w	r3, r3, #7
 8004376:	4618      	mov	r0, r3
 8004378:	46bd      	mov	sp, r7
 800437a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800437e:	4770      	bx	lr
 8004380:	e000ed00 	.word	0xe000ed00

08004384 <__NVIC_EnableIRQ>:
 8004384:	b480      	push	{r7}
 8004386:	b083      	sub	sp, #12
 8004388:	af00      	add	r7, sp, #0
 800438a:	4603      	mov	r3, r0
 800438c:	71fb      	strb	r3, [r7, #7]
 800438e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004392:	2b00      	cmp	r3, #0
 8004394:	db0b      	blt.n	80043ae <__NVIC_EnableIRQ+0x2a>
 8004396:	79fb      	ldrb	r3, [r7, #7]
 8004398:	f003 021f 	and.w	r2, r3, #31
 800439c:	4907      	ldr	r1, [pc, #28]	@ (80043bc <__NVIC_EnableIRQ+0x38>)
 800439e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80043a2:	095b      	lsrs	r3, r3, #5
 80043a4:	2001      	movs	r0, #1
 80043a6:	fa00 f202 	lsl.w	r2, r0, r2
 80043aa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80043ae:	bf00      	nop
 80043b0:	370c      	adds	r7, #12
 80043b2:	46bd      	mov	sp, r7
 80043b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043b8:	4770      	bx	lr
 80043ba:	bf00      	nop
 80043bc:	e000e100 	.word	0xe000e100

080043c0 <__NVIC_SetPriority>:
 80043c0:	b480      	push	{r7}
 80043c2:	b083      	sub	sp, #12
 80043c4:	af00      	add	r7, sp, #0
 80043c6:	4603      	mov	r3, r0
 80043c8:	6039      	str	r1, [r7, #0]
 80043ca:	71fb      	strb	r3, [r7, #7]
 80043cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80043d0:	2b00      	cmp	r3, #0
 80043d2:	db0a      	blt.n	80043ea <__NVIC_SetPriority+0x2a>
 80043d4:	683b      	ldr	r3, [r7, #0]
 80043d6:	b2da      	uxtb	r2, r3
 80043d8:	490c      	ldr	r1, [pc, #48]	@ (800440c <__NVIC_SetPriority+0x4c>)
 80043da:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80043de:	0112      	lsls	r2, r2, #4
 80043e0:	b2d2      	uxtb	r2, r2
 80043e2:	440b      	add	r3, r1
 80043e4:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80043e8:	e00a      	b.n	8004400 <__NVIC_SetPriority+0x40>
 80043ea:	683b      	ldr	r3, [r7, #0]
 80043ec:	b2da      	uxtb	r2, r3
 80043ee:	4908      	ldr	r1, [pc, #32]	@ (8004410 <__NVIC_SetPriority+0x50>)
 80043f0:	79fb      	ldrb	r3, [r7, #7]
 80043f2:	f003 030f 	and.w	r3, r3, #15
 80043f6:	3b04      	subs	r3, #4
 80043f8:	0112      	lsls	r2, r2, #4
 80043fa:	b2d2      	uxtb	r2, r2
 80043fc:	440b      	add	r3, r1
 80043fe:	761a      	strb	r2, [r3, #24]
 8004400:	bf00      	nop
 8004402:	370c      	adds	r7, #12
 8004404:	46bd      	mov	sp, r7
 8004406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800440a:	4770      	bx	lr
 800440c:	e000e100 	.word	0xe000e100
 8004410:	e000ed00 	.word	0xe000ed00

08004414 <NVIC_EncodePriority>:
 8004414:	b480      	push	{r7}
 8004416:	b089      	sub	sp, #36	@ 0x24
 8004418:	af00      	add	r7, sp, #0
 800441a:	60f8      	str	r0, [r7, #12]
 800441c:	60b9      	str	r1, [r7, #8]
 800441e:	607a      	str	r2, [r7, #4]
 8004420:	68fb      	ldr	r3, [r7, #12]
 8004422:	f003 0307 	and.w	r3, r3, #7
 8004426:	61fb      	str	r3, [r7, #28]
 8004428:	69fb      	ldr	r3, [r7, #28]
 800442a:	f1c3 0307 	rsb	r3, r3, #7
 800442e:	2b04      	cmp	r3, #4
 8004430:	bf28      	it	cs
 8004432:	2304      	movcs	r3, #4
 8004434:	61bb      	str	r3, [r7, #24]
 8004436:	69fb      	ldr	r3, [r7, #28]
 8004438:	3304      	adds	r3, #4
 800443a:	2b06      	cmp	r3, #6
 800443c:	d902      	bls.n	8004444 <NVIC_EncodePriority+0x30>
 800443e:	69fb      	ldr	r3, [r7, #28]
 8004440:	3b03      	subs	r3, #3
 8004442:	e000      	b.n	8004446 <NVIC_EncodePriority+0x32>
 8004444:	2300      	movs	r3, #0
 8004446:	617b      	str	r3, [r7, #20]
 8004448:	f04f 32ff 	mov.w	r2, #4294967295
 800444c:	69bb      	ldr	r3, [r7, #24]
 800444e:	fa02 f303 	lsl.w	r3, r2, r3
 8004452:	43da      	mvns	r2, r3
 8004454:	68bb      	ldr	r3, [r7, #8]
 8004456:	401a      	ands	r2, r3
 8004458:	697b      	ldr	r3, [r7, #20]
 800445a:	409a      	lsls	r2, r3
 800445c:	f04f 31ff 	mov.w	r1, #4294967295
 8004460:	697b      	ldr	r3, [r7, #20]
 8004462:	fa01 f303 	lsl.w	r3, r1, r3
 8004466:	43d9      	mvns	r1, r3
 8004468:	687b      	ldr	r3, [r7, #4]
 800446a:	400b      	ands	r3, r1
 800446c:	4313      	orrs	r3, r2
 800446e:	4618      	mov	r0, r3
 8004470:	3724      	adds	r7, #36	@ 0x24
 8004472:	46bd      	mov	sp, r7
 8004474:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004478:	4770      	bx	lr
	...

0800447c <SysTick_Config>:
 800447c:	b580      	push	{r7, lr}
 800447e:	b082      	sub	sp, #8
 8004480:	af00      	add	r7, sp, #0
 8004482:	6078      	str	r0, [r7, #4]
 8004484:	687b      	ldr	r3, [r7, #4]
 8004486:	3b01      	subs	r3, #1
 8004488:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800448c:	d301      	bcc.n	8004492 <SysTick_Config+0x16>
 800448e:	2301      	movs	r3, #1
 8004490:	e00f      	b.n	80044b2 <SysTick_Config+0x36>
 8004492:	4a0a      	ldr	r2, [pc, #40]	@ (80044bc <SysTick_Config+0x40>)
 8004494:	687b      	ldr	r3, [r7, #4]
 8004496:	3b01      	subs	r3, #1
 8004498:	6053      	str	r3, [r2, #4]
 800449a:	210f      	movs	r1, #15
 800449c:	f04f 30ff 	mov.w	r0, #4294967295
 80044a0:	f7ff ff8e 	bl	80043c0 <__NVIC_SetPriority>
 80044a4:	4b05      	ldr	r3, [pc, #20]	@ (80044bc <SysTick_Config+0x40>)
 80044a6:	2200      	movs	r2, #0
 80044a8:	609a      	str	r2, [r3, #8]
 80044aa:	4b04      	ldr	r3, [pc, #16]	@ (80044bc <SysTick_Config+0x40>)
 80044ac:	2207      	movs	r2, #7
 80044ae:	601a      	str	r2, [r3, #0]
 80044b0:	2300      	movs	r3, #0
 80044b2:	4618      	mov	r0, r3
 80044b4:	3708      	adds	r7, #8
 80044b6:	46bd      	mov	sp, r7
 80044b8:	bd80      	pop	{r7, pc}
 80044ba:	bf00      	nop
 80044bc:	e000e010 	.word	0xe000e010

080044c0 <HAL_NVIC_SetPriorityGrouping>:
 80044c0:	b580      	push	{r7, lr}
 80044c2:	b082      	sub	sp, #8
 80044c4:	af00      	add	r7, sp, #0
 80044c6:	6078      	str	r0, [r7, #4]
 80044c8:	6878      	ldr	r0, [r7, #4]
 80044ca:	f7ff ff29 	bl	8004320 <__NVIC_SetPriorityGrouping>
 80044ce:	bf00      	nop
 80044d0:	3708      	adds	r7, #8
 80044d2:	46bd      	mov	sp, r7
 80044d4:	bd80      	pop	{r7, pc}

080044d6 <HAL_NVIC_SetPriority>:
 80044d6:	b580      	push	{r7, lr}
 80044d8:	b086      	sub	sp, #24
 80044da:	af00      	add	r7, sp, #0
 80044dc:	4603      	mov	r3, r0
 80044de:	60b9      	str	r1, [r7, #8]
 80044e0:	607a      	str	r2, [r7, #4]
 80044e2:	73fb      	strb	r3, [r7, #15]
 80044e4:	f7ff ff40 	bl	8004368 <__NVIC_GetPriorityGrouping>
 80044e8:	6178      	str	r0, [r7, #20]
 80044ea:	687a      	ldr	r2, [r7, #4]
 80044ec:	68b9      	ldr	r1, [r7, #8]
 80044ee:	6978      	ldr	r0, [r7, #20]
 80044f0:	f7ff ff90 	bl	8004414 <NVIC_EncodePriority>
 80044f4:	4602      	mov	r2, r0
 80044f6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80044fa:	4611      	mov	r1, r2
 80044fc:	4618      	mov	r0, r3
 80044fe:	f7ff ff5f 	bl	80043c0 <__NVIC_SetPriority>
 8004502:	bf00      	nop
 8004504:	3718      	adds	r7, #24
 8004506:	46bd      	mov	sp, r7
 8004508:	bd80      	pop	{r7, pc}

0800450a <HAL_NVIC_EnableIRQ>:
 800450a:	b580      	push	{r7, lr}
 800450c:	b082      	sub	sp, #8
 800450e:	af00      	add	r7, sp, #0
 8004510:	4603      	mov	r3, r0
 8004512:	71fb      	strb	r3, [r7, #7]
 8004514:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004518:	4618      	mov	r0, r3
 800451a:	f7ff ff33 	bl	8004384 <__NVIC_EnableIRQ>
 800451e:	bf00      	nop
 8004520:	3708      	adds	r7, #8
 8004522:	46bd      	mov	sp, r7
 8004524:	bd80      	pop	{r7, pc}

08004526 <HAL_SYSTICK_Config>:
 8004526:	b580      	push	{r7, lr}
 8004528:	b082      	sub	sp, #8
 800452a:	af00      	add	r7, sp, #0
 800452c:	6078      	str	r0, [r7, #4]
 800452e:	6878      	ldr	r0, [r7, #4]
 8004530:	f7ff ffa4 	bl	800447c <SysTick_Config>
 8004534:	4603      	mov	r3, r0
 8004536:	4618      	mov	r0, r3
 8004538:	3708      	adds	r7, #8
 800453a:	46bd      	mov	sp, r7
 800453c:	bd80      	pop	{r7, pc}
	...

08004540 <HAL_DMA_Init>:
 8004540:	b580      	push	{r7, lr}
 8004542:	b084      	sub	sp, #16
 8004544:	af00      	add	r7, sp, #0
 8004546:	6078      	str	r0, [r7, #4]
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	2b00      	cmp	r3, #0
 800454c:	d101      	bne.n	8004552 <HAL_DMA_Init+0x12>
 800454e:	2301      	movs	r3, #1
 8004550:	e08d      	b.n	800466e <HAL_DMA_Init+0x12e>
 8004552:	687b      	ldr	r3, [r7, #4]
 8004554:	681b      	ldr	r3, [r3, #0]
 8004556:	461a      	mov	r2, r3
 8004558:	4b47      	ldr	r3, [pc, #284]	@ (8004678 <HAL_DMA_Init+0x138>)
 800455a:	429a      	cmp	r2, r3
 800455c:	d80f      	bhi.n	800457e <HAL_DMA_Init+0x3e>
 800455e:	687b      	ldr	r3, [r7, #4]
 8004560:	681b      	ldr	r3, [r3, #0]
 8004562:	461a      	mov	r2, r3
 8004564:	4b45      	ldr	r3, [pc, #276]	@ (800467c <HAL_DMA_Init+0x13c>)
 8004566:	4413      	add	r3, r2
 8004568:	4a45      	ldr	r2, [pc, #276]	@ (8004680 <HAL_DMA_Init+0x140>)
 800456a:	fba2 2303 	umull	r2, r3, r2, r3
 800456e:	091b      	lsrs	r3, r3, #4
 8004570:	009a      	lsls	r2, r3, #2
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	645a      	str	r2, [r3, #68]	@ 0x44
 8004576:	687b      	ldr	r3, [r7, #4]
 8004578:	4a42      	ldr	r2, [pc, #264]	@ (8004684 <HAL_DMA_Init+0x144>)
 800457a:	641a      	str	r2, [r3, #64]	@ 0x40
 800457c:	e00e      	b.n	800459c <HAL_DMA_Init+0x5c>
 800457e:	687b      	ldr	r3, [r7, #4]
 8004580:	681b      	ldr	r3, [r3, #0]
 8004582:	461a      	mov	r2, r3
 8004584:	4b40      	ldr	r3, [pc, #256]	@ (8004688 <HAL_DMA_Init+0x148>)
 8004586:	4413      	add	r3, r2
 8004588:	4a3d      	ldr	r2, [pc, #244]	@ (8004680 <HAL_DMA_Init+0x140>)
 800458a:	fba2 2303 	umull	r2, r3, r2, r3
 800458e:	091b      	lsrs	r3, r3, #4
 8004590:	009a      	lsls	r2, r3, #2
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	645a      	str	r2, [r3, #68]	@ 0x44
 8004596:	687b      	ldr	r3, [r7, #4]
 8004598:	4a3c      	ldr	r2, [pc, #240]	@ (800468c <HAL_DMA_Init+0x14c>)
 800459a:	641a      	str	r2, [r3, #64]	@ 0x40
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	2202      	movs	r2, #2
 80045a0:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 80045a4:	687b      	ldr	r3, [r7, #4]
 80045a6:	681b      	ldr	r3, [r3, #0]
 80045a8:	681b      	ldr	r3, [r3, #0]
 80045aa:	60fb      	str	r3, [r7, #12]
 80045ac:	68fb      	ldr	r3, [r7, #12]
 80045ae:	f423 43ff 	bic.w	r3, r3, #32640	@ 0x7f80
 80045b2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80045b6:	60fb      	str	r3, [r7, #12]
 80045b8:	687b      	ldr	r3, [r7, #4]
 80045ba:	689a      	ldr	r2, [r3, #8]
 80045bc:	687b      	ldr	r3, [r7, #4]
 80045be:	68db      	ldr	r3, [r3, #12]
 80045c0:	431a      	orrs	r2, r3
 80045c2:	687b      	ldr	r3, [r7, #4]
 80045c4:	691b      	ldr	r3, [r3, #16]
 80045c6:	431a      	orrs	r2, r3
 80045c8:	687b      	ldr	r3, [r7, #4]
 80045ca:	695b      	ldr	r3, [r3, #20]
 80045cc:	431a      	orrs	r2, r3
 80045ce:	687b      	ldr	r3, [r7, #4]
 80045d0:	699b      	ldr	r3, [r3, #24]
 80045d2:	431a      	orrs	r2, r3
 80045d4:	687b      	ldr	r3, [r7, #4]
 80045d6:	69db      	ldr	r3, [r3, #28]
 80045d8:	431a      	orrs	r2, r3
 80045da:	687b      	ldr	r3, [r7, #4]
 80045dc:	6a1b      	ldr	r3, [r3, #32]
 80045de:	4313      	orrs	r3, r2
 80045e0:	68fa      	ldr	r2, [r7, #12]
 80045e2:	4313      	orrs	r3, r2
 80045e4:	60fb      	str	r3, [r7, #12]
 80045e6:	687b      	ldr	r3, [r7, #4]
 80045e8:	681b      	ldr	r3, [r3, #0]
 80045ea:	68fa      	ldr	r2, [r7, #12]
 80045ec:	601a      	str	r2, [r3, #0]
 80045ee:	6878      	ldr	r0, [r7, #4]
 80045f0:	f000 fa1e 	bl	8004a30 <DMA_CalcDMAMUXChannelBaseAndMask>
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	689b      	ldr	r3, [r3, #8]
 80045f8:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80045fc:	d102      	bne.n	8004604 <HAL_DMA_Init+0xc4>
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	2200      	movs	r2, #0
 8004602:	605a      	str	r2, [r3, #4]
 8004604:	687b      	ldr	r3, [r7, #4]
 8004606:	685a      	ldr	r2, [r3, #4]
 8004608:	687b      	ldr	r3, [r7, #4]
 800460a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800460c:	b2d2      	uxtb	r2, r2
 800460e:	601a      	str	r2, [r3, #0]
 8004610:	687b      	ldr	r3, [r7, #4]
 8004612:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004614:	687a      	ldr	r2, [r7, #4]
 8004616:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8004618:	605a      	str	r2, [r3, #4]
 800461a:	687b      	ldr	r3, [r7, #4]
 800461c:	685b      	ldr	r3, [r3, #4]
 800461e:	2b00      	cmp	r3, #0
 8004620:	d010      	beq.n	8004644 <HAL_DMA_Init+0x104>
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	685b      	ldr	r3, [r3, #4]
 8004626:	2b04      	cmp	r3, #4
 8004628:	d80c      	bhi.n	8004644 <HAL_DMA_Init+0x104>
 800462a:	6878      	ldr	r0, [r7, #4]
 800462c:	f000 fa3e 	bl	8004aac <DMA_CalcDMAMUXRequestGenBaseAndMask>
 8004630:	687b      	ldr	r3, [r7, #4]
 8004632:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004634:	2200      	movs	r2, #0
 8004636:	601a      	str	r2, [r3, #0]
 8004638:	687b      	ldr	r3, [r7, #4]
 800463a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800463c:	687a      	ldr	r2, [r7, #4]
 800463e:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 8004640:	605a      	str	r2, [r3, #4]
 8004642:	e008      	b.n	8004656 <HAL_DMA_Init+0x116>
 8004644:	687b      	ldr	r3, [r7, #4]
 8004646:	2200      	movs	r2, #0
 8004648:	655a      	str	r2, [r3, #84]	@ 0x54
 800464a:	687b      	ldr	r3, [r7, #4]
 800464c:	2200      	movs	r2, #0
 800464e:	659a      	str	r2, [r3, #88]	@ 0x58
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	2200      	movs	r2, #0
 8004654:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	2200      	movs	r2, #0
 800465a:	63da      	str	r2, [r3, #60]	@ 0x3c
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	2201      	movs	r2, #1
 8004660:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	2200      	movs	r2, #0
 8004668:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800466c:	2300      	movs	r3, #0
 800466e:	4618      	mov	r0, r3
 8004670:	3710      	adds	r7, #16
 8004672:	46bd      	mov	sp, r7
 8004674:	bd80      	pop	{r7, pc}
 8004676:	bf00      	nop
 8004678:	40020407 	.word	0x40020407
 800467c:	bffdfff8 	.word	0xbffdfff8
 8004680:	cccccccd 	.word	0xcccccccd
 8004684:	40020000 	.word	0x40020000
 8004688:	bffdfbf8 	.word	0xbffdfbf8
 800468c:	40020400 	.word	0x40020400

08004690 <HAL_DMA_Start_IT>:
 8004690:	b580      	push	{r7, lr}
 8004692:	b086      	sub	sp, #24
 8004694:	af00      	add	r7, sp, #0
 8004696:	60f8      	str	r0, [r7, #12]
 8004698:	60b9      	str	r1, [r7, #8]
 800469a:	607a      	str	r2, [r7, #4]
 800469c:	603b      	str	r3, [r7, #0]
 800469e:	2300      	movs	r3, #0
 80046a0:	75fb      	strb	r3, [r7, #23]
 80046a2:	68fb      	ldr	r3, [r7, #12]
 80046a4:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80046a8:	2b01      	cmp	r3, #1
 80046aa:	d101      	bne.n	80046b0 <HAL_DMA_Start_IT+0x20>
 80046ac:	2302      	movs	r3, #2
 80046ae:	e066      	b.n	800477e <HAL_DMA_Start_IT+0xee>
 80046b0:	68fb      	ldr	r3, [r7, #12]
 80046b2:	2201      	movs	r2, #1
 80046b4:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80046b8:	68fb      	ldr	r3, [r7, #12]
 80046ba:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 80046be:	b2db      	uxtb	r3, r3
 80046c0:	2b01      	cmp	r3, #1
 80046c2:	d155      	bne.n	8004770 <HAL_DMA_Start_IT+0xe0>
 80046c4:	68fb      	ldr	r3, [r7, #12]
 80046c6:	2202      	movs	r2, #2
 80046c8:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 80046cc:	68fb      	ldr	r3, [r7, #12]
 80046ce:	2200      	movs	r2, #0
 80046d0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80046d2:	68fb      	ldr	r3, [r7, #12]
 80046d4:	681b      	ldr	r3, [r3, #0]
 80046d6:	681a      	ldr	r2, [r3, #0]
 80046d8:	68fb      	ldr	r3, [r7, #12]
 80046da:	681b      	ldr	r3, [r3, #0]
 80046dc:	f022 0201 	bic.w	r2, r2, #1
 80046e0:	601a      	str	r2, [r3, #0]
 80046e2:	683b      	ldr	r3, [r7, #0]
 80046e4:	687a      	ldr	r2, [r7, #4]
 80046e6:	68b9      	ldr	r1, [r7, #8]
 80046e8:	68f8      	ldr	r0, [r7, #12]
 80046ea:	f000 f962 	bl	80049b2 <DMA_SetConfig>
 80046ee:	68fb      	ldr	r3, [r7, #12]
 80046f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80046f2:	2b00      	cmp	r3, #0
 80046f4:	d008      	beq.n	8004708 <HAL_DMA_Start_IT+0x78>
 80046f6:	68fb      	ldr	r3, [r7, #12]
 80046f8:	681b      	ldr	r3, [r3, #0]
 80046fa:	681a      	ldr	r2, [r3, #0]
 80046fc:	68fb      	ldr	r3, [r7, #12]
 80046fe:	681b      	ldr	r3, [r3, #0]
 8004700:	f042 020e 	orr.w	r2, r2, #14
 8004704:	601a      	str	r2, [r3, #0]
 8004706:	e00f      	b.n	8004728 <HAL_DMA_Start_IT+0x98>
 8004708:	68fb      	ldr	r3, [r7, #12]
 800470a:	681b      	ldr	r3, [r3, #0]
 800470c:	681a      	ldr	r2, [r3, #0]
 800470e:	68fb      	ldr	r3, [r7, #12]
 8004710:	681b      	ldr	r3, [r3, #0]
 8004712:	f022 0204 	bic.w	r2, r2, #4
 8004716:	601a      	str	r2, [r3, #0]
 8004718:	68fb      	ldr	r3, [r7, #12]
 800471a:	681b      	ldr	r3, [r3, #0]
 800471c:	681a      	ldr	r2, [r3, #0]
 800471e:	68fb      	ldr	r3, [r7, #12]
 8004720:	681b      	ldr	r3, [r3, #0]
 8004722:	f042 020a 	orr.w	r2, r2, #10
 8004726:	601a      	str	r2, [r3, #0]
 8004728:	68fb      	ldr	r3, [r7, #12]
 800472a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800472c:	681b      	ldr	r3, [r3, #0]
 800472e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004732:	2b00      	cmp	r3, #0
 8004734:	d007      	beq.n	8004746 <HAL_DMA_Start_IT+0xb6>
 8004736:	68fb      	ldr	r3, [r7, #12]
 8004738:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800473a:	681a      	ldr	r2, [r3, #0]
 800473c:	68fb      	ldr	r3, [r7, #12]
 800473e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8004740:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004744:	601a      	str	r2, [r3, #0]
 8004746:	68fb      	ldr	r3, [r7, #12]
 8004748:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800474a:	2b00      	cmp	r3, #0
 800474c:	d007      	beq.n	800475e <HAL_DMA_Start_IT+0xce>
 800474e:	68fb      	ldr	r3, [r7, #12]
 8004750:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004752:	681a      	ldr	r2, [r3, #0]
 8004754:	68fb      	ldr	r3, [r7, #12]
 8004756:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004758:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800475c:	601a      	str	r2, [r3, #0]
 800475e:	68fb      	ldr	r3, [r7, #12]
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	681a      	ldr	r2, [r3, #0]
 8004764:	68fb      	ldr	r3, [r7, #12]
 8004766:	681b      	ldr	r3, [r3, #0]
 8004768:	f042 0201 	orr.w	r2, r2, #1
 800476c:	601a      	str	r2, [r3, #0]
 800476e:	e005      	b.n	800477c <HAL_DMA_Start_IT+0xec>
 8004770:	68fb      	ldr	r3, [r7, #12]
 8004772:	2200      	movs	r2, #0
 8004774:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8004778:	2302      	movs	r3, #2
 800477a:	75fb      	strb	r3, [r7, #23]
 800477c:	7dfb      	ldrb	r3, [r7, #23]
 800477e:	4618      	mov	r0, r3
 8004780:	3718      	adds	r7, #24
 8004782:	46bd      	mov	sp, r7
 8004784:	bd80      	pop	{r7, pc}

08004786 <HAL_DMA_Abort_IT>:
 8004786:	b580      	push	{r7, lr}
 8004788:	b084      	sub	sp, #16
 800478a:	af00      	add	r7, sp, #0
 800478c:	6078      	str	r0, [r7, #4]
 800478e:	2300      	movs	r3, #0
 8004790:	73fb      	strb	r3, [r7, #15]
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8004798:	b2db      	uxtb	r3, r3
 800479a:	2b02      	cmp	r3, #2
 800479c:	d00d      	beq.n	80047ba <HAL_DMA_Abort_IT+0x34>
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	2204      	movs	r2, #4
 80047a2:	63da      	str	r2, [r3, #60]	@ 0x3c
 80047a4:	687b      	ldr	r3, [r7, #4]
 80047a6:	2201      	movs	r2, #1
 80047a8:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 80047ac:	687b      	ldr	r3, [r7, #4]
 80047ae:	2200      	movs	r2, #0
 80047b0:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80047b4:	2301      	movs	r3, #1
 80047b6:	73fb      	strb	r3, [r7, #15]
 80047b8:	e047      	b.n	800484a <HAL_DMA_Abort_IT+0xc4>
 80047ba:	687b      	ldr	r3, [r7, #4]
 80047bc:	681b      	ldr	r3, [r3, #0]
 80047be:	681a      	ldr	r2, [r3, #0]
 80047c0:	687b      	ldr	r3, [r7, #4]
 80047c2:	681b      	ldr	r3, [r3, #0]
 80047c4:	f022 020e 	bic.w	r2, r2, #14
 80047c8:	601a      	str	r2, [r3, #0]
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	681a      	ldr	r2, [r3, #0]
 80047d0:	687b      	ldr	r3, [r7, #4]
 80047d2:	681b      	ldr	r3, [r3, #0]
 80047d4:	f022 0201 	bic.w	r2, r2, #1
 80047d8:	601a      	str	r2, [r3, #0]
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80047de:	681a      	ldr	r2, [r3, #0]
 80047e0:	687b      	ldr	r3, [r7, #4]
 80047e2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80047e4:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80047e8:	601a      	str	r2, [r3, #0]
 80047ea:	687b      	ldr	r3, [r7, #4]
 80047ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80047ee:	f003 021f 	and.w	r2, r3, #31
 80047f2:	687b      	ldr	r3, [r7, #4]
 80047f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80047f6:	2101      	movs	r1, #1
 80047f8:	fa01 f202 	lsl.w	r2, r1, r2
 80047fc:	605a      	str	r2, [r3, #4]
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004802:	687a      	ldr	r2, [r7, #4]
 8004804:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8004806:	605a      	str	r2, [r3, #4]
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800480c:	2b00      	cmp	r3, #0
 800480e:	d00c      	beq.n	800482a <HAL_DMA_Abort_IT+0xa4>
 8004810:	687b      	ldr	r3, [r7, #4]
 8004812:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004814:	681a      	ldr	r2, [r3, #0]
 8004816:	687b      	ldr	r3, [r7, #4]
 8004818:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800481a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800481e:	601a      	str	r2, [r3, #0]
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004824:	687a      	ldr	r2, [r7, #4]
 8004826:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 8004828:	605a      	str	r2, [r3, #4]
 800482a:	687b      	ldr	r3, [r7, #4]
 800482c:	2201      	movs	r2, #1
 800482e:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8004832:	687b      	ldr	r3, [r7, #4]
 8004834:	2200      	movs	r2, #0
 8004836:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800483a:	687b      	ldr	r3, [r7, #4]
 800483c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800483e:	2b00      	cmp	r3, #0
 8004840:	d003      	beq.n	800484a <HAL_DMA_Abort_IT+0xc4>
 8004842:	687b      	ldr	r3, [r7, #4]
 8004844:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004846:	6878      	ldr	r0, [r7, #4]
 8004848:	4798      	blx	r3
 800484a:	7bfb      	ldrb	r3, [r7, #15]
 800484c:	4618      	mov	r0, r3
 800484e:	3710      	adds	r7, #16
 8004850:	46bd      	mov	sp, r7
 8004852:	bd80      	pop	{r7, pc}

08004854 <HAL_DMA_IRQHandler>:
 8004854:	b580      	push	{r7, lr}
 8004856:	b084      	sub	sp, #16
 8004858:	af00      	add	r7, sp, #0
 800485a:	6078      	str	r0, [r7, #4]
 800485c:	687b      	ldr	r3, [r7, #4]
 800485e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004860:	681b      	ldr	r3, [r3, #0]
 8004862:	60fb      	str	r3, [r7, #12]
 8004864:	687b      	ldr	r3, [r7, #4]
 8004866:	681b      	ldr	r3, [r3, #0]
 8004868:	681b      	ldr	r3, [r3, #0]
 800486a:	60bb      	str	r3, [r7, #8]
 800486c:	687b      	ldr	r3, [r7, #4]
 800486e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004870:	f003 031f 	and.w	r3, r3, #31
 8004874:	2204      	movs	r2, #4
 8004876:	409a      	lsls	r2, r3
 8004878:	68fb      	ldr	r3, [r7, #12]
 800487a:	4013      	ands	r3, r2
 800487c:	2b00      	cmp	r3, #0
 800487e:	d026      	beq.n	80048ce <HAL_DMA_IRQHandler+0x7a>
 8004880:	68bb      	ldr	r3, [r7, #8]
 8004882:	f003 0304 	and.w	r3, r3, #4
 8004886:	2b00      	cmp	r3, #0
 8004888:	d021      	beq.n	80048ce <HAL_DMA_IRQHandler+0x7a>
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	681b      	ldr	r3, [r3, #0]
 800488e:	681b      	ldr	r3, [r3, #0]
 8004890:	f003 0320 	and.w	r3, r3, #32
 8004894:	2b00      	cmp	r3, #0
 8004896:	d107      	bne.n	80048a8 <HAL_DMA_IRQHandler+0x54>
 8004898:	687b      	ldr	r3, [r7, #4]
 800489a:	681b      	ldr	r3, [r3, #0]
 800489c:	681a      	ldr	r2, [r3, #0]
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	681b      	ldr	r3, [r3, #0]
 80048a2:	f022 0204 	bic.w	r2, r2, #4
 80048a6:	601a      	str	r2, [r3, #0]
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80048ac:	f003 021f 	and.w	r2, r3, #31
 80048b0:	687b      	ldr	r3, [r7, #4]
 80048b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80048b4:	2104      	movs	r1, #4
 80048b6:	fa01 f202 	lsl.w	r2, r1, r2
 80048ba:	605a      	str	r2, [r3, #4]
 80048bc:	687b      	ldr	r3, [r7, #4]
 80048be:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80048c0:	2b00      	cmp	r3, #0
 80048c2:	d071      	beq.n	80049a8 <HAL_DMA_IRQHandler+0x154>
 80048c4:	687b      	ldr	r3, [r7, #4]
 80048c6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80048c8:	6878      	ldr	r0, [r7, #4]
 80048ca:	4798      	blx	r3
 80048cc:	e06c      	b.n	80049a8 <HAL_DMA_IRQHandler+0x154>
 80048ce:	687b      	ldr	r3, [r7, #4]
 80048d0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80048d2:	f003 031f 	and.w	r3, r3, #31
 80048d6:	2202      	movs	r2, #2
 80048d8:	409a      	lsls	r2, r3
 80048da:	68fb      	ldr	r3, [r7, #12]
 80048dc:	4013      	ands	r3, r2
 80048de:	2b00      	cmp	r3, #0
 80048e0:	d02e      	beq.n	8004940 <HAL_DMA_IRQHandler+0xec>
 80048e2:	68bb      	ldr	r3, [r7, #8]
 80048e4:	f003 0302 	and.w	r3, r3, #2
 80048e8:	2b00      	cmp	r3, #0
 80048ea:	d029      	beq.n	8004940 <HAL_DMA_IRQHandler+0xec>
 80048ec:	687b      	ldr	r3, [r7, #4]
 80048ee:	681b      	ldr	r3, [r3, #0]
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	f003 0320 	and.w	r3, r3, #32
 80048f6:	2b00      	cmp	r3, #0
 80048f8:	d10b      	bne.n	8004912 <HAL_DMA_IRQHandler+0xbe>
 80048fa:	687b      	ldr	r3, [r7, #4]
 80048fc:	681b      	ldr	r3, [r3, #0]
 80048fe:	681a      	ldr	r2, [r3, #0]
 8004900:	687b      	ldr	r3, [r7, #4]
 8004902:	681b      	ldr	r3, [r3, #0]
 8004904:	f022 020a 	bic.w	r2, r2, #10
 8004908:	601a      	str	r2, [r3, #0]
 800490a:	687b      	ldr	r3, [r7, #4]
 800490c:	2201      	movs	r2, #1
 800490e:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8004912:	687b      	ldr	r3, [r7, #4]
 8004914:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004916:	f003 021f 	and.w	r2, r3, #31
 800491a:	687b      	ldr	r3, [r7, #4]
 800491c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800491e:	2102      	movs	r1, #2
 8004920:	fa01 f202 	lsl.w	r2, r1, r2
 8004924:	605a      	str	r2, [r3, #4]
 8004926:	687b      	ldr	r3, [r7, #4]
 8004928:	2200      	movs	r2, #0
 800492a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800492e:	687b      	ldr	r3, [r7, #4]
 8004930:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004932:	2b00      	cmp	r3, #0
 8004934:	d038      	beq.n	80049a8 <HAL_DMA_IRQHandler+0x154>
 8004936:	687b      	ldr	r3, [r7, #4]
 8004938:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800493a:	6878      	ldr	r0, [r7, #4]
 800493c:	4798      	blx	r3
 800493e:	e033      	b.n	80049a8 <HAL_DMA_IRQHandler+0x154>
 8004940:	687b      	ldr	r3, [r7, #4]
 8004942:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004944:	f003 031f 	and.w	r3, r3, #31
 8004948:	2208      	movs	r2, #8
 800494a:	409a      	lsls	r2, r3
 800494c:	68fb      	ldr	r3, [r7, #12]
 800494e:	4013      	ands	r3, r2
 8004950:	2b00      	cmp	r3, #0
 8004952:	d02a      	beq.n	80049aa <HAL_DMA_IRQHandler+0x156>
 8004954:	68bb      	ldr	r3, [r7, #8]
 8004956:	f003 0308 	and.w	r3, r3, #8
 800495a:	2b00      	cmp	r3, #0
 800495c:	d025      	beq.n	80049aa <HAL_DMA_IRQHandler+0x156>
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	681b      	ldr	r3, [r3, #0]
 8004962:	681a      	ldr	r2, [r3, #0]
 8004964:	687b      	ldr	r3, [r7, #4]
 8004966:	681b      	ldr	r3, [r3, #0]
 8004968:	f022 020e 	bic.w	r2, r2, #14
 800496c:	601a      	str	r2, [r3, #0]
 800496e:	687b      	ldr	r3, [r7, #4]
 8004970:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004972:	f003 021f 	and.w	r2, r3, #31
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800497a:	2101      	movs	r1, #1
 800497c:	fa01 f202 	lsl.w	r2, r1, r2
 8004980:	605a      	str	r2, [r3, #4]
 8004982:	687b      	ldr	r3, [r7, #4]
 8004984:	2201      	movs	r2, #1
 8004986:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004988:	687b      	ldr	r3, [r7, #4]
 800498a:	2201      	movs	r2, #1
 800498c:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	2200      	movs	r2, #0
 8004994:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8004998:	687b      	ldr	r3, [r7, #4]
 800499a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800499c:	2b00      	cmp	r3, #0
 800499e:	d004      	beq.n	80049aa <HAL_DMA_IRQHandler+0x156>
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80049a4:	6878      	ldr	r0, [r7, #4]
 80049a6:	4798      	blx	r3
 80049a8:	bf00      	nop
 80049aa:	bf00      	nop
 80049ac:	3710      	adds	r7, #16
 80049ae:	46bd      	mov	sp, r7
 80049b0:	bd80      	pop	{r7, pc}

080049b2 <DMA_SetConfig>:
 80049b2:	b480      	push	{r7}
 80049b4:	b085      	sub	sp, #20
 80049b6:	af00      	add	r7, sp, #0
 80049b8:	60f8      	str	r0, [r7, #12]
 80049ba:	60b9      	str	r1, [r7, #8]
 80049bc:	607a      	str	r2, [r7, #4]
 80049be:	603b      	str	r3, [r7, #0]
 80049c0:	68fb      	ldr	r3, [r7, #12]
 80049c2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80049c4:	68fa      	ldr	r2, [r7, #12]
 80049c6:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 80049c8:	605a      	str	r2, [r3, #4]
 80049ca:	68fb      	ldr	r3, [r7, #12]
 80049cc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80049ce:	2b00      	cmp	r3, #0
 80049d0:	d004      	beq.n	80049dc <DMA_SetConfig+0x2a>
 80049d2:	68fb      	ldr	r3, [r7, #12]
 80049d4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80049d6:	68fa      	ldr	r2, [r7, #12]
 80049d8:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 80049da:	605a      	str	r2, [r3, #4]
 80049dc:	68fb      	ldr	r3, [r7, #12]
 80049de:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80049e0:	f003 021f 	and.w	r2, r3, #31
 80049e4:	68fb      	ldr	r3, [r7, #12]
 80049e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80049e8:	2101      	movs	r1, #1
 80049ea:	fa01 f202 	lsl.w	r2, r1, r2
 80049ee:	605a      	str	r2, [r3, #4]
 80049f0:	68fb      	ldr	r3, [r7, #12]
 80049f2:	681b      	ldr	r3, [r3, #0]
 80049f4:	683a      	ldr	r2, [r7, #0]
 80049f6:	605a      	str	r2, [r3, #4]
 80049f8:	68fb      	ldr	r3, [r7, #12]
 80049fa:	689b      	ldr	r3, [r3, #8]
 80049fc:	2b10      	cmp	r3, #16
 80049fe:	d108      	bne.n	8004a12 <DMA_SetConfig+0x60>
 8004a00:	68fb      	ldr	r3, [r7, #12]
 8004a02:	681b      	ldr	r3, [r3, #0]
 8004a04:	687a      	ldr	r2, [r7, #4]
 8004a06:	609a      	str	r2, [r3, #8]
 8004a08:	68fb      	ldr	r3, [r7, #12]
 8004a0a:	681b      	ldr	r3, [r3, #0]
 8004a0c:	68ba      	ldr	r2, [r7, #8]
 8004a0e:	60da      	str	r2, [r3, #12]
 8004a10:	e007      	b.n	8004a22 <DMA_SetConfig+0x70>
 8004a12:	68fb      	ldr	r3, [r7, #12]
 8004a14:	681b      	ldr	r3, [r3, #0]
 8004a16:	68ba      	ldr	r2, [r7, #8]
 8004a18:	609a      	str	r2, [r3, #8]
 8004a1a:	68fb      	ldr	r3, [r7, #12]
 8004a1c:	681b      	ldr	r3, [r3, #0]
 8004a1e:	687a      	ldr	r2, [r7, #4]
 8004a20:	60da      	str	r2, [r3, #12]
 8004a22:	bf00      	nop
 8004a24:	3714      	adds	r7, #20
 8004a26:	46bd      	mov	sp, r7
 8004a28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a2c:	4770      	bx	lr
	...

08004a30 <DMA_CalcDMAMUXChannelBaseAndMask>:
 8004a30:	b480      	push	{r7}
 8004a32:	b087      	sub	sp, #28
 8004a34:	af00      	add	r7, sp, #0
 8004a36:	6078      	str	r0, [r7, #4]
 8004a38:	687b      	ldr	r3, [r7, #4]
 8004a3a:	681b      	ldr	r3, [r3, #0]
 8004a3c:	461a      	mov	r2, r3
 8004a3e:	4b16      	ldr	r3, [pc, #88]	@ (8004a98 <DMA_CalcDMAMUXChannelBaseAndMask+0x68>)
 8004a40:	429a      	cmp	r2, r3
 8004a42:	d802      	bhi.n	8004a4a <DMA_CalcDMAMUXChannelBaseAndMask+0x1a>
 8004a44:	4b15      	ldr	r3, [pc, #84]	@ (8004a9c <DMA_CalcDMAMUXChannelBaseAndMask+0x6c>)
 8004a46:	617b      	str	r3, [r7, #20]
 8004a48:	e001      	b.n	8004a4e <DMA_CalcDMAMUXChannelBaseAndMask+0x1e>
 8004a4a:	4b15      	ldr	r3, [pc, #84]	@ (8004aa0 <DMA_CalcDMAMUXChannelBaseAndMask+0x70>)
 8004a4c:	617b      	str	r3, [r7, #20]
 8004a4e:	697b      	ldr	r3, [r7, #20]
 8004a50:	613b      	str	r3, [r7, #16]
 8004a52:	687b      	ldr	r3, [r7, #4]
 8004a54:	681b      	ldr	r3, [r3, #0]
 8004a56:	b2db      	uxtb	r3, r3
 8004a58:	3b08      	subs	r3, #8
 8004a5a:	4a12      	ldr	r2, [pc, #72]	@ (8004aa4 <DMA_CalcDMAMUXChannelBaseAndMask+0x74>)
 8004a5c:	fba2 2303 	umull	r2, r3, r2, r3
 8004a60:	091b      	lsrs	r3, r3, #4
 8004a62:	60fb      	str	r3, [r7, #12]
 8004a64:	687b      	ldr	r3, [r7, #4]
 8004a66:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004a68:	089b      	lsrs	r3, r3, #2
 8004a6a:	009a      	lsls	r2, r3, #2
 8004a6c:	693b      	ldr	r3, [r7, #16]
 8004a6e:	4413      	add	r3, r2
 8004a70:	461a      	mov	r2, r3
 8004a72:	687b      	ldr	r3, [r7, #4]
 8004a74:	649a      	str	r2, [r3, #72]	@ 0x48
 8004a76:	687b      	ldr	r3, [r7, #4]
 8004a78:	4a0b      	ldr	r2, [pc, #44]	@ (8004aa8 <DMA_CalcDMAMUXChannelBaseAndMask+0x78>)
 8004a7a:	64da      	str	r2, [r3, #76]	@ 0x4c
 8004a7c:	68fb      	ldr	r3, [r7, #12]
 8004a7e:	f003 031f 	and.w	r3, r3, #31
 8004a82:	2201      	movs	r2, #1
 8004a84:	409a      	lsls	r2, r3
 8004a86:	687b      	ldr	r3, [r7, #4]
 8004a88:	651a      	str	r2, [r3, #80]	@ 0x50
 8004a8a:	bf00      	nop
 8004a8c:	371c      	adds	r7, #28
 8004a8e:	46bd      	mov	sp, r7
 8004a90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a94:	4770      	bx	lr
 8004a96:	bf00      	nop
 8004a98:	40020407 	.word	0x40020407
 8004a9c:	40020800 	.word	0x40020800
 8004aa0:	40020820 	.word	0x40020820
 8004aa4:	cccccccd 	.word	0xcccccccd
 8004aa8:	40020880 	.word	0x40020880

08004aac <DMA_CalcDMAMUXRequestGenBaseAndMask>:
 8004aac:	b480      	push	{r7}
 8004aae:	b085      	sub	sp, #20
 8004ab0:	af00      	add	r7, sp, #0
 8004ab2:	6078      	str	r0, [r7, #4]
 8004ab4:	687b      	ldr	r3, [r7, #4]
 8004ab6:	685b      	ldr	r3, [r3, #4]
 8004ab8:	b2db      	uxtb	r3, r3
 8004aba:	60fb      	str	r3, [r7, #12]
 8004abc:	68fa      	ldr	r2, [r7, #12]
 8004abe:	4b0b      	ldr	r3, [pc, #44]	@ (8004aec <DMA_CalcDMAMUXRequestGenBaseAndMask+0x40>)
 8004ac0:	4413      	add	r3, r2
 8004ac2:	009b      	lsls	r3, r3, #2
 8004ac4:	461a      	mov	r2, r3
 8004ac6:	687b      	ldr	r3, [r7, #4]
 8004ac8:	655a      	str	r2, [r3, #84]	@ 0x54
 8004aca:	687b      	ldr	r3, [r7, #4]
 8004acc:	4a08      	ldr	r2, [pc, #32]	@ (8004af0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x44>)
 8004ace:	659a      	str	r2, [r3, #88]	@ 0x58
 8004ad0:	68fb      	ldr	r3, [r7, #12]
 8004ad2:	3b01      	subs	r3, #1
 8004ad4:	f003 031f 	and.w	r3, r3, #31
 8004ad8:	2201      	movs	r2, #1
 8004ada:	409a      	lsls	r2, r3
 8004adc:	687b      	ldr	r3, [r7, #4]
 8004ade:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004ae0:	bf00      	nop
 8004ae2:	3714      	adds	r7, #20
 8004ae4:	46bd      	mov	sp, r7
 8004ae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004aea:	4770      	bx	lr
 8004aec:	1000823f 	.word	0x1000823f
 8004af0:	40020940 	.word	0x40020940

08004af4 <HAL_FDCAN_Init>:
 8004af4:	b580      	push	{r7, lr}
 8004af6:	b084      	sub	sp, #16
 8004af8:	af00      	add	r7, sp, #0
 8004afa:	6078      	str	r0, [r7, #4]
 8004afc:	687b      	ldr	r3, [r7, #4]
 8004afe:	2b00      	cmp	r3, #0
 8004b00:	d101      	bne.n	8004b06 <HAL_FDCAN_Init+0x12>
 8004b02:	2301      	movs	r3, #1
 8004b04:	e147      	b.n	8004d96 <HAL_FDCAN_Init+0x2a2>
 8004b06:	687b      	ldr	r3, [r7, #4]
 8004b08:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8004b0c:	b2db      	uxtb	r3, r3
 8004b0e:	2b00      	cmp	r3, #0
 8004b10:	d106      	bne.n	8004b20 <HAL_FDCAN_Init+0x2c>
 8004b12:	687b      	ldr	r3, [r7, #4]
 8004b14:	2200      	movs	r2, #0
 8004b16:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8004b1a:	6878      	ldr	r0, [r7, #4]
 8004b1c:	f7fd fb14 	bl	8002148 <HAL_FDCAN_MspInit>
 8004b20:	687b      	ldr	r3, [r7, #4]
 8004b22:	681b      	ldr	r3, [r3, #0]
 8004b24:	699a      	ldr	r2, [r3, #24]
 8004b26:	687b      	ldr	r3, [r7, #4]
 8004b28:	681b      	ldr	r3, [r3, #0]
 8004b2a:	f022 0210 	bic.w	r2, r2, #16
 8004b2e:	619a      	str	r2, [r3, #24]
 8004b30:	f7fd ffee 	bl	8002b10 <HAL_GetTick>
 8004b34:	60f8      	str	r0, [r7, #12]
 8004b36:	e012      	b.n	8004b5e <HAL_FDCAN_Init+0x6a>
 8004b38:	f7fd ffea 	bl	8002b10 <HAL_GetTick>
 8004b3c:	4602      	mov	r2, r0
 8004b3e:	68fb      	ldr	r3, [r7, #12]
 8004b40:	1ad3      	subs	r3, r2, r3
 8004b42:	2b0a      	cmp	r3, #10
 8004b44:	d90b      	bls.n	8004b5e <HAL_FDCAN_Init+0x6a>
 8004b46:	687b      	ldr	r3, [r7, #4]
 8004b48:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004b4a:	f043 0201 	orr.w	r2, r3, #1
 8004b4e:	687b      	ldr	r3, [r7, #4]
 8004b50:	661a      	str	r2, [r3, #96]	@ 0x60
 8004b52:	687b      	ldr	r3, [r7, #4]
 8004b54:	2203      	movs	r2, #3
 8004b56:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8004b5a:	2301      	movs	r3, #1
 8004b5c:	e11b      	b.n	8004d96 <HAL_FDCAN_Init+0x2a2>
 8004b5e:	687b      	ldr	r3, [r7, #4]
 8004b60:	681b      	ldr	r3, [r3, #0]
 8004b62:	699b      	ldr	r3, [r3, #24]
 8004b64:	f003 0308 	and.w	r3, r3, #8
 8004b68:	2b08      	cmp	r3, #8
 8004b6a:	d0e5      	beq.n	8004b38 <HAL_FDCAN_Init+0x44>
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	681b      	ldr	r3, [r3, #0]
 8004b70:	699a      	ldr	r2, [r3, #24]
 8004b72:	687b      	ldr	r3, [r7, #4]
 8004b74:	681b      	ldr	r3, [r3, #0]
 8004b76:	f042 0201 	orr.w	r2, r2, #1
 8004b7a:	619a      	str	r2, [r3, #24]
 8004b7c:	f7fd ffc8 	bl	8002b10 <HAL_GetTick>
 8004b80:	60f8      	str	r0, [r7, #12]
 8004b82:	e012      	b.n	8004baa <HAL_FDCAN_Init+0xb6>
 8004b84:	f7fd ffc4 	bl	8002b10 <HAL_GetTick>
 8004b88:	4602      	mov	r2, r0
 8004b8a:	68fb      	ldr	r3, [r7, #12]
 8004b8c:	1ad3      	subs	r3, r2, r3
 8004b8e:	2b0a      	cmp	r3, #10
 8004b90:	d90b      	bls.n	8004baa <HAL_FDCAN_Init+0xb6>
 8004b92:	687b      	ldr	r3, [r7, #4]
 8004b94:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004b96:	f043 0201 	orr.w	r2, r3, #1
 8004b9a:	687b      	ldr	r3, [r7, #4]
 8004b9c:	661a      	str	r2, [r3, #96]	@ 0x60
 8004b9e:	687b      	ldr	r3, [r7, #4]
 8004ba0:	2203      	movs	r2, #3
 8004ba2:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8004ba6:	2301      	movs	r3, #1
 8004ba8:	e0f5      	b.n	8004d96 <HAL_FDCAN_Init+0x2a2>
 8004baa:	687b      	ldr	r3, [r7, #4]
 8004bac:	681b      	ldr	r3, [r3, #0]
 8004bae:	699b      	ldr	r3, [r3, #24]
 8004bb0:	f003 0301 	and.w	r3, r3, #1
 8004bb4:	2b00      	cmp	r3, #0
 8004bb6:	d0e5      	beq.n	8004b84 <HAL_FDCAN_Init+0x90>
 8004bb8:	687b      	ldr	r3, [r7, #4]
 8004bba:	681b      	ldr	r3, [r3, #0]
 8004bbc:	699a      	ldr	r2, [r3, #24]
 8004bbe:	687b      	ldr	r3, [r7, #4]
 8004bc0:	681b      	ldr	r3, [r3, #0]
 8004bc2:	f042 0202 	orr.w	r2, r2, #2
 8004bc6:	619a      	str	r2, [r3, #24]
 8004bc8:	687b      	ldr	r3, [r7, #4]
 8004bca:	681b      	ldr	r3, [r3, #0]
 8004bcc:	4a74      	ldr	r2, [pc, #464]	@ (8004da0 <HAL_FDCAN_Init+0x2ac>)
 8004bce:	4293      	cmp	r3, r2
 8004bd0:	d103      	bne.n	8004bda <HAL_FDCAN_Init+0xe6>
 8004bd2:	4a74      	ldr	r2, [pc, #464]	@ (8004da4 <HAL_FDCAN_Init+0x2b0>)
 8004bd4:	687b      	ldr	r3, [r7, #4]
 8004bd6:	685b      	ldr	r3, [r3, #4]
 8004bd8:	6013      	str	r3, [r2, #0]
 8004bda:	687b      	ldr	r3, [r7, #4]
 8004bdc:	7c1b      	ldrb	r3, [r3, #16]
 8004bde:	2b01      	cmp	r3, #1
 8004be0:	d108      	bne.n	8004bf4 <HAL_FDCAN_Init+0x100>
 8004be2:	687b      	ldr	r3, [r7, #4]
 8004be4:	681b      	ldr	r3, [r3, #0]
 8004be6:	699a      	ldr	r2, [r3, #24]
 8004be8:	687b      	ldr	r3, [r7, #4]
 8004bea:	681b      	ldr	r3, [r3, #0]
 8004bec:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8004bf0:	619a      	str	r2, [r3, #24]
 8004bf2:	e007      	b.n	8004c04 <HAL_FDCAN_Init+0x110>
 8004bf4:	687b      	ldr	r3, [r7, #4]
 8004bf6:	681b      	ldr	r3, [r3, #0]
 8004bf8:	699a      	ldr	r2, [r3, #24]
 8004bfa:	687b      	ldr	r3, [r7, #4]
 8004bfc:	681b      	ldr	r3, [r3, #0]
 8004bfe:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004c02:	619a      	str	r2, [r3, #24]
 8004c04:	687b      	ldr	r3, [r7, #4]
 8004c06:	7c5b      	ldrb	r3, [r3, #17]
 8004c08:	2b01      	cmp	r3, #1
 8004c0a:	d108      	bne.n	8004c1e <HAL_FDCAN_Init+0x12a>
 8004c0c:	687b      	ldr	r3, [r7, #4]
 8004c0e:	681b      	ldr	r3, [r3, #0]
 8004c10:	699a      	ldr	r2, [r3, #24]
 8004c12:	687b      	ldr	r3, [r7, #4]
 8004c14:	681b      	ldr	r3, [r3, #0]
 8004c16:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004c1a:	619a      	str	r2, [r3, #24]
 8004c1c:	e007      	b.n	8004c2e <HAL_FDCAN_Init+0x13a>
 8004c1e:	687b      	ldr	r3, [r7, #4]
 8004c20:	681b      	ldr	r3, [r3, #0]
 8004c22:	699a      	ldr	r2, [r3, #24]
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	681b      	ldr	r3, [r3, #0]
 8004c28:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8004c2c:	619a      	str	r2, [r3, #24]
 8004c2e:	687b      	ldr	r3, [r7, #4]
 8004c30:	7c9b      	ldrb	r3, [r3, #18]
 8004c32:	2b01      	cmp	r3, #1
 8004c34:	d108      	bne.n	8004c48 <HAL_FDCAN_Init+0x154>
 8004c36:	687b      	ldr	r3, [r7, #4]
 8004c38:	681b      	ldr	r3, [r3, #0]
 8004c3a:	699a      	ldr	r2, [r3, #24]
 8004c3c:	687b      	ldr	r3, [r7, #4]
 8004c3e:	681b      	ldr	r3, [r3, #0]
 8004c40:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8004c44:	619a      	str	r2, [r3, #24]
 8004c46:	e007      	b.n	8004c58 <HAL_FDCAN_Init+0x164>
 8004c48:	687b      	ldr	r3, [r7, #4]
 8004c4a:	681b      	ldr	r3, [r3, #0]
 8004c4c:	699a      	ldr	r2, [r3, #24]
 8004c4e:	687b      	ldr	r3, [r7, #4]
 8004c50:	681b      	ldr	r3, [r3, #0]
 8004c52:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8004c56:	619a      	str	r2, [r3, #24]
 8004c58:	687b      	ldr	r3, [r7, #4]
 8004c5a:	681b      	ldr	r3, [r3, #0]
 8004c5c:	699b      	ldr	r3, [r3, #24]
 8004c5e:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8004c62:	687b      	ldr	r3, [r7, #4]
 8004c64:	689a      	ldr	r2, [r3, #8]
 8004c66:	687b      	ldr	r3, [r7, #4]
 8004c68:	681b      	ldr	r3, [r3, #0]
 8004c6a:	430a      	orrs	r2, r1
 8004c6c:	619a      	str	r2, [r3, #24]
 8004c6e:	687b      	ldr	r3, [r7, #4]
 8004c70:	681b      	ldr	r3, [r3, #0]
 8004c72:	699a      	ldr	r2, [r3, #24]
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	681b      	ldr	r3, [r3, #0]
 8004c78:	f022 02a4 	bic.w	r2, r2, #164	@ 0xa4
 8004c7c:	619a      	str	r2, [r3, #24]
 8004c7e:	687b      	ldr	r3, [r7, #4]
 8004c80:	681b      	ldr	r3, [r3, #0]
 8004c82:	691a      	ldr	r2, [r3, #16]
 8004c84:	687b      	ldr	r3, [r7, #4]
 8004c86:	681b      	ldr	r3, [r3, #0]
 8004c88:	f022 0210 	bic.w	r2, r2, #16
 8004c8c:	611a      	str	r2, [r3, #16]
 8004c8e:	687b      	ldr	r3, [r7, #4]
 8004c90:	68db      	ldr	r3, [r3, #12]
 8004c92:	2b01      	cmp	r3, #1
 8004c94:	d108      	bne.n	8004ca8 <HAL_FDCAN_Init+0x1b4>
 8004c96:	687b      	ldr	r3, [r7, #4]
 8004c98:	681b      	ldr	r3, [r3, #0]
 8004c9a:	699a      	ldr	r2, [r3, #24]
 8004c9c:	687b      	ldr	r3, [r7, #4]
 8004c9e:	681b      	ldr	r3, [r3, #0]
 8004ca0:	f042 0204 	orr.w	r2, r2, #4
 8004ca4:	619a      	str	r2, [r3, #24]
 8004ca6:	e02c      	b.n	8004d02 <HAL_FDCAN_Init+0x20e>
 8004ca8:	687b      	ldr	r3, [r7, #4]
 8004caa:	68db      	ldr	r3, [r3, #12]
 8004cac:	2b00      	cmp	r3, #0
 8004cae:	d028      	beq.n	8004d02 <HAL_FDCAN_Init+0x20e>
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	68db      	ldr	r3, [r3, #12]
 8004cb4:	2b02      	cmp	r3, #2
 8004cb6:	d01c      	beq.n	8004cf2 <HAL_FDCAN_Init+0x1fe>
 8004cb8:	687b      	ldr	r3, [r7, #4]
 8004cba:	681b      	ldr	r3, [r3, #0]
 8004cbc:	699a      	ldr	r2, [r3, #24]
 8004cbe:	687b      	ldr	r3, [r7, #4]
 8004cc0:	681b      	ldr	r3, [r3, #0]
 8004cc2:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8004cc6:	619a      	str	r2, [r3, #24]
 8004cc8:	687b      	ldr	r3, [r7, #4]
 8004cca:	681b      	ldr	r3, [r3, #0]
 8004ccc:	691a      	ldr	r2, [r3, #16]
 8004cce:	687b      	ldr	r3, [r7, #4]
 8004cd0:	681b      	ldr	r3, [r3, #0]
 8004cd2:	f042 0210 	orr.w	r2, r2, #16
 8004cd6:	611a      	str	r2, [r3, #16]
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	68db      	ldr	r3, [r3, #12]
 8004cdc:	2b03      	cmp	r3, #3
 8004cde:	d110      	bne.n	8004d02 <HAL_FDCAN_Init+0x20e>
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	681b      	ldr	r3, [r3, #0]
 8004ce4:	699a      	ldr	r2, [r3, #24]
 8004ce6:	687b      	ldr	r3, [r7, #4]
 8004ce8:	681b      	ldr	r3, [r3, #0]
 8004cea:	f042 0220 	orr.w	r2, r2, #32
 8004cee:	619a      	str	r2, [r3, #24]
 8004cf0:	e007      	b.n	8004d02 <HAL_FDCAN_Init+0x20e>
 8004cf2:	687b      	ldr	r3, [r7, #4]
 8004cf4:	681b      	ldr	r3, [r3, #0]
 8004cf6:	699a      	ldr	r2, [r3, #24]
 8004cf8:	687b      	ldr	r3, [r7, #4]
 8004cfa:	681b      	ldr	r3, [r3, #0]
 8004cfc:	f042 0220 	orr.w	r2, r2, #32
 8004d00:	619a      	str	r2, [r3, #24]
 8004d02:	687b      	ldr	r3, [r7, #4]
 8004d04:	699b      	ldr	r3, [r3, #24]
 8004d06:	3b01      	subs	r3, #1
 8004d08:	065a      	lsls	r2, r3, #25
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	69db      	ldr	r3, [r3, #28]
 8004d0e:	3b01      	subs	r3, #1
 8004d10:	021b      	lsls	r3, r3, #8
 8004d12:	431a      	orrs	r2, r3
 8004d14:	687b      	ldr	r3, [r7, #4]
 8004d16:	6a1b      	ldr	r3, [r3, #32]
 8004d18:	3b01      	subs	r3, #1
 8004d1a:	ea42 0103 	orr.w	r1, r2, r3
 8004d1e:	687b      	ldr	r3, [r7, #4]
 8004d20:	695b      	ldr	r3, [r3, #20]
 8004d22:	3b01      	subs	r3, #1
 8004d24:	041a      	lsls	r2, r3, #16
 8004d26:	687b      	ldr	r3, [r7, #4]
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	430a      	orrs	r2, r1
 8004d2c:	61da      	str	r2, [r3, #28]
 8004d2e:	687b      	ldr	r3, [r7, #4]
 8004d30:	689b      	ldr	r3, [r3, #8]
 8004d32:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8004d36:	d115      	bne.n	8004d64 <HAL_FDCAN_Init+0x270>
 8004d38:	687b      	ldr	r3, [r7, #4]
 8004d3a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004d3c:	1e5a      	subs	r2, r3, #1
 8004d3e:	687b      	ldr	r3, [r7, #4]
 8004d40:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004d42:	3b01      	subs	r3, #1
 8004d44:	021b      	lsls	r3, r3, #8
 8004d46:	431a      	orrs	r2, r3
 8004d48:	687b      	ldr	r3, [r7, #4]
 8004d4a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004d4c:	3b01      	subs	r3, #1
 8004d4e:	011b      	lsls	r3, r3, #4
 8004d50:	ea42 0103 	orr.w	r1, r2, r3
 8004d54:	687b      	ldr	r3, [r7, #4]
 8004d56:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d58:	3b01      	subs	r3, #1
 8004d5a:	041a      	lsls	r2, r3, #16
 8004d5c:	687b      	ldr	r3, [r7, #4]
 8004d5e:	681b      	ldr	r3, [r3, #0]
 8004d60:	430a      	orrs	r2, r1
 8004d62:	60da      	str	r2, [r3, #12]
 8004d64:	687b      	ldr	r3, [r7, #4]
 8004d66:	681b      	ldr	r3, [r3, #0]
 8004d68:	f8d3 10c0 	ldr.w	r1, [r3, #192]	@ 0xc0
 8004d6c:	687b      	ldr	r3, [r7, #4]
 8004d6e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004d70:	687b      	ldr	r3, [r7, #4]
 8004d72:	681b      	ldr	r3, [r3, #0]
 8004d74:	430a      	orrs	r2, r1
 8004d76:	f8c3 20c0 	str.w	r2, [r3, #192]	@ 0xc0
 8004d7a:	6878      	ldr	r0, [r7, #4]
 8004d7c:	f000 f9c2 	bl	8005104 <FDCAN_CalcultateRamBlockAddresses>
 8004d80:	687b      	ldr	r3, [r7, #4]
 8004d82:	2200      	movs	r2, #0
 8004d84:	659a      	str	r2, [r3, #88]	@ 0x58
 8004d86:	687b      	ldr	r3, [r7, #4]
 8004d88:	2200      	movs	r2, #0
 8004d8a:	661a      	str	r2, [r3, #96]	@ 0x60
 8004d8c:	687b      	ldr	r3, [r7, #4]
 8004d8e:	2201      	movs	r2, #1
 8004d90:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8004d94:	2300      	movs	r3, #0
 8004d96:	4618      	mov	r0, r3
 8004d98:	3710      	adds	r7, #16
 8004d9a:	46bd      	mov	sp, r7
 8004d9c:	bd80      	pop	{r7, pc}
 8004d9e:	bf00      	nop
 8004da0:	40006400 	.word	0x40006400
 8004da4:	40006500 	.word	0x40006500

08004da8 <HAL_FDCAN_IRQHandler>:
 8004da8:	b580      	push	{r7, lr}
 8004daa:	b08a      	sub	sp, #40	@ 0x28
 8004dac:	af00      	add	r7, sp, #0
 8004dae:	6078      	str	r0, [r7, #4]
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	681b      	ldr	r3, [r3, #0]
 8004db4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004db6:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8004dba:	627b      	str	r3, [r7, #36]	@ 0x24
 8004dbc:	687b      	ldr	r3, [r7, #4]
 8004dbe:	681b      	ldr	r3, [r3, #0]
 8004dc0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004dc2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004dc4:	4013      	ands	r3, r2
 8004dc6:	627b      	str	r3, [r7, #36]	@ 0x24
 8004dc8:	687b      	ldr	r3, [r7, #4]
 8004dca:	681b      	ldr	r3, [r3, #0]
 8004dcc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004dce:	f003 0307 	and.w	r3, r3, #7
 8004dd2:	623b      	str	r3, [r7, #32]
 8004dd4:	687b      	ldr	r3, [r7, #4]
 8004dd6:	681b      	ldr	r3, [r3, #0]
 8004dd8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004dda:	6a3a      	ldr	r2, [r7, #32]
 8004ddc:	4013      	ands	r3, r2
 8004dde:	623b      	str	r3, [r7, #32]
 8004de0:	687b      	ldr	r3, [r7, #4]
 8004de2:	681b      	ldr	r3, [r3, #0]
 8004de4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004de6:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8004dea:	61fb      	str	r3, [r7, #28]
 8004dec:	687b      	ldr	r3, [r7, #4]
 8004dee:	681b      	ldr	r3, [r3, #0]
 8004df0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004df2:	69fa      	ldr	r2, [r7, #28]
 8004df4:	4013      	ands	r3, r2
 8004df6:	61fb      	str	r3, [r7, #28]
 8004df8:	687b      	ldr	r3, [r7, #4]
 8004dfa:	681b      	ldr	r3, [r3, #0]
 8004dfc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004dfe:	f403 0371 	and.w	r3, r3, #15794176	@ 0xf10000
 8004e02:	61bb      	str	r3, [r7, #24]
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	681b      	ldr	r3, [r3, #0]
 8004e08:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004e0a:	69ba      	ldr	r2, [r7, #24]
 8004e0c:	4013      	ands	r3, r2
 8004e0e:	61bb      	str	r3, [r7, #24]
 8004e10:	687b      	ldr	r3, [r7, #4]
 8004e12:	681b      	ldr	r3, [r3, #0]
 8004e14:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004e16:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 8004e1a:	617b      	str	r3, [r7, #20]
 8004e1c:	687b      	ldr	r3, [r7, #4]
 8004e1e:	681b      	ldr	r3, [r3, #0]
 8004e20:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004e22:	697a      	ldr	r2, [r7, #20]
 8004e24:	4013      	ands	r3, r2
 8004e26:	617b      	str	r3, [r7, #20]
 8004e28:	687b      	ldr	r3, [r7, #4]
 8004e2a:	681b      	ldr	r3, [r3, #0]
 8004e2c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004e2e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004e32:	2b00      	cmp	r3, #0
 8004e34:	d00d      	beq.n	8004e52 <HAL_FDCAN_IRQHandler+0xaa>
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	681b      	ldr	r3, [r3, #0]
 8004e3a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004e3c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004e40:	2b00      	cmp	r3, #0
 8004e42:	d006      	beq.n	8004e52 <HAL_FDCAN_IRQHandler+0xaa>
 8004e44:	687b      	ldr	r3, [r7, #4]
 8004e46:	681b      	ldr	r3, [r3, #0]
 8004e48:	2240      	movs	r2, #64	@ 0x40
 8004e4a:	651a      	str	r2, [r3, #80]	@ 0x50
 8004e4c:	6878      	ldr	r0, [r7, #4]
 8004e4e:	f000 f939 	bl	80050c4 <HAL_FDCAN_HighPriorityMessageCallback>
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	681b      	ldr	r3, [r3, #0]
 8004e56:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004e58:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004e5c:	2b00      	cmp	r3, #0
 8004e5e:	d01b      	beq.n	8004e98 <HAL_FDCAN_IRQHandler+0xf0>
 8004e60:	687b      	ldr	r3, [r7, #4]
 8004e62:	681b      	ldr	r3, [r3, #0]
 8004e64:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004e66:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004e6a:	2b00      	cmp	r3, #0
 8004e6c:	d014      	beq.n	8004e98 <HAL_FDCAN_IRQHandler+0xf0>
 8004e6e:	687b      	ldr	r3, [r7, #4]
 8004e70:	681b      	ldr	r3, [r3, #0]
 8004e72:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8004e76:	613b      	str	r3, [r7, #16]
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	681b      	ldr	r3, [r3, #0]
 8004e7c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8004e80:	693a      	ldr	r2, [r7, #16]
 8004e82:	4013      	ands	r3, r2
 8004e84:	613b      	str	r3, [r7, #16]
 8004e86:	687b      	ldr	r3, [r7, #4]
 8004e88:	681b      	ldr	r3, [r3, #0]
 8004e8a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8004e8e:	651a      	str	r2, [r3, #80]	@ 0x50
 8004e90:	6939      	ldr	r1, [r7, #16]
 8004e92:	6878      	ldr	r0, [r7, #4]
 8004e94:	f000 f8f7 	bl	8005086 <HAL_FDCAN_TxBufferAbortCallback>
 8004e98:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004e9a:	2b00      	cmp	r3, #0
 8004e9c:	d007      	beq.n	8004eae <HAL_FDCAN_IRQHandler+0x106>
 8004e9e:	687b      	ldr	r3, [r7, #4]
 8004ea0:	681b      	ldr	r3, [r3, #0]
 8004ea2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004ea4:	651a      	str	r2, [r3, #80]	@ 0x50
 8004ea6:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004ea8:	6878      	ldr	r0, [r7, #4]
 8004eaa:	f000 f8b6 	bl	800501a <HAL_FDCAN_TxEventFifoCallback>
 8004eae:	6a3b      	ldr	r3, [r7, #32]
 8004eb0:	2b00      	cmp	r3, #0
 8004eb2:	d007      	beq.n	8004ec4 <HAL_FDCAN_IRQHandler+0x11c>
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	681b      	ldr	r3, [r3, #0]
 8004eb8:	6a3a      	ldr	r2, [r7, #32]
 8004eba:	651a      	str	r2, [r3, #80]	@ 0x50
 8004ebc:	6a39      	ldr	r1, [r7, #32]
 8004ebe:	6878      	ldr	r0, [r7, #4]
 8004ec0:	f000 f8b6 	bl	8005030 <HAL_FDCAN_RxFifo0Callback>
 8004ec4:	69fb      	ldr	r3, [r7, #28]
 8004ec6:	2b00      	cmp	r3, #0
 8004ec8:	d007      	beq.n	8004eda <HAL_FDCAN_IRQHandler+0x132>
 8004eca:	687b      	ldr	r3, [r7, #4]
 8004ecc:	681b      	ldr	r3, [r3, #0]
 8004ece:	69fa      	ldr	r2, [r7, #28]
 8004ed0:	651a      	str	r2, [r3, #80]	@ 0x50
 8004ed2:	69f9      	ldr	r1, [r7, #28]
 8004ed4:	6878      	ldr	r0, [r7, #4]
 8004ed6:	f000 f8b6 	bl	8005046 <HAL_FDCAN_RxFifo1Callback>
 8004eda:	687b      	ldr	r3, [r7, #4]
 8004edc:	681b      	ldr	r3, [r3, #0]
 8004ede:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004ee0:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004ee4:	2b00      	cmp	r3, #0
 8004ee6:	d00e      	beq.n	8004f06 <HAL_FDCAN_IRQHandler+0x15e>
 8004ee8:	687b      	ldr	r3, [r7, #4]
 8004eea:	681b      	ldr	r3, [r3, #0]
 8004eec:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004eee:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004ef2:	2b00      	cmp	r3, #0
 8004ef4:	d007      	beq.n	8004f06 <HAL_FDCAN_IRQHandler+0x15e>
 8004ef6:	687b      	ldr	r3, [r7, #4]
 8004ef8:	681b      	ldr	r3, [r3, #0]
 8004efa:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004efe:	651a      	str	r2, [r3, #80]	@ 0x50
 8004f00:	6878      	ldr	r0, [r7, #4]
 8004f02:	f000 f8ab 	bl	800505c <HAL_FDCAN_TxFifoEmptyCallback>
 8004f06:	687b      	ldr	r3, [r7, #4]
 8004f08:	681b      	ldr	r3, [r3, #0]
 8004f0a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004f0c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004f10:	2b00      	cmp	r3, #0
 8004f12:	d01a      	beq.n	8004f4a <HAL_FDCAN_IRQHandler+0x1a2>
 8004f14:	687b      	ldr	r3, [r7, #4]
 8004f16:	681b      	ldr	r3, [r3, #0]
 8004f18:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004f1a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004f1e:	2b00      	cmp	r3, #0
 8004f20:	d013      	beq.n	8004f4a <HAL_FDCAN_IRQHandler+0x1a2>
 8004f22:	687b      	ldr	r3, [r7, #4]
 8004f24:	681b      	ldr	r3, [r3, #0]
 8004f26:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8004f2a:	60fb      	str	r3, [r7, #12]
 8004f2c:	687b      	ldr	r3, [r7, #4]
 8004f2e:	681b      	ldr	r3, [r3, #0]
 8004f30:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8004f34:	68fa      	ldr	r2, [r7, #12]
 8004f36:	4013      	ands	r3, r2
 8004f38:	60fb      	str	r3, [r7, #12]
 8004f3a:	687b      	ldr	r3, [r7, #4]
 8004f3c:	681b      	ldr	r3, [r3, #0]
 8004f3e:	2280      	movs	r2, #128	@ 0x80
 8004f40:	651a      	str	r2, [r3, #80]	@ 0x50
 8004f42:	68f9      	ldr	r1, [r7, #12]
 8004f44:	6878      	ldr	r0, [r7, #4]
 8004f46:	f000 f893 	bl	8005070 <HAL_FDCAN_TxBufferCompleteCallback>
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	681b      	ldr	r3, [r3, #0]
 8004f4e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004f50:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004f54:	2b00      	cmp	r3, #0
 8004f56:	d00e      	beq.n	8004f76 <HAL_FDCAN_IRQHandler+0x1ce>
 8004f58:	687b      	ldr	r3, [r7, #4]
 8004f5a:	681b      	ldr	r3, [r3, #0]
 8004f5c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004f5e:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004f62:	2b00      	cmp	r3, #0
 8004f64:	d007      	beq.n	8004f76 <HAL_FDCAN_IRQHandler+0x1ce>
 8004f66:	687b      	ldr	r3, [r7, #4]
 8004f68:	681b      	ldr	r3, [r3, #0]
 8004f6a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8004f6e:	651a      	str	r2, [r3, #80]	@ 0x50
 8004f70:	6878      	ldr	r0, [r7, #4]
 8004f72:	f000 f893 	bl	800509c <HAL_FDCAN_TimestampWraparoundCallback>
 8004f76:	687b      	ldr	r3, [r7, #4]
 8004f78:	681b      	ldr	r3, [r3, #0]
 8004f7a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004f7c:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8004f80:	2b00      	cmp	r3, #0
 8004f82:	d00e      	beq.n	8004fa2 <HAL_FDCAN_IRQHandler+0x1fa>
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	681b      	ldr	r3, [r3, #0]
 8004f88:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004f8a:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8004f8e:	2b00      	cmp	r3, #0
 8004f90:	d007      	beq.n	8004fa2 <HAL_FDCAN_IRQHandler+0x1fa>
 8004f92:	687b      	ldr	r3, [r7, #4]
 8004f94:	681b      	ldr	r3, [r3, #0]
 8004f96:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8004f9a:	651a      	str	r2, [r3, #80]	@ 0x50
 8004f9c:	6878      	ldr	r0, [r7, #4]
 8004f9e:	f000 f887 	bl	80050b0 <HAL_FDCAN_TimeoutOccurredCallback>
 8004fa2:	687b      	ldr	r3, [r7, #4]
 8004fa4:	681b      	ldr	r3, [r3, #0]
 8004fa6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004fa8:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004fac:	2b00      	cmp	r3, #0
 8004fae:	d011      	beq.n	8004fd4 <HAL_FDCAN_IRQHandler+0x22c>
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	681b      	ldr	r3, [r3, #0]
 8004fb4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004fb6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004fba:	2b00      	cmp	r3, #0
 8004fbc:	d00a      	beq.n	8004fd4 <HAL_FDCAN_IRQHandler+0x22c>
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	681b      	ldr	r3, [r3, #0]
 8004fc2:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8004fc6:	651a      	str	r2, [r3, #80]	@ 0x50
 8004fc8:	687b      	ldr	r3, [r7, #4]
 8004fca:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004fcc:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 8004fd0:	687b      	ldr	r3, [r7, #4]
 8004fd2:	661a      	str	r2, [r3, #96]	@ 0x60
 8004fd4:	697b      	ldr	r3, [r7, #20]
 8004fd6:	2b00      	cmp	r3, #0
 8004fd8:	d007      	beq.n	8004fea <HAL_FDCAN_IRQHandler+0x242>
 8004fda:	687b      	ldr	r3, [r7, #4]
 8004fdc:	681b      	ldr	r3, [r3, #0]
 8004fde:	697a      	ldr	r2, [r7, #20]
 8004fe0:	651a      	str	r2, [r3, #80]	@ 0x50
 8004fe2:	6979      	ldr	r1, [r7, #20]
 8004fe4:	6878      	ldr	r0, [r7, #4]
 8004fe6:	f000 f881 	bl	80050ec <HAL_FDCAN_ErrorStatusCallback>
 8004fea:	69bb      	ldr	r3, [r7, #24]
 8004fec:	2b00      	cmp	r3, #0
 8004fee:	d009      	beq.n	8005004 <HAL_FDCAN_IRQHandler+0x25c>
 8004ff0:	687b      	ldr	r3, [r7, #4]
 8004ff2:	681b      	ldr	r3, [r3, #0]
 8004ff4:	69ba      	ldr	r2, [r7, #24]
 8004ff6:	651a      	str	r2, [r3, #80]	@ 0x50
 8004ff8:	687b      	ldr	r3, [r7, #4]
 8004ffa:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8004ffc:	69bb      	ldr	r3, [r7, #24]
 8004ffe:	431a      	orrs	r2, r3
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	661a      	str	r2, [r3, #96]	@ 0x60
 8005004:	687b      	ldr	r3, [r7, #4]
 8005006:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005008:	2b00      	cmp	r3, #0
 800500a:	d002      	beq.n	8005012 <HAL_FDCAN_IRQHandler+0x26a>
 800500c:	6878      	ldr	r0, [r7, #4]
 800500e:	f000 f863 	bl	80050d8 <HAL_FDCAN_ErrorCallback>
 8005012:	bf00      	nop
 8005014:	3728      	adds	r7, #40	@ 0x28
 8005016:	46bd      	mov	sp, r7
 8005018:	bd80      	pop	{r7, pc}

0800501a <HAL_FDCAN_TxEventFifoCallback>:
 800501a:	b480      	push	{r7}
 800501c:	b083      	sub	sp, #12
 800501e:	af00      	add	r7, sp, #0
 8005020:	6078      	str	r0, [r7, #4]
 8005022:	6039      	str	r1, [r7, #0]
 8005024:	bf00      	nop
 8005026:	370c      	adds	r7, #12
 8005028:	46bd      	mov	sp, r7
 800502a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800502e:	4770      	bx	lr

08005030 <HAL_FDCAN_RxFifo0Callback>:
 8005030:	b480      	push	{r7}
 8005032:	b083      	sub	sp, #12
 8005034:	af00      	add	r7, sp, #0
 8005036:	6078      	str	r0, [r7, #4]
 8005038:	6039      	str	r1, [r7, #0]
 800503a:	bf00      	nop
 800503c:	370c      	adds	r7, #12
 800503e:	46bd      	mov	sp, r7
 8005040:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005044:	4770      	bx	lr

08005046 <HAL_FDCAN_RxFifo1Callback>:
 8005046:	b480      	push	{r7}
 8005048:	b083      	sub	sp, #12
 800504a:	af00      	add	r7, sp, #0
 800504c:	6078      	str	r0, [r7, #4]
 800504e:	6039      	str	r1, [r7, #0]
 8005050:	bf00      	nop
 8005052:	370c      	adds	r7, #12
 8005054:	46bd      	mov	sp, r7
 8005056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800505a:	4770      	bx	lr

0800505c <HAL_FDCAN_TxFifoEmptyCallback>:
 800505c:	b480      	push	{r7}
 800505e:	b083      	sub	sp, #12
 8005060:	af00      	add	r7, sp, #0
 8005062:	6078      	str	r0, [r7, #4]
 8005064:	bf00      	nop
 8005066:	370c      	adds	r7, #12
 8005068:	46bd      	mov	sp, r7
 800506a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800506e:	4770      	bx	lr

08005070 <HAL_FDCAN_TxBufferCompleteCallback>:
 8005070:	b480      	push	{r7}
 8005072:	b083      	sub	sp, #12
 8005074:	af00      	add	r7, sp, #0
 8005076:	6078      	str	r0, [r7, #4]
 8005078:	6039      	str	r1, [r7, #0]
 800507a:	bf00      	nop
 800507c:	370c      	adds	r7, #12
 800507e:	46bd      	mov	sp, r7
 8005080:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005084:	4770      	bx	lr

08005086 <HAL_FDCAN_TxBufferAbortCallback>:
 8005086:	b480      	push	{r7}
 8005088:	b083      	sub	sp, #12
 800508a:	af00      	add	r7, sp, #0
 800508c:	6078      	str	r0, [r7, #4]
 800508e:	6039      	str	r1, [r7, #0]
 8005090:	bf00      	nop
 8005092:	370c      	adds	r7, #12
 8005094:	46bd      	mov	sp, r7
 8005096:	f85d 7b04 	ldr.w	r7, [sp], #4
 800509a:	4770      	bx	lr

0800509c <HAL_FDCAN_TimestampWraparoundCallback>:
 800509c:	b480      	push	{r7}
 800509e:	b083      	sub	sp, #12
 80050a0:	af00      	add	r7, sp, #0
 80050a2:	6078      	str	r0, [r7, #4]
 80050a4:	bf00      	nop
 80050a6:	370c      	adds	r7, #12
 80050a8:	46bd      	mov	sp, r7
 80050aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050ae:	4770      	bx	lr

080050b0 <HAL_FDCAN_TimeoutOccurredCallback>:
 80050b0:	b480      	push	{r7}
 80050b2:	b083      	sub	sp, #12
 80050b4:	af00      	add	r7, sp, #0
 80050b6:	6078      	str	r0, [r7, #4]
 80050b8:	bf00      	nop
 80050ba:	370c      	adds	r7, #12
 80050bc:	46bd      	mov	sp, r7
 80050be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050c2:	4770      	bx	lr

080050c4 <HAL_FDCAN_HighPriorityMessageCallback>:
 80050c4:	b480      	push	{r7}
 80050c6:	b083      	sub	sp, #12
 80050c8:	af00      	add	r7, sp, #0
 80050ca:	6078      	str	r0, [r7, #4]
 80050cc:	bf00      	nop
 80050ce:	370c      	adds	r7, #12
 80050d0:	46bd      	mov	sp, r7
 80050d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050d6:	4770      	bx	lr

080050d8 <HAL_FDCAN_ErrorCallback>:
 80050d8:	b480      	push	{r7}
 80050da:	b083      	sub	sp, #12
 80050dc:	af00      	add	r7, sp, #0
 80050de:	6078      	str	r0, [r7, #4]
 80050e0:	bf00      	nop
 80050e2:	370c      	adds	r7, #12
 80050e4:	46bd      	mov	sp, r7
 80050e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050ea:	4770      	bx	lr

080050ec <HAL_FDCAN_ErrorStatusCallback>:
 80050ec:	b480      	push	{r7}
 80050ee:	b083      	sub	sp, #12
 80050f0:	af00      	add	r7, sp, #0
 80050f2:	6078      	str	r0, [r7, #4]
 80050f4:	6039      	str	r1, [r7, #0]
 80050f6:	bf00      	nop
 80050f8:	370c      	adds	r7, #12
 80050fa:	46bd      	mov	sp, r7
 80050fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005100:	4770      	bx	lr
	...

08005104 <FDCAN_CalcultateRamBlockAddresses>:
 8005104:	b480      	push	{r7}
 8005106:	b085      	sub	sp, #20
 8005108:	af00      	add	r7, sp, #0
 800510a:	6078      	str	r0, [r7, #4]
 800510c:	4b30      	ldr	r3, [pc, #192]	@ (80051d0 <FDCAN_CalcultateRamBlockAddresses+0xcc>)
 800510e:	60bb      	str	r3, [r7, #8]
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	681b      	ldr	r3, [r3, #0]
 8005114:	4a2f      	ldr	r2, [pc, #188]	@ (80051d4 <FDCAN_CalcultateRamBlockAddresses+0xd0>)
 8005116:	4293      	cmp	r3, r2
 8005118:	d103      	bne.n	8005122 <FDCAN_CalcultateRamBlockAddresses+0x1e>
 800511a:	68bb      	ldr	r3, [r7, #8]
 800511c:	f503 7354 	add.w	r3, r3, #848	@ 0x350
 8005120:	60bb      	str	r3, [r7, #8]
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	681b      	ldr	r3, [r3, #0]
 8005126:	4a2c      	ldr	r2, [pc, #176]	@ (80051d8 <FDCAN_CalcultateRamBlockAddresses+0xd4>)
 8005128:	4293      	cmp	r3, r2
 800512a:	d103      	bne.n	8005134 <FDCAN_CalcultateRamBlockAddresses+0x30>
 800512c:	68bb      	ldr	r3, [r7, #8]
 800512e:	f503 63d4 	add.w	r3, r3, #1696	@ 0x6a0
 8005132:	60bb      	str	r3, [r7, #8]
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	68ba      	ldr	r2, [r7, #8]
 8005138:	641a      	str	r2, [r3, #64]	@ 0x40
 800513a:	687b      	ldr	r3, [r7, #4]
 800513c:	681b      	ldr	r3, [r3, #0]
 800513e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8005142:	f423 11f8 	bic.w	r1, r3, #2031616	@ 0x1f0000
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800514a:	041a      	lsls	r2, r3, #16
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	681b      	ldr	r3, [r3, #0]
 8005150:	430a      	orrs	r2, r1
 8005152:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8005156:	68bb      	ldr	r3, [r7, #8]
 8005158:	f103 0270 	add.w	r2, r3, #112	@ 0x70
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	645a      	str	r2, [r3, #68]	@ 0x44
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	681b      	ldr	r3, [r3, #0]
 8005164:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8005168:	f023 6170 	bic.w	r1, r3, #251658240	@ 0xf000000
 800516c:	687b      	ldr	r3, [r7, #4]
 800516e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005170:	061a      	lsls	r2, r3, #24
 8005172:	687b      	ldr	r3, [r7, #4]
 8005174:	681b      	ldr	r3, [r3, #0]
 8005176:	430a      	orrs	r2, r1
 8005178:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800517c:	68bb      	ldr	r3, [r7, #8]
 800517e:	f103 02b0 	add.w	r2, r3, #176	@ 0xb0
 8005182:	687b      	ldr	r3, [r7, #4]
 8005184:	649a      	str	r2, [r3, #72]	@ 0x48
 8005186:	68bb      	ldr	r3, [r7, #8]
 8005188:	f503 72c4 	add.w	r2, r3, #392	@ 0x188
 800518c:	687b      	ldr	r3, [r7, #4]
 800518e:	64da      	str	r2, [r3, #76]	@ 0x4c
 8005190:	68bb      	ldr	r3, [r7, #8]
 8005192:	f503 7218 	add.w	r2, r3, #608	@ 0x260
 8005196:	687b      	ldr	r3, [r7, #4]
 8005198:	651a      	str	r2, [r3, #80]	@ 0x50
 800519a:	68bb      	ldr	r3, [r7, #8]
 800519c:	f503 721e 	add.w	r2, r3, #632	@ 0x278
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	655a      	str	r2, [r3, #84]	@ 0x54
 80051a4:	68bb      	ldr	r3, [r7, #8]
 80051a6:	60fb      	str	r3, [r7, #12]
 80051a8:	e005      	b.n	80051b6 <FDCAN_CalcultateRamBlockAddresses+0xb2>
 80051aa:	68fb      	ldr	r3, [r7, #12]
 80051ac:	2200      	movs	r2, #0
 80051ae:	601a      	str	r2, [r3, #0]
 80051b0:	68fb      	ldr	r3, [r7, #12]
 80051b2:	3304      	adds	r3, #4
 80051b4:	60fb      	str	r3, [r7, #12]
 80051b6:	68bb      	ldr	r3, [r7, #8]
 80051b8:	f503 7354 	add.w	r3, r3, #848	@ 0x350
 80051bc:	68fa      	ldr	r2, [r7, #12]
 80051be:	429a      	cmp	r2, r3
 80051c0:	d3f3      	bcc.n	80051aa <FDCAN_CalcultateRamBlockAddresses+0xa6>
 80051c2:	bf00      	nop
 80051c4:	bf00      	nop
 80051c6:	3714      	adds	r7, #20
 80051c8:	46bd      	mov	sp, r7
 80051ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051ce:	4770      	bx	lr
 80051d0:	4000a400 	.word	0x4000a400
 80051d4:	40006800 	.word	0x40006800
 80051d8:	40006c00 	.word	0x40006c00

080051dc <HAL_GPIO_Init>:
 80051dc:	b480      	push	{r7}
 80051de:	b087      	sub	sp, #28
 80051e0:	af00      	add	r7, sp, #0
 80051e2:	6078      	str	r0, [r7, #4]
 80051e4:	6039      	str	r1, [r7, #0]
 80051e6:	2300      	movs	r3, #0
 80051e8:	617b      	str	r3, [r7, #20]
 80051ea:	e15a      	b.n	80054a2 <HAL_GPIO_Init+0x2c6>
 80051ec:	683b      	ldr	r3, [r7, #0]
 80051ee:	681a      	ldr	r2, [r3, #0]
 80051f0:	2101      	movs	r1, #1
 80051f2:	697b      	ldr	r3, [r7, #20]
 80051f4:	fa01 f303 	lsl.w	r3, r1, r3
 80051f8:	4013      	ands	r3, r2
 80051fa:	60fb      	str	r3, [r7, #12]
 80051fc:	68fb      	ldr	r3, [r7, #12]
 80051fe:	2b00      	cmp	r3, #0
 8005200:	f000 814c 	beq.w	800549c <HAL_GPIO_Init+0x2c0>
 8005204:	683b      	ldr	r3, [r7, #0]
 8005206:	685b      	ldr	r3, [r3, #4]
 8005208:	f003 0303 	and.w	r3, r3, #3
 800520c:	2b01      	cmp	r3, #1
 800520e:	d005      	beq.n	800521c <HAL_GPIO_Init+0x40>
 8005210:	683b      	ldr	r3, [r7, #0]
 8005212:	685b      	ldr	r3, [r3, #4]
 8005214:	f003 0303 	and.w	r3, r3, #3
 8005218:	2b02      	cmp	r3, #2
 800521a:	d130      	bne.n	800527e <HAL_GPIO_Init+0xa2>
 800521c:	687b      	ldr	r3, [r7, #4]
 800521e:	689b      	ldr	r3, [r3, #8]
 8005220:	613b      	str	r3, [r7, #16]
 8005222:	697b      	ldr	r3, [r7, #20]
 8005224:	005b      	lsls	r3, r3, #1
 8005226:	2203      	movs	r2, #3
 8005228:	fa02 f303 	lsl.w	r3, r2, r3
 800522c:	43db      	mvns	r3, r3
 800522e:	693a      	ldr	r2, [r7, #16]
 8005230:	4013      	ands	r3, r2
 8005232:	613b      	str	r3, [r7, #16]
 8005234:	683b      	ldr	r3, [r7, #0]
 8005236:	68da      	ldr	r2, [r3, #12]
 8005238:	697b      	ldr	r3, [r7, #20]
 800523a:	005b      	lsls	r3, r3, #1
 800523c:	fa02 f303 	lsl.w	r3, r2, r3
 8005240:	693a      	ldr	r2, [r7, #16]
 8005242:	4313      	orrs	r3, r2
 8005244:	613b      	str	r3, [r7, #16]
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	693a      	ldr	r2, [r7, #16]
 800524a:	609a      	str	r2, [r3, #8]
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	685b      	ldr	r3, [r3, #4]
 8005250:	613b      	str	r3, [r7, #16]
 8005252:	2201      	movs	r2, #1
 8005254:	697b      	ldr	r3, [r7, #20]
 8005256:	fa02 f303 	lsl.w	r3, r2, r3
 800525a:	43db      	mvns	r3, r3
 800525c:	693a      	ldr	r2, [r7, #16]
 800525e:	4013      	ands	r3, r2
 8005260:	613b      	str	r3, [r7, #16]
 8005262:	683b      	ldr	r3, [r7, #0]
 8005264:	685b      	ldr	r3, [r3, #4]
 8005266:	091b      	lsrs	r3, r3, #4
 8005268:	f003 0201 	and.w	r2, r3, #1
 800526c:	697b      	ldr	r3, [r7, #20]
 800526e:	fa02 f303 	lsl.w	r3, r2, r3
 8005272:	693a      	ldr	r2, [r7, #16]
 8005274:	4313      	orrs	r3, r2
 8005276:	613b      	str	r3, [r7, #16]
 8005278:	687b      	ldr	r3, [r7, #4]
 800527a:	693a      	ldr	r2, [r7, #16]
 800527c:	605a      	str	r2, [r3, #4]
 800527e:	683b      	ldr	r3, [r7, #0]
 8005280:	685b      	ldr	r3, [r3, #4]
 8005282:	f003 0303 	and.w	r3, r3, #3
 8005286:	2b03      	cmp	r3, #3
 8005288:	d017      	beq.n	80052ba <HAL_GPIO_Init+0xde>
 800528a:	687b      	ldr	r3, [r7, #4]
 800528c:	68db      	ldr	r3, [r3, #12]
 800528e:	613b      	str	r3, [r7, #16]
 8005290:	697b      	ldr	r3, [r7, #20]
 8005292:	005b      	lsls	r3, r3, #1
 8005294:	2203      	movs	r2, #3
 8005296:	fa02 f303 	lsl.w	r3, r2, r3
 800529a:	43db      	mvns	r3, r3
 800529c:	693a      	ldr	r2, [r7, #16]
 800529e:	4013      	ands	r3, r2
 80052a0:	613b      	str	r3, [r7, #16]
 80052a2:	683b      	ldr	r3, [r7, #0]
 80052a4:	689a      	ldr	r2, [r3, #8]
 80052a6:	697b      	ldr	r3, [r7, #20]
 80052a8:	005b      	lsls	r3, r3, #1
 80052aa:	fa02 f303 	lsl.w	r3, r2, r3
 80052ae:	693a      	ldr	r2, [r7, #16]
 80052b0:	4313      	orrs	r3, r2
 80052b2:	613b      	str	r3, [r7, #16]
 80052b4:	687b      	ldr	r3, [r7, #4]
 80052b6:	693a      	ldr	r2, [r7, #16]
 80052b8:	60da      	str	r2, [r3, #12]
 80052ba:	683b      	ldr	r3, [r7, #0]
 80052bc:	685b      	ldr	r3, [r3, #4]
 80052be:	f003 0303 	and.w	r3, r3, #3
 80052c2:	2b02      	cmp	r3, #2
 80052c4:	d123      	bne.n	800530e <HAL_GPIO_Init+0x132>
 80052c6:	697b      	ldr	r3, [r7, #20]
 80052c8:	08da      	lsrs	r2, r3, #3
 80052ca:	687b      	ldr	r3, [r7, #4]
 80052cc:	3208      	adds	r2, #8
 80052ce:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80052d2:	613b      	str	r3, [r7, #16]
 80052d4:	697b      	ldr	r3, [r7, #20]
 80052d6:	f003 0307 	and.w	r3, r3, #7
 80052da:	009b      	lsls	r3, r3, #2
 80052dc:	220f      	movs	r2, #15
 80052de:	fa02 f303 	lsl.w	r3, r2, r3
 80052e2:	43db      	mvns	r3, r3
 80052e4:	693a      	ldr	r2, [r7, #16]
 80052e6:	4013      	ands	r3, r2
 80052e8:	613b      	str	r3, [r7, #16]
 80052ea:	683b      	ldr	r3, [r7, #0]
 80052ec:	691a      	ldr	r2, [r3, #16]
 80052ee:	697b      	ldr	r3, [r7, #20]
 80052f0:	f003 0307 	and.w	r3, r3, #7
 80052f4:	009b      	lsls	r3, r3, #2
 80052f6:	fa02 f303 	lsl.w	r3, r2, r3
 80052fa:	693a      	ldr	r2, [r7, #16]
 80052fc:	4313      	orrs	r3, r2
 80052fe:	613b      	str	r3, [r7, #16]
 8005300:	697b      	ldr	r3, [r7, #20]
 8005302:	08da      	lsrs	r2, r3, #3
 8005304:	687b      	ldr	r3, [r7, #4]
 8005306:	3208      	adds	r2, #8
 8005308:	6939      	ldr	r1, [r7, #16]
 800530a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800530e:	687b      	ldr	r3, [r7, #4]
 8005310:	681b      	ldr	r3, [r3, #0]
 8005312:	613b      	str	r3, [r7, #16]
 8005314:	697b      	ldr	r3, [r7, #20]
 8005316:	005b      	lsls	r3, r3, #1
 8005318:	2203      	movs	r2, #3
 800531a:	fa02 f303 	lsl.w	r3, r2, r3
 800531e:	43db      	mvns	r3, r3
 8005320:	693a      	ldr	r2, [r7, #16]
 8005322:	4013      	ands	r3, r2
 8005324:	613b      	str	r3, [r7, #16]
 8005326:	683b      	ldr	r3, [r7, #0]
 8005328:	685b      	ldr	r3, [r3, #4]
 800532a:	f003 0203 	and.w	r2, r3, #3
 800532e:	697b      	ldr	r3, [r7, #20]
 8005330:	005b      	lsls	r3, r3, #1
 8005332:	fa02 f303 	lsl.w	r3, r2, r3
 8005336:	693a      	ldr	r2, [r7, #16]
 8005338:	4313      	orrs	r3, r2
 800533a:	613b      	str	r3, [r7, #16]
 800533c:	687b      	ldr	r3, [r7, #4]
 800533e:	693a      	ldr	r2, [r7, #16]
 8005340:	601a      	str	r2, [r3, #0]
 8005342:	683b      	ldr	r3, [r7, #0]
 8005344:	685b      	ldr	r3, [r3, #4]
 8005346:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800534a:	2b00      	cmp	r3, #0
 800534c:	f000 80a6 	beq.w	800549c <HAL_GPIO_Init+0x2c0>
 8005350:	4b5b      	ldr	r3, [pc, #364]	@ (80054c0 <HAL_GPIO_Init+0x2e4>)
 8005352:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005354:	4a5a      	ldr	r2, [pc, #360]	@ (80054c0 <HAL_GPIO_Init+0x2e4>)
 8005356:	f043 0301 	orr.w	r3, r3, #1
 800535a:	6613      	str	r3, [r2, #96]	@ 0x60
 800535c:	4b58      	ldr	r3, [pc, #352]	@ (80054c0 <HAL_GPIO_Init+0x2e4>)
 800535e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005360:	f003 0301 	and.w	r3, r3, #1
 8005364:	60bb      	str	r3, [r7, #8]
 8005366:	68bb      	ldr	r3, [r7, #8]
 8005368:	4a56      	ldr	r2, [pc, #344]	@ (80054c4 <HAL_GPIO_Init+0x2e8>)
 800536a:	697b      	ldr	r3, [r7, #20]
 800536c:	089b      	lsrs	r3, r3, #2
 800536e:	3302      	adds	r3, #2
 8005370:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005374:	613b      	str	r3, [r7, #16]
 8005376:	697b      	ldr	r3, [r7, #20]
 8005378:	f003 0303 	and.w	r3, r3, #3
 800537c:	009b      	lsls	r3, r3, #2
 800537e:	220f      	movs	r2, #15
 8005380:	fa02 f303 	lsl.w	r3, r2, r3
 8005384:	43db      	mvns	r3, r3
 8005386:	693a      	ldr	r2, [r7, #16]
 8005388:	4013      	ands	r3, r2
 800538a:	613b      	str	r3, [r7, #16]
 800538c:	687b      	ldr	r3, [r7, #4]
 800538e:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8005392:	d01f      	beq.n	80053d4 <HAL_GPIO_Init+0x1f8>
 8005394:	687b      	ldr	r3, [r7, #4]
 8005396:	4a4c      	ldr	r2, [pc, #304]	@ (80054c8 <HAL_GPIO_Init+0x2ec>)
 8005398:	4293      	cmp	r3, r2
 800539a:	d019      	beq.n	80053d0 <HAL_GPIO_Init+0x1f4>
 800539c:	687b      	ldr	r3, [r7, #4]
 800539e:	4a4b      	ldr	r2, [pc, #300]	@ (80054cc <HAL_GPIO_Init+0x2f0>)
 80053a0:	4293      	cmp	r3, r2
 80053a2:	d013      	beq.n	80053cc <HAL_GPIO_Init+0x1f0>
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	4a4a      	ldr	r2, [pc, #296]	@ (80054d0 <HAL_GPIO_Init+0x2f4>)
 80053a8:	4293      	cmp	r3, r2
 80053aa:	d00d      	beq.n	80053c8 <HAL_GPIO_Init+0x1ec>
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	4a49      	ldr	r2, [pc, #292]	@ (80054d4 <HAL_GPIO_Init+0x2f8>)
 80053b0:	4293      	cmp	r3, r2
 80053b2:	d007      	beq.n	80053c4 <HAL_GPIO_Init+0x1e8>
 80053b4:	687b      	ldr	r3, [r7, #4]
 80053b6:	4a48      	ldr	r2, [pc, #288]	@ (80054d8 <HAL_GPIO_Init+0x2fc>)
 80053b8:	4293      	cmp	r3, r2
 80053ba:	d101      	bne.n	80053c0 <HAL_GPIO_Init+0x1e4>
 80053bc:	2305      	movs	r3, #5
 80053be:	e00a      	b.n	80053d6 <HAL_GPIO_Init+0x1fa>
 80053c0:	2306      	movs	r3, #6
 80053c2:	e008      	b.n	80053d6 <HAL_GPIO_Init+0x1fa>
 80053c4:	2304      	movs	r3, #4
 80053c6:	e006      	b.n	80053d6 <HAL_GPIO_Init+0x1fa>
 80053c8:	2303      	movs	r3, #3
 80053ca:	e004      	b.n	80053d6 <HAL_GPIO_Init+0x1fa>
 80053cc:	2302      	movs	r3, #2
 80053ce:	e002      	b.n	80053d6 <HAL_GPIO_Init+0x1fa>
 80053d0:	2301      	movs	r3, #1
 80053d2:	e000      	b.n	80053d6 <HAL_GPIO_Init+0x1fa>
 80053d4:	2300      	movs	r3, #0
 80053d6:	697a      	ldr	r2, [r7, #20]
 80053d8:	f002 0203 	and.w	r2, r2, #3
 80053dc:	0092      	lsls	r2, r2, #2
 80053de:	4093      	lsls	r3, r2
 80053e0:	693a      	ldr	r2, [r7, #16]
 80053e2:	4313      	orrs	r3, r2
 80053e4:	613b      	str	r3, [r7, #16]
 80053e6:	4937      	ldr	r1, [pc, #220]	@ (80054c4 <HAL_GPIO_Init+0x2e8>)
 80053e8:	697b      	ldr	r3, [r7, #20]
 80053ea:	089b      	lsrs	r3, r3, #2
 80053ec:	3302      	adds	r3, #2
 80053ee:	693a      	ldr	r2, [r7, #16]
 80053f0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80053f4:	4b39      	ldr	r3, [pc, #228]	@ (80054dc <HAL_GPIO_Init+0x300>)
 80053f6:	689b      	ldr	r3, [r3, #8]
 80053f8:	613b      	str	r3, [r7, #16]
 80053fa:	68fb      	ldr	r3, [r7, #12]
 80053fc:	43db      	mvns	r3, r3
 80053fe:	693a      	ldr	r2, [r7, #16]
 8005400:	4013      	ands	r3, r2
 8005402:	613b      	str	r3, [r7, #16]
 8005404:	683b      	ldr	r3, [r7, #0]
 8005406:	685b      	ldr	r3, [r3, #4]
 8005408:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800540c:	2b00      	cmp	r3, #0
 800540e:	d003      	beq.n	8005418 <HAL_GPIO_Init+0x23c>
 8005410:	693a      	ldr	r2, [r7, #16]
 8005412:	68fb      	ldr	r3, [r7, #12]
 8005414:	4313      	orrs	r3, r2
 8005416:	613b      	str	r3, [r7, #16]
 8005418:	4a30      	ldr	r2, [pc, #192]	@ (80054dc <HAL_GPIO_Init+0x300>)
 800541a:	693b      	ldr	r3, [r7, #16]
 800541c:	6093      	str	r3, [r2, #8]
 800541e:	4b2f      	ldr	r3, [pc, #188]	@ (80054dc <HAL_GPIO_Init+0x300>)
 8005420:	68db      	ldr	r3, [r3, #12]
 8005422:	613b      	str	r3, [r7, #16]
 8005424:	68fb      	ldr	r3, [r7, #12]
 8005426:	43db      	mvns	r3, r3
 8005428:	693a      	ldr	r2, [r7, #16]
 800542a:	4013      	ands	r3, r2
 800542c:	613b      	str	r3, [r7, #16]
 800542e:	683b      	ldr	r3, [r7, #0]
 8005430:	685b      	ldr	r3, [r3, #4]
 8005432:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8005436:	2b00      	cmp	r3, #0
 8005438:	d003      	beq.n	8005442 <HAL_GPIO_Init+0x266>
 800543a:	693a      	ldr	r2, [r7, #16]
 800543c:	68fb      	ldr	r3, [r7, #12]
 800543e:	4313      	orrs	r3, r2
 8005440:	613b      	str	r3, [r7, #16]
 8005442:	4a26      	ldr	r2, [pc, #152]	@ (80054dc <HAL_GPIO_Init+0x300>)
 8005444:	693b      	ldr	r3, [r7, #16]
 8005446:	60d3      	str	r3, [r2, #12]
 8005448:	4b24      	ldr	r3, [pc, #144]	@ (80054dc <HAL_GPIO_Init+0x300>)
 800544a:	685b      	ldr	r3, [r3, #4]
 800544c:	613b      	str	r3, [r7, #16]
 800544e:	68fb      	ldr	r3, [r7, #12]
 8005450:	43db      	mvns	r3, r3
 8005452:	693a      	ldr	r2, [r7, #16]
 8005454:	4013      	ands	r3, r2
 8005456:	613b      	str	r3, [r7, #16]
 8005458:	683b      	ldr	r3, [r7, #0]
 800545a:	685b      	ldr	r3, [r3, #4]
 800545c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005460:	2b00      	cmp	r3, #0
 8005462:	d003      	beq.n	800546c <HAL_GPIO_Init+0x290>
 8005464:	693a      	ldr	r2, [r7, #16]
 8005466:	68fb      	ldr	r3, [r7, #12]
 8005468:	4313      	orrs	r3, r2
 800546a:	613b      	str	r3, [r7, #16]
 800546c:	4a1b      	ldr	r2, [pc, #108]	@ (80054dc <HAL_GPIO_Init+0x300>)
 800546e:	693b      	ldr	r3, [r7, #16]
 8005470:	6053      	str	r3, [r2, #4]
 8005472:	4b1a      	ldr	r3, [pc, #104]	@ (80054dc <HAL_GPIO_Init+0x300>)
 8005474:	681b      	ldr	r3, [r3, #0]
 8005476:	613b      	str	r3, [r7, #16]
 8005478:	68fb      	ldr	r3, [r7, #12]
 800547a:	43db      	mvns	r3, r3
 800547c:	693a      	ldr	r2, [r7, #16]
 800547e:	4013      	ands	r3, r2
 8005480:	613b      	str	r3, [r7, #16]
 8005482:	683b      	ldr	r3, [r7, #0]
 8005484:	685b      	ldr	r3, [r3, #4]
 8005486:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800548a:	2b00      	cmp	r3, #0
 800548c:	d003      	beq.n	8005496 <HAL_GPIO_Init+0x2ba>
 800548e:	693a      	ldr	r2, [r7, #16]
 8005490:	68fb      	ldr	r3, [r7, #12]
 8005492:	4313      	orrs	r3, r2
 8005494:	613b      	str	r3, [r7, #16]
 8005496:	4a11      	ldr	r2, [pc, #68]	@ (80054dc <HAL_GPIO_Init+0x300>)
 8005498:	693b      	ldr	r3, [r7, #16]
 800549a:	6013      	str	r3, [r2, #0]
 800549c:	697b      	ldr	r3, [r7, #20]
 800549e:	3301      	adds	r3, #1
 80054a0:	617b      	str	r3, [r7, #20]
 80054a2:	683b      	ldr	r3, [r7, #0]
 80054a4:	681a      	ldr	r2, [r3, #0]
 80054a6:	697b      	ldr	r3, [r7, #20]
 80054a8:	fa22 f303 	lsr.w	r3, r2, r3
 80054ac:	2b00      	cmp	r3, #0
 80054ae:	f47f ae9d 	bne.w	80051ec <HAL_GPIO_Init+0x10>
 80054b2:	bf00      	nop
 80054b4:	bf00      	nop
 80054b6:	371c      	adds	r7, #28
 80054b8:	46bd      	mov	sp, r7
 80054ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054be:	4770      	bx	lr
 80054c0:	40021000 	.word	0x40021000
 80054c4:	40010000 	.word	0x40010000
 80054c8:	48000400 	.word	0x48000400
 80054cc:	48000800 	.word	0x48000800
 80054d0:	48000c00 	.word	0x48000c00
 80054d4:	48001000 	.word	0x48001000
 80054d8:	48001400 	.word	0x48001400
 80054dc:	40010400 	.word	0x40010400

080054e0 <HAL_GPIO_WritePin>:
 80054e0:	b480      	push	{r7}
 80054e2:	b083      	sub	sp, #12
 80054e4:	af00      	add	r7, sp, #0
 80054e6:	6078      	str	r0, [r7, #4]
 80054e8:	460b      	mov	r3, r1
 80054ea:	807b      	strh	r3, [r7, #2]
 80054ec:	4613      	mov	r3, r2
 80054ee:	707b      	strb	r3, [r7, #1]
 80054f0:	787b      	ldrb	r3, [r7, #1]
 80054f2:	2b00      	cmp	r3, #0
 80054f4:	d003      	beq.n	80054fe <HAL_GPIO_WritePin+0x1e>
 80054f6:	887a      	ldrh	r2, [r7, #2]
 80054f8:	687b      	ldr	r3, [r7, #4]
 80054fa:	619a      	str	r2, [r3, #24]
 80054fc:	e002      	b.n	8005504 <HAL_GPIO_WritePin+0x24>
 80054fe:	887a      	ldrh	r2, [r7, #2]
 8005500:	687b      	ldr	r3, [r7, #4]
 8005502:	629a      	str	r2, [r3, #40]	@ 0x28
 8005504:	bf00      	nop
 8005506:	370c      	adds	r7, #12
 8005508:	46bd      	mov	sp, r7
 800550a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800550e:	4770      	bx	lr

08005510 <HAL_GPIO_EXTI_IRQHandler>:
 8005510:	b580      	push	{r7, lr}
 8005512:	b082      	sub	sp, #8
 8005514:	af00      	add	r7, sp, #0
 8005516:	4603      	mov	r3, r0
 8005518:	80fb      	strh	r3, [r7, #6]
 800551a:	4b08      	ldr	r3, [pc, #32]	@ (800553c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800551c:	695a      	ldr	r2, [r3, #20]
 800551e:	88fb      	ldrh	r3, [r7, #6]
 8005520:	4013      	ands	r3, r2
 8005522:	2b00      	cmp	r3, #0
 8005524:	d006      	beq.n	8005534 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8005526:	4a05      	ldr	r2, [pc, #20]	@ (800553c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8005528:	88fb      	ldrh	r3, [r7, #6]
 800552a:	6153      	str	r3, [r2, #20]
 800552c:	88fb      	ldrh	r3, [r7, #6]
 800552e:	4618      	mov	r0, r3
 8005530:	f7fb fbea 	bl	8000d08 <HAL_GPIO_EXTI_Callback>
 8005534:	bf00      	nop
 8005536:	3708      	adds	r7, #8
 8005538:	46bd      	mov	sp, r7
 800553a:	bd80      	pop	{r7, pc}
 800553c:	40010400 	.word	0x40010400

08005540 <HAL_PWREx_ControlVoltageScaling>:
 8005540:	b480      	push	{r7}
 8005542:	b085      	sub	sp, #20
 8005544:	af00      	add	r7, sp, #0
 8005546:	6078      	str	r0, [r7, #4]
 8005548:	687b      	ldr	r3, [r7, #4]
 800554a:	2b00      	cmp	r3, #0
 800554c:	d141      	bne.n	80055d2 <HAL_PWREx_ControlVoltageScaling+0x92>
 800554e:	4b4b      	ldr	r3, [pc, #300]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005550:	681b      	ldr	r3, [r3, #0]
 8005552:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8005556:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800555a:	d131      	bne.n	80055c0 <HAL_PWREx_ControlVoltageScaling+0x80>
 800555c:	4b47      	ldr	r3, [pc, #284]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800555e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8005562:	4a46      	ldr	r2, [pc, #280]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005564:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005568:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 800556c:	4b43      	ldr	r3, [pc, #268]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800556e:	681b      	ldr	r3, [r3, #0]
 8005570:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8005574:	4a41      	ldr	r2, [pc, #260]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005576:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800557a:	6013      	str	r3, [r2, #0]
 800557c:	4b40      	ldr	r3, [pc, #256]	@ (8005680 <HAL_PWREx_ControlVoltageScaling+0x140>)
 800557e:	681b      	ldr	r3, [r3, #0]
 8005580:	2232      	movs	r2, #50	@ 0x32
 8005582:	fb02 f303 	mul.w	r3, r2, r3
 8005586:	4a3f      	ldr	r2, [pc, #252]	@ (8005684 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8005588:	fba2 2303 	umull	r2, r3, r2, r3
 800558c:	0c9b      	lsrs	r3, r3, #18
 800558e:	3301      	adds	r3, #1
 8005590:	60fb      	str	r3, [r7, #12]
 8005592:	e002      	b.n	800559a <HAL_PWREx_ControlVoltageScaling+0x5a>
 8005594:	68fb      	ldr	r3, [r7, #12]
 8005596:	3b01      	subs	r3, #1
 8005598:	60fb      	str	r3, [r7, #12]
 800559a:	4b38      	ldr	r3, [pc, #224]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800559c:	695b      	ldr	r3, [r3, #20]
 800559e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80055a2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80055a6:	d102      	bne.n	80055ae <HAL_PWREx_ControlVoltageScaling+0x6e>
 80055a8:	68fb      	ldr	r3, [r7, #12]
 80055aa:	2b00      	cmp	r3, #0
 80055ac:	d1f2      	bne.n	8005594 <HAL_PWREx_ControlVoltageScaling+0x54>
 80055ae:	4b33      	ldr	r3, [pc, #204]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80055b0:	695b      	ldr	r3, [r3, #20]
 80055b2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80055b6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80055ba:	d158      	bne.n	800566e <HAL_PWREx_ControlVoltageScaling+0x12e>
 80055bc:	2303      	movs	r3, #3
 80055be:	e057      	b.n	8005670 <HAL_PWREx_ControlVoltageScaling+0x130>
 80055c0:	4b2e      	ldr	r3, [pc, #184]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80055c2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80055c6:	4a2d      	ldr	r2, [pc, #180]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80055c8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80055cc:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 80055d0:	e04d      	b.n	800566e <HAL_PWREx_ControlVoltageScaling+0x12e>
 80055d2:	687b      	ldr	r3, [r7, #4]
 80055d4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80055d8:	d141      	bne.n	800565e <HAL_PWREx_ControlVoltageScaling+0x11e>
 80055da:	4b28      	ldr	r3, [pc, #160]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80055dc:	681b      	ldr	r3, [r3, #0]
 80055de:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 80055e2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80055e6:	d131      	bne.n	800564c <HAL_PWREx_ControlVoltageScaling+0x10c>
 80055e8:	4b24      	ldr	r3, [pc, #144]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80055ea:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80055ee:	4a23      	ldr	r2, [pc, #140]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80055f0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80055f4:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 80055f8:	4b20      	ldr	r3, [pc, #128]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80055fa:	681b      	ldr	r3, [r3, #0]
 80055fc:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8005600:	4a1e      	ldr	r2, [pc, #120]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005602:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8005606:	6013      	str	r3, [r2, #0]
 8005608:	4b1d      	ldr	r3, [pc, #116]	@ (8005680 <HAL_PWREx_ControlVoltageScaling+0x140>)
 800560a:	681b      	ldr	r3, [r3, #0]
 800560c:	2232      	movs	r2, #50	@ 0x32
 800560e:	fb02 f303 	mul.w	r3, r2, r3
 8005612:	4a1c      	ldr	r2, [pc, #112]	@ (8005684 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8005614:	fba2 2303 	umull	r2, r3, r2, r3
 8005618:	0c9b      	lsrs	r3, r3, #18
 800561a:	3301      	adds	r3, #1
 800561c:	60fb      	str	r3, [r7, #12]
 800561e:	e002      	b.n	8005626 <HAL_PWREx_ControlVoltageScaling+0xe6>
 8005620:	68fb      	ldr	r3, [r7, #12]
 8005622:	3b01      	subs	r3, #1
 8005624:	60fb      	str	r3, [r7, #12]
 8005626:	4b15      	ldr	r3, [pc, #84]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005628:	695b      	ldr	r3, [r3, #20]
 800562a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800562e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005632:	d102      	bne.n	800563a <HAL_PWREx_ControlVoltageScaling+0xfa>
 8005634:	68fb      	ldr	r3, [r7, #12]
 8005636:	2b00      	cmp	r3, #0
 8005638:	d1f2      	bne.n	8005620 <HAL_PWREx_ControlVoltageScaling+0xe0>
 800563a:	4b10      	ldr	r3, [pc, #64]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800563c:	695b      	ldr	r3, [r3, #20]
 800563e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005642:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005646:	d112      	bne.n	800566e <HAL_PWREx_ControlVoltageScaling+0x12e>
 8005648:	2303      	movs	r3, #3
 800564a:	e011      	b.n	8005670 <HAL_PWREx_ControlVoltageScaling+0x130>
 800564c:	4b0b      	ldr	r3, [pc, #44]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800564e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8005652:	4a0a      	ldr	r2, [pc, #40]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005654:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005658:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 800565c:	e007      	b.n	800566e <HAL_PWREx_ControlVoltageScaling+0x12e>
 800565e:	4b07      	ldr	r3, [pc, #28]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005660:	681b      	ldr	r3, [r3, #0]
 8005662:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8005666:	4a05      	ldr	r2, [pc, #20]	@ (800567c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005668:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800566c:	6013      	str	r3, [r2, #0]
 800566e:	2300      	movs	r3, #0
 8005670:	4618      	mov	r0, r3
 8005672:	3714      	adds	r7, #20
 8005674:	46bd      	mov	sp, r7
 8005676:	f85d 7b04 	ldr.w	r7, [sp], #4
 800567a:	4770      	bx	lr
 800567c:	40007000 	.word	0x40007000
 8005680:	2000000c 	.word	0x2000000c
 8005684:	431bde83 	.word	0x431bde83

08005688 <HAL_PWREx_DisableUCPDDeadBattery>:
 8005688:	b480      	push	{r7}
 800568a:	af00      	add	r7, sp, #0
 800568c:	4b05      	ldr	r3, [pc, #20]	@ (80056a4 <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 800568e:	689b      	ldr	r3, [r3, #8]
 8005690:	4a04      	ldr	r2, [pc, #16]	@ (80056a4 <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 8005692:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8005696:	6093      	str	r3, [r2, #8]
 8005698:	bf00      	nop
 800569a:	46bd      	mov	sp, r7
 800569c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056a0:	4770      	bx	lr
 80056a2:	bf00      	nop
 80056a4:	40007000 	.word	0x40007000

080056a8 <HAL_RCC_OscConfig>:
 80056a8:	b580      	push	{r7, lr}
 80056aa:	b088      	sub	sp, #32
 80056ac:	af00      	add	r7, sp, #0
 80056ae:	6078      	str	r0, [r7, #4]
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	2b00      	cmp	r3, #0
 80056b4:	d101      	bne.n	80056ba <HAL_RCC_OscConfig+0x12>
 80056b6:	2301      	movs	r3, #1
 80056b8:	e306      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 80056ba:	687b      	ldr	r3, [r7, #4]
 80056bc:	681b      	ldr	r3, [r3, #0]
 80056be:	f003 0301 	and.w	r3, r3, #1
 80056c2:	2b00      	cmp	r3, #0
 80056c4:	d075      	beq.n	80057b2 <HAL_RCC_OscConfig+0x10a>
 80056c6:	4b97      	ldr	r3, [pc, #604]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 80056c8:	689b      	ldr	r3, [r3, #8]
 80056ca:	f003 030c 	and.w	r3, r3, #12
 80056ce:	61bb      	str	r3, [r7, #24]
 80056d0:	4b94      	ldr	r3, [pc, #592]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 80056d2:	68db      	ldr	r3, [r3, #12]
 80056d4:	f003 0303 	and.w	r3, r3, #3
 80056d8:	617b      	str	r3, [r7, #20]
 80056da:	69bb      	ldr	r3, [r7, #24]
 80056dc:	2b0c      	cmp	r3, #12
 80056de:	d102      	bne.n	80056e6 <HAL_RCC_OscConfig+0x3e>
 80056e0:	697b      	ldr	r3, [r7, #20]
 80056e2:	2b03      	cmp	r3, #3
 80056e4:	d002      	beq.n	80056ec <HAL_RCC_OscConfig+0x44>
 80056e6:	69bb      	ldr	r3, [r7, #24]
 80056e8:	2b08      	cmp	r3, #8
 80056ea:	d10b      	bne.n	8005704 <HAL_RCC_OscConfig+0x5c>
 80056ec:	4b8d      	ldr	r3, [pc, #564]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 80056ee:	681b      	ldr	r3, [r3, #0]
 80056f0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80056f4:	2b00      	cmp	r3, #0
 80056f6:	d05b      	beq.n	80057b0 <HAL_RCC_OscConfig+0x108>
 80056f8:	687b      	ldr	r3, [r7, #4]
 80056fa:	685b      	ldr	r3, [r3, #4]
 80056fc:	2b00      	cmp	r3, #0
 80056fe:	d157      	bne.n	80057b0 <HAL_RCC_OscConfig+0x108>
 8005700:	2301      	movs	r3, #1
 8005702:	e2e1      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 8005704:	687b      	ldr	r3, [r7, #4]
 8005706:	685b      	ldr	r3, [r3, #4]
 8005708:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800570c:	d106      	bne.n	800571c <HAL_RCC_OscConfig+0x74>
 800570e:	4b85      	ldr	r3, [pc, #532]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 8005710:	681b      	ldr	r3, [r3, #0]
 8005712:	4a84      	ldr	r2, [pc, #528]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 8005714:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005718:	6013      	str	r3, [r2, #0]
 800571a:	e01d      	b.n	8005758 <HAL_RCC_OscConfig+0xb0>
 800571c:	687b      	ldr	r3, [r7, #4]
 800571e:	685b      	ldr	r3, [r3, #4]
 8005720:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005724:	d10c      	bne.n	8005740 <HAL_RCC_OscConfig+0x98>
 8005726:	4b7f      	ldr	r3, [pc, #508]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 8005728:	681b      	ldr	r3, [r3, #0]
 800572a:	4a7e      	ldr	r2, [pc, #504]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 800572c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005730:	6013      	str	r3, [r2, #0]
 8005732:	4b7c      	ldr	r3, [pc, #496]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 8005734:	681b      	ldr	r3, [r3, #0]
 8005736:	4a7b      	ldr	r2, [pc, #492]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 8005738:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800573c:	6013      	str	r3, [r2, #0]
 800573e:	e00b      	b.n	8005758 <HAL_RCC_OscConfig+0xb0>
 8005740:	4b78      	ldr	r3, [pc, #480]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 8005742:	681b      	ldr	r3, [r3, #0]
 8005744:	4a77      	ldr	r2, [pc, #476]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 8005746:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800574a:	6013      	str	r3, [r2, #0]
 800574c:	4b75      	ldr	r3, [pc, #468]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 800574e:	681b      	ldr	r3, [r3, #0]
 8005750:	4a74      	ldr	r2, [pc, #464]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 8005752:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8005756:	6013      	str	r3, [r2, #0]
 8005758:	687b      	ldr	r3, [r7, #4]
 800575a:	685b      	ldr	r3, [r3, #4]
 800575c:	2b00      	cmp	r3, #0
 800575e:	d013      	beq.n	8005788 <HAL_RCC_OscConfig+0xe0>
 8005760:	f7fd f9d6 	bl	8002b10 <HAL_GetTick>
 8005764:	6138      	str	r0, [r7, #16]
 8005766:	e008      	b.n	800577a <HAL_RCC_OscConfig+0xd2>
 8005768:	f7fd f9d2 	bl	8002b10 <HAL_GetTick>
 800576c:	4602      	mov	r2, r0
 800576e:	693b      	ldr	r3, [r7, #16]
 8005770:	1ad3      	subs	r3, r2, r3
 8005772:	2b64      	cmp	r3, #100	@ 0x64
 8005774:	d901      	bls.n	800577a <HAL_RCC_OscConfig+0xd2>
 8005776:	2303      	movs	r3, #3
 8005778:	e2a6      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 800577a:	4b6a      	ldr	r3, [pc, #424]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 800577c:	681b      	ldr	r3, [r3, #0]
 800577e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005782:	2b00      	cmp	r3, #0
 8005784:	d0f0      	beq.n	8005768 <HAL_RCC_OscConfig+0xc0>
 8005786:	e014      	b.n	80057b2 <HAL_RCC_OscConfig+0x10a>
 8005788:	f7fd f9c2 	bl	8002b10 <HAL_GetTick>
 800578c:	6138      	str	r0, [r7, #16]
 800578e:	e008      	b.n	80057a2 <HAL_RCC_OscConfig+0xfa>
 8005790:	f7fd f9be 	bl	8002b10 <HAL_GetTick>
 8005794:	4602      	mov	r2, r0
 8005796:	693b      	ldr	r3, [r7, #16]
 8005798:	1ad3      	subs	r3, r2, r3
 800579a:	2b64      	cmp	r3, #100	@ 0x64
 800579c:	d901      	bls.n	80057a2 <HAL_RCC_OscConfig+0xfa>
 800579e:	2303      	movs	r3, #3
 80057a0:	e292      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 80057a2:	4b60      	ldr	r3, [pc, #384]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 80057a4:	681b      	ldr	r3, [r3, #0]
 80057a6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80057aa:	2b00      	cmp	r3, #0
 80057ac:	d1f0      	bne.n	8005790 <HAL_RCC_OscConfig+0xe8>
 80057ae:	e000      	b.n	80057b2 <HAL_RCC_OscConfig+0x10a>
 80057b0:	bf00      	nop
 80057b2:	687b      	ldr	r3, [r7, #4]
 80057b4:	681b      	ldr	r3, [r3, #0]
 80057b6:	f003 0302 	and.w	r3, r3, #2
 80057ba:	2b00      	cmp	r3, #0
 80057bc:	d075      	beq.n	80058aa <HAL_RCC_OscConfig+0x202>
 80057be:	4b59      	ldr	r3, [pc, #356]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 80057c0:	689b      	ldr	r3, [r3, #8]
 80057c2:	f003 030c 	and.w	r3, r3, #12
 80057c6:	61bb      	str	r3, [r7, #24]
 80057c8:	4b56      	ldr	r3, [pc, #344]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 80057ca:	68db      	ldr	r3, [r3, #12]
 80057cc:	f003 0303 	and.w	r3, r3, #3
 80057d0:	617b      	str	r3, [r7, #20]
 80057d2:	69bb      	ldr	r3, [r7, #24]
 80057d4:	2b0c      	cmp	r3, #12
 80057d6:	d102      	bne.n	80057de <HAL_RCC_OscConfig+0x136>
 80057d8:	697b      	ldr	r3, [r7, #20]
 80057da:	2b02      	cmp	r3, #2
 80057dc:	d002      	beq.n	80057e4 <HAL_RCC_OscConfig+0x13c>
 80057de:	69bb      	ldr	r3, [r7, #24]
 80057e0:	2b04      	cmp	r3, #4
 80057e2:	d11f      	bne.n	8005824 <HAL_RCC_OscConfig+0x17c>
 80057e4:	4b4f      	ldr	r3, [pc, #316]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 80057e6:	681b      	ldr	r3, [r3, #0]
 80057e8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80057ec:	2b00      	cmp	r3, #0
 80057ee:	d005      	beq.n	80057fc <HAL_RCC_OscConfig+0x154>
 80057f0:	687b      	ldr	r3, [r7, #4]
 80057f2:	68db      	ldr	r3, [r3, #12]
 80057f4:	2b00      	cmp	r3, #0
 80057f6:	d101      	bne.n	80057fc <HAL_RCC_OscConfig+0x154>
 80057f8:	2301      	movs	r3, #1
 80057fa:	e265      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 80057fc:	4b49      	ldr	r3, [pc, #292]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 80057fe:	685b      	ldr	r3, [r3, #4]
 8005800:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8005804:	687b      	ldr	r3, [r7, #4]
 8005806:	691b      	ldr	r3, [r3, #16]
 8005808:	061b      	lsls	r3, r3, #24
 800580a:	4946      	ldr	r1, [pc, #280]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 800580c:	4313      	orrs	r3, r2
 800580e:	604b      	str	r3, [r1, #4]
 8005810:	4b45      	ldr	r3, [pc, #276]	@ (8005928 <HAL_RCC_OscConfig+0x280>)
 8005812:	681b      	ldr	r3, [r3, #0]
 8005814:	4618      	mov	r0, r3
 8005816:	f7fd f92f 	bl	8002a78 <HAL_InitTick>
 800581a:	4603      	mov	r3, r0
 800581c:	2b00      	cmp	r3, #0
 800581e:	d043      	beq.n	80058a8 <HAL_RCC_OscConfig+0x200>
 8005820:	2301      	movs	r3, #1
 8005822:	e251      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 8005824:	687b      	ldr	r3, [r7, #4]
 8005826:	68db      	ldr	r3, [r3, #12]
 8005828:	2b00      	cmp	r3, #0
 800582a:	d023      	beq.n	8005874 <HAL_RCC_OscConfig+0x1cc>
 800582c:	4b3d      	ldr	r3, [pc, #244]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 800582e:	681b      	ldr	r3, [r3, #0]
 8005830:	4a3c      	ldr	r2, [pc, #240]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 8005832:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005836:	6013      	str	r3, [r2, #0]
 8005838:	f7fd f96a 	bl	8002b10 <HAL_GetTick>
 800583c:	6138      	str	r0, [r7, #16]
 800583e:	e008      	b.n	8005852 <HAL_RCC_OscConfig+0x1aa>
 8005840:	f7fd f966 	bl	8002b10 <HAL_GetTick>
 8005844:	4602      	mov	r2, r0
 8005846:	693b      	ldr	r3, [r7, #16]
 8005848:	1ad3      	subs	r3, r2, r3
 800584a:	2b02      	cmp	r3, #2
 800584c:	d901      	bls.n	8005852 <HAL_RCC_OscConfig+0x1aa>
 800584e:	2303      	movs	r3, #3
 8005850:	e23a      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 8005852:	4b34      	ldr	r3, [pc, #208]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 8005854:	681b      	ldr	r3, [r3, #0]
 8005856:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800585a:	2b00      	cmp	r3, #0
 800585c:	d0f0      	beq.n	8005840 <HAL_RCC_OscConfig+0x198>
 800585e:	4b31      	ldr	r3, [pc, #196]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 8005860:	685b      	ldr	r3, [r3, #4]
 8005862:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8005866:	687b      	ldr	r3, [r7, #4]
 8005868:	691b      	ldr	r3, [r3, #16]
 800586a:	061b      	lsls	r3, r3, #24
 800586c:	492d      	ldr	r1, [pc, #180]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 800586e:	4313      	orrs	r3, r2
 8005870:	604b      	str	r3, [r1, #4]
 8005872:	e01a      	b.n	80058aa <HAL_RCC_OscConfig+0x202>
 8005874:	4b2b      	ldr	r3, [pc, #172]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 8005876:	681b      	ldr	r3, [r3, #0]
 8005878:	4a2a      	ldr	r2, [pc, #168]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 800587a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800587e:	6013      	str	r3, [r2, #0]
 8005880:	f7fd f946 	bl	8002b10 <HAL_GetTick>
 8005884:	6138      	str	r0, [r7, #16]
 8005886:	e008      	b.n	800589a <HAL_RCC_OscConfig+0x1f2>
 8005888:	f7fd f942 	bl	8002b10 <HAL_GetTick>
 800588c:	4602      	mov	r2, r0
 800588e:	693b      	ldr	r3, [r7, #16]
 8005890:	1ad3      	subs	r3, r2, r3
 8005892:	2b02      	cmp	r3, #2
 8005894:	d901      	bls.n	800589a <HAL_RCC_OscConfig+0x1f2>
 8005896:	2303      	movs	r3, #3
 8005898:	e216      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 800589a:	4b22      	ldr	r3, [pc, #136]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 800589c:	681b      	ldr	r3, [r3, #0]
 800589e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80058a2:	2b00      	cmp	r3, #0
 80058a4:	d1f0      	bne.n	8005888 <HAL_RCC_OscConfig+0x1e0>
 80058a6:	e000      	b.n	80058aa <HAL_RCC_OscConfig+0x202>
 80058a8:	bf00      	nop
 80058aa:	687b      	ldr	r3, [r7, #4]
 80058ac:	681b      	ldr	r3, [r3, #0]
 80058ae:	f003 0308 	and.w	r3, r3, #8
 80058b2:	2b00      	cmp	r3, #0
 80058b4:	d041      	beq.n	800593a <HAL_RCC_OscConfig+0x292>
 80058b6:	687b      	ldr	r3, [r7, #4]
 80058b8:	695b      	ldr	r3, [r3, #20]
 80058ba:	2b00      	cmp	r3, #0
 80058bc:	d01c      	beq.n	80058f8 <HAL_RCC_OscConfig+0x250>
 80058be:	4b19      	ldr	r3, [pc, #100]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 80058c0:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80058c4:	4a17      	ldr	r2, [pc, #92]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 80058c6:	f043 0301 	orr.w	r3, r3, #1
 80058ca:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 80058ce:	f7fd f91f 	bl	8002b10 <HAL_GetTick>
 80058d2:	6138      	str	r0, [r7, #16]
 80058d4:	e008      	b.n	80058e8 <HAL_RCC_OscConfig+0x240>
 80058d6:	f7fd f91b 	bl	8002b10 <HAL_GetTick>
 80058da:	4602      	mov	r2, r0
 80058dc:	693b      	ldr	r3, [r7, #16]
 80058de:	1ad3      	subs	r3, r2, r3
 80058e0:	2b02      	cmp	r3, #2
 80058e2:	d901      	bls.n	80058e8 <HAL_RCC_OscConfig+0x240>
 80058e4:	2303      	movs	r3, #3
 80058e6:	e1ef      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 80058e8:	4b0e      	ldr	r3, [pc, #56]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 80058ea:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80058ee:	f003 0302 	and.w	r3, r3, #2
 80058f2:	2b00      	cmp	r3, #0
 80058f4:	d0ef      	beq.n	80058d6 <HAL_RCC_OscConfig+0x22e>
 80058f6:	e020      	b.n	800593a <HAL_RCC_OscConfig+0x292>
 80058f8:	4b0a      	ldr	r3, [pc, #40]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 80058fa:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80058fe:	4a09      	ldr	r2, [pc, #36]	@ (8005924 <HAL_RCC_OscConfig+0x27c>)
 8005900:	f023 0301 	bic.w	r3, r3, #1
 8005904:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8005908:	f7fd f902 	bl	8002b10 <HAL_GetTick>
 800590c:	6138      	str	r0, [r7, #16]
 800590e:	e00d      	b.n	800592c <HAL_RCC_OscConfig+0x284>
 8005910:	f7fd f8fe 	bl	8002b10 <HAL_GetTick>
 8005914:	4602      	mov	r2, r0
 8005916:	693b      	ldr	r3, [r7, #16]
 8005918:	1ad3      	subs	r3, r2, r3
 800591a:	2b02      	cmp	r3, #2
 800591c:	d906      	bls.n	800592c <HAL_RCC_OscConfig+0x284>
 800591e:	2303      	movs	r3, #3
 8005920:	e1d2      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 8005922:	bf00      	nop
 8005924:	40021000 	.word	0x40021000
 8005928:	20000010 	.word	0x20000010
 800592c:	4b8c      	ldr	r3, [pc, #560]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 800592e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8005932:	f003 0302 	and.w	r3, r3, #2
 8005936:	2b00      	cmp	r3, #0
 8005938:	d1ea      	bne.n	8005910 <HAL_RCC_OscConfig+0x268>
 800593a:	687b      	ldr	r3, [r7, #4]
 800593c:	681b      	ldr	r3, [r3, #0]
 800593e:	f003 0304 	and.w	r3, r3, #4
 8005942:	2b00      	cmp	r3, #0
 8005944:	f000 80a6 	beq.w	8005a94 <HAL_RCC_OscConfig+0x3ec>
 8005948:	2300      	movs	r3, #0
 800594a:	77fb      	strb	r3, [r7, #31]
 800594c:	4b84      	ldr	r3, [pc, #528]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 800594e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005950:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005954:	2b00      	cmp	r3, #0
 8005956:	d101      	bne.n	800595c <HAL_RCC_OscConfig+0x2b4>
 8005958:	2301      	movs	r3, #1
 800595a:	e000      	b.n	800595e <HAL_RCC_OscConfig+0x2b6>
 800595c:	2300      	movs	r3, #0
 800595e:	2b00      	cmp	r3, #0
 8005960:	d00d      	beq.n	800597e <HAL_RCC_OscConfig+0x2d6>
 8005962:	4b7f      	ldr	r3, [pc, #508]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005964:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005966:	4a7e      	ldr	r2, [pc, #504]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005968:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800596c:	6593      	str	r3, [r2, #88]	@ 0x58
 800596e:	4b7c      	ldr	r3, [pc, #496]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005970:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005972:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005976:	60fb      	str	r3, [r7, #12]
 8005978:	68fb      	ldr	r3, [r7, #12]
 800597a:	2301      	movs	r3, #1
 800597c:	77fb      	strb	r3, [r7, #31]
 800597e:	4b79      	ldr	r3, [pc, #484]	@ (8005b64 <HAL_RCC_OscConfig+0x4bc>)
 8005980:	681b      	ldr	r3, [r3, #0]
 8005982:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005986:	2b00      	cmp	r3, #0
 8005988:	d118      	bne.n	80059bc <HAL_RCC_OscConfig+0x314>
 800598a:	4b76      	ldr	r3, [pc, #472]	@ (8005b64 <HAL_RCC_OscConfig+0x4bc>)
 800598c:	681b      	ldr	r3, [r3, #0]
 800598e:	4a75      	ldr	r2, [pc, #468]	@ (8005b64 <HAL_RCC_OscConfig+0x4bc>)
 8005990:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005994:	6013      	str	r3, [r2, #0]
 8005996:	f7fd f8bb 	bl	8002b10 <HAL_GetTick>
 800599a:	6138      	str	r0, [r7, #16]
 800599c:	e008      	b.n	80059b0 <HAL_RCC_OscConfig+0x308>
 800599e:	f7fd f8b7 	bl	8002b10 <HAL_GetTick>
 80059a2:	4602      	mov	r2, r0
 80059a4:	693b      	ldr	r3, [r7, #16]
 80059a6:	1ad3      	subs	r3, r2, r3
 80059a8:	2b02      	cmp	r3, #2
 80059aa:	d901      	bls.n	80059b0 <HAL_RCC_OscConfig+0x308>
 80059ac:	2303      	movs	r3, #3
 80059ae:	e18b      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 80059b0:	4b6c      	ldr	r3, [pc, #432]	@ (8005b64 <HAL_RCC_OscConfig+0x4bc>)
 80059b2:	681b      	ldr	r3, [r3, #0]
 80059b4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80059b8:	2b00      	cmp	r3, #0
 80059ba:	d0f0      	beq.n	800599e <HAL_RCC_OscConfig+0x2f6>
 80059bc:	687b      	ldr	r3, [r7, #4]
 80059be:	689b      	ldr	r3, [r3, #8]
 80059c0:	2b01      	cmp	r3, #1
 80059c2:	d108      	bne.n	80059d6 <HAL_RCC_OscConfig+0x32e>
 80059c4:	4b66      	ldr	r3, [pc, #408]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 80059c6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80059ca:	4a65      	ldr	r2, [pc, #404]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 80059cc:	f043 0301 	orr.w	r3, r3, #1
 80059d0:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80059d4:	e024      	b.n	8005a20 <HAL_RCC_OscConfig+0x378>
 80059d6:	687b      	ldr	r3, [r7, #4]
 80059d8:	689b      	ldr	r3, [r3, #8]
 80059da:	2b05      	cmp	r3, #5
 80059dc:	d110      	bne.n	8005a00 <HAL_RCC_OscConfig+0x358>
 80059de:	4b60      	ldr	r3, [pc, #384]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 80059e0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80059e4:	4a5e      	ldr	r2, [pc, #376]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 80059e6:	f043 0304 	orr.w	r3, r3, #4
 80059ea:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80059ee:	4b5c      	ldr	r3, [pc, #368]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 80059f0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80059f4:	4a5a      	ldr	r2, [pc, #360]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 80059f6:	f043 0301 	orr.w	r3, r3, #1
 80059fa:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80059fe:	e00f      	b.n	8005a20 <HAL_RCC_OscConfig+0x378>
 8005a00:	4b57      	ldr	r3, [pc, #348]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005a02:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005a06:	4a56      	ldr	r2, [pc, #344]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005a08:	f023 0301 	bic.w	r3, r3, #1
 8005a0c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8005a10:	4b53      	ldr	r3, [pc, #332]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005a12:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005a16:	4a52      	ldr	r2, [pc, #328]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005a18:	f023 0304 	bic.w	r3, r3, #4
 8005a1c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8005a20:	687b      	ldr	r3, [r7, #4]
 8005a22:	689b      	ldr	r3, [r3, #8]
 8005a24:	2b00      	cmp	r3, #0
 8005a26:	d016      	beq.n	8005a56 <HAL_RCC_OscConfig+0x3ae>
 8005a28:	f7fd f872 	bl	8002b10 <HAL_GetTick>
 8005a2c:	6138      	str	r0, [r7, #16]
 8005a2e:	e00a      	b.n	8005a46 <HAL_RCC_OscConfig+0x39e>
 8005a30:	f7fd f86e 	bl	8002b10 <HAL_GetTick>
 8005a34:	4602      	mov	r2, r0
 8005a36:	693b      	ldr	r3, [r7, #16]
 8005a38:	1ad3      	subs	r3, r2, r3
 8005a3a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005a3e:	4293      	cmp	r3, r2
 8005a40:	d901      	bls.n	8005a46 <HAL_RCC_OscConfig+0x39e>
 8005a42:	2303      	movs	r3, #3
 8005a44:	e140      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 8005a46:	4b46      	ldr	r3, [pc, #280]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005a48:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005a4c:	f003 0302 	and.w	r3, r3, #2
 8005a50:	2b00      	cmp	r3, #0
 8005a52:	d0ed      	beq.n	8005a30 <HAL_RCC_OscConfig+0x388>
 8005a54:	e015      	b.n	8005a82 <HAL_RCC_OscConfig+0x3da>
 8005a56:	f7fd f85b 	bl	8002b10 <HAL_GetTick>
 8005a5a:	6138      	str	r0, [r7, #16]
 8005a5c:	e00a      	b.n	8005a74 <HAL_RCC_OscConfig+0x3cc>
 8005a5e:	f7fd f857 	bl	8002b10 <HAL_GetTick>
 8005a62:	4602      	mov	r2, r0
 8005a64:	693b      	ldr	r3, [r7, #16]
 8005a66:	1ad3      	subs	r3, r2, r3
 8005a68:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005a6c:	4293      	cmp	r3, r2
 8005a6e:	d901      	bls.n	8005a74 <HAL_RCC_OscConfig+0x3cc>
 8005a70:	2303      	movs	r3, #3
 8005a72:	e129      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 8005a74:	4b3a      	ldr	r3, [pc, #232]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005a76:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005a7a:	f003 0302 	and.w	r3, r3, #2
 8005a7e:	2b00      	cmp	r3, #0
 8005a80:	d1ed      	bne.n	8005a5e <HAL_RCC_OscConfig+0x3b6>
 8005a82:	7ffb      	ldrb	r3, [r7, #31]
 8005a84:	2b01      	cmp	r3, #1
 8005a86:	d105      	bne.n	8005a94 <HAL_RCC_OscConfig+0x3ec>
 8005a88:	4b35      	ldr	r3, [pc, #212]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005a8a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005a8c:	4a34      	ldr	r2, [pc, #208]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005a8e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005a92:	6593      	str	r3, [r2, #88]	@ 0x58
 8005a94:	687b      	ldr	r3, [r7, #4]
 8005a96:	681b      	ldr	r3, [r3, #0]
 8005a98:	f003 0320 	and.w	r3, r3, #32
 8005a9c:	2b00      	cmp	r3, #0
 8005a9e:	d03c      	beq.n	8005b1a <HAL_RCC_OscConfig+0x472>
 8005aa0:	687b      	ldr	r3, [r7, #4]
 8005aa2:	699b      	ldr	r3, [r3, #24]
 8005aa4:	2b00      	cmp	r3, #0
 8005aa6:	d01c      	beq.n	8005ae2 <HAL_RCC_OscConfig+0x43a>
 8005aa8:	4b2d      	ldr	r3, [pc, #180]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005aaa:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8005aae:	4a2c      	ldr	r2, [pc, #176]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005ab0:	f043 0301 	orr.w	r3, r3, #1
 8005ab4:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8005ab8:	f7fd f82a 	bl	8002b10 <HAL_GetTick>
 8005abc:	6138      	str	r0, [r7, #16]
 8005abe:	e008      	b.n	8005ad2 <HAL_RCC_OscConfig+0x42a>
 8005ac0:	f7fd f826 	bl	8002b10 <HAL_GetTick>
 8005ac4:	4602      	mov	r2, r0
 8005ac6:	693b      	ldr	r3, [r7, #16]
 8005ac8:	1ad3      	subs	r3, r2, r3
 8005aca:	2b02      	cmp	r3, #2
 8005acc:	d901      	bls.n	8005ad2 <HAL_RCC_OscConfig+0x42a>
 8005ace:	2303      	movs	r3, #3
 8005ad0:	e0fa      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 8005ad2:	4b23      	ldr	r3, [pc, #140]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005ad4:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8005ad8:	f003 0302 	and.w	r3, r3, #2
 8005adc:	2b00      	cmp	r3, #0
 8005ade:	d0ef      	beq.n	8005ac0 <HAL_RCC_OscConfig+0x418>
 8005ae0:	e01b      	b.n	8005b1a <HAL_RCC_OscConfig+0x472>
 8005ae2:	4b1f      	ldr	r3, [pc, #124]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005ae4:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8005ae8:	4a1d      	ldr	r2, [pc, #116]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005aea:	f023 0301 	bic.w	r3, r3, #1
 8005aee:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8005af2:	f7fd f80d 	bl	8002b10 <HAL_GetTick>
 8005af6:	6138      	str	r0, [r7, #16]
 8005af8:	e008      	b.n	8005b0c <HAL_RCC_OscConfig+0x464>
 8005afa:	f7fd f809 	bl	8002b10 <HAL_GetTick>
 8005afe:	4602      	mov	r2, r0
 8005b00:	693b      	ldr	r3, [r7, #16]
 8005b02:	1ad3      	subs	r3, r2, r3
 8005b04:	2b02      	cmp	r3, #2
 8005b06:	d901      	bls.n	8005b0c <HAL_RCC_OscConfig+0x464>
 8005b08:	2303      	movs	r3, #3
 8005b0a:	e0dd      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 8005b0c:	4b14      	ldr	r3, [pc, #80]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005b0e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8005b12:	f003 0302 	and.w	r3, r3, #2
 8005b16:	2b00      	cmp	r3, #0
 8005b18:	d1ef      	bne.n	8005afa <HAL_RCC_OscConfig+0x452>
 8005b1a:	687b      	ldr	r3, [r7, #4]
 8005b1c:	69db      	ldr	r3, [r3, #28]
 8005b1e:	2b00      	cmp	r3, #0
 8005b20:	f000 80d1 	beq.w	8005cc6 <HAL_RCC_OscConfig+0x61e>
 8005b24:	4b0e      	ldr	r3, [pc, #56]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005b26:	689b      	ldr	r3, [r3, #8]
 8005b28:	f003 030c 	and.w	r3, r3, #12
 8005b2c:	2b0c      	cmp	r3, #12
 8005b2e:	f000 808b 	beq.w	8005c48 <HAL_RCC_OscConfig+0x5a0>
 8005b32:	687b      	ldr	r3, [r7, #4]
 8005b34:	69db      	ldr	r3, [r3, #28]
 8005b36:	2b02      	cmp	r3, #2
 8005b38:	d15e      	bne.n	8005bf8 <HAL_RCC_OscConfig+0x550>
 8005b3a:	4b09      	ldr	r3, [pc, #36]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005b3c:	681b      	ldr	r3, [r3, #0]
 8005b3e:	4a08      	ldr	r2, [pc, #32]	@ (8005b60 <HAL_RCC_OscConfig+0x4b8>)
 8005b40:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8005b44:	6013      	str	r3, [r2, #0]
 8005b46:	f7fc ffe3 	bl	8002b10 <HAL_GetTick>
 8005b4a:	6138      	str	r0, [r7, #16]
 8005b4c:	e00c      	b.n	8005b68 <HAL_RCC_OscConfig+0x4c0>
 8005b4e:	f7fc ffdf 	bl	8002b10 <HAL_GetTick>
 8005b52:	4602      	mov	r2, r0
 8005b54:	693b      	ldr	r3, [r7, #16]
 8005b56:	1ad3      	subs	r3, r2, r3
 8005b58:	2b02      	cmp	r3, #2
 8005b5a:	d905      	bls.n	8005b68 <HAL_RCC_OscConfig+0x4c0>
 8005b5c:	2303      	movs	r3, #3
 8005b5e:	e0b3      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 8005b60:	40021000 	.word	0x40021000
 8005b64:	40007000 	.word	0x40007000
 8005b68:	4b59      	ldr	r3, [pc, #356]	@ (8005cd0 <HAL_RCC_OscConfig+0x628>)
 8005b6a:	681b      	ldr	r3, [r3, #0]
 8005b6c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005b70:	2b00      	cmp	r3, #0
 8005b72:	d1ec      	bne.n	8005b4e <HAL_RCC_OscConfig+0x4a6>
 8005b74:	4b56      	ldr	r3, [pc, #344]	@ (8005cd0 <HAL_RCC_OscConfig+0x628>)
 8005b76:	68da      	ldr	r2, [r3, #12]
 8005b78:	4b56      	ldr	r3, [pc, #344]	@ (8005cd4 <HAL_RCC_OscConfig+0x62c>)
 8005b7a:	4013      	ands	r3, r2
 8005b7c:	687a      	ldr	r2, [r7, #4]
 8005b7e:	6a11      	ldr	r1, [r2, #32]
 8005b80:	687a      	ldr	r2, [r7, #4]
 8005b82:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8005b84:	3a01      	subs	r2, #1
 8005b86:	0112      	lsls	r2, r2, #4
 8005b88:	4311      	orrs	r1, r2
 8005b8a:	687a      	ldr	r2, [r7, #4]
 8005b8c:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8005b8e:	0212      	lsls	r2, r2, #8
 8005b90:	4311      	orrs	r1, r2
 8005b92:	687a      	ldr	r2, [r7, #4]
 8005b94:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8005b96:	0852      	lsrs	r2, r2, #1
 8005b98:	3a01      	subs	r2, #1
 8005b9a:	0552      	lsls	r2, r2, #21
 8005b9c:	4311      	orrs	r1, r2
 8005b9e:	687a      	ldr	r2, [r7, #4]
 8005ba0:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8005ba2:	0852      	lsrs	r2, r2, #1
 8005ba4:	3a01      	subs	r2, #1
 8005ba6:	0652      	lsls	r2, r2, #25
 8005ba8:	4311      	orrs	r1, r2
 8005baa:	687a      	ldr	r2, [r7, #4]
 8005bac:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8005bae:	06d2      	lsls	r2, r2, #27
 8005bb0:	430a      	orrs	r2, r1
 8005bb2:	4947      	ldr	r1, [pc, #284]	@ (8005cd0 <HAL_RCC_OscConfig+0x628>)
 8005bb4:	4313      	orrs	r3, r2
 8005bb6:	60cb      	str	r3, [r1, #12]
 8005bb8:	4b45      	ldr	r3, [pc, #276]	@ (8005cd0 <HAL_RCC_OscConfig+0x628>)
 8005bba:	681b      	ldr	r3, [r3, #0]
 8005bbc:	4a44      	ldr	r2, [pc, #272]	@ (8005cd0 <HAL_RCC_OscConfig+0x628>)
 8005bbe:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8005bc2:	6013      	str	r3, [r2, #0]
 8005bc4:	4b42      	ldr	r3, [pc, #264]	@ (8005cd0 <HAL_RCC_OscConfig+0x628>)
 8005bc6:	68db      	ldr	r3, [r3, #12]
 8005bc8:	4a41      	ldr	r2, [pc, #260]	@ (8005cd0 <HAL_RCC_OscConfig+0x628>)
 8005bca:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8005bce:	60d3      	str	r3, [r2, #12]
 8005bd0:	f7fc ff9e 	bl	8002b10 <HAL_GetTick>
 8005bd4:	6138      	str	r0, [r7, #16]
 8005bd6:	e008      	b.n	8005bea <HAL_RCC_OscConfig+0x542>
 8005bd8:	f7fc ff9a 	bl	8002b10 <HAL_GetTick>
 8005bdc:	4602      	mov	r2, r0
 8005bde:	693b      	ldr	r3, [r7, #16]
 8005be0:	1ad3      	subs	r3, r2, r3
 8005be2:	2b02      	cmp	r3, #2
 8005be4:	d901      	bls.n	8005bea <HAL_RCC_OscConfig+0x542>
 8005be6:	2303      	movs	r3, #3
 8005be8:	e06e      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 8005bea:	4b39      	ldr	r3, [pc, #228]	@ (8005cd0 <HAL_RCC_OscConfig+0x628>)
 8005bec:	681b      	ldr	r3, [r3, #0]
 8005bee:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005bf2:	2b00      	cmp	r3, #0
 8005bf4:	d0f0      	beq.n	8005bd8 <HAL_RCC_OscConfig+0x530>
 8005bf6:	e066      	b.n	8005cc6 <HAL_RCC_OscConfig+0x61e>
 8005bf8:	4b35      	ldr	r3, [pc, #212]	@ (8005cd0 <HAL_RCC_OscConfig+0x628>)
 8005bfa:	681b      	ldr	r3, [r3, #0]
 8005bfc:	4a34      	ldr	r2, [pc, #208]	@ (8005cd0 <HAL_RCC_OscConfig+0x628>)
 8005bfe:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8005c02:	6013      	str	r3, [r2, #0]
 8005c04:	4b32      	ldr	r3, [pc, #200]	@ (8005cd0 <HAL_RCC_OscConfig+0x628>)
 8005c06:	68db      	ldr	r3, [r3, #12]
 8005c08:	4a31      	ldr	r2, [pc, #196]	@ (8005cd0 <HAL_RCC_OscConfig+0x628>)
 8005c0a:	f023 0303 	bic.w	r3, r3, #3
 8005c0e:	60d3      	str	r3, [r2, #12]
 8005c10:	4b2f      	ldr	r3, [pc, #188]	@ (8005cd0 <HAL_RCC_OscConfig+0x628>)
 8005c12:	68db      	ldr	r3, [r3, #12]
 8005c14:	4a2e      	ldr	r2, [pc, #184]	@ (8005cd0 <HAL_RCC_OscConfig+0x628>)
 8005c16:	f023 7388 	bic.w	r3, r3, #17825792	@ 0x1100000
 8005c1a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005c1e:	60d3      	str	r3, [r2, #12]
 8005c20:	f7fc ff76 	bl	8002b10 <HAL_GetTick>
 8005c24:	6138      	str	r0, [r7, #16]
 8005c26:	e008      	b.n	8005c3a <HAL_RCC_OscConfig+0x592>
 8005c28:	f7fc ff72 	bl	8002b10 <HAL_GetTick>
 8005c2c:	4602      	mov	r2, r0
 8005c2e:	693b      	ldr	r3, [r7, #16]
 8005c30:	1ad3      	subs	r3, r2, r3
 8005c32:	2b02      	cmp	r3, #2
 8005c34:	d901      	bls.n	8005c3a <HAL_RCC_OscConfig+0x592>
 8005c36:	2303      	movs	r3, #3
 8005c38:	e046      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 8005c3a:	4b25      	ldr	r3, [pc, #148]	@ (8005cd0 <HAL_RCC_OscConfig+0x628>)
 8005c3c:	681b      	ldr	r3, [r3, #0]
 8005c3e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005c42:	2b00      	cmp	r3, #0
 8005c44:	d1f0      	bne.n	8005c28 <HAL_RCC_OscConfig+0x580>
 8005c46:	e03e      	b.n	8005cc6 <HAL_RCC_OscConfig+0x61e>
 8005c48:	687b      	ldr	r3, [r7, #4]
 8005c4a:	69db      	ldr	r3, [r3, #28]
 8005c4c:	2b01      	cmp	r3, #1
 8005c4e:	d101      	bne.n	8005c54 <HAL_RCC_OscConfig+0x5ac>
 8005c50:	2301      	movs	r3, #1
 8005c52:	e039      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 8005c54:	4b1e      	ldr	r3, [pc, #120]	@ (8005cd0 <HAL_RCC_OscConfig+0x628>)
 8005c56:	68db      	ldr	r3, [r3, #12]
 8005c58:	617b      	str	r3, [r7, #20]
 8005c5a:	697b      	ldr	r3, [r7, #20]
 8005c5c:	f003 0203 	and.w	r2, r3, #3
 8005c60:	687b      	ldr	r3, [r7, #4]
 8005c62:	6a1b      	ldr	r3, [r3, #32]
 8005c64:	429a      	cmp	r2, r3
 8005c66:	d12c      	bne.n	8005cc2 <HAL_RCC_OscConfig+0x61a>
 8005c68:	697b      	ldr	r3, [r7, #20]
 8005c6a:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8005c6e:	687b      	ldr	r3, [r7, #4]
 8005c70:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005c72:	3b01      	subs	r3, #1
 8005c74:	011b      	lsls	r3, r3, #4
 8005c76:	429a      	cmp	r2, r3
 8005c78:	d123      	bne.n	8005cc2 <HAL_RCC_OscConfig+0x61a>
 8005c7a:	697b      	ldr	r3, [r7, #20]
 8005c7c:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 8005c80:	687b      	ldr	r3, [r7, #4]
 8005c82:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005c84:	021b      	lsls	r3, r3, #8
 8005c86:	429a      	cmp	r2, r3
 8005c88:	d11b      	bne.n	8005cc2 <HAL_RCC_OscConfig+0x61a>
 8005c8a:	697b      	ldr	r3, [r7, #20]
 8005c8c:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
 8005c90:	687b      	ldr	r3, [r7, #4]
 8005c92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005c94:	06db      	lsls	r3, r3, #27
 8005c96:	429a      	cmp	r2, r3
 8005c98:	d113      	bne.n	8005cc2 <HAL_RCC_OscConfig+0x61a>
 8005c9a:	697b      	ldr	r3, [r7, #20]
 8005c9c:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 8005ca0:	687b      	ldr	r3, [r7, #4]
 8005ca2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005ca4:	085b      	lsrs	r3, r3, #1
 8005ca6:	3b01      	subs	r3, #1
 8005ca8:	055b      	lsls	r3, r3, #21
 8005caa:	429a      	cmp	r2, r3
 8005cac:	d109      	bne.n	8005cc2 <HAL_RCC_OscConfig+0x61a>
 8005cae:	697b      	ldr	r3, [r7, #20]
 8005cb0:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005cb8:	085b      	lsrs	r3, r3, #1
 8005cba:	3b01      	subs	r3, #1
 8005cbc:	065b      	lsls	r3, r3, #25
 8005cbe:	429a      	cmp	r2, r3
 8005cc0:	d001      	beq.n	8005cc6 <HAL_RCC_OscConfig+0x61e>
 8005cc2:	2301      	movs	r3, #1
 8005cc4:	e000      	b.n	8005cc8 <HAL_RCC_OscConfig+0x620>
 8005cc6:	2300      	movs	r3, #0
 8005cc8:	4618      	mov	r0, r3
 8005cca:	3720      	adds	r7, #32
 8005ccc:	46bd      	mov	sp, r7
 8005cce:	bd80      	pop	{r7, pc}
 8005cd0:	40021000 	.word	0x40021000
 8005cd4:	019f800c 	.word	0x019f800c

08005cd8 <HAL_RCC_ClockConfig>:
 8005cd8:	b580      	push	{r7, lr}
 8005cda:	b086      	sub	sp, #24
 8005cdc:	af00      	add	r7, sp, #0
 8005cde:	6078      	str	r0, [r7, #4]
 8005ce0:	6039      	str	r1, [r7, #0]
 8005ce2:	2300      	movs	r3, #0
 8005ce4:	617b      	str	r3, [r7, #20]
 8005ce6:	687b      	ldr	r3, [r7, #4]
 8005ce8:	2b00      	cmp	r3, #0
 8005cea:	d101      	bne.n	8005cf0 <HAL_RCC_ClockConfig+0x18>
 8005cec:	2301      	movs	r3, #1
 8005cee:	e11e      	b.n	8005f2e <HAL_RCC_ClockConfig+0x256>
 8005cf0:	4b91      	ldr	r3, [pc, #580]	@ (8005f38 <HAL_RCC_ClockConfig+0x260>)
 8005cf2:	681b      	ldr	r3, [r3, #0]
 8005cf4:	f003 030f 	and.w	r3, r3, #15
 8005cf8:	683a      	ldr	r2, [r7, #0]
 8005cfa:	429a      	cmp	r2, r3
 8005cfc:	d910      	bls.n	8005d20 <HAL_RCC_ClockConfig+0x48>
 8005cfe:	4b8e      	ldr	r3, [pc, #568]	@ (8005f38 <HAL_RCC_ClockConfig+0x260>)
 8005d00:	681b      	ldr	r3, [r3, #0]
 8005d02:	f023 020f 	bic.w	r2, r3, #15
 8005d06:	498c      	ldr	r1, [pc, #560]	@ (8005f38 <HAL_RCC_ClockConfig+0x260>)
 8005d08:	683b      	ldr	r3, [r7, #0]
 8005d0a:	4313      	orrs	r3, r2
 8005d0c:	600b      	str	r3, [r1, #0]
 8005d0e:	4b8a      	ldr	r3, [pc, #552]	@ (8005f38 <HAL_RCC_ClockConfig+0x260>)
 8005d10:	681b      	ldr	r3, [r3, #0]
 8005d12:	f003 030f 	and.w	r3, r3, #15
 8005d16:	683a      	ldr	r2, [r7, #0]
 8005d18:	429a      	cmp	r2, r3
 8005d1a:	d001      	beq.n	8005d20 <HAL_RCC_ClockConfig+0x48>
 8005d1c:	2301      	movs	r3, #1
 8005d1e:	e106      	b.n	8005f2e <HAL_RCC_ClockConfig+0x256>
 8005d20:	687b      	ldr	r3, [r7, #4]
 8005d22:	681b      	ldr	r3, [r3, #0]
 8005d24:	f003 0301 	and.w	r3, r3, #1
 8005d28:	2b00      	cmp	r3, #0
 8005d2a:	d073      	beq.n	8005e14 <HAL_RCC_ClockConfig+0x13c>
 8005d2c:	687b      	ldr	r3, [r7, #4]
 8005d2e:	685b      	ldr	r3, [r3, #4]
 8005d30:	2b03      	cmp	r3, #3
 8005d32:	d129      	bne.n	8005d88 <HAL_RCC_ClockConfig+0xb0>
 8005d34:	4b81      	ldr	r3, [pc, #516]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005d36:	681b      	ldr	r3, [r3, #0]
 8005d38:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005d3c:	2b00      	cmp	r3, #0
 8005d3e:	d101      	bne.n	8005d44 <HAL_RCC_ClockConfig+0x6c>
 8005d40:	2301      	movs	r3, #1
 8005d42:	e0f4      	b.n	8005f2e <HAL_RCC_ClockConfig+0x256>
 8005d44:	f000 f99e 	bl	8006084 <RCC_GetSysClockFreqFromPLLSource>
 8005d48:	6138      	str	r0, [r7, #16]
 8005d4a:	693b      	ldr	r3, [r7, #16]
 8005d4c:	4a7c      	ldr	r2, [pc, #496]	@ (8005f40 <HAL_RCC_ClockConfig+0x268>)
 8005d4e:	4293      	cmp	r3, r2
 8005d50:	d93f      	bls.n	8005dd2 <HAL_RCC_ClockConfig+0xfa>
 8005d52:	4b7a      	ldr	r3, [pc, #488]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005d54:	689b      	ldr	r3, [r3, #8]
 8005d56:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8005d5a:	2b00      	cmp	r3, #0
 8005d5c:	d009      	beq.n	8005d72 <HAL_RCC_ClockConfig+0x9a>
 8005d5e:	687b      	ldr	r3, [r7, #4]
 8005d60:	681b      	ldr	r3, [r3, #0]
 8005d62:	f003 0302 	and.w	r3, r3, #2
 8005d66:	2b00      	cmp	r3, #0
 8005d68:	d033      	beq.n	8005dd2 <HAL_RCC_ClockConfig+0xfa>
 8005d6a:	687b      	ldr	r3, [r7, #4]
 8005d6c:	689b      	ldr	r3, [r3, #8]
 8005d6e:	2b00      	cmp	r3, #0
 8005d70:	d12f      	bne.n	8005dd2 <HAL_RCC_ClockConfig+0xfa>
 8005d72:	4b72      	ldr	r3, [pc, #456]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005d74:	689b      	ldr	r3, [r3, #8]
 8005d76:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005d7a:	4a70      	ldr	r2, [pc, #448]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005d7c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005d80:	6093      	str	r3, [r2, #8]
 8005d82:	2380      	movs	r3, #128	@ 0x80
 8005d84:	617b      	str	r3, [r7, #20]
 8005d86:	e024      	b.n	8005dd2 <HAL_RCC_ClockConfig+0xfa>
 8005d88:	687b      	ldr	r3, [r7, #4]
 8005d8a:	685b      	ldr	r3, [r3, #4]
 8005d8c:	2b02      	cmp	r3, #2
 8005d8e:	d107      	bne.n	8005da0 <HAL_RCC_ClockConfig+0xc8>
 8005d90:	4b6a      	ldr	r3, [pc, #424]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005d92:	681b      	ldr	r3, [r3, #0]
 8005d94:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005d98:	2b00      	cmp	r3, #0
 8005d9a:	d109      	bne.n	8005db0 <HAL_RCC_ClockConfig+0xd8>
 8005d9c:	2301      	movs	r3, #1
 8005d9e:	e0c6      	b.n	8005f2e <HAL_RCC_ClockConfig+0x256>
 8005da0:	4b66      	ldr	r3, [pc, #408]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005da2:	681b      	ldr	r3, [r3, #0]
 8005da4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005da8:	2b00      	cmp	r3, #0
 8005daa:	d101      	bne.n	8005db0 <HAL_RCC_ClockConfig+0xd8>
 8005dac:	2301      	movs	r3, #1
 8005dae:	e0be      	b.n	8005f2e <HAL_RCC_ClockConfig+0x256>
 8005db0:	f000 f8ce 	bl	8005f50 <HAL_RCC_GetSysClockFreq>
 8005db4:	6138      	str	r0, [r7, #16]
 8005db6:	693b      	ldr	r3, [r7, #16]
 8005db8:	4a61      	ldr	r2, [pc, #388]	@ (8005f40 <HAL_RCC_ClockConfig+0x268>)
 8005dba:	4293      	cmp	r3, r2
 8005dbc:	d909      	bls.n	8005dd2 <HAL_RCC_ClockConfig+0xfa>
 8005dbe:	4b5f      	ldr	r3, [pc, #380]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005dc0:	689b      	ldr	r3, [r3, #8]
 8005dc2:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005dc6:	4a5d      	ldr	r2, [pc, #372]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005dc8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005dcc:	6093      	str	r3, [r2, #8]
 8005dce:	2380      	movs	r3, #128	@ 0x80
 8005dd0:	617b      	str	r3, [r7, #20]
 8005dd2:	4b5a      	ldr	r3, [pc, #360]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005dd4:	689b      	ldr	r3, [r3, #8]
 8005dd6:	f023 0203 	bic.w	r2, r3, #3
 8005dda:	687b      	ldr	r3, [r7, #4]
 8005ddc:	685b      	ldr	r3, [r3, #4]
 8005dde:	4957      	ldr	r1, [pc, #348]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005de0:	4313      	orrs	r3, r2
 8005de2:	608b      	str	r3, [r1, #8]
 8005de4:	f7fc fe94 	bl	8002b10 <HAL_GetTick>
 8005de8:	60f8      	str	r0, [r7, #12]
 8005dea:	e00a      	b.n	8005e02 <HAL_RCC_ClockConfig+0x12a>
 8005dec:	f7fc fe90 	bl	8002b10 <HAL_GetTick>
 8005df0:	4602      	mov	r2, r0
 8005df2:	68fb      	ldr	r3, [r7, #12]
 8005df4:	1ad3      	subs	r3, r2, r3
 8005df6:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005dfa:	4293      	cmp	r3, r2
 8005dfc:	d901      	bls.n	8005e02 <HAL_RCC_ClockConfig+0x12a>
 8005dfe:	2303      	movs	r3, #3
 8005e00:	e095      	b.n	8005f2e <HAL_RCC_ClockConfig+0x256>
 8005e02:	4b4e      	ldr	r3, [pc, #312]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005e04:	689b      	ldr	r3, [r3, #8]
 8005e06:	f003 020c 	and.w	r2, r3, #12
 8005e0a:	687b      	ldr	r3, [r7, #4]
 8005e0c:	685b      	ldr	r3, [r3, #4]
 8005e0e:	009b      	lsls	r3, r3, #2
 8005e10:	429a      	cmp	r2, r3
 8005e12:	d1eb      	bne.n	8005dec <HAL_RCC_ClockConfig+0x114>
 8005e14:	687b      	ldr	r3, [r7, #4]
 8005e16:	681b      	ldr	r3, [r3, #0]
 8005e18:	f003 0302 	and.w	r3, r3, #2
 8005e1c:	2b00      	cmp	r3, #0
 8005e1e:	d023      	beq.n	8005e68 <HAL_RCC_ClockConfig+0x190>
 8005e20:	687b      	ldr	r3, [r7, #4]
 8005e22:	681b      	ldr	r3, [r3, #0]
 8005e24:	f003 0304 	and.w	r3, r3, #4
 8005e28:	2b00      	cmp	r3, #0
 8005e2a:	d005      	beq.n	8005e38 <HAL_RCC_ClockConfig+0x160>
 8005e2c:	4b43      	ldr	r3, [pc, #268]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005e2e:	689b      	ldr	r3, [r3, #8]
 8005e30:	4a42      	ldr	r2, [pc, #264]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005e32:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8005e36:	6093      	str	r3, [r2, #8]
 8005e38:	687b      	ldr	r3, [r7, #4]
 8005e3a:	681b      	ldr	r3, [r3, #0]
 8005e3c:	f003 0308 	and.w	r3, r3, #8
 8005e40:	2b00      	cmp	r3, #0
 8005e42:	d007      	beq.n	8005e54 <HAL_RCC_ClockConfig+0x17c>
 8005e44:	4b3d      	ldr	r3, [pc, #244]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005e46:	689b      	ldr	r3, [r3, #8]
 8005e48:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8005e4c:	4a3b      	ldr	r2, [pc, #236]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005e4e:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8005e52:	6093      	str	r3, [r2, #8]
 8005e54:	4b39      	ldr	r3, [pc, #228]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005e56:	689b      	ldr	r3, [r3, #8]
 8005e58:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8005e5c:	687b      	ldr	r3, [r7, #4]
 8005e5e:	689b      	ldr	r3, [r3, #8]
 8005e60:	4936      	ldr	r1, [pc, #216]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005e62:	4313      	orrs	r3, r2
 8005e64:	608b      	str	r3, [r1, #8]
 8005e66:	e008      	b.n	8005e7a <HAL_RCC_ClockConfig+0x1a2>
 8005e68:	697b      	ldr	r3, [r7, #20]
 8005e6a:	2b80      	cmp	r3, #128	@ 0x80
 8005e6c:	d105      	bne.n	8005e7a <HAL_RCC_ClockConfig+0x1a2>
 8005e6e:	4b33      	ldr	r3, [pc, #204]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005e70:	689b      	ldr	r3, [r3, #8]
 8005e72:	4a32      	ldr	r2, [pc, #200]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005e74:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005e78:	6093      	str	r3, [r2, #8]
 8005e7a:	4b2f      	ldr	r3, [pc, #188]	@ (8005f38 <HAL_RCC_ClockConfig+0x260>)
 8005e7c:	681b      	ldr	r3, [r3, #0]
 8005e7e:	f003 030f 	and.w	r3, r3, #15
 8005e82:	683a      	ldr	r2, [r7, #0]
 8005e84:	429a      	cmp	r2, r3
 8005e86:	d21d      	bcs.n	8005ec4 <HAL_RCC_ClockConfig+0x1ec>
 8005e88:	4b2b      	ldr	r3, [pc, #172]	@ (8005f38 <HAL_RCC_ClockConfig+0x260>)
 8005e8a:	681b      	ldr	r3, [r3, #0]
 8005e8c:	f023 020f 	bic.w	r2, r3, #15
 8005e90:	4929      	ldr	r1, [pc, #164]	@ (8005f38 <HAL_RCC_ClockConfig+0x260>)
 8005e92:	683b      	ldr	r3, [r7, #0]
 8005e94:	4313      	orrs	r3, r2
 8005e96:	600b      	str	r3, [r1, #0]
 8005e98:	f7fc fe3a 	bl	8002b10 <HAL_GetTick>
 8005e9c:	60f8      	str	r0, [r7, #12]
 8005e9e:	e00a      	b.n	8005eb6 <HAL_RCC_ClockConfig+0x1de>
 8005ea0:	f7fc fe36 	bl	8002b10 <HAL_GetTick>
 8005ea4:	4602      	mov	r2, r0
 8005ea6:	68fb      	ldr	r3, [r7, #12]
 8005ea8:	1ad3      	subs	r3, r2, r3
 8005eaa:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005eae:	4293      	cmp	r3, r2
 8005eb0:	d901      	bls.n	8005eb6 <HAL_RCC_ClockConfig+0x1de>
 8005eb2:	2303      	movs	r3, #3
 8005eb4:	e03b      	b.n	8005f2e <HAL_RCC_ClockConfig+0x256>
 8005eb6:	4b20      	ldr	r3, [pc, #128]	@ (8005f38 <HAL_RCC_ClockConfig+0x260>)
 8005eb8:	681b      	ldr	r3, [r3, #0]
 8005eba:	f003 030f 	and.w	r3, r3, #15
 8005ebe:	683a      	ldr	r2, [r7, #0]
 8005ec0:	429a      	cmp	r2, r3
 8005ec2:	d1ed      	bne.n	8005ea0 <HAL_RCC_ClockConfig+0x1c8>
 8005ec4:	687b      	ldr	r3, [r7, #4]
 8005ec6:	681b      	ldr	r3, [r3, #0]
 8005ec8:	f003 0304 	and.w	r3, r3, #4
 8005ecc:	2b00      	cmp	r3, #0
 8005ece:	d008      	beq.n	8005ee2 <HAL_RCC_ClockConfig+0x20a>
 8005ed0:	4b1a      	ldr	r3, [pc, #104]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005ed2:	689b      	ldr	r3, [r3, #8]
 8005ed4:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8005ed8:	687b      	ldr	r3, [r7, #4]
 8005eda:	68db      	ldr	r3, [r3, #12]
 8005edc:	4917      	ldr	r1, [pc, #92]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005ede:	4313      	orrs	r3, r2
 8005ee0:	608b      	str	r3, [r1, #8]
 8005ee2:	687b      	ldr	r3, [r7, #4]
 8005ee4:	681b      	ldr	r3, [r3, #0]
 8005ee6:	f003 0308 	and.w	r3, r3, #8
 8005eea:	2b00      	cmp	r3, #0
 8005eec:	d009      	beq.n	8005f02 <HAL_RCC_ClockConfig+0x22a>
 8005eee:	4b13      	ldr	r3, [pc, #76]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005ef0:	689b      	ldr	r3, [r3, #8]
 8005ef2:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8005ef6:	687b      	ldr	r3, [r7, #4]
 8005ef8:	691b      	ldr	r3, [r3, #16]
 8005efa:	00db      	lsls	r3, r3, #3
 8005efc:	490f      	ldr	r1, [pc, #60]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005efe:	4313      	orrs	r3, r2
 8005f00:	608b      	str	r3, [r1, #8]
 8005f02:	f000 f825 	bl	8005f50 <HAL_RCC_GetSysClockFreq>
 8005f06:	4602      	mov	r2, r0
 8005f08:	4b0c      	ldr	r3, [pc, #48]	@ (8005f3c <HAL_RCC_ClockConfig+0x264>)
 8005f0a:	689b      	ldr	r3, [r3, #8]
 8005f0c:	091b      	lsrs	r3, r3, #4
 8005f0e:	f003 030f 	and.w	r3, r3, #15
 8005f12:	490c      	ldr	r1, [pc, #48]	@ (8005f44 <HAL_RCC_ClockConfig+0x26c>)
 8005f14:	5ccb      	ldrb	r3, [r1, r3]
 8005f16:	f003 031f 	and.w	r3, r3, #31
 8005f1a:	fa22 f303 	lsr.w	r3, r2, r3
 8005f1e:	4a0a      	ldr	r2, [pc, #40]	@ (8005f48 <HAL_RCC_ClockConfig+0x270>)
 8005f20:	6013      	str	r3, [r2, #0]
 8005f22:	4b0a      	ldr	r3, [pc, #40]	@ (8005f4c <HAL_RCC_ClockConfig+0x274>)
 8005f24:	681b      	ldr	r3, [r3, #0]
 8005f26:	4618      	mov	r0, r3
 8005f28:	f7fc fda6 	bl	8002a78 <HAL_InitTick>
 8005f2c:	4603      	mov	r3, r0
 8005f2e:	4618      	mov	r0, r3
 8005f30:	3718      	adds	r7, #24
 8005f32:	46bd      	mov	sp, r7
 8005f34:	bd80      	pop	{r7, pc}
 8005f36:	bf00      	nop
 8005f38:	40022000 	.word	0x40022000
 8005f3c:	40021000 	.word	0x40021000
 8005f40:	04c4b400 	.word	0x04c4b400
 8005f44:	0800d34c 	.word	0x0800d34c
 8005f48:	2000000c 	.word	0x2000000c
 8005f4c:	20000010 	.word	0x20000010

08005f50 <HAL_RCC_GetSysClockFreq>:
 8005f50:	b480      	push	{r7}
 8005f52:	b087      	sub	sp, #28
 8005f54:	af00      	add	r7, sp, #0
 8005f56:	4b2c      	ldr	r3, [pc, #176]	@ (8006008 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005f58:	689b      	ldr	r3, [r3, #8]
 8005f5a:	f003 030c 	and.w	r3, r3, #12
 8005f5e:	2b04      	cmp	r3, #4
 8005f60:	d102      	bne.n	8005f68 <HAL_RCC_GetSysClockFreq+0x18>
 8005f62:	4b2a      	ldr	r3, [pc, #168]	@ (800600c <HAL_RCC_GetSysClockFreq+0xbc>)
 8005f64:	613b      	str	r3, [r7, #16]
 8005f66:	e047      	b.n	8005ff8 <HAL_RCC_GetSysClockFreq+0xa8>
 8005f68:	4b27      	ldr	r3, [pc, #156]	@ (8006008 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005f6a:	689b      	ldr	r3, [r3, #8]
 8005f6c:	f003 030c 	and.w	r3, r3, #12
 8005f70:	2b08      	cmp	r3, #8
 8005f72:	d102      	bne.n	8005f7a <HAL_RCC_GetSysClockFreq+0x2a>
 8005f74:	4b26      	ldr	r3, [pc, #152]	@ (8006010 <HAL_RCC_GetSysClockFreq+0xc0>)
 8005f76:	613b      	str	r3, [r7, #16]
 8005f78:	e03e      	b.n	8005ff8 <HAL_RCC_GetSysClockFreq+0xa8>
 8005f7a:	4b23      	ldr	r3, [pc, #140]	@ (8006008 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005f7c:	689b      	ldr	r3, [r3, #8]
 8005f7e:	f003 030c 	and.w	r3, r3, #12
 8005f82:	2b0c      	cmp	r3, #12
 8005f84:	d136      	bne.n	8005ff4 <HAL_RCC_GetSysClockFreq+0xa4>
 8005f86:	4b20      	ldr	r3, [pc, #128]	@ (8006008 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005f88:	68db      	ldr	r3, [r3, #12]
 8005f8a:	f003 0303 	and.w	r3, r3, #3
 8005f8e:	60fb      	str	r3, [r7, #12]
 8005f90:	4b1d      	ldr	r3, [pc, #116]	@ (8006008 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005f92:	68db      	ldr	r3, [r3, #12]
 8005f94:	091b      	lsrs	r3, r3, #4
 8005f96:	f003 030f 	and.w	r3, r3, #15
 8005f9a:	3301      	adds	r3, #1
 8005f9c:	60bb      	str	r3, [r7, #8]
 8005f9e:	68fb      	ldr	r3, [r7, #12]
 8005fa0:	2b03      	cmp	r3, #3
 8005fa2:	d10c      	bne.n	8005fbe <HAL_RCC_GetSysClockFreq+0x6e>
 8005fa4:	4a1a      	ldr	r2, [pc, #104]	@ (8006010 <HAL_RCC_GetSysClockFreq+0xc0>)
 8005fa6:	68bb      	ldr	r3, [r7, #8]
 8005fa8:	fbb2 f3f3 	udiv	r3, r2, r3
 8005fac:	4a16      	ldr	r2, [pc, #88]	@ (8006008 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005fae:	68d2      	ldr	r2, [r2, #12]
 8005fb0:	0a12      	lsrs	r2, r2, #8
 8005fb2:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8005fb6:	fb02 f303 	mul.w	r3, r2, r3
 8005fba:	617b      	str	r3, [r7, #20]
 8005fbc:	e00c      	b.n	8005fd8 <HAL_RCC_GetSysClockFreq+0x88>
 8005fbe:	4a13      	ldr	r2, [pc, #76]	@ (800600c <HAL_RCC_GetSysClockFreq+0xbc>)
 8005fc0:	68bb      	ldr	r3, [r7, #8]
 8005fc2:	fbb2 f3f3 	udiv	r3, r2, r3
 8005fc6:	4a10      	ldr	r2, [pc, #64]	@ (8006008 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005fc8:	68d2      	ldr	r2, [r2, #12]
 8005fca:	0a12      	lsrs	r2, r2, #8
 8005fcc:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8005fd0:	fb02 f303 	mul.w	r3, r2, r3
 8005fd4:	617b      	str	r3, [r7, #20]
 8005fd6:	bf00      	nop
 8005fd8:	4b0b      	ldr	r3, [pc, #44]	@ (8006008 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005fda:	68db      	ldr	r3, [r3, #12]
 8005fdc:	0e5b      	lsrs	r3, r3, #25
 8005fde:	f003 0303 	and.w	r3, r3, #3
 8005fe2:	3301      	adds	r3, #1
 8005fe4:	005b      	lsls	r3, r3, #1
 8005fe6:	607b      	str	r3, [r7, #4]
 8005fe8:	697a      	ldr	r2, [r7, #20]
 8005fea:	687b      	ldr	r3, [r7, #4]
 8005fec:	fbb2 f3f3 	udiv	r3, r2, r3
 8005ff0:	613b      	str	r3, [r7, #16]
 8005ff2:	e001      	b.n	8005ff8 <HAL_RCC_GetSysClockFreq+0xa8>
 8005ff4:	2300      	movs	r3, #0
 8005ff6:	613b      	str	r3, [r7, #16]
 8005ff8:	693b      	ldr	r3, [r7, #16]
 8005ffa:	4618      	mov	r0, r3
 8005ffc:	371c      	adds	r7, #28
 8005ffe:	46bd      	mov	sp, r7
 8006000:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006004:	4770      	bx	lr
 8006006:	bf00      	nop
 8006008:	40021000 	.word	0x40021000
 800600c:	00f42400 	.word	0x00f42400
 8006010:	007a1200 	.word	0x007a1200

08006014 <HAL_RCC_GetHCLKFreq>:
 8006014:	b480      	push	{r7}
 8006016:	af00      	add	r7, sp, #0
 8006018:	4b03      	ldr	r3, [pc, #12]	@ (8006028 <HAL_RCC_GetHCLKFreq+0x14>)
 800601a:	681b      	ldr	r3, [r3, #0]
 800601c:	4618      	mov	r0, r3
 800601e:	46bd      	mov	sp, r7
 8006020:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006024:	4770      	bx	lr
 8006026:	bf00      	nop
 8006028:	2000000c 	.word	0x2000000c

0800602c <HAL_RCC_GetPCLK1Freq>:
 800602c:	b580      	push	{r7, lr}
 800602e:	af00      	add	r7, sp, #0
 8006030:	f7ff fff0 	bl	8006014 <HAL_RCC_GetHCLKFreq>
 8006034:	4602      	mov	r2, r0
 8006036:	4b06      	ldr	r3, [pc, #24]	@ (8006050 <HAL_RCC_GetPCLK1Freq+0x24>)
 8006038:	689b      	ldr	r3, [r3, #8]
 800603a:	0a1b      	lsrs	r3, r3, #8
 800603c:	f003 0307 	and.w	r3, r3, #7
 8006040:	4904      	ldr	r1, [pc, #16]	@ (8006054 <HAL_RCC_GetPCLK1Freq+0x28>)
 8006042:	5ccb      	ldrb	r3, [r1, r3]
 8006044:	f003 031f 	and.w	r3, r3, #31
 8006048:	fa22 f303 	lsr.w	r3, r2, r3
 800604c:	4618      	mov	r0, r3
 800604e:	bd80      	pop	{r7, pc}
 8006050:	40021000 	.word	0x40021000
 8006054:	0800d35c 	.word	0x0800d35c

08006058 <HAL_RCC_GetPCLK2Freq>:
 8006058:	b580      	push	{r7, lr}
 800605a:	af00      	add	r7, sp, #0
 800605c:	f7ff ffda 	bl	8006014 <HAL_RCC_GetHCLKFreq>
 8006060:	4602      	mov	r2, r0
 8006062:	4b06      	ldr	r3, [pc, #24]	@ (800607c <HAL_RCC_GetPCLK2Freq+0x24>)
 8006064:	689b      	ldr	r3, [r3, #8]
 8006066:	0adb      	lsrs	r3, r3, #11
 8006068:	f003 0307 	and.w	r3, r3, #7
 800606c:	4904      	ldr	r1, [pc, #16]	@ (8006080 <HAL_RCC_GetPCLK2Freq+0x28>)
 800606e:	5ccb      	ldrb	r3, [r1, r3]
 8006070:	f003 031f 	and.w	r3, r3, #31
 8006074:	fa22 f303 	lsr.w	r3, r2, r3
 8006078:	4618      	mov	r0, r3
 800607a:	bd80      	pop	{r7, pc}
 800607c:	40021000 	.word	0x40021000
 8006080:	0800d35c 	.word	0x0800d35c

08006084 <RCC_GetSysClockFreqFromPLLSource>:
 8006084:	b480      	push	{r7}
 8006086:	b087      	sub	sp, #28
 8006088:	af00      	add	r7, sp, #0
 800608a:	4b1e      	ldr	r3, [pc, #120]	@ (8006104 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 800608c:	68db      	ldr	r3, [r3, #12]
 800608e:	f003 0303 	and.w	r3, r3, #3
 8006092:	613b      	str	r3, [r7, #16]
 8006094:	4b1b      	ldr	r3, [pc, #108]	@ (8006104 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8006096:	68db      	ldr	r3, [r3, #12]
 8006098:	091b      	lsrs	r3, r3, #4
 800609a:	f003 030f 	and.w	r3, r3, #15
 800609e:	3301      	adds	r3, #1
 80060a0:	60fb      	str	r3, [r7, #12]
 80060a2:	693b      	ldr	r3, [r7, #16]
 80060a4:	2b03      	cmp	r3, #3
 80060a6:	d10c      	bne.n	80060c2 <RCC_GetSysClockFreqFromPLLSource+0x3e>
 80060a8:	4a17      	ldr	r2, [pc, #92]	@ (8006108 <RCC_GetSysClockFreqFromPLLSource+0x84>)
 80060aa:	68fb      	ldr	r3, [r7, #12]
 80060ac:	fbb2 f3f3 	udiv	r3, r2, r3
 80060b0:	4a14      	ldr	r2, [pc, #80]	@ (8006104 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80060b2:	68d2      	ldr	r2, [r2, #12]
 80060b4:	0a12      	lsrs	r2, r2, #8
 80060b6:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80060ba:	fb02 f303 	mul.w	r3, r2, r3
 80060be:	617b      	str	r3, [r7, #20]
 80060c0:	e00c      	b.n	80060dc <RCC_GetSysClockFreqFromPLLSource+0x58>
 80060c2:	4a12      	ldr	r2, [pc, #72]	@ (800610c <RCC_GetSysClockFreqFromPLLSource+0x88>)
 80060c4:	68fb      	ldr	r3, [r7, #12]
 80060c6:	fbb2 f3f3 	udiv	r3, r2, r3
 80060ca:	4a0e      	ldr	r2, [pc, #56]	@ (8006104 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80060cc:	68d2      	ldr	r2, [r2, #12]
 80060ce:	0a12      	lsrs	r2, r2, #8
 80060d0:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80060d4:	fb02 f303 	mul.w	r3, r2, r3
 80060d8:	617b      	str	r3, [r7, #20]
 80060da:	bf00      	nop
 80060dc:	4b09      	ldr	r3, [pc, #36]	@ (8006104 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80060de:	68db      	ldr	r3, [r3, #12]
 80060e0:	0e5b      	lsrs	r3, r3, #25
 80060e2:	f003 0303 	and.w	r3, r3, #3
 80060e6:	3301      	adds	r3, #1
 80060e8:	005b      	lsls	r3, r3, #1
 80060ea:	60bb      	str	r3, [r7, #8]
 80060ec:	697a      	ldr	r2, [r7, #20]
 80060ee:	68bb      	ldr	r3, [r7, #8]
 80060f0:	fbb2 f3f3 	udiv	r3, r2, r3
 80060f4:	607b      	str	r3, [r7, #4]
 80060f6:	687b      	ldr	r3, [r7, #4]
 80060f8:	4618      	mov	r0, r3
 80060fa:	371c      	adds	r7, #28
 80060fc:	46bd      	mov	sp, r7
 80060fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006102:	4770      	bx	lr
 8006104:	40021000 	.word	0x40021000
 8006108:	007a1200 	.word	0x007a1200
 800610c:	00f42400 	.word	0x00f42400

08006110 <HAL_RCCEx_PeriphCLKConfig>:
 8006110:	b580      	push	{r7, lr}
 8006112:	b086      	sub	sp, #24
 8006114:	af00      	add	r7, sp, #0
 8006116:	6078      	str	r0, [r7, #4]
 8006118:	2300      	movs	r3, #0
 800611a:	74fb      	strb	r3, [r7, #19]
 800611c:	2300      	movs	r3, #0
 800611e:	74bb      	strb	r3, [r7, #18]
 8006120:	687b      	ldr	r3, [r7, #4]
 8006122:	681b      	ldr	r3, [r3, #0]
 8006124:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8006128:	2b00      	cmp	r3, #0
 800612a:	f000 8098 	beq.w	800625e <HAL_RCCEx_PeriphCLKConfig+0x14e>
 800612e:	2300      	movs	r3, #0
 8006130:	747b      	strb	r3, [r7, #17]
 8006132:	4b43      	ldr	r3, [pc, #268]	@ (8006240 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8006134:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006136:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800613a:	2b00      	cmp	r3, #0
 800613c:	d10d      	bne.n	800615a <HAL_RCCEx_PeriphCLKConfig+0x4a>
 800613e:	4b40      	ldr	r3, [pc, #256]	@ (8006240 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8006140:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006142:	4a3f      	ldr	r2, [pc, #252]	@ (8006240 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8006144:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006148:	6593      	str	r3, [r2, #88]	@ 0x58
 800614a:	4b3d      	ldr	r3, [pc, #244]	@ (8006240 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800614c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800614e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006152:	60bb      	str	r3, [r7, #8]
 8006154:	68bb      	ldr	r3, [r7, #8]
 8006156:	2301      	movs	r3, #1
 8006158:	747b      	strb	r3, [r7, #17]
 800615a:	4b3a      	ldr	r3, [pc, #232]	@ (8006244 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 800615c:	681b      	ldr	r3, [r3, #0]
 800615e:	4a39      	ldr	r2, [pc, #228]	@ (8006244 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8006160:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006164:	6013      	str	r3, [r2, #0]
 8006166:	f7fc fcd3 	bl	8002b10 <HAL_GetTick>
 800616a:	60f8      	str	r0, [r7, #12]
 800616c:	e009      	b.n	8006182 <HAL_RCCEx_PeriphCLKConfig+0x72>
 800616e:	f7fc fccf 	bl	8002b10 <HAL_GetTick>
 8006172:	4602      	mov	r2, r0
 8006174:	68fb      	ldr	r3, [r7, #12]
 8006176:	1ad3      	subs	r3, r2, r3
 8006178:	2b02      	cmp	r3, #2
 800617a:	d902      	bls.n	8006182 <HAL_RCCEx_PeriphCLKConfig+0x72>
 800617c:	2303      	movs	r3, #3
 800617e:	74fb      	strb	r3, [r7, #19]
 8006180:	e005      	b.n	800618e <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8006182:	4b30      	ldr	r3, [pc, #192]	@ (8006244 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8006184:	681b      	ldr	r3, [r3, #0]
 8006186:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800618a:	2b00      	cmp	r3, #0
 800618c:	d0ef      	beq.n	800616e <HAL_RCCEx_PeriphCLKConfig+0x5e>
 800618e:	7cfb      	ldrb	r3, [r7, #19]
 8006190:	2b00      	cmp	r3, #0
 8006192:	d159      	bne.n	8006248 <HAL_RCCEx_PeriphCLKConfig+0x138>
 8006194:	4b2a      	ldr	r3, [pc, #168]	@ (8006240 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8006196:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800619a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800619e:	617b      	str	r3, [r7, #20]
 80061a0:	697b      	ldr	r3, [r7, #20]
 80061a2:	2b00      	cmp	r3, #0
 80061a4:	d01e      	beq.n	80061e4 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 80061a6:	687b      	ldr	r3, [r7, #4]
 80061a8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80061aa:	697a      	ldr	r2, [r7, #20]
 80061ac:	429a      	cmp	r2, r3
 80061ae:	d019      	beq.n	80061e4 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 80061b0:	4b23      	ldr	r3, [pc, #140]	@ (8006240 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80061b2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80061b6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80061ba:	617b      	str	r3, [r7, #20]
 80061bc:	4b20      	ldr	r3, [pc, #128]	@ (8006240 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80061be:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80061c2:	4a1f      	ldr	r2, [pc, #124]	@ (8006240 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80061c4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80061c8:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80061cc:	4b1c      	ldr	r3, [pc, #112]	@ (8006240 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80061ce:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80061d2:	4a1b      	ldr	r2, [pc, #108]	@ (8006240 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80061d4:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80061d8:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80061dc:	4a18      	ldr	r2, [pc, #96]	@ (8006240 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80061de:	697b      	ldr	r3, [r7, #20]
 80061e0:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80061e4:	697b      	ldr	r3, [r7, #20]
 80061e6:	f003 0301 	and.w	r3, r3, #1
 80061ea:	2b00      	cmp	r3, #0
 80061ec:	d016      	beq.n	800621c <HAL_RCCEx_PeriphCLKConfig+0x10c>
 80061ee:	f7fc fc8f 	bl	8002b10 <HAL_GetTick>
 80061f2:	60f8      	str	r0, [r7, #12]
 80061f4:	e00b      	b.n	800620e <HAL_RCCEx_PeriphCLKConfig+0xfe>
 80061f6:	f7fc fc8b 	bl	8002b10 <HAL_GetTick>
 80061fa:	4602      	mov	r2, r0
 80061fc:	68fb      	ldr	r3, [r7, #12]
 80061fe:	1ad3      	subs	r3, r2, r3
 8006200:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006204:	4293      	cmp	r3, r2
 8006206:	d902      	bls.n	800620e <HAL_RCCEx_PeriphCLKConfig+0xfe>
 8006208:	2303      	movs	r3, #3
 800620a:	74fb      	strb	r3, [r7, #19]
 800620c:	e006      	b.n	800621c <HAL_RCCEx_PeriphCLKConfig+0x10c>
 800620e:	4b0c      	ldr	r3, [pc, #48]	@ (8006240 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8006210:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006214:	f003 0302 	and.w	r3, r3, #2
 8006218:	2b00      	cmp	r3, #0
 800621a:	d0ec      	beq.n	80061f6 <HAL_RCCEx_PeriphCLKConfig+0xe6>
 800621c:	7cfb      	ldrb	r3, [r7, #19]
 800621e:	2b00      	cmp	r3, #0
 8006220:	d10b      	bne.n	800623a <HAL_RCCEx_PeriphCLKConfig+0x12a>
 8006222:	4b07      	ldr	r3, [pc, #28]	@ (8006240 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8006224:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006228:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 800622c:	687b      	ldr	r3, [r7, #4]
 800622e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006230:	4903      	ldr	r1, [pc, #12]	@ (8006240 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8006232:	4313      	orrs	r3, r2
 8006234:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8006238:	e008      	b.n	800624c <HAL_RCCEx_PeriphCLKConfig+0x13c>
 800623a:	7cfb      	ldrb	r3, [r7, #19]
 800623c:	74bb      	strb	r3, [r7, #18]
 800623e:	e005      	b.n	800624c <HAL_RCCEx_PeriphCLKConfig+0x13c>
 8006240:	40021000 	.word	0x40021000
 8006244:	40007000 	.word	0x40007000
 8006248:	7cfb      	ldrb	r3, [r7, #19]
 800624a:	74bb      	strb	r3, [r7, #18]
 800624c:	7c7b      	ldrb	r3, [r7, #17]
 800624e:	2b01      	cmp	r3, #1
 8006250:	d105      	bne.n	800625e <HAL_RCCEx_PeriphCLKConfig+0x14e>
 8006252:	4ba7      	ldr	r3, [pc, #668]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8006254:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006256:	4aa6      	ldr	r2, [pc, #664]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8006258:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800625c:	6593      	str	r3, [r2, #88]	@ 0x58
 800625e:	687b      	ldr	r3, [r7, #4]
 8006260:	681b      	ldr	r3, [r3, #0]
 8006262:	f003 0301 	and.w	r3, r3, #1
 8006266:	2b00      	cmp	r3, #0
 8006268:	d00a      	beq.n	8006280 <HAL_RCCEx_PeriphCLKConfig+0x170>
 800626a:	4ba1      	ldr	r3, [pc, #644]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 800626c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006270:	f023 0203 	bic.w	r2, r3, #3
 8006274:	687b      	ldr	r3, [r7, #4]
 8006276:	685b      	ldr	r3, [r3, #4]
 8006278:	499d      	ldr	r1, [pc, #628]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 800627a:	4313      	orrs	r3, r2
 800627c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006280:	687b      	ldr	r3, [r7, #4]
 8006282:	681b      	ldr	r3, [r3, #0]
 8006284:	f003 0302 	and.w	r3, r3, #2
 8006288:	2b00      	cmp	r3, #0
 800628a:	d00a      	beq.n	80062a2 <HAL_RCCEx_PeriphCLKConfig+0x192>
 800628c:	4b98      	ldr	r3, [pc, #608]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 800628e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006292:	f023 020c 	bic.w	r2, r3, #12
 8006296:	687b      	ldr	r3, [r7, #4]
 8006298:	689b      	ldr	r3, [r3, #8]
 800629a:	4995      	ldr	r1, [pc, #596]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 800629c:	4313      	orrs	r3, r2
 800629e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80062a2:	687b      	ldr	r3, [r7, #4]
 80062a4:	681b      	ldr	r3, [r3, #0]
 80062a6:	f003 0304 	and.w	r3, r3, #4
 80062aa:	2b00      	cmp	r3, #0
 80062ac:	d00a      	beq.n	80062c4 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 80062ae:	4b90      	ldr	r3, [pc, #576]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80062b0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80062b4:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 80062b8:	687b      	ldr	r3, [r7, #4]
 80062ba:	68db      	ldr	r3, [r3, #12]
 80062bc:	498c      	ldr	r1, [pc, #560]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80062be:	4313      	orrs	r3, r2
 80062c0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80062c4:	687b      	ldr	r3, [r7, #4]
 80062c6:	681b      	ldr	r3, [r3, #0]
 80062c8:	f003 0308 	and.w	r3, r3, #8
 80062cc:	2b00      	cmp	r3, #0
 80062ce:	d00a      	beq.n	80062e6 <HAL_RCCEx_PeriphCLKConfig+0x1d6>
 80062d0:	4b87      	ldr	r3, [pc, #540]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80062d2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80062d6:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 80062da:	687b      	ldr	r3, [r7, #4]
 80062dc:	691b      	ldr	r3, [r3, #16]
 80062de:	4984      	ldr	r1, [pc, #528]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80062e0:	4313      	orrs	r3, r2
 80062e2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80062e6:	687b      	ldr	r3, [r7, #4]
 80062e8:	681b      	ldr	r3, [r3, #0]
 80062ea:	f003 0310 	and.w	r3, r3, #16
 80062ee:	2b00      	cmp	r3, #0
 80062f0:	d00a      	beq.n	8006308 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 80062f2:	4b7f      	ldr	r3, [pc, #508]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80062f4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80062f8:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80062fc:	687b      	ldr	r3, [r7, #4]
 80062fe:	695b      	ldr	r3, [r3, #20]
 8006300:	497b      	ldr	r1, [pc, #492]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8006302:	4313      	orrs	r3, r2
 8006304:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006308:	687b      	ldr	r3, [r7, #4]
 800630a:	681b      	ldr	r3, [r3, #0]
 800630c:	f003 0320 	and.w	r3, r3, #32
 8006310:	2b00      	cmp	r3, #0
 8006312:	d00a      	beq.n	800632a <HAL_RCCEx_PeriphCLKConfig+0x21a>
 8006314:	4b76      	ldr	r3, [pc, #472]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8006316:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800631a:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 800631e:	687b      	ldr	r3, [r7, #4]
 8006320:	699b      	ldr	r3, [r3, #24]
 8006322:	4973      	ldr	r1, [pc, #460]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8006324:	4313      	orrs	r3, r2
 8006326:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800632a:	687b      	ldr	r3, [r7, #4]
 800632c:	681b      	ldr	r3, [r3, #0]
 800632e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006332:	2b00      	cmp	r3, #0
 8006334:	d00a      	beq.n	800634c <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8006336:	4b6e      	ldr	r3, [pc, #440]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8006338:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800633c:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 8006340:	687b      	ldr	r3, [r7, #4]
 8006342:	69db      	ldr	r3, [r3, #28]
 8006344:	496a      	ldr	r1, [pc, #424]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8006346:	4313      	orrs	r3, r2
 8006348:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800634c:	687b      	ldr	r3, [r7, #4]
 800634e:	681b      	ldr	r3, [r3, #0]
 8006350:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006354:	2b00      	cmp	r3, #0
 8006356:	d00a      	beq.n	800636e <HAL_RCCEx_PeriphCLKConfig+0x25e>
 8006358:	4b65      	ldr	r3, [pc, #404]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 800635a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800635e:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8006362:	687b      	ldr	r3, [r7, #4]
 8006364:	6a1b      	ldr	r3, [r3, #32]
 8006366:	4962      	ldr	r1, [pc, #392]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8006368:	4313      	orrs	r3, r2
 800636a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800636e:	687b      	ldr	r3, [r7, #4]
 8006370:	681b      	ldr	r3, [r3, #0]
 8006372:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006376:	2b00      	cmp	r3, #0
 8006378:	d00a      	beq.n	8006390 <HAL_RCCEx_PeriphCLKConfig+0x280>
 800637a:	4b5d      	ldr	r3, [pc, #372]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 800637c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006380:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8006384:	687b      	ldr	r3, [r7, #4]
 8006386:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006388:	4959      	ldr	r1, [pc, #356]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 800638a:	4313      	orrs	r3, r2
 800638c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006390:	687b      	ldr	r3, [r7, #4]
 8006392:	681b      	ldr	r3, [r3, #0]
 8006394:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006398:	2b00      	cmp	r3, #0
 800639a:	d00a      	beq.n	80063b2 <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 800639c:	4b54      	ldr	r3, [pc, #336]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 800639e:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80063a2:	f023 0203 	bic.w	r2, r3, #3
 80063a6:	687b      	ldr	r3, [r7, #4]
 80063a8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80063aa:	4951      	ldr	r1, [pc, #324]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80063ac:	4313      	orrs	r3, r2
 80063ae:	f8c1 309c 	str.w	r3, [r1, #156]	@ 0x9c
 80063b2:	687b      	ldr	r3, [r7, #4]
 80063b4:	681b      	ldr	r3, [r3, #0]
 80063b6:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80063ba:	2b00      	cmp	r3, #0
 80063bc:	d00a      	beq.n	80063d4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
 80063be:	4b4c      	ldr	r3, [pc, #304]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80063c0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80063c4:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 80063c8:	687b      	ldr	r3, [r7, #4]
 80063ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80063cc:	4948      	ldr	r1, [pc, #288]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80063ce:	4313      	orrs	r3, r2
 80063d0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80063d4:	687b      	ldr	r3, [r7, #4]
 80063d6:	681b      	ldr	r3, [r3, #0]
 80063d8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80063dc:	2b00      	cmp	r3, #0
 80063de:	d015      	beq.n	800640c <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 80063e0:	4b43      	ldr	r3, [pc, #268]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80063e2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80063e6:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 80063ea:	687b      	ldr	r3, [r7, #4]
 80063ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80063ee:	4940      	ldr	r1, [pc, #256]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80063f0:	4313      	orrs	r3, r2
 80063f2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80063f6:	687b      	ldr	r3, [r7, #4]
 80063f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80063fa:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80063fe:	d105      	bne.n	800640c <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 8006400:	4b3b      	ldr	r3, [pc, #236]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8006402:	68db      	ldr	r3, [r3, #12]
 8006404:	4a3a      	ldr	r2, [pc, #232]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8006406:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800640a:	60d3      	str	r3, [r2, #12]
 800640c:	687b      	ldr	r3, [r7, #4]
 800640e:	681b      	ldr	r3, [r3, #0]
 8006410:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8006414:	2b00      	cmp	r3, #0
 8006416:	d015      	beq.n	8006444 <HAL_RCCEx_PeriphCLKConfig+0x334>
 8006418:	4b35      	ldr	r3, [pc, #212]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 800641a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800641e:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 8006422:	687b      	ldr	r3, [r7, #4]
 8006424:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006426:	4932      	ldr	r1, [pc, #200]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8006428:	4313      	orrs	r3, r2
 800642a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800642e:	687b      	ldr	r3, [r7, #4]
 8006430:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006432:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8006436:	d105      	bne.n	8006444 <HAL_RCCEx_PeriphCLKConfig+0x334>
 8006438:	4b2d      	ldr	r3, [pc, #180]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 800643a:	68db      	ldr	r3, [r3, #12]
 800643c:	4a2c      	ldr	r2, [pc, #176]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 800643e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8006442:	60d3      	str	r3, [r2, #12]
 8006444:	687b      	ldr	r3, [r7, #4]
 8006446:	681b      	ldr	r3, [r3, #0]
 8006448:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800644c:	2b00      	cmp	r3, #0
 800644e:	d015      	beq.n	800647c <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8006450:	4b27      	ldr	r3, [pc, #156]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8006452:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006456:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 800645a:	687b      	ldr	r3, [r7, #4]
 800645c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800645e:	4924      	ldr	r1, [pc, #144]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8006460:	4313      	orrs	r3, r2
 8006462:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006466:	687b      	ldr	r3, [r7, #4]
 8006468:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800646a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800646e:	d105      	bne.n	800647c <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8006470:	4b1f      	ldr	r3, [pc, #124]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8006472:	68db      	ldr	r3, [r3, #12]
 8006474:	4a1e      	ldr	r2, [pc, #120]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8006476:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800647a:	60d3      	str	r3, [r2, #12]
 800647c:	687b      	ldr	r3, [r7, #4]
 800647e:	681b      	ldr	r3, [r3, #0]
 8006480:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8006484:	2b00      	cmp	r3, #0
 8006486:	d015      	beq.n	80064b4 <HAL_RCCEx_PeriphCLKConfig+0x3a4>
 8006488:	4b19      	ldr	r3, [pc, #100]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 800648a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800648e:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8006492:	687b      	ldr	r3, [r7, #4]
 8006494:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006496:	4916      	ldr	r1, [pc, #88]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8006498:	4313      	orrs	r3, r2
 800649a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800649e:	687b      	ldr	r3, [r7, #4]
 80064a0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80064a2:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80064a6:	d105      	bne.n	80064b4 <HAL_RCCEx_PeriphCLKConfig+0x3a4>
 80064a8:	4b11      	ldr	r3, [pc, #68]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80064aa:	68db      	ldr	r3, [r3, #12]
 80064ac:	4a10      	ldr	r2, [pc, #64]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80064ae:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80064b2:	60d3      	str	r3, [r2, #12]
 80064b4:	687b      	ldr	r3, [r7, #4]
 80064b6:	681b      	ldr	r3, [r3, #0]
 80064b8:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80064bc:	2b00      	cmp	r3, #0
 80064be:	d019      	beq.n	80064f4 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
 80064c0:	4b0b      	ldr	r3, [pc, #44]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80064c2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80064c6:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 80064ca:	687b      	ldr	r3, [r7, #4]
 80064cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80064ce:	4908      	ldr	r1, [pc, #32]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80064d0:	4313      	orrs	r3, r2
 80064d2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80064d6:	687b      	ldr	r3, [r7, #4]
 80064d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80064da:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80064de:	d109      	bne.n	80064f4 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
 80064e0:	4b03      	ldr	r3, [pc, #12]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80064e2:	68db      	ldr	r3, [r3, #12]
 80064e4:	4a02      	ldr	r2, [pc, #8]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80064e6:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80064ea:	60d3      	str	r3, [r2, #12]
 80064ec:	e002      	b.n	80064f4 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
 80064ee:	bf00      	nop
 80064f0:	40021000 	.word	0x40021000
 80064f4:	687b      	ldr	r3, [r7, #4]
 80064f6:	681b      	ldr	r3, [r3, #0]
 80064f8:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80064fc:	2b00      	cmp	r3, #0
 80064fe:	d015      	beq.n	800652c <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8006500:	4b29      	ldr	r3, [pc, #164]	@ (80065a8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8006502:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006506:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 800650a:	687b      	ldr	r3, [r7, #4]
 800650c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800650e:	4926      	ldr	r1, [pc, #152]	@ (80065a8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8006510:	4313      	orrs	r3, r2
 8006512:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006516:	687b      	ldr	r3, [r7, #4]
 8006518:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800651a:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800651e:	d105      	bne.n	800652c <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8006520:	4b21      	ldr	r3, [pc, #132]	@ (80065a8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8006522:	68db      	ldr	r3, [r3, #12]
 8006524:	4a20      	ldr	r2, [pc, #128]	@ (80065a8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8006526:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800652a:	60d3      	str	r3, [r2, #12]
 800652c:	687b      	ldr	r3, [r7, #4]
 800652e:	681b      	ldr	r3, [r3, #0]
 8006530:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8006534:	2b00      	cmp	r3, #0
 8006536:	d015      	beq.n	8006564 <HAL_RCCEx_PeriphCLKConfig+0x454>
 8006538:	4b1b      	ldr	r3, [pc, #108]	@ (80065a8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 800653a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800653e:	f023 4240 	bic.w	r2, r3, #3221225472	@ 0xc0000000
 8006542:	687b      	ldr	r3, [r7, #4]
 8006544:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006546:	4918      	ldr	r1, [pc, #96]	@ (80065a8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8006548:	4313      	orrs	r3, r2
 800654a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800654e:	687b      	ldr	r3, [r7, #4]
 8006550:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006552:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006556:	d105      	bne.n	8006564 <HAL_RCCEx_PeriphCLKConfig+0x454>
 8006558:	4b13      	ldr	r3, [pc, #76]	@ (80065a8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 800655a:	68db      	ldr	r3, [r3, #12]
 800655c:	4a12      	ldr	r2, [pc, #72]	@ (80065a8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 800655e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006562:	60d3      	str	r3, [r2, #12]
 8006564:	687b      	ldr	r3, [r7, #4]
 8006566:	681b      	ldr	r3, [r3, #0]
 8006568:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800656c:	2b00      	cmp	r3, #0
 800656e:	d015      	beq.n	800659c <HAL_RCCEx_PeriphCLKConfig+0x48c>
 8006570:	4b0d      	ldr	r3, [pc, #52]	@ (80065a8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8006572:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8006576:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 800657a:	687b      	ldr	r3, [r7, #4]
 800657c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800657e:	490a      	ldr	r1, [pc, #40]	@ (80065a8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8006580:	4313      	orrs	r3, r2
 8006582:	f8c1 309c 	str.w	r3, [r1, #156]	@ 0x9c
 8006586:	687b      	ldr	r3, [r7, #4]
 8006588:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800658a:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800658e:	d105      	bne.n	800659c <HAL_RCCEx_PeriphCLKConfig+0x48c>
 8006590:	4b05      	ldr	r3, [pc, #20]	@ (80065a8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8006592:	68db      	ldr	r3, [r3, #12]
 8006594:	4a04      	ldr	r2, [pc, #16]	@ (80065a8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8006596:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800659a:	60d3      	str	r3, [r2, #12]
 800659c:	7cbb      	ldrb	r3, [r7, #18]
 800659e:	4618      	mov	r0, r3
 80065a0:	3718      	adds	r7, #24
 80065a2:	46bd      	mov	sp, r7
 80065a4:	bd80      	pop	{r7, pc}
 80065a6:	bf00      	nop
 80065a8:	40021000 	.word	0x40021000

080065ac <HAL_SPI_Init>:
 80065ac:	b580      	push	{r7, lr}
 80065ae:	b084      	sub	sp, #16
 80065b0:	af00      	add	r7, sp, #0
 80065b2:	6078      	str	r0, [r7, #4]
 80065b4:	687b      	ldr	r3, [r7, #4]
 80065b6:	2b00      	cmp	r3, #0
 80065b8:	d101      	bne.n	80065be <HAL_SPI_Init+0x12>
 80065ba:	2301      	movs	r3, #1
 80065bc:	e09d      	b.n	80066fa <HAL_SPI_Init+0x14e>
 80065be:	687b      	ldr	r3, [r7, #4]
 80065c0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80065c2:	2b00      	cmp	r3, #0
 80065c4:	d108      	bne.n	80065d8 <HAL_SPI_Init+0x2c>
 80065c6:	687b      	ldr	r3, [r7, #4]
 80065c8:	685b      	ldr	r3, [r3, #4]
 80065ca:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80065ce:	d009      	beq.n	80065e4 <HAL_SPI_Init+0x38>
 80065d0:	687b      	ldr	r3, [r7, #4]
 80065d2:	2200      	movs	r2, #0
 80065d4:	61da      	str	r2, [r3, #28]
 80065d6:	e005      	b.n	80065e4 <HAL_SPI_Init+0x38>
 80065d8:	687b      	ldr	r3, [r7, #4]
 80065da:	2200      	movs	r2, #0
 80065dc:	611a      	str	r2, [r3, #16]
 80065de:	687b      	ldr	r3, [r7, #4]
 80065e0:	2200      	movs	r2, #0
 80065e2:	615a      	str	r2, [r3, #20]
 80065e4:	687b      	ldr	r3, [r7, #4]
 80065e6:	2200      	movs	r2, #0
 80065e8:	629a      	str	r2, [r3, #40]	@ 0x28
 80065ea:	687b      	ldr	r3, [r7, #4]
 80065ec:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 80065f0:	b2db      	uxtb	r3, r3
 80065f2:	2b00      	cmp	r3, #0
 80065f4:	d106      	bne.n	8006604 <HAL_SPI_Init+0x58>
 80065f6:	687b      	ldr	r3, [r7, #4]
 80065f8:	2200      	movs	r2, #0
 80065fa:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 80065fe:	6878      	ldr	r0, [r7, #4]
 8006600:	f7fb fe04 	bl	800220c <HAL_SPI_MspInit>
 8006604:	687b      	ldr	r3, [r7, #4]
 8006606:	2202      	movs	r2, #2
 8006608:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800660c:	687b      	ldr	r3, [r7, #4]
 800660e:	681b      	ldr	r3, [r3, #0]
 8006610:	681a      	ldr	r2, [r3, #0]
 8006612:	687b      	ldr	r3, [r7, #4]
 8006614:	681b      	ldr	r3, [r3, #0]
 8006616:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800661a:	601a      	str	r2, [r3, #0]
 800661c:	687b      	ldr	r3, [r7, #4]
 800661e:	68db      	ldr	r3, [r3, #12]
 8006620:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8006624:	d902      	bls.n	800662c <HAL_SPI_Init+0x80>
 8006626:	2300      	movs	r3, #0
 8006628:	60fb      	str	r3, [r7, #12]
 800662a:	e002      	b.n	8006632 <HAL_SPI_Init+0x86>
 800662c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8006630:	60fb      	str	r3, [r7, #12]
 8006632:	687b      	ldr	r3, [r7, #4]
 8006634:	68db      	ldr	r3, [r3, #12]
 8006636:	f5b3 6f70 	cmp.w	r3, #3840	@ 0xf00
 800663a:	d007      	beq.n	800664c <HAL_SPI_Init+0xa0>
 800663c:	687b      	ldr	r3, [r7, #4]
 800663e:	68db      	ldr	r3, [r3, #12]
 8006640:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8006644:	d002      	beq.n	800664c <HAL_SPI_Init+0xa0>
 8006646:	687b      	ldr	r3, [r7, #4]
 8006648:	2200      	movs	r2, #0
 800664a:	629a      	str	r2, [r3, #40]	@ 0x28
 800664c:	687b      	ldr	r3, [r7, #4]
 800664e:	685b      	ldr	r3, [r3, #4]
 8006650:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8006654:	687b      	ldr	r3, [r7, #4]
 8006656:	689b      	ldr	r3, [r3, #8]
 8006658:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 800665c:	431a      	orrs	r2, r3
 800665e:	687b      	ldr	r3, [r7, #4]
 8006660:	691b      	ldr	r3, [r3, #16]
 8006662:	f003 0302 	and.w	r3, r3, #2
 8006666:	431a      	orrs	r2, r3
 8006668:	687b      	ldr	r3, [r7, #4]
 800666a:	695b      	ldr	r3, [r3, #20]
 800666c:	f003 0301 	and.w	r3, r3, #1
 8006670:	431a      	orrs	r2, r3
 8006672:	687b      	ldr	r3, [r7, #4]
 8006674:	699b      	ldr	r3, [r3, #24]
 8006676:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800667a:	431a      	orrs	r2, r3
 800667c:	687b      	ldr	r3, [r7, #4]
 800667e:	69db      	ldr	r3, [r3, #28]
 8006680:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8006684:	431a      	orrs	r2, r3
 8006686:	687b      	ldr	r3, [r7, #4]
 8006688:	6a1b      	ldr	r3, [r3, #32]
 800668a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800668e:	ea42 0103 	orr.w	r1, r2, r3
 8006692:	687b      	ldr	r3, [r7, #4]
 8006694:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006696:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 800669a:	687b      	ldr	r3, [r7, #4]
 800669c:	681b      	ldr	r3, [r3, #0]
 800669e:	430a      	orrs	r2, r1
 80066a0:	601a      	str	r2, [r3, #0]
 80066a2:	687b      	ldr	r3, [r7, #4]
 80066a4:	699b      	ldr	r3, [r3, #24]
 80066a6:	0c1b      	lsrs	r3, r3, #16
 80066a8:	f003 0204 	and.w	r2, r3, #4
 80066ac:	687b      	ldr	r3, [r7, #4]
 80066ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80066b0:	f003 0310 	and.w	r3, r3, #16
 80066b4:	431a      	orrs	r2, r3
 80066b6:	687b      	ldr	r3, [r7, #4]
 80066b8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80066ba:	f003 0308 	and.w	r3, r3, #8
 80066be:	431a      	orrs	r2, r3
 80066c0:	687b      	ldr	r3, [r7, #4]
 80066c2:	68db      	ldr	r3, [r3, #12]
 80066c4:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 80066c8:	ea42 0103 	orr.w	r1, r2, r3
 80066cc:	68fb      	ldr	r3, [r7, #12]
 80066ce:	f403 5280 	and.w	r2, r3, #4096	@ 0x1000
 80066d2:	687b      	ldr	r3, [r7, #4]
 80066d4:	681b      	ldr	r3, [r3, #0]
 80066d6:	430a      	orrs	r2, r1
 80066d8:	605a      	str	r2, [r3, #4]
 80066da:	687b      	ldr	r3, [r7, #4]
 80066dc:	681b      	ldr	r3, [r3, #0]
 80066de:	69da      	ldr	r2, [r3, #28]
 80066e0:	687b      	ldr	r3, [r7, #4]
 80066e2:	681b      	ldr	r3, [r3, #0]
 80066e4:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80066e8:	61da      	str	r2, [r3, #28]
 80066ea:	687b      	ldr	r3, [r7, #4]
 80066ec:	2200      	movs	r2, #0
 80066ee:	661a      	str	r2, [r3, #96]	@ 0x60
 80066f0:	687b      	ldr	r3, [r7, #4]
 80066f2:	2201      	movs	r2, #1
 80066f4:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 80066f8:	2300      	movs	r3, #0
 80066fa:	4618      	mov	r0, r3
 80066fc:	3710      	adds	r7, #16
 80066fe:	46bd      	mov	sp, r7
 8006700:	bd80      	pop	{r7, pc}

08006702 <HAL_SPI_TransmitReceive>:
 8006702:	b580      	push	{r7, lr}
 8006704:	b08a      	sub	sp, #40	@ 0x28
 8006706:	af00      	add	r7, sp, #0
 8006708:	60f8      	str	r0, [r7, #12]
 800670a:	60b9      	str	r1, [r7, #8]
 800670c:	607a      	str	r2, [r7, #4]
 800670e:	807b      	strh	r3, [r7, #2]
 8006710:	2301      	movs	r3, #1
 8006712:	627b      	str	r3, [r7, #36]	@ 0x24
 8006714:	2300      	movs	r3, #0
 8006716:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800671a:	68fb      	ldr	r3, [r7, #12]
 800671c:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8006720:	2b01      	cmp	r3, #1
 8006722:	d101      	bne.n	8006728 <HAL_SPI_TransmitReceive+0x26>
 8006724:	2302      	movs	r3, #2
 8006726:	e1fb      	b.n	8006b20 <HAL_SPI_TransmitReceive+0x41e>
 8006728:	68fb      	ldr	r3, [r7, #12]
 800672a:	2201      	movs	r2, #1
 800672c:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8006730:	f7fc f9ee 	bl	8002b10 <HAL_GetTick>
 8006734:	61f8      	str	r0, [r7, #28]
 8006736:	68fb      	ldr	r3, [r7, #12]
 8006738:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 800673c:	76fb      	strb	r3, [r7, #27]
 800673e:	68fb      	ldr	r3, [r7, #12]
 8006740:	685b      	ldr	r3, [r3, #4]
 8006742:	617b      	str	r3, [r7, #20]
 8006744:	887b      	ldrh	r3, [r7, #2]
 8006746:	827b      	strh	r3, [r7, #18]
 8006748:	887b      	ldrh	r3, [r7, #2]
 800674a:	823b      	strh	r3, [r7, #16]
 800674c:	7efb      	ldrb	r3, [r7, #27]
 800674e:	2b01      	cmp	r3, #1
 8006750:	d00e      	beq.n	8006770 <HAL_SPI_TransmitReceive+0x6e>
 8006752:	697b      	ldr	r3, [r7, #20]
 8006754:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006758:	d106      	bne.n	8006768 <HAL_SPI_TransmitReceive+0x66>
 800675a:	68fb      	ldr	r3, [r7, #12]
 800675c:	689b      	ldr	r3, [r3, #8]
 800675e:	2b00      	cmp	r3, #0
 8006760:	d102      	bne.n	8006768 <HAL_SPI_TransmitReceive+0x66>
 8006762:	7efb      	ldrb	r3, [r7, #27]
 8006764:	2b04      	cmp	r3, #4
 8006766:	d003      	beq.n	8006770 <HAL_SPI_TransmitReceive+0x6e>
 8006768:	2302      	movs	r3, #2
 800676a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800676e:	e1cd      	b.n	8006b0c <HAL_SPI_TransmitReceive+0x40a>
 8006770:	68bb      	ldr	r3, [r7, #8]
 8006772:	2b00      	cmp	r3, #0
 8006774:	d005      	beq.n	8006782 <HAL_SPI_TransmitReceive+0x80>
 8006776:	687b      	ldr	r3, [r7, #4]
 8006778:	2b00      	cmp	r3, #0
 800677a:	d002      	beq.n	8006782 <HAL_SPI_TransmitReceive+0x80>
 800677c:	887b      	ldrh	r3, [r7, #2]
 800677e:	2b00      	cmp	r3, #0
 8006780:	d103      	bne.n	800678a <HAL_SPI_TransmitReceive+0x88>
 8006782:	2301      	movs	r3, #1
 8006784:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8006788:	e1c0      	b.n	8006b0c <HAL_SPI_TransmitReceive+0x40a>
 800678a:	68fb      	ldr	r3, [r7, #12]
 800678c:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8006790:	b2db      	uxtb	r3, r3
 8006792:	2b04      	cmp	r3, #4
 8006794:	d003      	beq.n	800679e <HAL_SPI_TransmitReceive+0x9c>
 8006796:	68fb      	ldr	r3, [r7, #12]
 8006798:	2205      	movs	r2, #5
 800679a:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800679e:	68fb      	ldr	r3, [r7, #12]
 80067a0:	2200      	movs	r2, #0
 80067a2:	661a      	str	r2, [r3, #96]	@ 0x60
 80067a4:	68fb      	ldr	r3, [r7, #12]
 80067a6:	687a      	ldr	r2, [r7, #4]
 80067a8:	641a      	str	r2, [r3, #64]	@ 0x40
 80067aa:	68fb      	ldr	r3, [r7, #12]
 80067ac:	887a      	ldrh	r2, [r7, #2]
 80067ae:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 80067b2:	68fb      	ldr	r3, [r7, #12]
 80067b4:	887a      	ldrh	r2, [r7, #2]
 80067b6:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 80067ba:	68fb      	ldr	r3, [r7, #12]
 80067bc:	68ba      	ldr	r2, [r7, #8]
 80067be:	639a      	str	r2, [r3, #56]	@ 0x38
 80067c0:	68fb      	ldr	r3, [r7, #12]
 80067c2:	887a      	ldrh	r2, [r7, #2]
 80067c4:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80067c6:	68fb      	ldr	r3, [r7, #12]
 80067c8:	887a      	ldrh	r2, [r7, #2]
 80067ca:	879a      	strh	r2, [r3, #60]	@ 0x3c
 80067cc:	68fb      	ldr	r3, [r7, #12]
 80067ce:	2200      	movs	r2, #0
 80067d0:	64da      	str	r2, [r3, #76]	@ 0x4c
 80067d2:	68fb      	ldr	r3, [r7, #12]
 80067d4:	2200      	movs	r2, #0
 80067d6:	651a      	str	r2, [r3, #80]	@ 0x50
 80067d8:	68fb      	ldr	r3, [r7, #12]
 80067da:	68db      	ldr	r3, [r3, #12]
 80067dc:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 80067e0:	d802      	bhi.n	80067e8 <HAL_SPI_TransmitReceive+0xe6>
 80067e2:	8a3b      	ldrh	r3, [r7, #16]
 80067e4:	2b01      	cmp	r3, #1
 80067e6:	d908      	bls.n	80067fa <HAL_SPI_TransmitReceive+0xf8>
 80067e8:	68fb      	ldr	r3, [r7, #12]
 80067ea:	681b      	ldr	r3, [r3, #0]
 80067ec:	685a      	ldr	r2, [r3, #4]
 80067ee:	68fb      	ldr	r3, [r7, #12]
 80067f0:	681b      	ldr	r3, [r3, #0]
 80067f2:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80067f6:	605a      	str	r2, [r3, #4]
 80067f8:	e007      	b.n	800680a <HAL_SPI_TransmitReceive+0x108>
 80067fa:	68fb      	ldr	r3, [r7, #12]
 80067fc:	681b      	ldr	r3, [r3, #0]
 80067fe:	685a      	ldr	r2, [r3, #4]
 8006800:	68fb      	ldr	r3, [r7, #12]
 8006802:	681b      	ldr	r3, [r3, #0]
 8006804:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8006808:	605a      	str	r2, [r3, #4]
 800680a:	68fb      	ldr	r3, [r7, #12]
 800680c:	681b      	ldr	r3, [r3, #0]
 800680e:	681b      	ldr	r3, [r3, #0]
 8006810:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006814:	2b40      	cmp	r3, #64	@ 0x40
 8006816:	d007      	beq.n	8006828 <HAL_SPI_TransmitReceive+0x126>
 8006818:	68fb      	ldr	r3, [r7, #12]
 800681a:	681b      	ldr	r3, [r3, #0]
 800681c:	681a      	ldr	r2, [r3, #0]
 800681e:	68fb      	ldr	r3, [r7, #12]
 8006820:	681b      	ldr	r3, [r3, #0]
 8006822:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006826:	601a      	str	r2, [r3, #0]
 8006828:	68fb      	ldr	r3, [r7, #12]
 800682a:	68db      	ldr	r3, [r3, #12]
 800682c:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8006830:	d97c      	bls.n	800692c <HAL_SPI_TransmitReceive+0x22a>
 8006832:	68fb      	ldr	r3, [r7, #12]
 8006834:	685b      	ldr	r3, [r3, #4]
 8006836:	2b00      	cmp	r3, #0
 8006838:	d002      	beq.n	8006840 <HAL_SPI_TransmitReceive+0x13e>
 800683a:	8a7b      	ldrh	r3, [r7, #18]
 800683c:	2b01      	cmp	r3, #1
 800683e:	d169      	bne.n	8006914 <HAL_SPI_TransmitReceive+0x212>
 8006840:	68fb      	ldr	r3, [r7, #12]
 8006842:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006844:	881a      	ldrh	r2, [r3, #0]
 8006846:	68fb      	ldr	r3, [r7, #12]
 8006848:	681b      	ldr	r3, [r3, #0]
 800684a:	60da      	str	r2, [r3, #12]
 800684c:	68fb      	ldr	r3, [r7, #12]
 800684e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006850:	1c9a      	adds	r2, r3, #2
 8006852:	68fb      	ldr	r3, [r7, #12]
 8006854:	639a      	str	r2, [r3, #56]	@ 0x38
 8006856:	68fb      	ldr	r3, [r7, #12]
 8006858:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800685a:	b29b      	uxth	r3, r3
 800685c:	3b01      	subs	r3, #1
 800685e:	b29a      	uxth	r2, r3
 8006860:	68fb      	ldr	r3, [r7, #12]
 8006862:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8006864:	e056      	b.n	8006914 <HAL_SPI_TransmitReceive+0x212>
 8006866:	68fb      	ldr	r3, [r7, #12]
 8006868:	681b      	ldr	r3, [r3, #0]
 800686a:	689b      	ldr	r3, [r3, #8]
 800686c:	f003 0302 	and.w	r3, r3, #2
 8006870:	2b02      	cmp	r3, #2
 8006872:	d11b      	bne.n	80068ac <HAL_SPI_TransmitReceive+0x1aa>
 8006874:	68fb      	ldr	r3, [r7, #12]
 8006876:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006878:	b29b      	uxth	r3, r3
 800687a:	2b00      	cmp	r3, #0
 800687c:	d016      	beq.n	80068ac <HAL_SPI_TransmitReceive+0x1aa>
 800687e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006880:	2b01      	cmp	r3, #1
 8006882:	d113      	bne.n	80068ac <HAL_SPI_TransmitReceive+0x1aa>
 8006884:	68fb      	ldr	r3, [r7, #12]
 8006886:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006888:	881a      	ldrh	r2, [r3, #0]
 800688a:	68fb      	ldr	r3, [r7, #12]
 800688c:	681b      	ldr	r3, [r3, #0]
 800688e:	60da      	str	r2, [r3, #12]
 8006890:	68fb      	ldr	r3, [r7, #12]
 8006892:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006894:	1c9a      	adds	r2, r3, #2
 8006896:	68fb      	ldr	r3, [r7, #12]
 8006898:	639a      	str	r2, [r3, #56]	@ 0x38
 800689a:	68fb      	ldr	r3, [r7, #12]
 800689c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800689e:	b29b      	uxth	r3, r3
 80068a0:	3b01      	subs	r3, #1
 80068a2:	b29a      	uxth	r2, r3
 80068a4:	68fb      	ldr	r3, [r7, #12]
 80068a6:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80068a8:	2300      	movs	r3, #0
 80068aa:	627b      	str	r3, [r7, #36]	@ 0x24
 80068ac:	68fb      	ldr	r3, [r7, #12]
 80068ae:	681b      	ldr	r3, [r3, #0]
 80068b0:	689b      	ldr	r3, [r3, #8]
 80068b2:	f003 0301 	and.w	r3, r3, #1
 80068b6:	2b01      	cmp	r3, #1
 80068b8:	d11c      	bne.n	80068f4 <HAL_SPI_TransmitReceive+0x1f2>
 80068ba:	68fb      	ldr	r3, [r7, #12]
 80068bc:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 80068c0:	b29b      	uxth	r3, r3
 80068c2:	2b00      	cmp	r3, #0
 80068c4:	d016      	beq.n	80068f4 <HAL_SPI_TransmitReceive+0x1f2>
 80068c6:	68fb      	ldr	r3, [r7, #12]
 80068c8:	681b      	ldr	r3, [r3, #0]
 80068ca:	68da      	ldr	r2, [r3, #12]
 80068cc:	68fb      	ldr	r3, [r7, #12]
 80068ce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80068d0:	b292      	uxth	r2, r2
 80068d2:	801a      	strh	r2, [r3, #0]
 80068d4:	68fb      	ldr	r3, [r7, #12]
 80068d6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80068d8:	1c9a      	adds	r2, r3, #2
 80068da:	68fb      	ldr	r3, [r7, #12]
 80068dc:	641a      	str	r2, [r3, #64]	@ 0x40
 80068de:	68fb      	ldr	r3, [r7, #12]
 80068e0:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 80068e4:	b29b      	uxth	r3, r3
 80068e6:	3b01      	subs	r3, #1
 80068e8:	b29a      	uxth	r2, r3
 80068ea:	68fb      	ldr	r3, [r7, #12]
 80068ec:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 80068f0:	2301      	movs	r3, #1
 80068f2:	627b      	str	r3, [r7, #36]	@ 0x24
 80068f4:	f7fc f90c 	bl	8002b10 <HAL_GetTick>
 80068f8:	4602      	mov	r2, r0
 80068fa:	69fb      	ldr	r3, [r7, #28]
 80068fc:	1ad3      	subs	r3, r2, r3
 80068fe:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006900:	429a      	cmp	r2, r3
 8006902:	d807      	bhi.n	8006914 <HAL_SPI_TransmitReceive+0x212>
 8006904:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006906:	f1b3 3fff 	cmp.w	r3, #4294967295
 800690a:	d003      	beq.n	8006914 <HAL_SPI_TransmitReceive+0x212>
 800690c:	2303      	movs	r3, #3
 800690e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8006912:	e0fb      	b.n	8006b0c <HAL_SPI_TransmitReceive+0x40a>
 8006914:	68fb      	ldr	r3, [r7, #12]
 8006916:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006918:	b29b      	uxth	r3, r3
 800691a:	2b00      	cmp	r3, #0
 800691c:	d1a3      	bne.n	8006866 <HAL_SPI_TransmitReceive+0x164>
 800691e:	68fb      	ldr	r3, [r7, #12]
 8006920:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8006924:	b29b      	uxth	r3, r3
 8006926:	2b00      	cmp	r3, #0
 8006928:	d19d      	bne.n	8006866 <HAL_SPI_TransmitReceive+0x164>
 800692a:	e0df      	b.n	8006aec <HAL_SPI_TransmitReceive+0x3ea>
 800692c:	68fb      	ldr	r3, [r7, #12]
 800692e:	685b      	ldr	r3, [r3, #4]
 8006930:	2b00      	cmp	r3, #0
 8006932:	d003      	beq.n	800693c <HAL_SPI_TransmitReceive+0x23a>
 8006934:	8a7b      	ldrh	r3, [r7, #18]
 8006936:	2b01      	cmp	r3, #1
 8006938:	f040 80cb 	bne.w	8006ad2 <HAL_SPI_TransmitReceive+0x3d0>
 800693c:	68fb      	ldr	r3, [r7, #12]
 800693e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006940:	b29b      	uxth	r3, r3
 8006942:	2b01      	cmp	r3, #1
 8006944:	d912      	bls.n	800696c <HAL_SPI_TransmitReceive+0x26a>
 8006946:	68fb      	ldr	r3, [r7, #12]
 8006948:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800694a:	881a      	ldrh	r2, [r3, #0]
 800694c:	68fb      	ldr	r3, [r7, #12]
 800694e:	681b      	ldr	r3, [r3, #0]
 8006950:	60da      	str	r2, [r3, #12]
 8006952:	68fb      	ldr	r3, [r7, #12]
 8006954:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006956:	1c9a      	adds	r2, r3, #2
 8006958:	68fb      	ldr	r3, [r7, #12]
 800695a:	639a      	str	r2, [r3, #56]	@ 0x38
 800695c:	68fb      	ldr	r3, [r7, #12]
 800695e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006960:	b29b      	uxth	r3, r3
 8006962:	3b02      	subs	r3, #2
 8006964:	b29a      	uxth	r2, r3
 8006966:	68fb      	ldr	r3, [r7, #12]
 8006968:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800696a:	e0b2      	b.n	8006ad2 <HAL_SPI_TransmitReceive+0x3d0>
 800696c:	68fb      	ldr	r3, [r7, #12]
 800696e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8006970:	68fb      	ldr	r3, [r7, #12]
 8006972:	681b      	ldr	r3, [r3, #0]
 8006974:	330c      	adds	r3, #12
 8006976:	7812      	ldrb	r2, [r2, #0]
 8006978:	701a      	strb	r2, [r3, #0]
 800697a:	68fb      	ldr	r3, [r7, #12]
 800697c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800697e:	1c5a      	adds	r2, r3, #1
 8006980:	68fb      	ldr	r3, [r7, #12]
 8006982:	639a      	str	r2, [r3, #56]	@ 0x38
 8006984:	68fb      	ldr	r3, [r7, #12]
 8006986:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006988:	b29b      	uxth	r3, r3
 800698a:	3b01      	subs	r3, #1
 800698c:	b29a      	uxth	r2, r3
 800698e:	68fb      	ldr	r3, [r7, #12]
 8006990:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8006992:	e09e      	b.n	8006ad2 <HAL_SPI_TransmitReceive+0x3d0>
 8006994:	68fb      	ldr	r3, [r7, #12]
 8006996:	681b      	ldr	r3, [r3, #0]
 8006998:	689b      	ldr	r3, [r3, #8]
 800699a:	f003 0302 	and.w	r3, r3, #2
 800699e:	2b02      	cmp	r3, #2
 80069a0:	d134      	bne.n	8006a0c <HAL_SPI_TransmitReceive+0x30a>
 80069a2:	68fb      	ldr	r3, [r7, #12]
 80069a4:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80069a6:	b29b      	uxth	r3, r3
 80069a8:	2b00      	cmp	r3, #0
 80069aa:	d02f      	beq.n	8006a0c <HAL_SPI_TransmitReceive+0x30a>
 80069ac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80069ae:	2b01      	cmp	r3, #1
 80069b0:	d12c      	bne.n	8006a0c <HAL_SPI_TransmitReceive+0x30a>
 80069b2:	68fb      	ldr	r3, [r7, #12]
 80069b4:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80069b6:	b29b      	uxth	r3, r3
 80069b8:	2b01      	cmp	r3, #1
 80069ba:	d912      	bls.n	80069e2 <HAL_SPI_TransmitReceive+0x2e0>
 80069bc:	68fb      	ldr	r3, [r7, #12]
 80069be:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80069c0:	881a      	ldrh	r2, [r3, #0]
 80069c2:	68fb      	ldr	r3, [r7, #12]
 80069c4:	681b      	ldr	r3, [r3, #0]
 80069c6:	60da      	str	r2, [r3, #12]
 80069c8:	68fb      	ldr	r3, [r7, #12]
 80069ca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80069cc:	1c9a      	adds	r2, r3, #2
 80069ce:	68fb      	ldr	r3, [r7, #12]
 80069d0:	639a      	str	r2, [r3, #56]	@ 0x38
 80069d2:	68fb      	ldr	r3, [r7, #12]
 80069d4:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80069d6:	b29b      	uxth	r3, r3
 80069d8:	3b02      	subs	r3, #2
 80069da:	b29a      	uxth	r2, r3
 80069dc:	68fb      	ldr	r3, [r7, #12]
 80069de:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80069e0:	e012      	b.n	8006a08 <HAL_SPI_TransmitReceive+0x306>
 80069e2:	68fb      	ldr	r3, [r7, #12]
 80069e4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80069e6:	68fb      	ldr	r3, [r7, #12]
 80069e8:	681b      	ldr	r3, [r3, #0]
 80069ea:	330c      	adds	r3, #12
 80069ec:	7812      	ldrb	r2, [r2, #0]
 80069ee:	701a      	strb	r2, [r3, #0]
 80069f0:	68fb      	ldr	r3, [r7, #12]
 80069f2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80069f4:	1c5a      	adds	r2, r3, #1
 80069f6:	68fb      	ldr	r3, [r7, #12]
 80069f8:	639a      	str	r2, [r3, #56]	@ 0x38
 80069fa:	68fb      	ldr	r3, [r7, #12]
 80069fc:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80069fe:	b29b      	uxth	r3, r3
 8006a00:	3b01      	subs	r3, #1
 8006a02:	b29a      	uxth	r2, r3
 8006a04:	68fb      	ldr	r3, [r7, #12]
 8006a06:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8006a08:	2300      	movs	r3, #0
 8006a0a:	627b      	str	r3, [r7, #36]	@ 0x24
 8006a0c:	68fb      	ldr	r3, [r7, #12]
 8006a0e:	681b      	ldr	r3, [r3, #0]
 8006a10:	689b      	ldr	r3, [r3, #8]
 8006a12:	f003 0301 	and.w	r3, r3, #1
 8006a16:	2b01      	cmp	r3, #1
 8006a18:	d148      	bne.n	8006aac <HAL_SPI_TransmitReceive+0x3aa>
 8006a1a:	68fb      	ldr	r3, [r7, #12]
 8006a1c:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8006a20:	b29b      	uxth	r3, r3
 8006a22:	2b00      	cmp	r3, #0
 8006a24:	d042      	beq.n	8006aac <HAL_SPI_TransmitReceive+0x3aa>
 8006a26:	68fb      	ldr	r3, [r7, #12]
 8006a28:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8006a2c:	b29b      	uxth	r3, r3
 8006a2e:	2b01      	cmp	r3, #1
 8006a30:	d923      	bls.n	8006a7a <HAL_SPI_TransmitReceive+0x378>
 8006a32:	68fb      	ldr	r3, [r7, #12]
 8006a34:	681b      	ldr	r3, [r3, #0]
 8006a36:	68da      	ldr	r2, [r3, #12]
 8006a38:	68fb      	ldr	r3, [r7, #12]
 8006a3a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006a3c:	b292      	uxth	r2, r2
 8006a3e:	801a      	strh	r2, [r3, #0]
 8006a40:	68fb      	ldr	r3, [r7, #12]
 8006a42:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006a44:	1c9a      	adds	r2, r3, #2
 8006a46:	68fb      	ldr	r3, [r7, #12]
 8006a48:	641a      	str	r2, [r3, #64]	@ 0x40
 8006a4a:	68fb      	ldr	r3, [r7, #12]
 8006a4c:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8006a50:	b29b      	uxth	r3, r3
 8006a52:	3b02      	subs	r3, #2
 8006a54:	b29a      	uxth	r2, r3
 8006a56:	68fb      	ldr	r3, [r7, #12]
 8006a58:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8006a5c:	68fb      	ldr	r3, [r7, #12]
 8006a5e:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8006a62:	b29b      	uxth	r3, r3
 8006a64:	2b01      	cmp	r3, #1
 8006a66:	d81f      	bhi.n	8006aa8 <HAL_SPI_TransmitReceive+0x3a6>
 8006a68:	68fb      	ldr	r3, [r7, #12]
 8006a6a:	681b      	ldr	r3, [r3, #0]
 8006a6c:	685a      	ldr	r2, [r3, #4]
 8006a6e:	68fb      	ldr	r3, [r7, #12]
 8006a70:	681b      	ldr	r3, [r3, #0]
 8006a72:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8006a76:	605a      	str	r2, [r3, #4]
 8006a78:	e016      	b.n	8006aa8 <HAL_SPI_TransmitReceive+0x3a6>
 8006a7a:	68fb      	ldr	r3, [r7, #12]
 8006a7c:	681b      	ldr	r3, [r3, #0]
 8006a7e:	f103 020c 	add.w	r2, r3, #12
 8006a82:	68fb      	ldr	r3, [r7, #12]
 8006a84:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006a86:	7812      	ldrb	r2, [r2, #0]
 8006a88:	b2d2      	uxtb	r2, r2
 8006a8a:	701a      	strb	r2, [r3, #0]
 8006a8c:	68fb      	ldr	r3, [r7, #12]
 8006a8e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006a90:	1c5a      	adds	r2, r3, #1
 8006a92:	68fb      	ldr	r3, [r7, #12]
 8006a94:	641a      	str	r2, [r3, #64]	@ 0x40
 8006a96:	68fb      	ldr	r3, [r7, #12]
 8006a98:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8006a9c:	b29b      	uxth	r3, r3
 8006a9e:	3b01      	subs	r3, #1
 8006aa0:	b29a      	uxth	r2, r3
 8006aa2:	68fb      	ldr	r3, [r7, #12]
 8006aa4:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8006aa8:	2301      	movs	r3, #1
 8006aaa:	627b      	str	r3, [r7, #36]	@ 0x24
 8006aac:	f7fc f830 	bl	8002b10 <HAL_GetTick>
 8006ab0:	4602      	mov	r2, r0
 8006ab2:	69fb      	ldr	r3, [r7, #28]
 8006ab4:	1ad3      	subs	r3, r2, r3
 8006ab6:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006ab8:	429a      	cmp	r2, r3
 8006aba:	d803      	bhi.n	8006ac4 <HAL_SPI_TransmitReceive+0x3c2>
 8006abc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006abe:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006ac2:	d102      	bne.n	8006aca <HAL_SPI_TransmitReceive+0x3c8>
 8006ac4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006ac6:	2b00      	cmp	r3, #0
 8006ac8:	d103      	bne.n	8006ad2 <HAL_SPI_TransmitReceive+0x3d0>
 8006aca:	2303      	movs	r3, #3
 8006acc:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8006ad0:	e01c      	b.n	8006b0c <HAL_SPI_TransmitReceive+0x40a>
 8006ad2:	68fb      	ldr	r3, [r7, #12]
 8006ad4:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006ad6:	b29b      	uxth	r3, r3
 8006ad8:	2b00      	cmp	r3, #0
 8006ada:	f47f af5b 	bne.w	8006994 <HAL_SPI_TransmitReceive+0x292>
 8006ade:	68fb      	ldr	r3, [r7, #12]
 8006ae0:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8006ae4:	b29b      	uxth	r3, r3
 8006ae6:	2b00      	cmp	r3, #0
 8006ae8:	f47f af54 	bne.w	8006994 <HAL_SPI_TransmitReceive+0x292>
 8006aec:	69fa      	ldr	r2, [r7, #28]
 8006aee:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8006af0:	68f8      	ldr	r0, [r7, #12]
 8006af2:	f000 fa4b 	bl	8006f8c <SPI_EndRxTxTransaction>
 8006af6:	4603      	mov	r3, r0
 8006af8:	2b00      	cmp	r3, #0
 8006afa:	d006      	beq.n	8006b0a <HAL_SPI_TransmitReceive+0x408>
 8006afc:	2301      	movs	r3, #1
 8006afe:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8006b02:	68fb      	ldr	r3, [r7, #12]
 8006b04:	2220      	movs	r2, #32
 8006b06:	661a      	str	r2, [r3, #96]	@ 0x60
 8006b08:	e000      	b.n	8006b0c <HAL_SPI_TransmitReceive+0x40a>
 8006b0a:	bf00      	nop
 8006b0c:	68fb      	ldr	r3, [r7, #12]
 8006b0e:	2201      	movs	r2, #1
 8006b10:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8006b14:	68fb      	ldr	r3, [r7, #12]
 8006b16:	2200      	movs	r2, #0
 8006b18:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8006b1c:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8006b20:	4618      	mov	r0, r3
 8006b22:	3728      	adds	r7, #40	@ 0x28
 8006b24:	46bd      	mov	sp, r7
 8006b26:	bd80      	pop	{r7, pc}

08006b28 <HAL_SPI_IRQHandler>:
 8006b28:	b580      	push	{r7, lr}
 8006b2a:	b088      	sub	sp, #32
 8006b2c:	af00      	add	r7, sp, #0
 8006b2e:	6078      	str	r0, [r7, #4]
 8006b30:	687b      	ldr	r3, [r7, #4]
 8006b32:	681b      	ldr	r3, [r3, #0]
 8006b34:	685b      	ldr	r3, [r3, #4]
 8006b36:	61fb      	str	r3, [r7, #28]
 8006b38:	687b      	ldr	r3, [r7, #4]
 8006b3a:	681b      	ldr	r3, [r3, #0]
 8006b3c:	689b      	ldr	r3, [r3, #8]
 8006b3e:	61bb      	str	r3, [r7, #24]
 8006b40:	69bb      	ldr	r3, [r7, #24]
 8006b42:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006b46:	2b00      	cmp	r3, #0
 8006b48:	d10e      	bne.n	8006b68 <HAL_SPI_IRQHandler+0x40>
 8006b4a:	69bb      	ldr	r3, [r7, #24]
 8006b4c:	f003 0301 	and.w	r3, r3, #1
 8006b50:	2b00      	cmp	r3, #0
 8006b52:	d009      	beq.n	8006b68 <HAL_SPI_IRQHandler+0x40>
 8006b54:	69fb      	ldr	r3, [r7, #28]
 8006b56:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006b5a:	2b00      	cmp	r3, #0
 8006b5c:	d004      	beq.n	8006b68 <HAL_SPI_IRQHandler+0x40>
 8006b5e:	687b      	ldr	r3, [r7, #4]
 8006b60:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006b62:	6878      	ldr	r0, [r7, #4]
 8006b64:	4798      	blx	r3
 8006b66:	e0ce      	b.n	8006d06 <HAL_SPI_IRQHandler+0x1de>
 8006b68:	69bb      	ldr	r3, [r7, #24]
 8006b6a:	f003 0302 	and.w	r3, r3, #2
 8006b6e:	2b00      	cmp	r3, #0
 8006b70:	d009      	beq.n	8006b86 <HAL_SPI_IRQHandler+0x5e>
 8006b72:	69fb      	ldr	r3, [r7, #28]
 8006b74:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006b78:	2b00      	cmp	r3, #0
 8006b7a:	d004      	beq.n	8006b86 <HAL_SPI_IRQHandler+0x5e>
 8006b7c:	687b      	ldr	r3, [r7, #4]
 8006b7e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006b80:	6878      	ldr	r0, [r7, #4]
 8006b82:	4798      	blx	r3
 8006b84:	e0bf      	b.n	8006d06 <HAL_SPI_IRQHandler+0x1de>
 8006b86:	69bb      	ldr	r3, [r7, #24]
 8006b88:	f003 0320 	and.w	r3, r3, #32
 8006b8c:	2b00      	cmp	r3, #0
 8006b8e:	d10a      	bne.n	8006ba6 <HAL_SPI_IRQHandler+0x7e>
 8006b90:	69bb      	ldr	r3, [r7, #24]
 8006b92:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006b96:	2b00      	cmp	r3, #0
 8006b98:	d105      	bne.n	8006ba6 <HAL_SPI_IRQHandler+0x7e>
 8006b9a:	69bb      	ldr	r3, [r7, #24]
 8006b9c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006ba0:	2b00      	cmp	r3, #0
 8006ba2:	f000 80b0 	beq.w	8006d06 <HAL_SPI_IRQHandler+0x1de>
 8006ba6:	69fb      	ldr	r3, [r7, #28]
 8006ba8:	f003 0320 	and.w	r3, r3, #32
 8006bac:	2b00      	cmp	r3, #0
 8006bae:	f000 80aa 	beq.w	8006d06 <HAL_SPI_IRQHandler+0x1de>
 8006bb2:	69bb      	ldr	r3, [r7, #24]
 8006bb4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006bb8:	2b00      	cmp	r3, #0
 8006bba:	d023      	beq.n	8006c04 <HAL_SPI_IRQHandler+0xdc>
 8006bbc:	687b      	ldr	r3, [r7, #4]
 8006bbe:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8006bc2:	b2db      	uxtb	r3, r3
 8006bc4:	2b03      	cmp	r3, #3
 8006bc6:	d011      	beq.n	8006bec <HAL_SPI_IRQHandler+0xc4>
 8006bc8:	687b      	ldr	r3, [r7, #4]
 8006bca:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006bcc:	f043 0204 	orr.w	r2, r3, #4
 8006bd0:	687b      	ldr	r3, [r7, #4]
 8006bd2:	661a      	str	r2, [r3, #96]	@ 0x60
 8006bd4:	2300      	movs	r3, #0
 8006bd6:	617b      	str	r3, [r7, #20]
 8006bd8:	687b      	ldr	r3, [r7, #4]
 8006bda:	681b      	ldr	r3, [r3, #0]
 8006bdc:	68db      	ldr	r3, [r3, #12]
 8006bde:	617b      	str	r3, [r7, #20]
 8006be0:	687b      	ldr	r3, [r7, #4]
 8006be2:	681b      	ldr	r3, [r3, #0]
 8006be4:	689b      	ldr	r3, [r3, #8]
 8006be6:	617b      	str	r3, [r7, #20]
 8006be8:	697b      	ldr	r3, [r7, #20]
 8006bea:	e00b      	b.n	8006c04 <HAL_SPI_IRQHandler+0xdc>
 8006bec:	2300      	movs	r3, #0
 8006bee:	613b      	str	r3, [r7, #16]
 8006bf0:	687b      	ldr	r3, [r7, #4]
 8006bf2:	681b      	ldr	r3, [r3, #0]
 8006bf4:	68db      	ldr	r3, [r3, #12]
 8006bf6:	613b      	str	r3, [r7, #16]
 8006bf8:	687b      	ldr	r3, [r7, #4]
 8006bfa:	681b      	ldr	r3, [r3, #0]
 8006bfc:	689b      	ldr	r3, [r3, #8]
 8006bfe:	613b      	str	r3, [r7, #16]
 8006c00:	693b      	ldr	r3, [r7, #16]
 8006c02:	e080      	b.n	8006d06 <HAL_SPI_IRQHandler+0x1de>
 8006c04:	69bb      	ldr	r3, [r7, #24]
 8006c06:	f003 0320 	and.w	r3, r3, #32
 8006c0a:	2b00      	cmp	r3, #0
 8006c0c:	d014      	beq.n	8006c38 <HAL_SPI_IRQHandler+0x110>
 8006c0e:	687b      	ldr	r3, [r7, #4]
 8006c10:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006c12:	f043 0201 	orr.w	r2, r3, #1
 8006c16:	687b      	ldr	r3, [r7, #4]
 8006c18:	661a      	str	r2, [r3, #96]	@ 0x60
 8006c1a:	2300      	movs	r3, #0
 8006c1c:	60fb      	str	r3, [r7, #12]
 8006c1e:	687b      	ldr	r3, [r7, #4]
 8006c20:	681b      	ldr	r3, [r3, #0]
 8006c22:	689b      	ldr	r3, [r3, #8]
 8006c24:	60fb      	str	r3, [r7, #12]
 8006c26:	687b      	ldr	r3, [r7, #4]
 8006c28:	681b      	ldr	r3, [r3, #0]
 8006c2a:	681a      	ldr	r2, [r3, #0]
 8006c2c:	687b      	ldr	r3, [r7, #4]
 8006c2e:	681b      	ldr	r3, [r3, #0]
 8006c30:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006c34:	601a      	str	r2, [r3, #0]
 8006c36:	68fb      	ldr	r3, [r7, #12]
 8006c38:	69bb      	ldr	r3, [r7, #24]
 8006c3a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006c3e:	2b00      	cmp	r3, #0
 8006c40:	d00c      	beq.n	8006c5c <HAL_SPI_IRQHandler+0x134>
 8006c42:	687b      	ldr	r3, [r7, #4]
 8006c44:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006c46:	f043 0208 	orr.w	r2, r3, #8
 8006c4a:	687b      	ldr	r3, [r7, #4]
 8006c4c:	661a      	str	r2, [r3, #96]	@ 0x60
 8006c4e:	2300      	movs	r3, #0
 8006c50:	60bb      	str	r3, [r7, #8]
 8006c52:	687b      	ldr	r3, [r7, #4]
 8006c54:	681b      	ldr	r3, [r3, #0]
 8006c56:	689b      	ldr	r3, [r3, #8]
 8006c58:	60bb      	str	r3, [r7, #8]
 8006c5a:	68bb      	ldr	r3, [r7, #8]
 8006c5c:	687b      	ldr	r3, [r7, #4]
 8006c5e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006c60:	2b00      	cmp	r3, #0
 8006c62:	d04f      	beq.n	8006d04 <HAL_SPI_IRQHandler+0x1dc>
 8006c64:	687b      	ldr	r3, [r7, #4]
 8006c66:	681b      	ldr	r3, [r3, #0]
 8006c68:	685a      	ldr	r2, [r3, #4]
 8006c6a:	687b      	ldr	r3, [r7, #4]
 8006c6c:	681b      	ldr	r3, [r3, #0]
 8006c6e:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006c72:	605a      	str	r2, [r3, #4]
 8006c74:	687b      	ldr	r3, [r7, #4]
 8006c76:	2201      	movs	r2, #1
 8006c78:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8006c7c:	69fb      	ldr	r3, [r7, #28]
 8006c7e:	f003 0302 	and.w	r3, r3, #2
 8006c82:	2b00      	cmp	r3, #0
 8006c84:	d104      	bne.n	8006c90 <HAL_SPI_IRQHandler+0x168>
 8006c86:	69fb      	ldr	r3, [r7, #28]
 8006c88:	f003 0301 	and.w	r3, r3, #1
 8006c8c:	2b00      	cmp	r3, #0
 8006c8e:	d034      	beq.n	8006cfa <HAL_SPI_IRQHandler+0x1d2>
 8006c90:	687b      	ldr	r3, [r7, #4]
 8006c92:	681b      	ldr	r3, [r3, #0]
 8006c94:	685a      	ldr	r2, [r3, #4]
 8006c96:	687b      	ldr	r3, [r7, #4]
 8006c98:	681b      	ldr	r3, [r3, #0]
 8006c9a:	f022 0203 	bic.w	r2, r2, #3
 8006c9e:	605a      	str	r2, [r3, #4]
 8006ca0:	687b      	ldr	r3, [r7, #4]
 8006ca2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006ca4:	2b00      	cmp	r3, #0
 8006ca6:	d011      	beq.n	8006ccc <HAL_SPI_IRQHandler+0x1a4>
 8006ca8:	687b      	ldr	r3, [r7, #4]
 8006caa:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006cac:	4a17      	ldr	r2, [pc, #92]	@ (8006d0c <HAL_SPI_IRQHandler+0x1e4>)
 8006cae:	639a      	str	r2, [r3, #56]	@ 0x38
 8006cb0:	687b      	ldr	r3, [r7, #4]
 8006cb2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006cb4:	4618      	mov	r0, r3
 8006cb6:	f7fd fd66 	bl	8004786 <HAL_DMA_Abort_IT>
 8006cba:	4603      	mov	r3, r0
 8006cbc:	2b00      	cmp	r3, #0
 8006cbe:	d005      	beq.n	8006ccc <HAL_SPI_IRQHandler+0x1a4>
 8006cc0:	687b      	ldr	r3, [r7, #4]
 8006cc2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006cc4:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8006cc8:	687b      	ldr	r3, [r7, #4]
 8006cca:	661a      	str	r2, [r3, #96]	@ 0x60
 8006ccc:	687b      	ldr	r3, [r7, #4]
 8006cce:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006cd0:	2b00      	cmp	r3, #0
 8006cd2:	d016      	beq.n	8006d02 <HAL_SPI_IRQHandler+0x1da>
 8006cd4:	687b      	ldr	r3, [r7, #4]
 8006cd6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006cd8:	4a0c      	ldr	r2, [pc, #48]	@ (8006d0c <HAL_SPI_IRQHandler+0x1e4>)
 8006cda:	639a      	str	r2, [r3, #56]	@ 0x38
 8006cdc:	687b      	ldr	r3, [r7, #4]
 8006cde:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006ce0:	4618      	mov	r0, r3
 8006ce2:	f7fd fd50 	bl	8004786 <HAL_DMA_Abort_IT>
 8006ce6:	4603      	mov	r3, r0
 8006ce8:	2b00      	cmp	r3, #0
 8006cea:	d00a      	beq.n	8006d02 <HAL_SPI_IRQHandler+0x1da>
 8006cec:	687b      	ldr	r3, [r7, #4]
 8006cee:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006cf0:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8006cf4:	687b      	ldr	r3, [r7, #4]
 8006cf6:	661a      	str	r2, [r3, #96]	@ 0x60
 8006cf8:	e003      	b.n	8006d02 <HAL_SPI_IRQHandler+0x1da>
 8006cfa:	6878      	ldr	r0, [r7, #4]
 8006cfc:	f000 f808 	bl	8006d10 <HAL_SPI_ErrorCallback>
 8006d00:	e000      	b.n	8006d04 <HAL_SPI_IRQHandler+0x1dc>
 8006d02:	bf00      	nop
 8006d04:	bf00      	nop
 8006d06:	3720      	adds	r7, #32
 8006d08:	46bd      	mov	sp, r7
 8006d0a:	bd80      	pop	{r7, pc}
 8006d0c:	08006d25 	.word	0x08006d25

08006d10 <HAL_SPI_ErrorCallback>:
 8006d10:	b480      	push	{r7}
 8006d12:	b083      	sub	sp, #12
 8006d14:	af00      	add	r7, sp, #0
 8006d16:	6078      	str	r0, [r7, #4]
 8006d18:	bf00      	nop
 8006d1a:	370c      	adds	r7, #12
 8006d1c:	46bd      	mov	sp, r7
 8006d1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d22:	4770      	bx	lr

08006d24 <SPI_DMAAbortOnError>:
 8006d24:	b580      	push	{r7, lr}
 8006d26:	b084      	sub	sp, #16
 8006d28:	af00      	add	r7, sp, #0
 8006d2a:	6078      	str	r0, [r7, #4]
 8006d2c:	687b      	ldr	r3, [r7, #4]
 8006d2e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006d30:	60fb      	str	r3, [r7, #12]
 8006d32:	68fb      	ldr	r3, [r7, #12]
 8006d34:	2200      	movs	r2, #0
 8006d36:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8006d3a:	68fb      	ldr	r3, [r7, #12]
 8006d3c:	2200      	movs	r2, #0
 8006d3e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8006d40:	68f8      	ldr	r0, [r7, #12]
 8006d42:	f7ff ffe5 	bl	8006d10 <HAL_SPI_ErrorCallback>
 8006d46:	bf00      	nop
 8006d48:	3710      	adds	r7, #16
 8006d4a:	46bd      	mov	sp, r7
 8006d4c:	bd80      	pop	{r7, pc}
	...

08006d50 <SPI_WaitFlagStateUntilTimeout>:
 8006d50:	b580      	push	{r7, lr}
 8006d52:	b088      	sub	sp, #32
 8006d54:	af00      	add	r7, sp, #0
 8006d56:	60f8      	str	r0, [r7, #12]
 8006d58:	60b9      	str	r1, [r7, #8]
 8006d5a:	603b      	str	r3, [r7, #0]
 8006d5c:	4613      	mov	r3, r2
 8006d5e:	71fb      	strb	r3, [r7, #7]
 8006d60:	f7fb fed6 	bl	8002b10 <HAL_GetTick>
 8006d64:	4602      	mov	r2, r0
 8006d66:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006d68:	1a9b      	subs	r3, r3, r2
 8006d6a:	683a      	ldr	r2, [r7, #0]
 8006d6c:	4413      	add	r3, r2
 8006d6e:	61fb      	str	r3, [r7, #28]
 8006d70:	f7fb fece 	bl	8002b10 <HAL_GetTick>
 8006d74:	61b8      	str	r0, [r7, #24]
 8006d76:	4b39      	ldr	r3, [pc, #228]	@ (8006e5c <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8006d78:	681b      	ldr	r3, [r3, #0]
 8006d7a:	015b      	lsls	r3, r3, #5
 8006d7c:	0d1b      	lsrs	r3, r3, #20
 8006d7e:	69fa      	ldr	r2, [r7, #28]
 8006d80:	fb02 f303 	mul.w	r3, r2, r3
 8006d84:	617b      	str	r3, [r7, #20]
 8006d86:	e054      	b.n	8006e32 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8006d88:	683b      	ldr	r3, [r7, #0]
 8006d8a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006d8e:	d050      	beq.n	8006e32 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8006d90:	f7fb febe 	bl	8002b10 <HAL_GetTick>
 8006d94:	4602      	mov	r2, r0
 8006d96:	69bb      	ldr	r3, [r7, #24]
 8006d98:	1ad3      	subs	r3, r2, r3
 8006d9a:	69fa      	ldr	r2, [r7, #28]
 8006d9c:	429a      	cmp	r2, r3
 8006d9e:	d902      	bls.n	8006da6 <SPI_WaitFlagStateUntilTimeout+0x56>
 8006da0:	69fb      	ldr	r3, [r7, #28]
 8006da2:	2b00      	cmp	r3, #0
 8006da4:	d13d      	bne.n	8006e22 <SPI_WaitFlagStateUntilTimeout+0xd2>
 8006da6:	68fb      	ldr	r3, [r7, #12]
 8006da8:	681b      	ldr	r3, [r3, #0]
 8006daa:	685a      	ldr	r2, [r3, #4]
 8006dac:	68fb      	ldr	r3, [r7, #12]
 8006dae:	681b      	ldr	r3, [r3, #0]
 8006db0:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006db4:	605a      	str	r2, [r3, #4]
 8006db6:	68fb      	ldr	r3, [r7, #12]
 8006db8:	685b      	ldr	r3, [r3, #4]
 8006dba:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006dbe:	d111      	bne.n	8006de4 <SPI_WaitFlagStateUntilTimeout+0x94>
 8006dc0:	68fb      	ldr	r3, [r7, #12]
 8006dc2:	689b      	ldr	r3, [r3, #8]
 8006dc4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006dc8:	d004      	beq.n	8006dd4 <SPI_WaitFlagStateUntilTimeout+0x84>
 8006dca:	68fb      	ldr	r3, [r7, #12]
 8006dcc:	689b      	ldr	r3, [r3, #8]
 8006dce:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006dd2:	d107      	bne.n	8006de4 <SPI_WaitFlagStateUntilTimeout+0x94>
 8006dd4:	68fb      	ldr	r3, [r7, #12]
 8006dd6:	681b      	ldr	r3, [r3, #0]
 8006dd8:	681a      	ldr	r2, [r3, #0]
 8006dda:	68fb      	ldr	r3, [r7, #12]
 8006ddc:	681b      	ldr	r3, [r3, #0]
 8006dde:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006de2:	601a      	str	r2, [r3, #0]
 8006de4:	68fb      	ldr	r3, [r7, #12]
 8006de6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006de8:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006dec:	d10f      	bne.n	8006e0e <SPI_WaitFlagStateUntilTimeout+0xbe>
 8006dee:	68fb      	ldr	r3, [r7, #12]
 8006df0:	681b      	ldr	r3, [r3, #0]
 8006df2:	681a      	ldr	r2, [r3, #0]
 8006df4:	68fb      	ldr	r3, [r7, #12]
 8006df6:	681b      	ldr	r3, [r3, #0]
 8006df8:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006dfc:	601a      	str	r2, [r3, #0]
 8006dfe:	68fb      	ldr	r3, [r7, #12]
 8006e00:	681b      	ldr	r3, [r3, #0]
 8006e02:	681a      	ldr	r2, [r3, #0]
 8006e04:	68fb      	ldr	r3, [r7, #12]
 8006e06:	681b      	ldr	r3, [r3, #0]
 8006e08:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006e0c:	601a      	str	r2, [r3, #0]
 8006e0e:	68fb      	ldr	r3, [r7, #12]
 8006e10:	2201      	movs	r2, #1
 8006e12:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8006e16:	68fb      	ldr	r3, [r7, #12]
 8006e18:	2200      	movs	r2, #0
 8006e1a:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8006e1e:	2303      	movs	r3, #3
 8006e20:	e017      	b.n	8006e52 <SPI_WaitFlagStateUntilTimeout+0x102>
 8006e22:	697b      	ldr	r3, [r7, #20]
 8006e24:	2b00      	cmp	r3, #0
 8006e26:	d101      	bne.n	8006e2c <SPI_WaitFlagStateUntilTimeout+0xdc>
 8006e28:	2300      	movs	r3, #0
 8006e2a:	61fb      	str	r3, [r7, #28]
 8006e2c:	697b      	ldr	r3, [r7, #20]
 8006e2e:	3b01      	subs	r3, #1
 8006e30:	617b      	str	r3, [r7, #20]
 8006e32:	68fb      	ldr	r3, [r7, #12]
 8006e34:	681b      	ldr	r3, [r3, #0]
 8006e36:	689a      	ldr	r2, [r3, #8]
 8006e38:	68bb      	ldr	r3, [r7, #8]
 8006e3a:	4013      	ands	r3, r2
 8006e3c:	68ba      	ldr	r2, [r7, #8]
 8006e3e:	429a      	cmp	r2, r3
 8006e40:	bf0c      	ite	eq
 8006e42:	2301      	moveq	r3, #1
 8006e44:	2300      	movne	r3, #0
 8006e46:	b2db      	uxtb	r3, r3
 8006e48:	461a      	mov	r2, r3
 8006e4a:	79fb      	ldrb	r3, [r7, #7]
 8006e4c:	429a      	cmp	r2, r3
 8006e4e:	d19b      	bne.n	8006d88 <SPI_WaitFlagStateUntilTimeout+0x38>
 8006e50:	2300      	movs	r3, #0
 8006e52:	4618      	mov	r0, r3
 8006e54:	3720      	adds	r7, #32
 8006e56:	46bd      	mov	sp, r7
 8006e58:	bd80      	pop	{r7, pc}
 8006e5a:	bf00      	nop
 8006e5c:	2000000c 	.word	0x2000000c

08006e60 <SPI_WaitFifoStateUntilTimeout>:
 8006e60:	b580      	push	{r7, lr}
 8006e62:	b08a      	sub	sp, #40	@ 0x28
 8006e64:	af00      	add	r7, sp, #0
 8006e66:	60f8      	str	r0, [r7, #12]
 8006e68:	60b9      	str	r1, [r7, #8]
 8006e6a:	607a      	str	r2, [r7, #4]
 8006e6c:	603b      	str	r3, [r7, #0]
 8006e6e:	2300      	movs	r3, #0
 8006e70:	75fb      	strb	r3, [r7, #23]
 8006e72:	f7fb fe4d 	bl	8002b10 <HAL_GetTick>
 8006e76:	4602      	mov	r2, r0
 8006e78:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006e7a:	1a9b      	subs	r3, r3, r2
 8006e7c:	683a      	ldr	r2, [r7, #0]
 8006e7e:	4413      	add	r3, r2
 8006e80:	627b      	str	r3, [r7, #36]	@ 0x24
 8006e82:	f7fb fe45 	bl	8002b10 <HAL_GetTick>
 8006e86:	6238      	str	r0, [r7, #32]
 8006e88:	68fb      	ldr	r3, [r7, #12]
 8006e8a:	681b      	ldr	r3, [r3, #0]
 8006e8c:	330c      	adds	r3, #12
 8006e8e:	61fb      	str	r3, [r7, #28]
 8006e90:	4b3d      	ldr	r3, [pc, #244]	@ (8006f88 <SPI_WaitFifoStateUntilTimeout+0x128>)
 8006e92:	681a      	ldr	r2, [r3, #0]
 8006e94:	4613      	mov	r3, r2
 8006e96:	009b      	lsls	r3, r3, #2
 8006e98:	4413      	add	r3, r2
 8006e9a:	00da      	lsls	r2, r3, #3
 8006e9c:	1ad3      	subs	r3, r2, r3
 8006e9e:	0d1b      	lsrs	r3, r3, #20
 8006ea0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006ea2:	fb02 f303 	mul.w	r3, r2, r3
 8006ea6:	61bb      	str	r3, [r7, #24]
 8006ea8:	e060      	b.n	8006f6c <SPI_WaitFifoStateUntilTimeout+0x10c>
 8006eaa:	68bb      	ldr	r3, [r7, #8]
 8006eac:	f5b3 6fc0 	cmp.w	r3, #1536	@ 0x600
 8006eb0:	d107      	bne.n	8006ec2 <SPI_WaitFifoStateUntilTimeout+0x62>
 8006eb2:	687b      	ldr	r3, [r7, #4]
 8006eb4:	2b00      	cmp	r3, #0
 8006eb6:	d104      	bne.n	8006ec2 <SPI_WaitFifoStateUntilTimeout+0x62>
 8006eb8:	69fb      	ldr	r3, [r7, #28]
 8006eba:	781b      	ldrb	r3, [r3, #0]
 8006ebc:	b2db      	uxtb	r3, r3
 8006ebe:	75fb      	strb	r3, [r7, #23]
 8006ec0:	7dfb      	ldrb	r3, [r7, #23]
 8006ec2:	683b      	ldr	r3, [r7, #0]
 8006ec4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006ec8:	d050      	beq.n	8006f6c <SPI_WaitFifoStateUntilTimeout+0x10c>
 8006eca:	f7fb fe21 	bl	8002b10 <HAL_GetTick>
 8006ece:	4602      	mov	r2, r0
 8006ed0:	6a3b      	ldr	r3, [r7, #32]
 8006ed2:	1ad3      	subs	r3, r2, r3
 8006ed4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006ed6:	429a      	cmp	r2, r3
 8006ed8:	d902      	bls.n	8006ee0 <SPI_WaitFifoStateUntilTimeout+0x80>
 8006eda:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006edc:	2b00      	cmp	r3, #0
 8006ede:	d13d      	bne.n	8006f5c <SPI_WaitFifoStateUntilTimeout+0xfc>
 8006ee0:	68fb      	ldr	r3, [r7, #12]
 8006ee2:	681b      	ldr	r3, [r3, #0]
 8006ee4:	685a      	ldr	r2, [r3, #4]
 8006ee6:	68fb      	ldr	r3, [r7, #12]
 8006ee8:	681b      	ldr	r3, [r3, #0]
 8006eea:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006eee:	605a      	str	r2, [r3, #4]
 8006ef0:	68fb      	ldr	r3, [r7, #12]
 8006ef2:	685b      	ldr	r3, [r3, #4]
 8006ef4:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006ef8:	d111      	bne.n	8006f1e <SPI_WaitFifoStateUntilTimeout+0xbe>
 8006efa:	68fb      	ldr	r3, [r7, #12]
 8006efc:	689b      	ldr	r3, [r3, #8]
 8006efe:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006f02:	d004      	beq.n	8006f0e <SPI_WaitFifoStateUntilTimeout+0xae>
 8006f04:	68fb      	ldr	r3, [r7, #12]
 8006f06:	689b      	ldr	r3, [r3, #8]
 8006f08:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006f0c:	d107      	bne.n	8006f1e <SPI_WaitFifoStateUntilTimeout+0xbe>
 8006f0e:	68fb      	ldr	r3, [r7, #12]
 8006f10:	681b      	ldr	r3, [r3, #0]
 8006f12:	681a      	ldr	r2, [r3, #0]
 8006f14:	68fb      	ldr	r3, [r7, #12]
 8006f16:	681b      	ldr	r3, [r3, #0]
 8006f18:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006f1c:	601a      	str	r2, [r3, #0]
 8006f1e:	68fb      	ldr	r3, [r7, #12]
 8006f20:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006f22:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006f26:	d10f      	bne.n	8006f48 <SPI_WaitFifoStateUntilTimeout+0xe8>
 8006f28:	68fb      	ldr	r3, [r7, #12]
 8006f2a:	681b      	ldr	r3, [r3, #0]
 8006f2c:	681a      	ldr	r2, [r3, #0]
 8006f2e:	68fb      	ldr	r3, [r7, #12]
 8006f30:	681b      	ldr	r3, [r3, #0]
 8006f32:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006f36:	601a      	str	r2, [r3, #0]
 8006f38:	68fb      	ldr	r3, [r7, #12]
 8006f3a:	681b      	ldr	r3, [r3, #0]
 8006f3c:	681a      	ldr	r2, [r3, #0]
 8006f3e:	68fb      	ldr	r3, [r7, #12]
 8006f40:	681b      	ldr	r3, [r3, #0]
 8006f42:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006f46:	601a      	str	r2, [r3, #0]
 8006f48:	68fb      	ldr	r3, [r7, #12]
 8006f4a:	2201      	movs	r2, #1
 8006f4c:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8006f50:	68fb      	ldr	r3, [r7, #12]
 8006f52:	2200      	movs	r2, #0
 8006f54:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8006f58:	2303      	movs	r3, #3
 8006f5a:	e010      	b.n	8006f7e <SPI_WaitFifoStateUntilTimeout+0x11e>
 8006f5c:	69bb      	ldr	r3, [r7, #24]
 8006f5e:	2b00      	cmp	r3, #0
 8006f60:	d101      	bne.n	8006f66 <SPI_WaitFifoStateUntilTimeout+0x106>
 8006f62:	2300      	movs	r3, #0
 8006f64:	627b      	str	r3, [r7, #36]	@ 0x24
 8006f66:	69bb      	ldr	r3, [r7, #24]
 8006f68:	3b01      	subs	r3, #1
 8006f6a:	61bb      	str	r3, [r7, #24]
 8006f6c:	68fb      	ldr	r3, [r7, #12]
 8006f6e:	681b      	ldr	r3, [r3, #0]
 8006f70:	689a      	ldr	r2, [r3, #8]
 8006f72:	68bb      	ldr	r3, [r7, #8]
 8006f74:	4013      	ands	r3, r2
 8006f76:	687a      	ldr	r2, [r7, #4]
 8006f78:	429a      	cmp	r2, r3
 8006f7a:	d196      	bne.n	8006eaa <SPI_WaitFifoStateUntilTimeout+0x4a>
 8006f7c:	2300      	movs	r3, #0
 8006f7e:	4618      	mov	r0, r3
 8006f80:	3728      	adds	r7, #40	@ 0x28
 8006f82:	46bd      	mov	sp, r7
 8006f84:	bd80      	pop	{r7, pc}
 8006f86:	bf00      	nop
 8006f88:	2000000c 	.word	0x2000000c

08006f8c <SPI_EndRxTxTransaction>:
 8006f8c:	b580      	push	{r7, lr}
 8006f8e:	b086      	sub	sp, #24
 8006f90:	af02      	add	r7, sp, #8
 8006f92:	60f8      	str	r0, [r7, #12]
 8006f94:	60b9      	str	r1, [r7, #8]
 8006f96:	607a      	str	r2, [r7, #4]
 8006f98:	687b      	ldr	r3, [r7, #4]
 8006f9a:	9300      	str	r3, [sp, #0]
 8006f9c:	68bb      	ldr	r3, [r7, #8]
 8006f9e:	2200      	movs	r2, #0
 8006fa0:	f44f 51c0 	mov.w	r1, #6144	@ 0x1800
 8006fa4:	68f8      	ldr	r0, [r7, #12]
 8006fa6:	f7ff ff5b 	bl	8006e60 <SPI_WaitFifoStateUntilTimeout>
 8006faa:	4603      	mov	r3, r0
 8006fac:	2b00      	cmp	r3, #0
 8006fae:	d007      	beq.n	8006fc0 <SPI_EndRxTxTransaction+0x34>
 8006fb0:	68fb      	ldr	r3, [r7, #12]
 8006fb2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006fb4:	f043 0220 	orr.w	r2, r3, #32
 8006fb8:	68fb      	ldr	r3, [r7, #12]
 8006fba:	661a      	str	r2, [r3, #96]	@ 0x60
 8006fbc:	2303      	movs	r3, #3
 8006fbe:	e027      	b.n	8007010 <SPI_EndRxTxTransaction+0x84>
 8006fc0:	687b      	ldr	r3, [r7, #4]
 8006fc2:	9300      	str	r3, [sp, #0]
 8006fc4:	68bb      	ldr	r3, [r7, #8]
 8006fc6:	2200      	movs	r2, #0
 8006fc8:	2180      	movs	r1, #128	@ 0x80
 8006fca:	68f8      	ldr	r0, [r7, #12]
 8006fcc:	f7ff fec0 	bl	8006d50 <SPI_WaitFlagStateUntilTimeout>
 8006fd0:	4603      	mov	r3, r0
 8006fd2:	2b00      	cmp	r3, #0
 8006fd4:	d007      	beq.n	8006fe6 <SPI_EndRxTxTransaction+0x5a>
 8006fd6:	68fb      	ldr	r3, [r7, #12]
 8006fd8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006fda:	f043 0220 	orr.w	r2, r3, #32
 8006fde:	68fb      	ldr	r3, [r7, #12]
 8006fe0:	661a      	str	r2, [r3, #96]	@ 0x60
 8006fe2:	2303      	movs	r3, #3
 8006fe4:	e014      	b.n	8007010 <SPI_EndRxTxTransaction+0x84>
 8006fe6:	687b      	ldr	r3, [r7, #4]
 8006fe8:	9300      	str	r3, [sp, #0]
 8006fea:	68bb      	ldr	r3, [r7, #8]
 8006fec:	2200      	movs	r2, #0
 8006fee:	f44f 61c0 	mov.w	r1, #1536	@ 0x600
 8006ff2:	68f8      	ldr	r0, [r7, #12]
 8006ff4:	f7ff ff34 	bl	8006e60 <SPI_WaitFifoStateUntilTimeout>
 8006ff8:	4603      	mov	r3, r0
 8006ffa:	2b00      	cmp	r3, #0
 8006ffc:	d007      	beq.n	800700e <SPI_EndRxTxTransaction+0x82>
 8006ffe:	68fb      	ldr	r3, [r7, #12]
 8007000:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007002:	f043 0220 	orr.w	r2, r3, #32
 8007006:	68fb      	ldr	r3, [r7, #12]
 8007008:	661a      	str	r2, [r3, #96]	@ 0x60
 800700a:	2303      	movs	r3, #3
 800700c:	e000      	b.n	8007010 <SPI_EndRxTxTransaction+0x84>
 800700e:	2300      	movs	r3, #0
 8007010:	4618      	mov	r0, r3
 8007012:	3710      	adds	r7, #16
 8007014:	46bd      	mov	sp, r7
 8007016:	bd80      	pop	{r7, pc}

08007018 <HAL_TIM_Base_Init>:
 8007018:	b580      	push	{r7, lr}
 800701a:	b082      	sub	sp, #8
 800701c:	af00      	add	r7, sp, #0
 800701e:	6078      	str	r0, [r7, #4]
 8007020:	687b      	ldr	r3, [r7, #4]
 8007022:	2b00      	cmp	r3, #0
 8007024:	d101      	bne.n	800702a <HAL_TIM_Base_Init+0x12>
 8007026:	2301      	movs	r3, #1
 8007028:	e049      	b.n	80070be <HAL_TIM_Base_Init+0xa6>
 800702a:	687b      	ldr	r3, [r7, #4]
 800702c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007030:	b2db      	uxtb	r3, r3
 8007032:	2b00      	cmp	r3, #0
 8007034:	d106      	bne.n	8007044 <HAL_TIM_Base_Init+0x2c>
 8007036:	687b      	ldr	r3, [r7, #4]
 8007038:	2200      	movs	r2, #0
 800703a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800703e:	6878      	ldr	r0, [r7, #4]
 8007040:	f7fb f966 	bl	8002310 <HAL_TIM_Base_MspInit>
 8007044:	687b      	ldr	r3, [r7, #4]
 8007046:	2202      	movs	r2, #2
 8007048:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800704c:	687b      	ldr	r3, [r7, #4]
 800704e:	681a      	ldr	r2, [r3, #0]
 8007050:	687b      	ldr	r3, [r7, #4]
 8007052:	3304      	adds	r3, #4
 8007054:	4619      	mov	r1, r3
 8007056:	4610      	mov	r0, r2
 8007058:	f000 fc5a 	bl	8007910 <TIM_Base_SetConfig>
 800705c:	687b      	ldr	r3, [r7, #4]
 800705e:	2201      	movs	r2, #1
 8007060:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8007064:	687b      	ldr	r3, [r7, #4]
 8007066:	2201      	movs	r2, #1
 8007068:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800706c:	687b      	ldr	r3, [r7, #4]
 800706e:	2201      	movs	r2, #1
 8007070:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007074:	687b      	ldr	r3, [r7, #4]
 8007076:	2201      	movs	r2, #1
 8007078:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800707c:	687b      	ldr	r3, [r7, #4]
 800707e:	2201      	movs	r2, #1
 8007080:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007084:	687b      	ldr	r3, [r7, #4]
 8007086:	2201      	movs	r2, #1
 8007088:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800708c:	687b      	ldr	r3, [r7, #4]
 800708e:	2201      	movs	r2, #1
 8007090:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8007094:	687b      	ldr	r3, [r7, #4]
 8007096:	2201      	movs	r2, #1
 8007098:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800709c:	687b      	ldr	r3, [r7, #4]
 800709e:	2201      	movs	r2, #1
 80070a0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80070a4:	687b      	ldr	r3, [r7, #4]
 80070a6:	2201      	movs	r2, #1
 80070a8:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80070ac:	687b      	ldr	r3, [r7, #4]
 80070ae:	2201      	movs	r2, #1
 80070b0:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 80070b4:	687b      	ldr	r3, [r7, #4]
 80070b6:	2201      	movs	r2, #1
 80070b8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80070bc:	2300      	movs	r3, #0
 80070be:	4618      	mov	r0, r3
 80070c0:	3708      	adds	r7, #8
 80070c2:	46bd      	mov	sp, r7
 80070c4:	bd80      	pop	{r7, pc}

080070c6 <HAL_TIM_PWM_Init>:
 80070c6:	b580      	push	{r7, lr}
 80070c8:	b082      	sub	sp, #8
 80070ca:	af00      	add	r7, sp, #0
 80070cc:	6078      	str	r0, [r7, #4]
 80070ce:	687b      	ldr	r3, [r7, #4]
 80070d0:	2b00      	cmp	r3, #0
 80070d2:	d101      	bne.n	80070d8 <HAL_TIM_PWM_Init+0x12>
 80070d4:	2301      	movs	r3, #1
 80070d6:	e049      	b.n	800716c <HAL_TIM_PWM_Init+0xa6>
 80070d8:	687b      	ldr	r3, [r7, #4]
 80070da:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80070de:	b2db      	uxtb	r3, r3
 80070e0:	2b00      	cmp	r3, #0
 80070e2:	d106      	bne.n	80070f2 <HAL_TIM_PWM_Init+0x2c>
 80070e4:	687b      	ldr	r3, [r7, #4]
 80070e6:	2200      	movs	r2, #0
 80070e8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80070ec:	6878      	ldr	r0, [r7, #4]
 80070ee:	f7fb f8d9 	bl	80022a4 <HAL_TIM_PWM_MspInit>
 80070f2:	687b      	ldr	r3, [r7, #4]
 80070f4:	2202      	movs	r2, #2
 80070f6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80070fa:	687b      	ldr	r3, [r7, #4]
 80070fc:	681a      	ldr	r2, [r3, #0]
 80070fe:	687b      	ldr	r3, [r7, #4]
 8007100:	3304      	adds	r3, #4
 8007102:	4619      	mov	r1, r3
 8007104:	4610      	mov	r0, r2
 8007106:	f000 fc03 	bl	8007910 <TIM_Base_SetConfig>
 800710a:	687b      	ldr	r3, [r7, #4]
 800710c:	2201      	movs	r2, #1
 800710e:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8007112:	687b      	ldr	r3, [r7, #4]
 8007114:	2201      	movs	r2, #1
 8007116:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800711a:	687b      	ldr	r3, [r7, #4]
 800711c:	2201      	movs	r2, #1
 800711e:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007122:	687b      	ldr	r3, [r7, #4]
 8007124:	2201      	movs	r2, #1
 8007126:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800712a:	687b      	ldr	r3, [r7, #4]
 800712c:	2201      	movs	r2, #1
 800712e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007132:	687b      	ldr	r3, [r7, #4]
 8007134:	2201      	movs	r2, #1
 8007136:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800713a:	687b      	ldr	r3, [r7, #4]
 800713c:	2201      	movs	r2, #1
 800713e:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8007142:	687b      	ldr	r3, [r7, #4]
 8007144:	2201      	movs	r2, #1
 8007146:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800714a:	687b      	ldr	r3, [r7, #4]
 800714c:	2201      	movs	r2, #1
 800714e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007152:	687b      	ldr	r3, [r7, #4]
 8007154:	2201      	movs	r2, #1
 8007156:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800715a:	687b      	ldr	r3, [r7, #4]
 800715c:	2201      	movs	r2, #1
 800715e:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8007162:	687b      	ldr	r3, [r7, #4]
 8007164:	2201      	movs	r2, #1
 8007166:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800716a:	2300      	movs	r3, #0
 800716c:	4618      	mov	r0, r3
 800716e:	3708      	adds	r7, #8
 8007170:	46bd      	mov	sp, r7
 8007172:	bd80      	pop	{r7, pc}

08007174 <HAL_TIM_PWM_Start>:
 8007174:	b580      	push	{r7, lr}
 8007176:	b084      	sub	sp, #16
 8007178:	af00      	add	r7, sp, #0
 800717a:	6078      	str	r0, [r7, #4]
 800717c:	6039      	str	r1, [r7, #0]
 800717e:	683b      	ldr	r3, [r7, #0]
 8007180:	2b00      	cmp	r3, #0
 8007182:	d109      	bne.n	8007198 <HAL_TIM_PWM_Start+0x24>
 8007184:	687b      	ldr	r3, [r7, #4]
 8007186:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800718a:	b2db      	uxtb	r3, r3
 800718c:	2b01      	cmp	r3, #1
 800718e:	bf14      	ite	ne
 8007190:	2301      	movne	r3, #1
 8007192:	2300      	moveq	r3, #0
 8007194:	b2db      	uxtb	r3, r3
 8007196:	e03c      	b.n	8007212 <HAL_TIM_PWM_Start+0x9e>
 8007198:	683b      	ldr	r3, [r7, #0]
 800719a:	2b04      	cmp	r3, #4
 800719c:	d109      	bne.n	80071b2 <HAL_TIM_PWM_Start+0x3e>
 800719e:	687b      	ldr	r3, [r7, #4]
 80071a0:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80071a4:	b2db      	uxtb	r3, r3
 80071a6:	2b01      	cmp	r3, #1
 80071a8:	bf14      	ite	ne
 80071aa:	2301      	movne	r3, #1
 80071ac:	2300      	moveq	r3, #0
 80071ae:	b2db      	uxtb	r3, r3
 80071b0:	e02f      	b.n	8007212 <HAL_TIM_PWM_Start+0x9e>
 80071b2:	683b      	ldr	r3, [r7, #0]
 80071b4:	2b08      	cmp	r3, #8
 80071b6:	d109      	bne.n	80071cc <HAL_TIM_PWM_Start+0x58>
 80071b8:	687b      	ldr	r3, [r7, #4]
 80071ba:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80071be:	b2db      	uxtb	r3, r3
 80071c0:	2b01      	cmp	r3, #1
 80071c2:	bf14      	ite	ne
 80071c4:	2301      	movne	r3, #1
 80071c6:	2300      	moveq	r3, #0
 80071c8:	b2db      	uxtb	r3, r3
 80071ca:	e022      	b.n	8007212 <HAL_TIM_PWM_Start+0x9e>
 80071cc:	683b      	ldr	r3, [r7, #0]
 80071ce:	2b0c      	cmp	r3, #12
 80071d0:	d109      	bne.n	80071e6 <HAL_TIM_PWM_Start+0x72>
 80071d2:	687b      	ldr	r3, [r7, #4]
 80071d4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80071d8:	b2db      	uxtb	r3, r3
 80071da:	2b01      	cmp	r3, #1
 80071dc:	bf14      	ite	ne
 80071de:	2301      	movne	r3, #1
 80071e0:	2300      	moveq	r3, #0
 80071e2:	b2db      	uxtb	r3, r3
 80071e4:	e015      	b.n	8007212 <HAL_TIM_PWM_Start+0x9e>
 80071e6:	683b      	ldr	r3, [r7, #0]
 80071e8:	2b10      	cmp	r3, #16
 80071ea:	d109      	bne.n	8007200 <HAL_TIM_PWM_Start+0x8c>
 80071ec:	687b      	ldr	r3, [r7, #4]
 80071ee:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80071f2:	b2db      	uxtb	r3, r3
 80071f4:	2b01      	cmp	r3, #1
 80071f6:	bf14      	ite	ne
 80071f8:	2301      	movne	r3, #1
 80071fa:	2300      	moveq	r3, #0
 80071fc:	b2db      	uxtb	r3, r3
 80071fe:	e008      	b.n	8007212 <HAL_TIM_PWM_Start+0x9e>
 8007200:	687b      	ldr	r3, [r7, #4]
 8007202:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8007206:	b2db      	uxtb	r3, r3
 8007208:	2b01      	cmp	r3, #1
 800720a:	bf14      	ite	ne
 800720c:	2301      	movne	r3, #1
 800720e:	2300      	moveq	r3, #0
 8007210:	b2db      	uxtb	r3, r3
 8007212:	2b00      	cmp	r3, #0
 8007214:	d001      	beq.n	800721a <HAL_TIM_PWM_Start+0xa6>
 8007216:	2301      	movs	r3, #1
 8007218:	e0a6      	b.n	8007368 <HAL_TIM_PWM_Start+0x1f4>
 800721a:	683b      	ldr	r3, [r7, #0]
 800721c:	2b00      	cmp	r3, #0
 800721e:	d104      	bne.n	800722a <HAL_TIM_PWM_Start+0xb6>
 8007220:	687b      	ldr	r3, [r7, #4]
 8007222:	2202      	movs	r2, #2
 8007224:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007228:	e023      	b.n	8007272 <HAL_TIM_PWM_Start+0xfe>
 800722a:	683b      	ldr	r3, [r7, #0]
 800722c:	2b04      	cmp	r3, #4
 800722e:	d104      	bne.n	800723a <HAL_TIM_PWM_Start+0xc6>
 8007230:	687b      	ldr	r3, [r7, #4]
 8007232:	2202      	movs	r2, #2
 8007234:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007238:	e01b      	b.n	8007272 <HAL_TIM_PWM_Start+0xfe>
 800723a:	683b      	ldr	r3, [r7, #0]
 800723c:	2b08      	cmp	r3, #8
 800723e:	d104      	bne.n	800724a <HAL_TIM_PWM_Start+0xd6>
 8007240:	687b      	ldr	r3, [r7, #4]
 8007242:	2202      	movs	r2, #2
 8007244:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007248:	e013      	b.n	8007272 <HAL_TIM_PWM_Start+0xfe>
 800724a:	683b      	ldr	r3, [r7, #0]
 800724c:	2b0c      	cmp	r3, #12
 800724e:	d104      	bne.n	800725a <HAL_TIM_PWM_Start+0xe6>
 8007250:	687b      	ldr	r3, [r7, #4]
 8007252:	2202      	movs	r2, #2
 8007254:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007258:	e00b      	b.n	8007272 <HAL_TIM_PWM_Start+0xfe>
 800725a:	683b      	ldr	r3, [r7, #0]
 800725c:	2b10      	cmp	r3, #16
 800725e:	d104      	bne.n	800726a <HAL_TIM_PWM_Start+0xf6>
 8007260:	687b      	ldr	r3, [r7, #4]
 8007262:	2202      	movs	r2, #2
 8007264:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007268:	e003      	b.n	8007272 <HAL_TIM_PWM_Start+0xfe>
 800726a:	687b      	ldr	r3, [r7, #4]
 800726c:	2202      	movs	r2, #2
 800726e:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8007272:	687b      	ldr	r3, [r7, #4]
 8007274:	681b      	ldr	r3, [r3, #0]
 8007276:	2201      	movs	r2, #1
 8007278:	6839      	ldr	r1, [r7, #0]
 800727a:	4618      	mov	r0, r3
 800727c:	f000 ff1a 	bl	80080b4 <TIM_CCxChannelCmd>
 8007280:	687b      	ldr	r3, [r7, #4]
 8007282:	681b      	ldr	r3, [r3, #0]
 8007284:	4a3a      	ldr	r2, [pc, #232]	@ (8007370 <HAL_TIM_PWM_Start+0x1fc>)
 8007286:	4293      	cmp	r3, r2
 8007288:	d018      	beq.n	80072bc <HAL_TIM_PWM_Start+0x148>
 800728a:	687b      	ldr	r3, [r7, #4]
 800728c:	681b      	ldr	r3, [r3, #0]
 800728e:	4a39      	ldr	r2, [pc, #228]	@ (8007374 <HAL_TIM_PWM_Start+0x200>)
 8007290:	4293      	cmp	r3, r2
 8007292:	d013      	beq.n	80072bc <HAL_TIM_PWM_Start+0x148>
 8007294:	687b      	ldr	r3, [r7, #4]
 8007296:	681b      	ldr	r3, [r3, #0]
 8007298:	4a37      	ldr	r2, [pc, #220]	@ (8007378 <HAL_TIM_PWM_Start+0x204>)
 800729a:	4293      	cmp	r3, r2
 800729c:	d00e      	beq.n	80072bc <HAL_TIM_PWM_Start+0x148>
 800729e:	687b      	ldr	r3, [r7, #4]
 80072a0:	681b      	ldr	r3, [r3, #0]
 80072a2:	4a36      	ldr	r2, [pc, #216]	@ (800737c <HAL_TIM_PWM_Start+0x208>)
 80072a4:	4293      	cmp	r3, r2
 80072a6:	d009      	beq.n	80072bc <HAL_TIM_PWM_Start+0x148>
 80072a8:	687b      	ldr	r3, [r7, #4]
 80072aa:	681b      	ldr	r3, [r3, #0]
 80072ac:	4a34      	ldr	r2, [pc, #208]	@ (8007380 <HAL_TIM_PWM_Start+0x20c>)
 80072ae:	4293      	cmp	r3, r2
 80072b0:	d004      	beq.n	80072bc <HAL_TIM_PWM_Start+0x148>
 80072b2:	687b      	ldr	r3, [r7, #4]
 80072b4:	681b      	ldr	r3, [r3, #0]
 80072b6:	4a33      	ldr	r2, [pc, #204]	@ (8007384 <HAL_TIM_PWM_Start+0x210>)
 80072b8:	4293      	cmp	r3, r2
 80072ba:	d101      	bne.n	80072c0 <HAL_TIM_PWM_Start+0x14c>
 80072bc:	2301      	movs	r3, #1
 80072be:	e000      	b.n	80072c2 <HAL_TIM_PWM_Start+0x14e>
 80072c0:	2300      	movs	r3, #0
 80072c2:	2b00      	cmp	r3, #0
 80072c4:	d007      	beq.n	80072d6 <HAL_TIM_PWM_Start+0x162>
 80072c6:	687b      	ldr	r3, [r7, #4]
 80072c8:	681b      	ldr	r3, [r3, #0]
 80072ca:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80072cc:	687b      	ldr	r3, [r7, #4]
 80072ce:	681b      	ldr	r3, [r3, #0]
 80072d0:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80072d4:	645a      	str	r2, [r3, #68]	@ 0x44
 80072d6:	687b      	ldr	r3, [r7, #4]
 80072d8:	681b      	ldr	r3, [r3, #0]
 80072da:	4a25      	ldr	r2, [pc, #148]	@ (8007370 <HAL_TIM_PWM_Start+0x1fc>)
 80072dc:	4293      	cmp	r3, r2
 80072de:	d022      	beq.n	8007326 <HAL_TIM_PWM_Start+0x1b2>
 80072e0:	687b      	ldr	r3, [r7, #4]
 80072e2:	681b      	ldr	r3, [r3, #0]
 80072e4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80072e8:	d01d      	beq.n	8007326 <HAL_TIM_PWM_Start+0x1b2>
 80072ea:	687b      	ldr	r3, [r7, #4]
 80072ec:	681b      	ldr	r3, [r3, #0]
 80072ee:	4a26      	ldr	r2, [pc, #152]	@ (8007388 <HAL_TIM_PWM_Start+0x214>)
 80072f0:	4293      	cmp	r3, r2
 80072f2:	d018      	beq.n	8007326 <HAL_TIM_PWM_Start+0x1b2>
 80072f4:	687b      	ldr	r3, [r7, #4]
 80072f6:	681b      	ldr	r3, [r3, #0]
 80072f8:	4a24      	ldr	r2, [pc, #144]	@ (800738c <HAL_TIM_PWM_Start+0x218>)
 80072fa:	4293      	cmp	r3, r2
 80072fc:	d013      	beq.n	8007326 <HAL_TIM_PWM_Start+0x1b2>
 80072fe:	687b      	ldr	r3, [r7, #4]
 8007300:	681b      	ldr	r3, [r3, #0]
 8007302:	4a23      	ldr	r2, [pc, #140]	@ (8007390 <HAL_TIM_PWM_Start+0x21c>)
 8007304:	4293      	cmp	r3, r2
 8007306:	d00e      	beq.n	8007326 <HAL_TIM_PWM_Start+0x1b2>
 8007308:	687b      	ldr	r3, [r7, #4]
 800730a:	681b      	ldr	r3, [r3, #0]
 800730c:	4a19      	ldr	r2, [pc, #100]	@ (8007374 <HAL_TIM_PWM_Start+0x200>)
 800730e:	4293      	cmp	r3, r2
 8007310:	d009      	beq.n	8007326 <HAL_TIM_PWM_Start+0x1b2>
 8007312:	687b      	ldr	r3, [r7, #4]
 8007314:	681b      	ldr	r3, [r3, #0]
 8007316:	4a18      	ldr	r2, [pc, #96]	@ (8007378 <HAL_TIM_PWM_Start+0x204>)
 8007318:	4293      	cmp	r3, r2
 800731a:	d004      	beq.n	8007326 <HAL_TIM_PWM_Start+0x1b2>
 800731c:	687b      	ldr	r3, [r7, #4]
 800731e:	681b      	ldr	r3, [r3, #0]
 8007320:	4a18      	ldr	r2, [pc, #96]	@ (8007384 <HAL_TIM_PWM_Start+0x210>)
 8007322:	4293      	cmp	r3, r2
 8007324:	d115      	bne.n	8007352 <HAL_TIM_PWM_Start+0x1de>
 8007326:	687b      	ldr	r3, [r7, #4]
 8007328:	681b      	ldr	r3, [r3, #0]
 800732a:	689a      	ldr	r2, [r3, #8]
 800732c:	4b19      	ldr	r3, [pc, #100]	@ (8007394 <HAL_TIM_PWM_Start+0x220>)
 800732e:	4013      	ands	r3, r2
 8007330:	60fb      	str	r3, [r7, #12]
 8007332:	68fb      	ldr	r3, [r7, #12]
 8007334:	2b06      	cmp	r3, #6
 8007336:	d015      	beq.n	8007364 <HAL_TIM_PWM_Start+0x1f0>
 8007338:	68fb      	ldr	r3, [r7, #12]
 800733a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800733e:	d011      	beq.n	8007364 <HAL_TIM_PWM_Start+0x1f0>
 8007340:	687b      	ldr	r3, [r7, #4]
 8007342:	681b      	ldr	r3, [r3, #0]
 8007344:	681a      	ldr	r2, [r3, #0]
 8007346:	687b      	ldr	r3, [r7, #4]
 8007348:	681b      	ldr	r3, [r3, #0]
 800734a:	f042 0201 	orr.w	r2, r2, #1
 800734e:	601a      	str	r2, [r3, #0]
 8007350:	e008      	b.n	8007364 <HAL_TIM_PWM_Start+0x1f0>
 8007352:	687b      	ldr	r3, [r7, #4]
 8007354:	681b      	ldr	r3, [r3, #0]
 8007356:	681a      	ldr	r2, [r3, #0]
 8007358:	687b      	ldr	r3, [r7, #4]
 800735a:	681b      	ldr	r3, [r3, #0]
 800735c:	f042 0201 	orr.w	r2, r2, #1
 8007360:	601a      	str	r2, [r3, #0]
 8007362:	e000      	b.n	8007366 <HAL_TIM_PWM_Start+0x1f2>
 8007364:	bf00      	nop
 8007366:	2300      	movs	r3, #0
 8007368:	4618      	mov	r0, r3
 800736a:	3710      	adds	r7, #16
 800736c:	46bd      	mov	sp, r7
 800736e:	bd80      	pop	{r7, pc}
 8007370:	40012c00 	.word	0x40012c00
 8007374:	40013400 	.word	0x40013400
 8007378:	40014000 	.word	0x40014000
 800737c:	40014400 	.word	0x40014400
 8007380:	40014800 	.word	0x40014800
 8007384:	40015000 	.word	0x40015000
 8007388:	40000400 	.word	0x40000400
 800738c:	40000800 	.word	0x40000800
 8007390:	40000c00 	.word	0x40000c00
 8007394:	00010007 	.word	0x00010007

08007398 <HAL_TIM_IRQHandler>:
 8007398:	b580      	push	{r7, lr}
 800739a:	b082      	sub	sp, #8
 800739c:	af00      	add	r7, sp, #0
 800739e:	6078      	str	r0, [r7, #4]
 80073a0:	687b      	ldr	r3, [r7, #4]
 80073a2:	681b      	ldr	r3, [r3, #0]
 80073a4:	691b      	ldr	r3, [r3, #16]
 80073a6:	f003 0302 	and.w	r3, r3, #2
 80073aa:	2b02      	cmp	r3, #2
 80073ac:	d122      	bne.n	80073f4 <HAL_TIM_IRQHandler+0x5c>
 80073ae:	687b      	ldr	r3, [r7, #4]
 80073b0:	681b      	ldr	r3, [r3, #0]
 80073b2:	68db      	ldr	r3, [r3, #12]
 80073b4:	f003 0302 	and.w	r3, r3, #2
 80073b8:	2b02      	cmp	r3, #2
 80073ba:	d11b      	bne.n	80073f4 <HAL_TIM_IRQHandler+0x5c>
 80073bc:	687b      	ldr	r3, [r7, #4]
 80073be:	681b      	ldr	r3, [r3, #0]
 80073c0:	f06f 0202 	mvn.w	r2, #2
 80073c4:	611a      	str	r2, [r3, #16]
 80073c6:	687b      	ldr	r3, [r7, #4]
 80073c8:	2201      	movs	r2, #1
 80073ca:	771a      	strb	r2, [r3, #28]
 80073cc:	687b      	ldr	r3, [r7, #4]
 80073ce:	681b      	ldr	r3, [r3, #0]
 80073d0:	699b      	ldr	r3, [r3, #24]
 80073d2:	f003 0303 	and.w	r3, r3, #3
 80073d6:	2b00      	cmp	r3, #0
 80073d8:	d003      	beq.n	80073e2 <HAL_TIM_IRQHandler+0x4a>
 80073da:	6878      	ldr	r0, [r7, #4]
 80073dc:	f000 fa7a 	bl	80078d4 <HAL_TIM_IC_CaptureCallback>
 80073e0:	e005      	b.n	80073ee <HAL_TIM_IRQHandler+0x56>
 80073e2:	6878      	ldr	r0, [r7, #4]
 80073e4:	f000 fa6c 	bl	80078c0 <HAL_TIM_OC_DelayElapsedCallback>
 80073e8:	6878      	ldr	r0, [r7, #4]
 80073ea:	f000 fa7d 	bl	80078e8 <HAL_TIM_PWM_PulseFinishedCallback>
 80073ee:	687b      	ldr	r3, [r7, #4]
 80073f0:	2200      	movs	r2, #0
 80073f2:	771a      	strb	r2, [r3, #28]
 80073f4:	687b      	ldr	r3, [r7, #4]
 80073f6:	681b      	ldr	r3, [r3, #0]
 80073f8:	691b      	ldr	r3, [r3, #16]
 80073fa:	f003 0304 	and.w	r3, r3, #4
 80073fe:	2b04      	cmp	r3, #4
 8007400:	d122      	bne.n	8007448 <HAL_TIM_IRQHandler+0xb0>
 8007402:	687b      	ldr	r3, [r7, #4]
 8007404:	681b      	ldr	r3, [r3, #0]
 8007406:	68db      	ldr	r3, [r3, #12]
 8007408:	f003 0304 	and.w	r3, r3, #4
 800740c:	2b04      	cmp	r3, #4
 800740e:	d11b      	bne.n	8007448 <HAL_TIM_IRQHandler+0xb0>
 8007410:	687b      	ldr	r3, [r7, #4]
 8007412:	681b      	ldr	r3, [r3, #0]
 8007414:	f06f 0204 	mvn.w	r2, #4
 8007418:	611a      	str	r2, [r3, #16]
 800741a:	687b      	ldr	r3, [r7, #4]
 800741c:	2202      	movs	r2, #2
 800741e:	771a      	strb	r2, [r3, #28]
 8007420:	687b      	ldr	r3, [r7, #4]
 8007422:	681b      	ldr	r3, [r3, #0]
 8007424:	699b      	ldr	r3, [r3, #24]
 8007426:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800742a:	2b00      	cmp	r3, #0
 800742c:	d003      	beq.n	8007436 <HAL_TIM_IRQHandler+0x9e>
 800742e:	6878      	ldr	r0, [r7, #4]
 8007430:	f000 fa50 	bl	80078d4 <HAL_TIM_IC_CaptureCallback>
 8007434:	e005      	b.n	8007442 <HAL_TIM_IRQHandler+0xaa>
 8007436:	6878      	ldr	r0, [r7, #4]
 8007438:	f000 fa42 	bl	80078c0 <HAL_TIM_OC_DelayElapsedCallback>
 800743c:	6878      	ldr	r0, [r7, #4]
 800743e:	f000 fa53 	bl	80078e8 <HAL_TIM_PWM_PulseFinishedCallback>
 8007442:	687b      	ldr	r3, [r7, #4]
 8007444:	2200      	movs	r2, #0
 8007446:	771a      	strb	r2, [r3, #28]
 8007448:	687b      	ldr	r3, [r7, #4]
 800744a:	681b      	ldr	r3, [r3, #0]
 800744c:	691b      	ldr	r3, [r3, #16]
 800744e:	f003 0308 	and.w	r3, r3, #8
 8007452:	2b08      	cmp	r3, #8
 8007454:	d122      	bne.n	800749c <HAL_TIM_IRQHandler+0x104>
 8007456:	687b      	ldr	r3, [r7, #4]
 8007458:	681b      	ldr	r3, [r3, #0]
 800745a:	68db      	ldr	r3, [r3, #12]
 800745c:	f003 0308 	and.w	r3, r3, #8
 8007460:	2b08      	cmp	r3, #8
 8007462:	d11b      	bne.n	800749c <HAL_TIM_IRQHandler+0x104>
 8007464:	687b      	ldr	r3, [r7, #4]
 8007466:	681b      	ldr	r3, [r3, #0]
 8007468:	f06f 0208 	mvn.w	r2, #8
 800746c:	611a      	str	r2, [r3, #16]
 800746e:	687b      	ldr	r3, [r7, #4]
 8007470:	2204      	movs	r2, #4
 8007472:	771a      	strb	r2, [r3, #28]
 8007474:	687b      	ldr	r3, [r7, #4]
 8007476:	681b      	ldr	r3, [r3, #0]
 8007478:	69db      	ldr	r3, [r3, #28]
 800747a:	f003 0303 	and.w	r3, r3, #3
 800747e:	2b00      	cmp	r3, #0
 8007480:	d003      	beq.n	800748a <HAL_TIM_IRQHandler+0xf2>
 8007482:	6878      	ldr	r0, [r7, #4]
 8007484:	f000 fa26 	bl	80078d4 <HAL_TIM_IC_CaptureCallback>
 8007488:	e005      	b.n	8007496 <HAL_TIM_IRQHandler+0xfe>
 800748a:	6878      	ldr	r0, [r7, #4]
 800748c:	f000 fa18 	bl	80078c0 <HAL_TIM_OC_DelayElapsedCallback>
 8007490:	6878      	ldr	r0, [r7, #4]
 8007492:	f000 fa29 	bl	80078e8 <HAL_TIM_PWM_PulseFinishedCallback>
 8007496:	687b      	ldr	r3, [r7, #4]
 8007498:	2200      	movs	r2, #0
 800749a:	771a      	strb	r2, [r3, #28]
 800749c:	687b      	ldr	r3, [r7, #4]
 800749e:	681b      	ldr	r3, [r3, #0]
 80074a0:	691b      	ldr	r3, [r3, #16]
 80074a2:	f003 0310 	and.w	r3, r3, #16
 80074a6:	2b10      	cmp	r3, #16
 80074a8:	d122      	bne.n	80074f0 <HAL_TIM_IRQHandler+0x158>
 80074aa:	687b      	ldr	r3, [r7, #4]
 80074ac:	681b      	ldr	r3, [r3, #0]
 80074ae:	68db      	ldr	r3, [r3, #12]
 80074b0:	f003 0310 	and.w	r3, r3, #16
 80074b4:	2b10      	cmp	r3, #16
 80074b6:	d11b      	bne.n	80074f0 <HAL_TIM_IRQHandler+0x158>
 80074b8:	687b      	ldr	r3, [r7, #4]
 80074ba:	681b      	ldr	r3, [r3, #0]
 80074bc:	f06f 0210 	mvn.w	r2, #16
 80074c0:	611a      	str	r2, [r3, #16]
 80074c2:	687b      	ldr	r3, [r7, #4]
 80074c4:	2208      	movs	r2, #8
 80074c6:	771a      	strb	r2, [r3, #28]
 80074c8:	687b      	ldr	r3, [r7, #4]
 80074ca:	681b      	ldr	r3, [r3, #0]
 80074cc:	69db      	ldr	r3, [r3, #28]
 80074ce:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80074d2:	2b00      	cmp	r3, #0
 80074d4:	d003      	beq.n	80074de <HAL_TIM_IRQHandler+0x146>
 80074d6:	6878      	ldr	r0, [r7, #4]
 80074d8:	f000 f9fc 	bl	80078d4 <HAL_TIM_IC_CaptureCallback>
 80074dc:	e005      	b.n	80074ea <HAL_TIM_IRQHandler+0x152>
 80074de:	6878      	ldr	r0, [r7, #4]
 80074e0:	f000 f9ee 	bl	80078c0 <HAL_TIM_OC_DelayElapsedCallback>
 80074e4:	6878      	ldr	r0, [r7, #4]
 80074e6:	f000 f9ff 	bl	80078e8 <HAL_TIM_PWM_PulseFinishedCallback>
 80074ea:	687b      	ldr	r3, [r7, #4]
 80074ec:	2200      	movs	r2, #0
 80074ee:	771a      	strb	r2, [r3, #28]
 80074f0:	687b      	ldr	r3, [r7, #4]
 80074f2:	681b      	ldr	r3, [r3, #0]
 80074f4:	691b      	ldr	r3, [r3, #16]
 80074f6:	f003 0301 	and.w	r3, r3, #1
 80074fa:	2b01      	cmp	r3, #1
 80074fc:	d10e      	bne.n	800751c <HAL_TIM_IRQHandler+0x184>
 80074fe:	687b      	ldr	r3, [r7, #4]
 8007500:	681b      	ldr	r3, [r3, #0]
 8007502:	68db      	ldr	r3, [r3, #12]
 8007504:	f003 0301 	and.w	r3, r3, #1
 8007508:	2b01      	cmp	r3, #1
 800750a:	d107      	bne.n	800751c <HAL_TIM_IRQHandler+0x184>
 800750c:	687b      	ldr	r3, [r7, #4]
 800750e:	681b      	ldr	r3, [r3, #0]
 8007510:	f06f 0201 	mvn.w	r2, #1
 8007514:	611a      	str	r2, [r3, #16]
 8007516:	6878      	ldr	r0, [r7, #4]
 8007518:	f7f9 f9bc 	bl	8000894 <HAL_TIM_PeriodElapsedCallback>
 800751c:	687b      	ldr	r3, [r7, #4]
 800751e:	681b      	ldr	r3, [r3, #0]
 8007520:	691b      	ldr	r3, [r3, #16]
 8007522:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007526:	2b80      	cmp	r3, #128	@ 0x80
 8007528:	d10e      	bne.n	8007548 <HAL_TIM_IRQHandler+0x1b0>
 800752a:	687b      	ldr	r3, [r7, #4]
 800752c:	681b      	ldr	r3, [r3, #0]
 800752e:	68db      	ldr	r3, [r3, #12]
 8007530:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007534:	2b80      	cmp	r3, #128	@ 0x80
 8007536:	d107      	bne.n	8007548 <HAL_TIM_IRQHandler+0x1b0>
 8007538:	687b      	ldr	r3, [r7, #4]
 800753a:	681b      	ldr	r3, [r3, #0]
 800753c:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8007540:	611a      	str	r2, [r3, #16]
 8007542:	6878      	ldr	r0, [r7, #4]
 8007544:	f000 ff2e 	bl	80083a4 <HAL_TIMEx_BreakCallback>
 8007548:	687b      	ldr	r3, [r7, #4]
 800754a:	681b      	ldr	r3, [r3, #0]
 800754c:	691b      	ldr	r3, [r3, #16]
 800754e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007552:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8007556:	d10e      	bne.n	8007576 <HAL_TIM_IRQHandler+0x1de>
 8007558:	687b      	ldr	r3, [r7, #4]
 800755a:	681b      	ldr	r3, [r3, #0]
 800755c:	68db      	ldr	r3, [r3, #12]
 800755e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007562:	2b80      	cmp	r3, #128	@ 0x80
 8007564:	d107      	bne.n	8007576 <HAL_TIM_IRQHandler+0x1de>
 8007566:	687b      	ldr	r3, [r7, #4]
 8007568:	681b      	ldr	r3, [r3, #0]
 800756a:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 800756e:	611a      	str	r2, [r3, #16]
 8007570:	6878      	ldr	r0, [r7, #4]
 8007572:	f000 ff21 	bl	80083b8 <HAL_TIMEx_Break2Callback>
 8007576:	687b      	ldr	r3, [r7, #4]
 8007578:	681b      	ldr	r3, [r3, #0]
 800757a:	691b      	ldr	r3, [r3, #16]
 800757c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007580:	2b40      	cmp	r3, #64	@ 0x40
 8007582:	d10e      	bne.n	80075a2 <HAL_TIM_IRQHandler+0x20a>
 8007584:	687b      	ldr	r3, [r7, #4]
 8007586:	681b      	ldr	r3, [r3, #0]
 8007588:	68db      	ldr	r3, [r3, #12]
 800758a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800758e:	2b40      	cmp	r3, #64	@ 0x40
 8007590:	d107      	bne.n	80075a2 <HAL_TIM_IRQHandler+0x20a>
 8007592:	687b      	ldr	r3, [r7, #4]
 8007594:	681b      	ldr	r3, [r3, #0]
 8007596:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800759a:	611a      	str	r2, [r3, #16]
 800759c:	6878      	ldr	r0, [r7, #4]
 800759e:	f000 f9ad 	bl	80078fc <HAL_TIM_TriggerCallback>
 80075a2:	687b      	ldr	r3, [r7, #4]
 80075a4:	681b      	ldr	r3, [r3, #0]
 80075a6:	691b      	ldr	r3, [r3, #16]
 80075a8:	f003 0320 	and.w	r3, r3, #32
 80075ac:	2b20      	cmp	r3, #32
 80075ae:	d10e      	bne.n	80075ce <HAL_TIM_IRQHandler+0x236>
 80075b0:	687b      	ldr	r3, [r7, #4]
 80075b2:	681b      	ldr	r3, [r3, #0]
 80075b4:	68db      	ldr	r3, [r3, #12]
 80075b6:	f003 0320 	and.w	r3, r3, #32
 80075ba:	2b20      	cmp	r3, #32
 80075bc:	d107      	bne.n	80075ce <HAL_TIM_IRQHandler+0x236>
 80075be:	687b      	ldr	r3, [r7, #4]
 80075c0:	681b      	ldr	r3, [r3, #0]
 80075c2:	f06f 0220 	mvn.w	r2, #32
 80075c6:	611a      	str	r2, [r3, #16]
 80075c8:	6878      	ldr	r0, [r7, #4]
 80075ca:	f000 fee1 	bl	8008390 <HAL_TIMEx_CommutCallback>
 80075ce:	687b      	ldr	r3, [r7, #4]
 80075d0:	681b      	ldr	r3, [r3, #0]
 80075d2:	691b      	ldr	r3, [r3, #16]
 80075d4:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80075d8:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80075dc:	d10f      	bne.n	80075fe <HAL_TIM_IRQHandler+0x266>
 80075de:	687b      	ldr	r3, [r7, #4]
 80075e0:	681b      	ldr	r3, [r3, #0]
 80075e2:	68db      	ldr	r3, [r3, #12]
 80075e4:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80075e8:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80075ec:	d107      	bne.n	80075fe <HAL_TIM_IRQHandler+0x266>
 80075ee:	687b      	ldr	r3, [r7, #4]
 80075f0:	681b      	ldr	r3, [r3, #0]
 80075f2:	f46f 1280 	mvn.w	r2, #1048576	@ 0x100000
 80075f6:	611a      	str	r2, [r3, #16]
 80075f8:	6878      	ldr	r0, [r7, #4]
 80075fa:	f000 fee7 	bl	80083cc <HAL_TIMEx_EncoderIndexCallback>
 80075fe:	687b      	ldr	r3, [r7, #4]
 8007600:	681b      	ldr	r3, [r3, #0]
 8007602:	691b      	ldr	r3, [r3, #16]
 8007604:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8007608:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800760c:	d10f      	bne.n	800762e <HAL_TIM_IRQHandler+0x296>
 800760e:	687b      	ldr	r3, [r7, #4]
 8007610:	681b      	ldr	r3, [r3, #0]
 8007612:	68db      	ldr	r3, [r3, #12]
 8007614:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8007618:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800761c:	d107      	bne.n	800762e <HAL_TIM_IRQHandler+0x296>
 800761e:	687b      	ldr	r3, [r7, #4]
 8007620:	681b      	ldr	r3, [r3, #0]
 8007622:	f46f 1200 	mvn.w	r2, #2097152	@ 0x200000
 8007626:	611a      	str	r2, [r3, #16]
 8007628:	6878      	ldr	r0, [r7, #4]
 800762a:	f000 fed9 	bl	80083e0 <HAL_TIMEx_DirectionChangeCallback>
 800762e:	687b      	ldr	r3, [r7, #4]
 8007630:	681b      	ldr	r3, [r3, #0]
 8007632:	691b      	ldr	r3, [r3, #16]
 8007634:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8007638:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800763c:	d10f      	bne.n	800765e <HAL_TIM_IRQHandler+0x2c6>
 800763e:	687b      	ldr	r3, [r7, #4]
 8007640:	681b      	ldr	r3, [r3, #0]
 8007642:	68db      	ldr	r3, [r3, #12]
 8007644:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8007648:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800764c:	d107      	bne.n	800765e <HAL_TIM_IRQHandler+0x2c6>
 800764e:	687b      	ldr	r3, [r7, #4]
 8007650:	681b      	ldr	r3, [r3, #0]
 8007652:	f46f 0280 	mvn.w	r2, #4194304	@ 0x400000
 8007656:	611a      	str	r2, [r3, #16]
 8007658:	6878      	ldr	r0, [r7, #4]
 800765a:	f000 fecb 	bl	80083f4 <HAL_TIMEx_IndexErrorCallback>
 800765e:	687b      	ldr	r3, [r7, #4]
 8007660:	681b      	ldr	r3, [r3, #0]
 8007662:	691b      	ldr	r3, [r3, #16]
 8007664:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007668:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800766c:	d10f      	bne.n	800768e <HAL_TIM_IRQHandler+0x2f6>
 800766e:	687b      	ldr	r3, [r7, #4]
 8007670:	681b      	ldr	r3, [r3, #0]
 8007672:	68db      	ldr	r3, [r3, #12]
 8007674:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007678:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800767c:	d107      	bne.n	800768e <HAL_TIM_IRQHandler+0x2f6>
 800767e:	687b      	ldr	r3, [r7, #4]
 8007680:	681b      	ldr	r3, [r3, #0]
 8007682:	f46f 0200 	mvn.w	r2, #8388608	@ 0x800000
 8007686:	611a      	str	r2, [r3, #16]
 8007688:	6878      	ldr	r0, [r7, #4]
 800768a:	f000 febd 	bl	8008408 <HAL_TIMEx_TransitionErrorCallback>
 800768e:	bf00      	nop
 8007690:	3708      	adds	r7, #8
 8007692:	46bd      	mov	sp, r7
 8007694:	bd80      	pop	{r7, pc}
	...

08007698 <HAL_TIM_PWM_ConfigChannel>:
 8007698:	b580      	push	{r7, lr}
 800769a:	b086      	sub	sp, #24
 800769c:	af00      	add	r7, sp, #0
 800769e:	60f8      	str	r0, [r7, #12]
 80076a0:	60b9      	str	r1, [r7, #8]
 80076a2:	607a      	str	r2, [r7, #4]
 80076a4:	2300      	movs	r3, #0
 80076a6:	75fb      	strb	r3, [r7, #23]
 80076a8:	68fb      	ldr	r3, [r7, #12]
 80076aa:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80076ae:	2b01      	cmp	r3, #1
 80076b0:	d101      	bne.n	80076b6 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80076b2:	2302      	movs	r3, #2
 80076b4:	e0ff      	b.n	80078b6 <HAL_TIM_PWM_ConfigChannel+0x21e>
 80076b6:	68fb      	ldr	r3, [r7, #12]
 80076b8:	2201      	movs	r2, #1
 80076ba:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80076be:	687b      	ldr	r3, [r7, #4]
 80076c0:	2b14      	cmp	r3, #20
 80076c2:	f200 80f0 	bhi.w	80078a6 <HAL_TIM_PWM_ConfigChannel+0x20e>
 80076c6:	a201      	add	r2, pc, #4	@ (adr r2, 80076cc <HAL_TIM_PWM_ConfigChannel+0x34>)
 80076c8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80076cc:	08007721 	.word	0x08007721
 80076d0:	080078a7 	.word	0x080078a7
 80076d4:	080078a7 	.word	0x080078a7
 80076d8:	080078a7 	.word	0x080078a7
 80076dc:	08007761 	.word	0x08007761
 80076e0:	080078a7 	.word	0x080078a7
 80076e4:	080078a7 	.word	0x080078a7
 80076e8:	080078a7 	.word	0x080078a7
 80076ec:	080077a3 	.word	0x080077a3
 80076f0:	080078a7 	.word	0x080078a7
 80076f4:	080078a7 	.word	0x080078a7
 80076f8:	080078a7 	.word	0x080078a7
 80076fc:	080077e3 	.word	0x080077e3
 8007700:	080078a7 	.word	0x080078a7
 8007704:	080078a7 	.word	0x080078a7
 8007708:	080078a7 	.word	0x080078a7
 800770c:	08007825 	.word	0x08007825
 8007710:	080078a7 	.word	0x080078a7
 8007714:	080078a7 	.word	0x080078a7
 8007718:	080078a7 	.word	0x080078a7
 800771c:	08007865 	.word	0x08007865
 8007720:	68fb      	ldr	r3, [r7, #12]
 8007722:	681b      	ldr	r3, [r3, #0]
 8007724:	68b9      	ldr	r1, [r7, #8]
 8007726:	4618      	mov	r0, r3
 8007728:	f000 f99a 	bl	8007a60 <TIM_OC1_SetConfig>
 800772c:	68fb      	ldr	r3, [r7, #12]
 800772e:	681b      	ldr	r3, [r3, #0]
 8007730:	699a      	ldr	r2, [r3, #24]
 8007732:	68fb      	ldr	r3, [r7, #12]
 8007734:	681b      	ldr	r3, [r3, #0]
 8007736:	f042 0208 	orr.w	r2, r2, #8
 800773a:	619a      	str	r2, [r3, #24]
 800773c:	68fb      	ldr	r3, [r7, #12]
 800773e:	681b      	ldr	r3, [r3, #0]
 8007740:	699a      	ldr	r2, [r3, #24]
 8007742:	68fb      	ldr	r3, [r7, #12]
 8007744:	681b      	ldr	r3, [r3, #0]
 8007746:	f022 0204 	bic.w	r2, r2, #4
 800774a:	619a      	str	r2, [r3, #24]
 800774c:	68fb      	ldr	r3, [r7, #12]
 800774e:	681b      	ldr	r3, [r3, #0]
 8007750:	6999      	ldr	r1, [r3, #24]
 8007752:	68bb      	ldr	r3, [r7, #8]
 8007754:	691a      	ldr	r2, [r3, #16]
 8007756:	68fb      	ldr	r3, [r7, #12]
 8007758:	681b      	ldr	r3, [r3, #0]
 800775a:	430a      	orrs	r2, r1
 800775c:	619a      	str	r2, [r3, #24]
 800775e:	e0a5      	b.n	80078ac <HAL_TIM_PWM_ConfigChannel+0x214>
 8007760:	68fb      	ldr	r3, [r7, #12]
 8007762:	681b      	ldr	r3, [r3, #0]
 8007764:	68b9      	ldr	r1, [r7, #8]
 8007766:	4618      	mov	r0, r3
 8007768:	f000 fa14 	bl	8007b94 <TIM_OC2_SetConfig>
 800776c:	68fb      	ldr	r3, [r7, #12]
 800776e:	681b      	ldr	r3, [r3, #0]
 8007770:	699a      	ldr	r2, [r3, #24]
 8007772:	68fb      	ldr	r3, [r7, #12]
 8007774:	681b      	ldr	r3, [r3, #0]
 8007776:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800777a:	619a      	str	r2, [r3, #24]
 800777c:	68fb      	ldr	r3, [r7, #12]
 800777e:	681b      	ldr	r3, [r3, #0]
 8007780:	699a      	ldr	r2, [r3, #24]
 8007782:	68fb      	ldr	r3, [r7, #12]
 8007784:	681b      	ldr	r3, [r3, #0]
 8007786:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800778a:	619a      	str	r2, [r3, #24]
 800778c:	68fb      	ldr	r3, [r7, #12]
 800778e:	681b      	ldr	r3, [r3, #0]
 8007790:	6999      	ldr	r1, [r3, #24]
 8007792:	68bb      	ldr	r3, [r7, #8]
 8007794:	691b      	ldr	r3, [r3, #16]
 8007796:	021a      	lsls	r2, r3, #8
 8007798:	68fb      	ldr	r3, [r7, #12]
 800779a:	681b      	ldr	r3, [r3, #0]
 800779c:	430a      	orrs	r2, r1
 800779e:	619a      	str	r2, [r3, #24]
 80077a0:	e084      	b.n	80078ac <HAL_TIM_PWM_ConfigChannel+0x214>
 80077a2:	68fb      	ldr	r3, [r7, #12]
 80077a4:	681b      	ldr	r3, [r3, #0]
 80077a6:	68b9      	ldr	r1, [r7, #8]
 80077a8:	4618      	mov	r0, r3
 80077aa:	f000 fa87 	bl	8007cbc <TIM_OC3_SetConfig>
 80077ae:	68fb      	ldr	r3, [r7, #12]
 80077b0:	681b      	ldr	r3, [r3, #0]
 80077b2:	69da      	ldr	r2, [r3, #28]
 80077b4:	68fb      	ldr	r3, [r7, #12]
 80077b6:	681b      	ldr	r3, [r3, #0]
 80077b8:	f042 0208 	orr.w	r2, r2, #8
 80077bc:	61da      	str	r2, [r3, #28]
 80077be:	68fb      	ldr	r3, [r7, #12]
 80077c0:	681b      	ldr	r3, [r3, #0]
 80077c2:	69da      	ldr	r2, [r3, #28]
 80077c4:	68fb      	ldr	r3, [r7, #12]
 80077c6:	681b      	ldr	r3, [r3, #0]
 80077c8:	f022 0204 	bic.w	r2, r2, #4
 80077cc:	61da      	str	r2, [r3, #28]
 80077ce:	68fb      	ldr	r3, [r7, #12]
 80077d0:	681b      	ldr	r3, [r3, #0]
 80077d2:	69d9      	ldr	r1, [r3, #28]
 80077d4:	68bb      	ldr	r3, [r7, #8]
 80077d6:	691a      	ldr	r2, [r3, #16]
 80077d8:	68fb      	ldr	r3, [r7, #12]
 80077da:	681b      	ldr	r3, [r3, #0]
 80077dc:	430a      	orrs	r2, r1
 80077de:	61da      	str	r2, [r3, #28]
 80077e0:	e064      	b.n	80078ac <HAL_TIM_PWM_ConfigChannel+0x214>
 80077e2:	68fb      	ldr	r3, [r7, #12]
 80077e4:	681b      	ldr	r3, [r3, #0]
 80077e6:	68b9      	ldr	r1, [r7, #8]
 80077e8:	4618      	mov	r0, r3
 80077ea:	f000 faf9 	bl	8007de0 <TIM_OC4_SetConfig>
 80077ee:	68fb      	ldr	r3, [r7, #12]
 80077f0:	681b      	ldr	r3, [r3, #0]
 80077f2:	69da      	ldr	r2, [r3, #28]
 80077f4:	68fb      	ldr	r3, [r7, #12]
 80077f6:	681b      	ldr	r3, [r3, #0]
 80077f8:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80077fc:	61da      	str	r2, [r3, #28]
 80077fe:	68fb      	ldr	r3, [r7, #12]
 8007800:	681b      	ldr	r3, [r3, #0]
 8007802:	69da      	ldr	r2, [r3, #28]
 8007804:	68fb      	ldr	r3, [r7, #12]
 8007806:	681b      	ldr	r3, [r3, #0]
 8007808:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800780c:	61da      	str	r2, [r3, #28]
 800780e:	68fb      	ldr	r3, [r7, #12]
 8007810:	681b      	ldr	r3, [r3, #0]
 8007812:	69d9      	ldr	r1, [r3, #28]
 8007814:	68bb      	ldr	r3, [r7, #8]
 8007816:	691b      	ldr	r3, [r3, #16]
 8007818:	021a      	lsls	r2, r3, #8
 800781a:	68fb      	ldr	r3, [r7, #12]
 800781c:	681b      	ldr	r3, [r3, #0]
 800781e:	430a      	orrs	r2, r1
 8007820:	61da      	str	r2, [r3, #28]
 8007822:	e043      	b.n	80078ac <HAL_TIM_PWM_ConfigChannel+0x214>
 8007824:	68fb      	ldr	r3, [r7, #12]
 8007826:	681b      	ldr	r3, [r3, #0]
 8007828:	68b9      	ldr	r1, [r7, #8]
 800782a:	4618      	mov	r0, r3
 800782c:	f000 fb6c 	bl	8007f08 <TIM_OC5_SetConfig>
 8007830:	68fb      	ldr	r3, [r7, #12]
 8007832:	681b      	ldr	r3, [r3, #0]
 8007834:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8007836:	68fb      	ldr	r3, [r7, #12]
 8007838:	681b      	ldr	r3, [r3, #0]
 800783a:	f042 0208 	orr.w	r2, r2, #8
 800783e:	651a      	str	r2, [r3, #80]	@ 0x50
 8007840:	68fb      	ldr	r3, [r7, #12]
 8007842:	681b      	ldr	r3, [r3, #0]
 8007844:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8007846:	68fb      	ldr	r3, [r7, #12]
 8007848:	681b      	ldr	r3, [r3, #0]
 800784a:	f022 0204 	bic.w	r2, r2, #4
 800784e:	651a      	str	r2, [r3, #80]	@ 0x50
 8007850:	68fb      	ldr	r3, [r7, #12]
 8007852:	681b      	ldr	r3, [r3, #0]
 8007854:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 8007856:	68bb      	ldr	r3, [r7, #8]
 8007858:	691a      	ldr	r2, [r3, #16]
 800785a:	68fb      	ldr	r3, [r7, #12]
 800785c:	681b      	ldr	r3, [r3, #0]
 800785e:	430a      	orrs	r2, r1
 8007860:	651a      	str	r2, [r3, #80]	@ 0x50
 8007862:	e023      	b.n	80078ac <HAL_TIM_PWM_ConfigChannel+0x214>
 8007864:	68fb      	ldr	r3, [r7, #12]
 8007866:	681b      	ldr	r3, [r3, #0]
 8007868:	68b9      	ldr	r1, [r7, #8]
 800786a:	4618      	mov	r0, r3
 800786c:	f000 fbb6 	bl	8007fdc <TIM_OC6_SetConfig>
 8007870:	68fb      	ldr	r3, [r7, #12]
 8007872:	681b      	ldr	r3, [r3, #0]
 8007874:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8007876:	68fb      	ldr	r3, [r7, #12]
 8007878:	681b      	ldr	r3, [r3, #0]
 800787a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800787e:	651a      	str	r2, [r3, #80]	@ 0x50
 8007880:	68fb      	ldr	r3, [r7, #12]
 8007882:	681b      	ldr	r3, [r3, #0]
 8007884:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8007886:	68fb      	ldr	r3, [r7, #12]
 8007888:	681b      	ldr	r3, [r3, #0]
 800788a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800788e:	651a      	str	r2, [r3, #80]	@ 0x50
 8007890:	68fb      	ldr	r3, [r7, #12]
 8007892:	681b      	ldr	r3, [r3, #0]
 8007894:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 8007896:	68bb      	ldr	r3, [r7, #8]
 8007898:	691b      	ldr	r3, [r3, #16]
 800789a:	021a      	lsls	r2, r3, #8
 800789c:	68fb      	ldr	r3, [r7, #12]
 800789e:	681b      	ldr	r3, [r3, #0]
 80078a0:	430a      	orrs	r2, r1
 80078a2:	651a      	str	r2, [r3, #80]	@ 0x50
 80078a4:	e002      	b.n	80078ac <HAL_TIM_PWM_ConfigChannel+0x214>
 80078a6:	2301      	movs	r3, #1
 80078a8:	75fb      	strb	r3, [r7, #23]
 80078aa:	bf00      	nop
 80078ac:	68fb      	ldr	r3, [r7, #12]
 80078ae:	2200      	movs	r2, #0
 80078b0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80078b4:	7dfb      	ldrb	r3, [r7, #23]
 80078b6:	4618      	mov	r0, r3
 80078b8:	3718      	adds	r7, #24
 80078ba:	46bd      	mov	sp, r7
 80078bc:	bd80      	pop	{r7, pc}
 80078be:	bf00      	nop

080078c0 <HAL_TIM_OC_DelayElapsedCallback>:
 80078c0:	b480      	push	{r7}
 80078c2:	b083      	sub	sp, #12
 80078c4:	af00      	add	r7, sp, #0
 80078c6:	6078      	str	r0, [r7, #4]
 80078c8:	bf00      	nop
 80078ca:	370c      	adds	r7, #12
 80078cc:	46bd      	mov	sp, r7
 80078ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078d2:	4770      	bx	lr

080078d4 <HAL_TIM_IC_CaptureCallback>:
 80078d4:	b480      	push	{r7}
 80078d6:	b083      	sub	sp, #12
 80078d8:	af00      	add	r7, sp, #0
 80078da:	6078      	str	r0, [r7, #4]
 80078dc:	bf00      	nop
 80078de:	370c      	adds	r7, #12
 80078e0:	46bd      	mov	sp, r7
 80078e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078e6:	4770      	bx	lr

080078e8 <HAL_TIM_PWM_PulseFinishedCallback>:
 80078e8:	b480      	push	{r7}
 80078ea:	b083      	sub	sp, #12
 80078ec:	af00      	add	r7, sp, #0
 80078ee:	6078      	str	r0, [r7, #4]
 80078f0:	bf00      	nop
 80078f2:	370c      	adds	r7, #12
 80078f4:	46bd      	mov	sp, r7
 80078f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078fa:	4770      	bx	lr

080078fc <HAL_TIM_TriggerCallback>:
 80078fc:	b480      	push	{r7}
 80078fe:	b083      	sub	sp, #12
 8007900:	af00      	add	r7, sp, #0
 8007902:	6078      	str	r0, [r7, #4]
 8007904:	bf00      	nop
 8007906:	370c      	adds	r7, #12
 8007908:	46bd      	mov	sp, r7
 800790a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800790e:	4770      	bx	lr

08007910 <TIM_Base_SetConfig>:
 8007910:	b480      	push	{r7}
 8007912:	b085      	sub	sp, #20
 8007914:	af00      	add	r7, sp, #0
 8007916:	6078      	str	r0, [r7, #4]
 8007918:	6039      	str	r1, [r7, #0]
 800791a:	687b      	ldr	r3, [r7, #4]
 800791c:	681b      	ldr	r3, [r3, #0]
 800791e:	60fb      	str	r3, [r7, #12]
 8007920:	687b      	ldr	r3, [r7, #4]
 8007922:	4a46      	ldr	r2, [pc, #280]	@ (8007a3c <TIM_Base_SetConfig+0x12c>)
 8007924:	4293      	cmp	r3, r2
 8007926:	d017      	beq.n	8007958 <TIM_Base_SetConfig+0x48>
 8007928:	687b      	ldr	r3, [r7, #4]
 800792a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800792e:	d013      	beq.n	8007958 <TIM_Base_SetConfig+0x48>
 8007930:	687b      	ldr	r3, [r7, #4]
 8007932:	4a43      	ldr	r2, [pc, #268]	@ (8007a40 <TIM_Base_SetConfig+0x130>)
 8007934:	4293      	cmp	r3, r2
 8007936:	d00f      	beq.n	8007958 <TIM_Base_SetConfig+0x48>
 8007938:	687b      	ldr	r3, [r7, #4]
 800793a:	4a42      	ldr	r2, [pc, #264]	@ (8007a44 <TIM_Base_SetConfig+0x134>)
 800793c:	4293      	cmp	r3, r2
 800793e:	d00b      	beq.n	8007958 <TIM_Base_SetConfig+0x48>
 8007940:	687b      	ldr	r3, [r7, #4]
 8007942:	4a41      	ldr	r2, [pc, #260]	@ (8007a48 <TIM_Base_SetConfig+0x138>)
 8007944:	4293      	cmp	r3, r2
 8007946:	d007      	beq.n	8007958 <TIM_Base_SetConfig+0x48>
 8007948:	687b      	ldr	r3, [r7, #4]
 800794a:	4a40      	ldr	r2, [pc, #256]	@ (8007a4c <TIM_Base_SetConfig+0x13c>)
 800794c:	4293      	cmp	r3, r2
 800794e:	d003      	beq.n	8007958 <TIM_Base_SetConfig+0x48>
 8007950:	687b      	ldr	r3, [r7, #4]
 8007952:	4a3f      	ldr	r2, [pc, #252]	@ (8007a50 <TIM_Base_SetConfig+0x140>)
 8007954:	4293      	cmp	r3, r2
 8007956:	d108      	bne.n	800796a <TIM_Base_SetConfig+0x5a>
 8007958:	68fb      	ldr	r3, [r7, #12]
 800795a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800795e:	60fb      	str	r3, [r7, #12]
 8007960:	683b      	ldr	r3, [r7, #0]
 8007962:	685b      	ldr	r3, [r3, #4]
 8007964:	68fa      	ldr	r2, [r7, #12]
 8007966:	4313      	orrs	r3, r2
 8007968:	60fb      	str	r3, [r7, #12]
 800796a:	687b      	ldr	r3, [r7, #4]
 800796c:	4a33      	ldr	r2, [pc, #204]	@ (8007a3c <TIM_Base_SetConfig+0x12c>)
 800796e:	4293      	cmp	r3, r2
 8007970:	d023      	beq.n	80079ba <TIM_Base_SetConfig+0xaa>
 8007972:	687b      	ldr	r3, [r7, #4]
 8007974:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007978:	d01f      	beq.n	80079ba <TIM_Base_SetConfig+0xaa>
 800797a:	687b      	ldr	r3, [r7, #4]
 800797c:	4a30      	ldr	r2, [pc, #192]	@ (8007a40 <TIM_Base_SetConfig+0x130>)
 800797e:	4293      	cmp	r3, r2
 8007980:	d01b      	beq.n	80079ba <TIM_Base_SetConfig+0xaa>
 8007982:	687b      	ldr	r3, [r7, #4]
 8007984:	4a2f      	ldr	r2, [pc, #188]	@ (8007a44 <TIM_Base_SetConfig+0x134>)
 8007986:	4293      	cmp	r3, r2
 8007988:	d017      	beq.n	80079ba <TIM_Base_SetConfig+0xaa>
 800798a:	687b      	ldr	r3, [r7, #4]
 800798c:	4a2e      	ldr	r2, [pc, #184]	@ (8007a48 <TIM_Base_SetConfig+0x138>)
 800798e:	4293      	cmp	r3, r2
 8007990:	d013      	beq.n	80079ba <TIM_Base_SetConfig+0xaa>
 8007992:	687b      	ldr	r3, [r7, #4]
 8007994:	4a2d      	ldr	r2, [pc, #180]	@ (8007a4c <TIM_Base_SetConfig+0x13c>)
 8007996:	4293      	cmp	r3, r2
 8007998:	d00f      	beq.n	80079ba <TIM_Base_SetConfig+0xaa>
 800799a:	687b      	ldr	r3, [r7, #4]
 800799c:	4a2d      	ldr	r2, [pc, #180]	@ (8007a54 <TIM_Base_SetConfig+0x144>)
 800799e:	4293      	cmp	r3, r2
 80079a0:	d00b      	beq.n	80079ba <TIM_Base_SetConfig+0xaa>
 80079a2:	687b      	ldr	r3, [r7, #4]
 80079a4:	4a2c      	ldr	r2, [pc, #176]	@ (8007a58 <TIM_Base_SetConfig+0x148>)
 80079a6:	4293      	cmp	r3, r2
 80079a8:	d007      	beq.n	80079ba <TIM_Base_SetConfig+0xaa>
 80079aa:	687b      	ldr	r3, [r7, #4]
 80079ac:	4a2b      	ldr	r2, [pc, #172]	@ (8007a5c <TIM_Base_SetConfig+0x14c>)
 80079ae:	4293      	cmp	r3, r2
 80079b0:	d003      	beq.n	80079ba <TIM_Base_SetConfig+0xaa>
 80079b2:	687b      	ldr	r3, [r7, #4]
 80079b4:	4a26      	ldr	r2, [pc, #152]	@ (8007a50 <TIM_Base_SetConfig+0x140>)
 80079b6:	4293      	cmp	r3, r2
 80079b8:	d108      	bne.n	80079cc <TIM_Base_SetConfig+0xbc>
 80079ba:	68fb      	ldr	r3, [r7, #12]
 80079bc:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80079c0:	60fb      	str	r3, [r7, #12]
 80079c2:	683b      	ldr	r3, [r7, #0]
 80079c4:	68db      	ldr	r3, [r3, #12]
 80079c6:	68fa      	ldr	r2, [r7, #12]
 80079c8:	4313      	orrs	r3, r2
 80079ca:	60fb      	str	r3, [r7, #12]
 80079cc:	68fb      	ldr	r3, [r7, #12]
 80079ce:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80079d2:	683b      	ldr	r3, [r7, #0]
 80079d4:	695b      	ldr	r3, [r3, #20]
 80079d6:	4313      	orrs	r3, r2
 80079d8:	60fb      	str	r3, [r7, #12]
 80079da:	687b      	ldr	r3, [r7, #4]
 80079dc:	68fa      	ldr	r2, [r7, #12]
 80079de:	601a      	str	r2, [r3, #0]
 80079e0:	683b      	ldr	r3, [r7, #0]
 80079e2:	689a      	ldr	r2, [r3, #8]
 80079e4:	687b      	ldr	r3, [r7, #4]
 80079e6:	62da      	str	r2, [r3, #44]	@ 0x2c
 80079e8:	683b      	ldr	r3, [r7, #0]
 80079ea:	681a      	ldr	r2, [r3, #0]
 80079ec:	687b      	ldr	r3, [r7, #4]
 80079ee:	629a      	str	r2, [r3, #40]	@ 0x28
 80079f0:	687b      	ldr	r3, [r7, #4]
 80079f2:	4a12      	ldr	r2, [pc, #72]	@ (8007a3c <TIM_Base_SetConfig+0x12c>)
 80079f4:	4293      	cmp	r3, r2
 80079f6:	d013      	beq.n	8007a20 <TIM_Base_SetConfig+0x110>
 80079f8:	687b      	ldr	r3, [r7, #4]
 80079fa:	4a14      	ldr	r2, [pc, #80]	@ (8007a4c <TIM_Base_SetConfig+0x13c>)
 80079fc:	4293      	cmp	r3, r2
 80079fe:	d00f      	beq.n	8007a20 <TIM_Base_SetConfig+0x110>
 8007a00:	687b      	ldr	r3, [r7, #4]
 8007a02:	4a14      	ldr	r2, [pc, #80]	@ (8007a54 <TIM_Base_SetConfig+0x144>)
 8007a04:	4293      	cmp	r3, r2
 8007a06:	d00b      	beq.n	8007a20 <TIM_Base_SetConfig+0x110>
 8007a08:	687b      	ldr	r3, [r7, #4]
 8007a0a:	4a13      	ldr	r2, [pc, #76]	@ (8007a58 <TIM_Base_SetConfig+0x148>)
 8007a0c:	4293      	cmp	r3, r2
 8007a0e:	d007      	beq.n	8007a20 <TIM_Base_SetConfig+0x110>
 8007a10:	687b      	ldr	r3, [r7, #4]
 8007a12:	4a12      	ldr	r2, [pc, #72]	@ (8007a5c <TIM_Base_SetConfig+0x14c>)
 8007a14:	4293      	cmp	r3, r2
 8007a16:	d003      	beq.n	8007a20 <TIM_Base_SetConfig+0x110>
 8007a18:	687b      	ldr	r3, [r7, #4]
 8007a1a:	4a0d      	ldr	r2, [pc, #52]	@ (8007a50 <TIM_Base_SetConfig+0x140>)
 8007a1c:	4293      	cmp	r3, r2
 8007a1e:	d103      	bne.n	8007a28 <TIM_Base_SetConfig+0x118>
 8007a20:	683b      	ldr	r3, [r7, #0]
 8007a22:	691a      	ldr	r2, [r3, #16]
 8007a24:	687b      	ldr	r3, [r7, #4]
 8007a26:	631a      	str	r2, [r3, #48]	@ 0x30
 8007a28:	687b      	ldr	r3, [r7, #4]
 8007a2a:	2201      	movs	r2, #1
 8007a2c:	615a      	str	r2, [r3, #20]
 8007a2e:	bf00      	nop
 8007a30:	3714      	adds	r7, #20
 8007a32:	46bd      	mov	sp, r7
 8007a34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a38:	4770      	bx	lr
 8007a3a:	bf00      	nop
 8007a3c:	40012c00 	.word	0x40012c00
 8007a40:	40000400 	.word	0x40000400
 8007a44:	40000800 	.word	0x40000800
 8007a48:	40000c00 	.word	0x40000c00
 8007a4c:	40013400 	.word	0x40013400
 8007a50:	40015000 	.word	0x40015000
 8007a54:	40014000 	.word	0x40014000
 8007a58:	40014400 	.word	0x40014400
 8007a5c:	40014800 	.word	0x40014800

08007a60 <TIM_OC1_SetConfig>:
 8007a60:	b480      	push	{r7}
 8007a62:	b087      	sub	sp, #28
 8007a64:	af00      	add	r7, sp, #0
 8007a66:	6078      	str	r0, [r7, #4]
 8007a68:	6039      	str	r1, [r7, #0]
 8007a6a:	687b      	ldr	r3, [r7, #4]
 8007a6c:	6a1b      	ldr	r3, [r3, #32]
 8007a6e:	f023 0201 	bic.w	r2, r3, #1
 8007a72:	687b      	ldr	r3, [r7, #4]
 8007a74:	621a      	str	r2, [r3, #32]
 8007a76:	687b      	ldr	r3, [r7, #4]
 8007a78:	6a1b      	ldr	r3, [r3, #32]
 8007a7a:	617b      	str	r3, [r7, #20]
 8007a7c:	687b      	ldr	r3, [r7, #4]
 8007a7e:	685b      	ldr	r3, [r3, #4]
 8007a80:	613b      	str	r3, [r7, #16]
 8007a82:	687b      	ldr	r3, [r7, #4]
 8007a84:	699b      	ldr	r3, [r3, #24]
 8007a86:	60fb      	str	r3, [r7, #12]
 8007a88:	68fb      	ldr	r3, [r7, #12]
 8007a8a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8007a8e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007a92:	60fb      	str	r3, [r7, #12]
 8007a94:	68fb      	ldr	r3, [r7, #12]
 8007a96:	f023 0303 	bic.w	r3, r3, #3
 8007a9a:	60fb      	str	r3, [r7, #12]
 8007a9c:	683b      	ldr	r3, [r7, #0]
 8007a9e:	681b      	ldr	r3, [r3, #0]
 8007aa0:	68fa      	ldr	r2, [r7, #12]
 8007aa2:	4313      	orrs	r3, r2
 8007aa4:	60fb      	str	r3, [r7, #12]
 8007aa6:	697b      	ldr	r3, [r7, #20]
 8007aa8:	f023 0302 	bic.w	r3, r3, #2
 8007aac:	617b      	str	r3, [r7, #20]
 8007aae:	683b      	ldr	r3, [r7, #0]
 8007ab0:	689b      	ldr	r3, [r3, #8]
 8007ab2:	697a      	ldr	r2, [r7, #20]
 8007ab4:	4313      	orrs	r3, r2
 8007ab6:	617b      	str	r3, [r7, #20]
 8007ab8:	687b      	ldr	r3, [r7, #4]
 8007aba:	4a30      	ldr	r2, [pc, #192]	@ (8007b7c <TIM_OC1_SetConfig+0x11c>)
 8007abc:	4293      	cmp	r3, r2
 8007abe:	d013      	beq.n	8007ae8 <TIM_OC1_SetConfig+0x88>
 8007ac0:	687b      	ldr	r3, [r7, #4]
 8007ac2:	4a2f      	ldr	r2, [pc, #188]	@ (8007b80 <TIM_OC1_SetConfig+0x120>)
 8007ac4:	4293      	cmp	r3, r2
 8007ac6:	d00f      	beq.n	8007ae8 <TIM_OC1_SetConfig+0x88>
 8007ac8:	687b      	ldr	r3, [r7, #4]
 8007aca:	4a2e      	ldr	r2, [pc, #184]	@ (8007b84 <TIM_OC1_SetConfig+0x124>)
 8007acc:	4293      	cmp	r3, r2
 8007ace:	d00b      	beq.n	8007ae8 <TIM_OC1_SetConfig+0x88>
 8007ad0:	687b      	ldr	r3, [r7, #4]
 8007ad2:	4a2d      	ldr	r2, [pc, #180]	@ (8007b88 <TIM_OC1_SetConfig+0x128>)
 8007ad4:	4293      	cmp	r3, r2
 8007ad6:	d007      	beq.n	8007ae8 <TIM_OC1_SetConfig+0x88>
 8007ad8:	687b      	ldr	r3, [r7, #4]
 8007ada:	4a2c      	ldr	r2, [pc, #176]	@ (8007b8c <TIM_OC1_SetConfig+0x12c>)
 8007adc:	4293      	cmp	r3, r2
 8007ade:	d003      	beq.n	8007ae8 <TIM_OC1_SetConfig+0x88>
 8007ae0:	687b      	ldr	r3, [r7, #4]
 8007ae2:	4a2b      	ldr	r2, [pc, #172]	@ (8007b90 <TIM_OC1_SetConfig+0x130>)
 8007ae4:	4293      	cmp	r3, r2
 8007ae6:	d10c      	bne.n	8007b02 <TIM_OC1_SetConfig+0xa2>
 8007ae8:	697b      	ldr	r3, [r7, #20]
 8007aea:	f023 0308 	bic.w	r3, r3, #8
 8007aee:	617b      	str	r3, [r7, #20]
 8007af0:	683b      	ldr	r3, [r7, #0]
 8007af2:	68db      	ldr	r3, [r3, #12]
 8007af4:	697a      	ldr	r2, [r7, #20]
 8007af6:	4313      	orrs	r3, r2
 8007af8:	617b      	str	r3, [r7, #20]
 8007afa:	697b      	ldr	r3, [r7, #20]
 8007afc:	f023 0304 	bic.w	r3, r3, #4
 8007b00:	617b      	str	r3, [r7, #20]
 8007b02:	687b      	ldr	r3, [r7, #4]
 8007b04:	4a1d      	ldr	r2, [pc, #116]	@ (8007b7c <TIM_OC1_SetConfig+0x11c>)
 8007b06:	4293      	cmp	r3, r2
 8007b08:	d013      	beq.n	8007b32 <TIM_OC1_SetConfig+0xd2>
 8007b0a:	687b      	ldr	r3, [r7, #4]
 8007b0c:	4a1c      	ldr	r2, [pc, #112]	@ (8007b80 <TIM_OC1_SetConfig+0x120>)
 8007b0e:	4293      	cmp	r3, r2
 8007b10:	d00f      	beq.n	8007b32 <TIM_OC1_SetConfig+0xd2>
 8007b12:	687b      	ldr	r3, [r7, #4]
 8007b14:	4a1b      	ldr	r2, [pc, #108]	@ (8007b84 <TIM_OC1_SetConfig+0x124>)
 8007b16:	4293      	cmp	r3, r2
 8007b18:	d00b      	beq.n	8007b32 <TIM_OC1_SetConfig+0xd2>
 8007b1a:	687b      	ldr	r3, [r7, #4]
 8007b1c:	4a1a      	ldr	r2, [pc, #104]	@ (8007b88 <TIM_OC1_SetConfig+0x128>)
 8007b1e:	4293      	cmp	r3, r2
 8007b20:	d007      	beq.n	8007b32 <TIM_OC1_SetConfig+0xd2>
 8007b22:	687b      	ldr	r3, [r7, #4]
 8007b24:	4a19      	ldr	r2, [pc, #100]	@ (8007b8c <TIM_OC1_SetConfig+0x12c>)
 8007b26:	4293      	cmp	r3, r2
 8007b28:	d003      	beq.n	8007b32 <TIM_OC1_SetConfig+0xd2>
 8007b2a:	687b      	ldr	r3, [r7, #4]
 8007b2c:	4a18      	ldr	r2, [pc, #96]	@ (8007b90 <TIM_OC1_SetConfig+0x130>)
 8007b2e:	4293      	cmp	r3, r2
 8007b30:	d111      	bne.n	8007b56 <TIM_OC1_SetConfig+0xf6>
 8007b32:	693b      	ldr	r3, [r7, #16]
 8007b34:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007b38:	613b      	str	r3, [r7, #16]
 8007b3a:	693b      	ldr	r3, [r7, #16]
 8007b3c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007b40:	613b      	str	r3, [r7, #16]
 8007b42:	683b      	ldr	r3, [r7, #0]
 8007b44:	695b      	ldr	r3, [r3, #20]
 8007b46:	693a      	ldr	r2, [r7, #16]
 8007b48:	4313      	orrs	r3, r2
 8007b4a:	613b      	str	r3, [r7, #16]
 8007b4c:	683b      	ldr	r3, [r7, #0]
 8007b4e:	699b      	ldr	r3, [r3, #24]
 8007b50:	693a      	ldr	r2, [r7, #16]
 8007b52:	4313      	orrs	r3, r2
 8007b54:	613b      	str	r3, [r7, #16]
 8007b56:	687b      	ldr	r3, [r7, #4]
 8007b58:	693a      	ldr	r2, [r7, #16]
 8007b5a:	605a      	str	r2, [r3, #4]
 8007b5c:	687b      	ldr	r3, [r7, #4]
 8007b5e:	68fa      	ldr	r2, [r7, #12]
 8007b60:	619a      	str	r2, [r3, #24]
 8007b62:	683b      	ldr	r3, [r7, #0]
 8007b64:	685a      	ldr	r2, [r3, #4]
 8007b66:	687b      	ldr	r3, [r7, #4]
 8007b68:	635a      	str	r2, [r3, #52]	@ 0x34
 8007b6a:	687b      	ldr	r3, [r7, #4]
 8007b6c:	697a      	ldr	r2, [r7, #20]
 8007b6e:	621a      	str	r2, [r3, #32]
 8007b70:	bf00      	nop
 8007b72:	371c      	adds	r7, #28
 8007b74:	46bd      	mov	sp, r7
 8007b76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b7a:	4770      	bx	lr
 8007b7c:	40012c00 	.word	0x40012c00
 8007b80:	40013400 	.word	0x40013400
 8007b84:	40014000 	.word	0x40014000
 8007b88:	40014400 	.word	0x40014400
 8007b8c:	40014800 	.word	0x40014800
 8007b90:	40015000 	.word	0x40015000

08007b94 <TIM_OC2_SetConfig>:
 8007b94:	b480      	push	{r7}
 8007b96:	b087      	sub	sp, #28
 8007b98:	af00      	add	r7, sp, #0
 8007b9a:	6078      	str	r0, [r7, #4]
 8007b9c:	6039      	str	r1, [r7, #0]
 8007b9e:	687b      	ldr	r3, [r7, #4]
 8007ba0:	6a1b      	ldr	r3, [r3, #32]
 8007ba2:	f023 0210 	bic.w	r2, r3, #16
 8007ba6:	687b      	ldr	r3, [r7, #4]
 8007ba8:	621a      	str	r2, [r3, #32]
 8007baa:	687b      	ldr	r3, [r7, #4]
 8007bac:	6a1b      	ldr	r3, [r3, #32]
 8007bae:	617b      	str	r3, [r7, #20]
 8007bb0:	687b      	ldr	r3, [r7, #4]
 8007bb2:	685b      	ldr	r3, [r3, #4]
 8007bb4:	613b      	str	r3, [r7, #16]
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	699b      	ldr	r3, [r3, #24]
 8007bba:	60fb      	str	r3, [r7, #12]
 8007bbc:	68fb      	ldr	r3, [r7, #12]
 8007bbe:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8007bc2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007bc6:	60fb      	str	r3, [r7, #12]
 8007bc8:	68fb      	ldr	r3, [r7, #12]
 8007bca:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007bce:	60fb      	str	r3, [r7, #12]
 8007bd0:	683b      	ldr	r3, [r7, #0]
 8007bd2:	681b      	ldr	r3, [r3, #0]
 8007bd4:	021b      	lsls	r3, r3, #8
 8007bd6:	68fa      	ldr	r2, [r7, #12]
 8007bd8:	4313      	orrs	r3, r2
 8007bda:	60fb      	str	r3, [r7, #12]
 8007bdc:	697b      	ldr	r3, [r7, #20]
 8007bde:	f023 0320 	bic.w	r3, r3, #32
 8007be2:	617b      	str	r3, [r7, #20]
 8007be4:	683b      	ldr	r3, [r7, #0]
 8007be6:	689b      	ldr	r3, [r3, #8]
 8007be8:	011b      	lsls	r3, r3, #4
 8007bea:	697a      	ldr	r2, [r7, #20]
 8007bec:	4313      	orrs	r3, r2
 8007bee:	617b      	str	r3, [r7, #20]
 8007bf0:	687b      	ldr	r3, [r7, #4]
 8007bf2:	4a2c      	ldr	r2, [pc, #176]	@ (8007ca4 <TIM_OC2_SetConfig+0x110>)
 8007bf4:	4293      	cmp	r3, r2
 8007bf6:	d007      	beq.n	8007c08 <TIM_OC2_SetConfig+0x74>
 8007bf8:	687b      	ldr	r3, [r7, #4]
 8007bfa:	4a2b      	ldr	r2, [pc, #172]	@ (8007ca8 <TIM_OC2_SetConfig+0x114>)
 8007bfc:	4293      	cmp	r3, r2
 8007bfe:	d003      	beq.n	8007c08 <TIM_OC2_SetConfig+0x74>
 8007c00:	687b      	ldr	r3, [r7, #4]
 8007c02:	4a2a      	ldr	r2, [pc, #168]	@ (8007cac <TIM_OC2_SetConfig+0x118>)
 8007c04:	4293      	cmp	r3, r2
 8007c06:	d10d      	bne.n	8007c24 <TIM_OC2_SetConfig+0x90>
 8007c08:	697b      	ldr	r3, [r7, #20]
 8007c0a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007c0e:	617b      	str	r3, [r7, #20]
 8007c10:	683b      	ldr	r3, [r7, #0]
 8007c12:	68db      	ldr	r3, [r3, #12]
 8007c14:	011b      	lsls	r3, r3, #4
 8007c16:	697a      	ldr	r2, [r7, #20]
 8007c18:	4313      	orrs	r3, r2
 8007c1a:	617b      	str	r3, [r7, #20]
 8007c1c:	697b      	ldr	r3, [r7, #20]
 8007c1e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007c22:	617b      	str	r3, [r7, #20]
 8007c24:	687b      	ldr	r3, [r7, #4]
 8007c26:	4a1f      	ldr	r2, [pc, #124]	@ (8007ca4 <TIM_OC2_SetConfig+0x110>)
 8007c28:	4293      	cmp	r3, r2
 8007c2a:	d013      	beq.n	8007c54 <TIM_OC2_SetConfig+0xc0>
 8007c2c:	687b      	ldr	r3, [r7, #4]
 8007c2e:	4a1e      	ldr	r2, [pc, #120]	@ (8007ca8 <TIM_OC2_SetConfig+0x114>)
 8007c30:	4293      	cmp	r3, r2
 8007c32:	d00f      	beq.n	8007c54 <TIM_OC2_SetConfig+0xc0>
 8007c34:	687b      	ldr	r3, [r7, #4]
 8007c36:	4a1e      	ldr	r2, [pc, #120]	@ (8007cb0 <TIM_OC2_SetConfig+0x11c>)
 8007c38:	4293      	cmp	r3, r2
 8007c3a:	d00b      	beq.n	8007c54 <TIM_OC2_SetConfig+0xc0>
 8007c3c:	687b      	ldr	r3, [r7, #4]
 8007c3e:	4a1d      	ldr	r2, [pc, #116]	@ (8007cb4 <TIM_OC2_SetConfig+0x120>)
 8007c40:	4293      	cmp	r3, r2
 8007c42:	d007      	beq.n	8007c54 <TIM_OC2_SetConfig+0xc0>
 8007c44:	687b      	ldr	r3, [r7, #4]
 8007c46:	4a1c      	ldr	r2, [pc, #112]	@ (8007cb8 <TIM_OC2_SetConfig+0x124>)
 8007c48:	4293      	cmp	r3, r2
 8007c4a:	d003      	beq.n	8007c54 <TIM_OC2_SetConfig+0xc0>
 8007c4c:	687b      	ldr	r3, [r7, #4]
 8007c4e:	4a17      	ldr	r2, [pc, #92]	@ (8007cac <TIM_OC2_SetConfig+0x118>)
 8007c50:	4293      	cmp	r3, r2
 8007c52:	d113      	bne.n	8007c7c <TIM_OC2_SetConfig+0xe8>
 8007c54:	693b      	ldr	r3, [r7, #16]
 8007c56:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8007c5a:	613b      	str	r3, [r7, #16]
 8007c5c:	693b      	ldr	r3, [r7, #16]
 8007c5e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007c62:	613b      	str	r3, [r7, #16]
 8007c64:	683b      	ldr	r3, [r7, #0]
 8007c66:	695b      	ldr	r3, [r3, #20]
 8007c68:	009b      	lsls	r3, r3, #2
 8007c6a:	693a      	ldr	r2, [r7, #16]
 8007c6c:	4313      	orrs	r3, r2
 8007c6e:	613b      	str	r3, [r7, #16]
 8007c70:	683b      	ldr	r3, [r7, #0]
 8007c72:	699b      	ldr	r3, [r3, #24]
 8007c74:	009b      	lsls	r3, r3, #2
 8007c76:	693a      	ldr	r2, [r7, #16]
 8007c78:	4313      	orrs	r3, r2
 8007c7a:	613b      	str	r3, [r7, #16]
 8007c7c:	687b      	ldr	r3, [r7, #4]
 8007c7e:	693a      	ldr	r2, [r7, #16]
 8007c80:	605a      	str	r2, [r3, #4]
 8007c82:	687b      	ldr	r3, [r7, #4]
 8007c84:	68fa      	ldr	r2, [r7, #12]
 8007c86:	619a      	str	r2, [r3, #24]
 8007c88:	683b      	ldr	r3, [r7, #0]
 8007c8a:	685a      	ldr	r2, [r3, #4]
 8007c8c:	687b      	ldr	r3, [r7, #4]
 8007c8e:	639a      	str	r2, [r3, #56]	@ 0x38
 8007c90:	687b      	ldr	r3, [r7, #4]
 8007c92:	697a      	ldr	r2, [r7, #20]
 8007c94:	621a      	str	r2, [r3, #32]
 8007c96:	bf00      	nop
 8007c98:	371c      	adds	r7, #28
 8007c9a:	46bd      	mov	sp, r7
 8007c9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ca0:	4770      	bx	lr
 8007ca2:	bf00      	nop
 8007ca4:	40012c00 	.word	0x40012c00
 8007ca8:	40013400 	.word	0x40013400
 8007cac:	40015000 	.word	0x40015000
 8007cb0:	40014000 	.word	0x40014000
 8007cb4:	40014400 	.word	0x40014400
 8007cb8:	40014800 	.word	0x40014800

08007cbc <TIM_OC3_SetConfig>:
 8007cbc:	b480      	push	{r7}
 8007cbe:	b087      	sub	sp, #28
 8007cc0:	af00      	add	r7, sp, #0
 8007cc2:	6078      	str	r0, [r7, #4]
 8007cc4:	6039      	str	r1, [r7, #0]
 8007cc6:	687b      	ldr	r3, [r7, #4]
 8007cc8:	6a1b      	ldr	r3, [r3, #32]
 8007cca:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8007cce:	687b      	ldr	r3, [r7, #4]
 8007cd0:	621a      	str	r2, [r3, #32]
 8007cd2:	687b      	ldr	r3, [r7, #4]
 8007cd4:	6a1b      	ldr	r3, [r3, #32]
 8007cd6:	617b      	str	r3, [r7, #20]
 8007cd8:	687b      	ldr	r3, [r7, #4]
 8007cda:	685b      	ldr	r3, [r3, #4]
 8007cdc:	613b      	str	r3, [r7, #16]
 8007cde:	687b      	ldr	r3, [r7, #4]
 8007ce0:	69db      	ldr	r3, [r3, #28]
 8007ce2:	60fb      	str	r3, [r7, #12]
 8007ce4:	68fb      	ldr	r3, [r7, #12]
 8007ce6:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8007cea:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007cee:	60fb      	str	r3, [r7, #12]
 8007cf0:	68fb      	ldr	r3, [r7, #12]
 8007cf2:	f023 0303 	bic.w	r3, r3, #3
 8007cf6:	60fb      	str	r3, [r7, #12]
 8007cf8:	683b      	ldr	r3, [r7, #0]
 8007cfa:	681b      	ldr	r3, [r3, #0]
 8007cfc:	68fa      	ldr	r2, [r7, #12]
 8007cfe:	4313      	orrs	r3, r2
 8007d00:	60fb      	str	r3, [r7, #12]
 8007d02:	697b      	ldr	r3, [r7, #20]
 8007d04:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007d08:	617b      	str	r3, [r7, #20]
 8007d0a:	683b      	ldr	r3, [r7, #0]
 8007d0c:	689b      	ldr	r3, [r3, #8]
 8007d0e:	021b      	lsls	r3, r3, #8
 8007d10:	697a      	ldr	r2, [r7, #20]
 8007d12:	4313      	orrs	r3, r2
 8007d14:	617b      	str	r3, [r7, #20]
 8007d16:	687b      	ldr	r3, [r7, #4]
 8007d18:	4a2b      	ldr	r2, [pc, #172]	@ (8007dc8 <TIM_OC3_SetConfig+0x10c>)
 8007d1a:	4293      	cmp	r3, r2
 8007d1c:	d007      	beq.n	8007d2e <TIM_OC3_SetConfig+0x72>
 8007d1e:	687b      	ldr	r3, [r7, #4]
 8007d20:	4a2a      	ldr	r2, [pc, #168]	@ (8007dcc <TIM_OC3_SetConfig+0x110>)
 8007d22:	4293      	cmp	r3, r2
 8007d24:	d003      	beq.n	8007d2e <TIM_OC3_SetConfig+0x72>
 8007d26:	687b      	ldr	r3, [r7, #4]
 8007d28:	4a29      	ldr	r2, [pc, #164]	@ (8007dd0 <TIM_OC3_SetConfig+0x114>)
 8007d2a:	4293      	cmp	r3, r2
 8007d2c:	d10d      	bne.n	8007d4a <TIM_OC3_SetConfig+0x8e>
 8007d2e:	697b      	ldr	r3, [r7, #20]
 8007d30:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007d34:	617b      	str	r3, [r7, #20]
 8007d36:	683b      	ldr	r3, [r7, #0]
 8007d38:	68db      	ldr	r3, [r3, #12]
 8007d3a:	021b      	lsls	r3, r3, #8
 8007d3c:	697a      	ldr	r2, [r7, #20]
 8007d3e:	4313      	orrs	r3, r2
 8007d40:	617b      	str	r3, [r7, #20]
 8007d42:	697b      	ldr	r3, [r7, #20]
 8007d44:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8007d48:	617b      	str	r3, [r7, #20]
 8007d4a:	687b      	ldr	r3, [r7, #4]
 8007d4c:	4a1e      	ldr	r2, [pc, #120]	@ (8007dc8 <TIM_OC3_SetConfig+0x10c>)
 8007d4e:	4293      	cmp	r3, r2
 8007d50:	d013      	beq.n	8007d7a <TIM_OC3_SetConfig+0xbe>
 8007d52:	687b      	ldr	r3, [r7, #4]
 8007d54:	4a1d      	ldr	r2, [pc, #116]	@ (8007dcc <TIM_OC3_SetConfig+0x110>)
 8007d56:	4293      	cmp	r3, r2
 8007d58:	d00f      	beq.n	8007d7a <TIM_OC3_SetConfig+0xbe>
 8007d5a:	687b      	ldr	r3, [r7, #4]
 8007d5c:	4a1d      	ldr	r2, [pc, #116]	@ (8007dd4 <TIM_OC3_SetConfig+0x118>)
 8007d5e:	4293      	cmp	r3, r2
 8007d60:	d00b      	beq.n	8007d7a <TIM_OC3_SetConfig+0xbe>
 8007d62:	687b      	ldr	r3, [r7, #4]
 8007d64:	4a1c      	ldr	r2, [pc, #112]	@ (8007dd8 <TIM_OC3_SetConfig+0x11c>)
 8007d66:	4293      	cmp	r3, r2
 8007d68:	d007      	beq.n	8007d7a <TIM_OC3_SetConfig+0xbe>
 8007d6a:	687b      	ldr	r3, [r7, #4]
 8007d6c:	4a1b      	ldr	r2, [pc, #108]	@ (8007ddc <TIM_OC3_SetConfig+0x120>)
 8007d6e:	4293      	cmp	r3, r2
 8007d70:	d003      	beq.n	8007d7a <TIM_OC3_SetConfig+0xbe>
 8007d72:	687b      	ldr	r3, [r7, #4]
 8007d74:	4a16      	ldr	r2, [pc, #88]	@ (8007dd0 <TIM_OC3_SetConfig+0x114>)
 8007d76:	4293      	cmp	r3, r2
 8007d78:	d113      	bne.n	8007da2 <TIM_OC3_SetConfig+0xe6>
 8007d7a:	693b      	ldr	r3, [r7, #16]
 8007d7c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8007d80:	613b      	str	r3, [r7, #16]
 8007d82:	693b      	ldr	r3, [r7, #16]
 8007d84:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007d88:	613b      	str	r3, [r7, #16]
 8007d8a:	683b      	ldr	r3, [r7, #0]
 8007d8c:	695b      	ldr	r3, [r3, #20]
 8007d8e:	011b      	lsls	r3, r3, #4
 8007d90:	693a      	ldr	r2, [r7, #16]
 8007d92:	4313      	orrs	r3, r2
 8007d94:	613b      	str	r3, [r7, #16]
 8007d96:	683b      	ldr	r3, [r7, #0]
 8007d98:	699b      	ldr	r3, [r3, #24]
 8007d9a:	011b      	lsls	r3, r3, #4
 8007d9c:	693a      	ldr	r2, [r7, #16]
 8007d9e:	4313      	orrs	r3, r2
 8007da0:	613b      	str	r3, [r7, #16]
 8007da2:	687b      	ldr	r3, [r7, #4]
 8007da4:	693a      	ldr	r2, [r7, #16]
 8007da6:	605a      	str	r2, [r3, #4]
 8007da8:	687b      	ldr	r3, [r7, #4]
 8007daa:	68fa      	ldr	r2, [r7, #12]
 8007dac:	61da      	str	r2, [r3, #28]
 8007dae:	683b      	ldr	r3, [r7, #0]
 8007db0:	685a      	ldr	r2, [r3, #4]
 8007db2:	687b      	ldr	r3, [r7, #4]
 8007db4:	63da      	str	r2, [r3, #60]	@ 0x3c
 8007db6:	687b      	ldr	r3, [r7, #4]
 8007db8:	697a      	ldr	r2, [r7, #20]
 8007dba:	621a      	str	r2, [r3, #32]
 8007dbc:	bf00      	nop
 8007dbe:	371c      	adds	r7, #28
 8007dc0:	46bd      	mov	sp, r7
 8007dc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007dc6:	4770      	bx	lr
 8007dc8:	40012c00 	.word	0x40012c00
 8007dcc:	40013400 	.word	0x40013400
 8007dd0:	40015000 	.word	0x40015000
 8007dd4:	40014000 	.word	0x40014000
 8007dd8:	40014400 	.word	0x40014400
 8007ddc:	40014800 	.word	0x40014800

08007de0 <TIM_OC4_SetConfig>:
 8007de0:	b480      	push	{r7}
 8007de2:	b087      	sub	sp, #28
 8007de4:	af00      	add	r7, sp, #0
 8007de6:	6078      	str	r0, [r7, #4]
 8007de8:	6039      	str	r1, [r7, #0]
 8007dea:	687b      	ldr	r3, [r7, #4]
 8007dec:	6a1b      	ldr	r3, [r3, #32]
 8007dee:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8007df2:	687b      	ldr	r3, [r7, #4]
 8007df4:	621a      	str	r2, [r3, #32]
 8007df6:	687b      	ldr	r3, [r7, #4]
 8007df8:	6a1b      	ldr	r3, [r3, #32]
 8007dfa:	617b      	str	r3, [r7, #20]
 8007dfc:	687b      	ldr	r3, [r7, #4]
 8007dfe:	685b      	ldr	r3, [r3, #4]
 8007e00:	613b      	str	r3, [r7, #16]
 8007e02:	687b      	ldr	r3, [r7, #4]
 8007e04:	69db      	ldr	r3, [r3, #28]
 8007e06:	60fb      	str	r3, [r7, #12]
 8007e08:	68fb      	ldr	r3, [r7, #12]
 8007e0a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8007e0e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007e12:	60fb      	str	r3, [r7, #12]
 8007e14:	68fb      	ldr	r3, [r7, #12]
 8007e16:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007e1a:	60fb      	str	r3, [r7, #12]
 8007e1c:	683b      	ldr	r3, [r7, #0]
 8007e1e:	681b      	ldr	r3, [r3, #0]
 8007e20:	021b      	lsls	r3, r3, #8
 8007e22:	68fa      	ldr	r2, [r7, #12]
 8007e24:	4313      	orrs	r3, r2
 8007e26:	60fb      	str	r3, [r7, #12]
 8007e28:	697b      	ldr	r3, [r7, #20]
 8007e2a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007e2e:	617b      	str	r3, [r7, #20]
 8007e30:	683b      	ldr	r3, [r7, #0]
 8007e32:	689b      	ldr	r3, [r3, #8]
 8007e34:	031b      	lsls	r3, r3, #12
 8007e36:	697a      	ldr	r2, [r7, #20]
 8007e38:	4313      	orrs	r3, r2
 8007e3a:	617b      	str	r3, [r7, #20]
 8007e3c:	687b      	ldr	r3, [r7, #4]
 8007e3e:	4a2c      	ldr	r2, [pc, #176]	@ (8007ef0 <TIM_OC4_SetConfig+0x110>)
 8007e40:	4293      	cmp	r3, r2
 8007e42:	d007      	beq.n	8007e54 <TIM_OC4_SetConfig+0x74>
 8007e44:	687b      	ldr	r3, [r7, #4]
 8007e46:	4a2b      	ldr	r2, [pc, #172]	@ (8007ef4 <TIM_OC4_SetConfig+0x114>)
 8007e48:	4293      	cmp	r3, r2
 8007e4a:	d003      	beq.n	8007e54 <TIM_OC4_SetConfig+0x74>
 8007e4c:	687b      	ldr	r3, [r7, #4]
 8007e4e:	4a2a      	ldr	r2, [pc, #168]	@ (8007ef8 <TIM_OC4_SetConfig+0x118>)
 8007e50:	4293      	cmp	r3, r2
 8007e52:	d10d      	bne.n	8007e70 <TIM_OC4_SetConfig+0x90>
 8007e54:	697b      	ldr	r3, [r7, #20]
 8007e56:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8007e5a:	617b      	str	r3, [r7, #20]
 8007e5c:	683b      	ldr	r3, [r7, #0]
 8007e5e:	68db      	ldr	r3, [r3, #12]
 8007e60:	031b      	lsls	r3, r3, #12
 8007e62:	697a      	ldr	r2, [r7, #20]
 8007e64:	4313      	orrs	r3, r2
 8007e66:	617b      	str	r3, [r7, #20]
 8007e68:	697b      	ldr	r3, [r7, #20]
 8007e6a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8007e6e:	617b      	str	r3, [r7, #20]
 8007e70:	687b      	ldr	r3, [r7, #4]
 8007e72:	4a1f      	ldr	r2, [pc, #124]	@ (8007ef0 <TIM_OC4_SetConfig+0x110>)
 8007e74:	4293      	cmp	r3, r2
 8007e76:	d013      	beq.n	8007ea0 <TIM_OC4_SetConfig+0xc0>
 8007e78:	687b      	ldr	r3, [r7, #4]
 8007e7a:	4a1e      	ldr	r2, [pc, #120]	@ (8007ef4 <TIM_OC4_SetConfig+0x114>)
 8007e7c:	4293      	cmp	r3, r2
 8007e7e:	d00f      	beq.n	8007ea0 <TIM_OC4_SetConfig+0xc0>
 8007e80:	687b      	ldr	r3, [r7, #4]
 8007e82:	4a1e      	ldr	r2, [pc, #120]	@ (8007efc <TIM_OC4_SetConfig+0x11c>)
 8007e84:	4293      	cmp	r3, r2
 8007e86:	d00b      	beq.n	8007ea0 <TIM_OC4_SetConfig+0xc0>
 8007e88:	687b      	ldr	r3, [r7, #4]
 8007e8a:	4a1d      	ldr	r2, [pc, #116]	@ (8007f00 <TIM_OC4_SetConfig+0x120>)
 8007e8c:	4293      	cmp	r3, r2
 8007e8e:	d007      	beq.n	8007ea0 <TIM_OC4_SetConfig+0xc0>
 8007e90:	687b      	ldr	r3, [r7, #4]
 8007e92:	4a1c      	ldr	r2, [pc, #112]	@ (8007f04 <TIM_OC4_SetConfig+0x124>)
 8007e94:	4293      	cmp	r3, r2
 8007e96:	d003      	beq.n	8007ea0 <TIM_OC4_SetConfig+0xc0>
 8007e98:	687b      	ldr	r3, [r7, #4]
 8007e9a:	4a17      	ldr	r2, [pc, #92]	@ (8007ef8 <TIM_OC4_SetConfig+0x118>)
 8007e9c:	4293      	cmp	r3, r2
 8007e9e:	d113      	bne.n	8007ec8 <TIM_OC4_SetConfig+0xe8>
 8007ea0:	693b      	ldr	r3, [r7, #16]
 8007ea2:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8007ea6:	613b      	str	r3, [r7, #16]
 8007ea8:	693b      	ldr	r3, [r7, #16]
 8007eaa:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8007eae:	613b      	str	r3, [r7, #16]
 8007eb0:	683b      	ldr	r3, [r7, #0]
 8007eb2:	695b      	ldr	r3, [r3, #20]
 8007eb4:	019b      	lsls	r3, r3, #6
 8007eb6:	693a      	ldr	r2, [r7, #16]
 8007eb8:	4313      	orrs	r3, r2
 8007eba:	613b      	str	r3, [r7, #16]
 8007ebc:	683b      	ldr	r3, [r7, #0]
 8007ebe:	699b      	ldr	r3, [r3, #24]
 8007ec0:	019b      	lsls	r3, r3, #6
 8007ec2:	693a      	ldr	r2, [r7, #16]
 8007ec4:	4313      	orrs	r3, r2
 8007ec6:	613b      	str	r3, [r7, #16]
 8007ec8:	687b      	ldr	r3, [r7, #4]
 8007eca:	693a      	ldr	r2, [r7, #16]
 8007ecc:	605a      	str	r2, [r3, #4]
 8007ece:	687b      	ldr	r3, [r7, #4]
 8007ed0:	68fa      	ldr	r2, [r7, #12]
 8007ed2:	61da      	str	r2, [r3, #28]
 8007ed4:	683b      	ldr	r3, [r7, #0]
 8007ed6:	685a      	ldr	r2, [r3, #4]
 8007ed8:	687b      	ldr	r3, [r7, #4]
 8007eda:	641a      	str	r2, [r3, #64]	@ 0x40
 8007edc:	687b      	ldr	r3, [r7, #4]
 8007ede:	697a      	ldr	r2, [r7, #20]
 8007ee0:	621a      	str	r2, [r3, #32]
 8007ee2:	bf00      	nop
 8007ee4:	371c      	adds	r7, #28
 8007ee6:	46bd      	mov	sp, r7
 8007ee8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007eec:	4770      	bx	lr
 8007eee:	bf00      	nop
 8007ef0:	40012c00 	.word	0x40012c00
 8007ef4:	40013400 	.word	0x40013400
 8007ef8:	40015000 	.word	0x40015000
 8007efc:	40014000 	.word	0x40014000
 8007f00:	40014400 	.word	0x40014400
 8007f04:	40014800 	.word	0x40014800

08007f08 <TIM_OC5_SetConfig>:
 8007f08:	b480      	push	{r7}
 8007f0a:	b087      	sub	sp, #28
 8007f0c:	af00      	add	r7, sp, #0
 8007f0e:	6078      	str	r0, [r7, #4]
 8007f10:	6039      	str	r1, [r7, #0]
 8007f12:	687b      	ldr	r3, [r7, #4]
 8007f14:	6a1b      	ldr	r3, [r3, #32]
 8007f16:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8007f1a:	687b      	ldr	r3, [r7, #4]
 8007f1c:	621a      	str	r2, [r3, #32]
 8007f1e:	687b      	ldr	r3, [r7, #4]
 8007f20:	6a1b      	ldr	r3, [r3, #32]
 8007f22:	613b      	str	r3, [r7, #16]
 8007f24:	687b      	ldr	r3, [r7, #4]
 8007f26:	685b      	ldr	r3, [r3, #4]
 8007f28:	617b      	str	r3, [r7, #20]
 8007f2a:	687b      	ldr	r3, [r7, #4]
 8007f2c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8007f2e:	60fb      	str	r3, [r7, #12]
 8007f30:	68fb      	ldr	r3, [r7, #12]
 8007f32:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8007f36:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007f3a:	60fb      	str	r3, [r7, #12]
 8007f3c:	683b      	ldr	r3, [r7, #0]
 8007f3e:	681b      	ldr	r3, [r3, #0]
 8007f40:	68fa      	ldr	r2, [r7, #12]
 8007f42:	4313      	orrs	r3, r2
 8007f44:	60fb      	str	r3, [r7, #12]
 8007f46:	693b      	ldr	r3, [r7, #16]
 8007f48:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 8007f4c:	613b      	str	r3, [r7, #16]
 8007f4e:	683b      	ldr	r3, [r7, #0]
 8007f50:	689b      	ldr	r3, [r3, #8]
 8007f52:	041b      	lsls	r3, r3, #16
 8007f54:	693a      	ldr	r2, [r7, #16]
 8007f56:	4313      	orrs	r3, r2
 8007f58:	613b      	str	r3, [r7, #16]
 8007f5a:	687b      	ldr	r3, [r7, #4]
 8007f5c:	4a19      	ldr	r2, [pc, #100]	@ (8007fc4 <TIM_OC5_SetConfig+0xbc>)
 8007f5e:	4293      	cmp	r3, r2
 8007f60:	d013      	beq.n	8007f8a <TIM_OC5_SetConfig+0x82>
 8007f62:	687b      	ldr	r3, [r7, #4]
 8007f64:	4a18      	ldr	r2, [pc, #96]	@ (8007fc8 <TIM_OC5_SetConfig+0xc0>)
 8007f66:	4293      	cmp	r3, r2
 8007f68:	d00f      	beq.n	8007f8a <TIM_OC5_SetConfig+0x82>
 8007f6a:	687b      	ldr	r3, [r7, #4]
 8007f6c:	4a17      	ldr	r2, [pc, #92]	@ (8007fcc <TIM_OC5_SetConfig+0xc4>)
 8007f6e:	4293      	cmp	r3, r2
 8007f70:	d00b      	beq.n	8007f8a <TIM_OC5_SetConfig+0x82>
 8007f72:	687b      	ldr	r3, [r7, #4]
 8007f74:	4a16      	ldr	r2, [pc, #88]	@ (8007fd0 <TIM_OC5_SetConfig+0xc8>)
 8007f76:	4293      	cmp	r3, r2
 8007f78:	d007      	beq.n	8007f8a <TIM_OC5_SetConfig+0x82>
 8007f7a:	687b      	ldr	r3, [r7, #4]
 8007f7c:	4a15      	ldr	r2, [pc, #84]	@ (8007fd4 <TIM_OC5_SetConfig+0xcc>)
 8007f7e:	4293      	cmp	r3, r2
 8007f80:	d003      	beq.n	8007f8a <TIM_OC5_SetConfig+0x82>
 8007f82:	687b      	ldr	r3, [r7, #4]
 8007f84:	4a14      	ldr	r2, [pc, #80]	@ (8007fd8 <TIM_OC5_SetConfig+0xd0>)
 8007f86:	4293      	cmp	r3, r2
 8007f88:	d109      	bne.n	8007f9e <TIM_OC5_SetConfig+0x96>
 8007f8a:	697b      	ldr	r3, [r7, #20]
 8007f8c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8007f90:	617b      	str	r3, [r7, #20]
 8007f92:	683b      	ldr	r3, [r7, #0]
 8007f94:	695b      	ldr	r3, [r3, #20]
 8007f96:	021b      	lsls	r3, r3, #8
 8007f98:	697a      	ldr	r2, [r7, #20]
 8007f9a:	4313      	orrs	r3, r2
 8007f9c:	617b      	str	r3, [r7, #20]
 8007f9e:	687b      	ldr	r3, [r7, #4]
 8007fa0:	697a      	ldr	r2, [r7, #20]
 8007fa2:	605a      	str	r2, [r3, #4]
 8007fa4:	687b      	ldr	r3, [r7, #4]
 8007fa6:	68fa      	ldr	r2, [r7, #12]
 8007fa8:	651a      	str	r2, [r3, #80]	@ 0x50
 8007faa:	683b      	ldr	r3, [r7, #0]
 8007fac:	685a      	ldr	r2, [r3, #4]
 8007fae:	687b      	ldr	r3, [r7, #4]
 8007fb0:	649a      	str	r2, [r3, #72]	@ 0x48
 8007fb2:	687b      	ldr	r3, [r7, #4]
 8007fb4:	693a      	ldr	r2, [r7, #16]
 8007fb6:	621a      	str	r2, [r3, #32]
 8007fb8:	bf00      	nop
 8007fba:	371c      	adds	r7, #28
 8007fbc:	46bd      	mov	sp, r7
 8007fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fc2:	4770      	bx	lr
 8007fc4:	40012c00 	.word	0x40012c00
 8007fc8:	40013400 	.word	0x40013400
 8007fcc:	40014000 	.word	0x40014000
 8007fd0:	40014400 	.word	0x40014400
 8007fd4:	40014800 	.word	0x40014800
 8007fd8:	40015000 	.word	0x40015000

08007fdc <TIM_OC6_SetConfig>:
 8007fdc:	b480      	push	{r7}
 8007fde:	b087      	sub	sp, #28
 8007fe0:	af00      	add	r7, sp, #0
 8007fe2:	6078      	str	r0, [r7, #4]
 8007fe4:	6039      	str	r1, [r7, #0]
 8007fe6:	687b      	ldr	r3, [r7, #4]
 8007fe8:	6a1b      	ldr	r3, [r3, #32]
 8007fea:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8007fee:	687b      	ldr	r3, [r7, #4]
 8007ff0:	621a      	str	r2, [r3, #32]
 8007ff2:	687b      	ldr	r3, [r7, #4]
 8007ff4:	6a1b      	ldr	r3, [r3, #32]
 8007ff6:	613b      	str	r3, [r7, #16]
 8007ff8:	687b      	ldr	r3, [r7, #4]
 8007ffa:	685b      	ldr	r3, [r3, #4]
 8007ffc:	617b      	str	r3, [r7, #20]
 8007ffe:	687b      	ldr	r3, [r7, #4]
 8008000:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008002:	60fb      	str	r3, [r7, #12]
 8008004:	68fb      	ldr	r3, [r7, #12]
 8008006:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800800a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800800e:	60fb      	str	r3, [r7, #12]
 8008010:	683b      	ldr	r3, [r7, #0]
 8008012:	681b      	ldr	r3, [r3, #0]
 8008014:	021b      	lsls	r3, r3, #8
 8008016:	68fa      	ldr	r2, [r7, #12]
 8008018:	4313      	orrs	r3, r2
 800801a:	60fb      	str	r3, [r7, #12]
 800801c:	693b      	ldr	r3, [r7, #16]
 800801e:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8008022:	613b      	str	r3, [r7, #16]
 8008024:	683b      	ldr	r3, [r7, #0]
 8008026:	689b      	ldr	r3, [r3, #8]
 8008028:	051b      	lsls	r3, r3, #20
 800802a:	693a      	ldr	r2, [r7, #16]
 800802c:	4313      	orrs	r3, r2
 800802e:	613b      	str	r3, [r7, #16]
 8008030:	687b      	ldr	r3, [r7, #4]
 8008032:	4a1a      	ldr	r2, [pc, #104]	@ (800809c <TIM_OC6_SetConfig+0xc0>)
 8008034:	4293      	cmp	r3, r2
 8008036:	d013      	beq.n	8008060 <TIM_OC6_SetConfig+0x84>
 8008038:	687b      	ldr	r3, [r7, #4]
 800803a:	4a19      	ldr	r2, [pc, #100]	@ (80080a0 <TIM_OC6_SetConfig+0xc4>)
 800803c:	4293      	cmp	r3, r2
 800803e:	d00f      	beq.n	8008060 <TIM_OC6_SetConfig+0x84>
 8008040:	687b      	ldr	r3, [r7, #4]
 8008042:	4a18      	ldr	r2, [pc, #96]	@ (80080a4 <TIM_OC6_SetConfig+0xc8>)
 8008044:	4293      	cmp	r3, r2
 8008046:	d00b      	beq.n	8008060 <TIM_OC6_SetConfig+0x84>
 8008048:	687b      	ldr	r3, [r7, #4]
 800804a:	4a17      	ldr	r2, [pc, #92]	@ (80080a8 <TIM_OC6_SetConfig+0xcc>)
 800804c:	4293      	cmp	r3, r2
 800804e:	d007      	beq.n	8008060 <TIM_OC6_SetConfig+0x84>
 8008050:	687b      	ldr	r3, [r7, #4]
 8008052:	4a16      	ldr	r2, [pc, #88]	@ (80080ac <TIM_OC6_SetConfig+0xd0>)
 8008054:	4293      	cmp	r3, r2
 8008056:	d003      	beq.n	8008060 <TIM_OC6_SetConfig+0x84>
 8008058:	687b      	ldr	r3, [r7, #4]
 800805a:	4a15      	ldr	r2, [pc, #84]	@ (80080b0 <TIM_OC6_SetConfig+0xd4>)
 800805c:	4293      	cmp	r3, r2
 800805e:	d109      	bne.n	8008074 <TIM_OC6_SetConfig+0x98>
 8008060:	697b      	ldr	r3, [r7, #20]
 8008062:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8008066:	617b      	str	r3, [r7, #20]
 8008068:	683b      	ldr	r3, [r7, #0]
 800806a:	695b      	ldr	r3, [r3, #20]
 800806c:	029b      	lsls	r3, r3, #10
 800806e:	697a      	ldr	r2, [r7, #20]
 8008070:	4313      	orrs	r3, r2
 8008072:	617b      	str	r3, [r7, #20]
 8008074:	687b      	ldr	r3, [r7, #4]
 8008076:	697a      	ldr	r2, [r7, #20]
 8008078:	605a      	str	r2, [r3, #4]
 800807a:	687b      	ldr	r3, [r7, #4]
 800807c:	68fa      	ldr	r2, [r7, #12]
 800807e:	651a      	str	r2, [r3, #80]	@ 0x50
 8008080:	683b      	ldr	r3, [r7, #0]
 8008082:	685a      	ldr	r2, [r3, #4]
 8008084:	687b      	ldr	r3, [r7, #4]
 8008086:	64da      	str	r2, [r3, #76]	@ 0x4c
 8008088:	687b      	ldr	r3, [r7, #4]
 800808a:	693a      	ldr	r2, [r7, #16]
 800808c:	621a      	str	r2, [r3, #32]
 800808e:	bf00      	nop
 8008090:	371c      	adds	r7, #28
 8008092:	46bd      	mov	sp, r7
 8008094:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008098:	4770      	bx	lr
 800809a:	bf00      	nop
 800809c:	40012c00 	.word	0x40012c00
 80080a0:	40013400 	.word	0x40013400
 80080a4:	40014000 	.word	0x40014000
 80080a8:	40014400 	.word	0x40014400
 80080ac:	40014800 	.word	0x40014800
 80080b0:	40015000 	.word	0x40015000

080080b4 <TIM_CCxChannelCmd>:
 80080b4:	b480      	push	{r7}
 80080b6:	b087      	sub	sp, #28
 80080b8:	af00      	add	r7, sp, #0
 80080ba:	60f8      	str	r0, [r7, #12]
 80080bc:	60b9      	str	r1, [r7, #8]
 80080be:	607a      	str	r2, [r7, #4]
 80080c0:	68bb      	ldr	r3, [r7, #8]
 80080c2:	f003 031f 	and.w	r3, r3, #31
 80080c6:	2201      	movs	r2, #1
 80080c8:	fa02 f303 	lsl.w	r3, r2, r3
 80080cc:	617b      	str	r3, [r7, #20]
 80080ce:	68fb      	ldr	r3, [r7, #12]
 80080d0:	6a1a      	ldr	r2, [r3, #32]
 80080d2:	697b      	ldr	r3, [r7, #20]
 80080d4:	43db      	mvns	r3, r3
 80080d6:	401a      	ands	r2, r3
 80080d8:	68fb      	ldr	r3, [r7, #12]
 80080da:	621a      	str	r2, [r3, #32]
 80080dc:	68fb      	ldr	r3, [r7, #12]
 80080de:	6a1a      	ldr	r2, [r3, #32]
 80080e0:	68bb      	ldr	r3, [r7, #8]
 80080e2:	f003 031f 	and.w	r3, r3, #31
 80080e6:	6879      	ldr	r1, [r7, #4]
 80080e8:	fa01 f303 	lsl.w	r3, r1, r3
 80080ec:	431a      	orrs	r2, r3
 80080ee:	68fb      	ldr	r3, [r7, #12]
 80080f0:	621a      	str	r2, [r3, #32]
 80080f2:	bf00      	nop
 80080f4:	371c      	adds	r7, #28
 80080f6:	46bd      	mov	sp, r7
 80080f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080fc:	4770      	bx	lr
	...

08008100 <HAL_TIMEx_MasterConfigSynchronization>:
 8008100:	b480      	push	{r7}
 8008102:	b085      	sub	sp, #20
 8008104:	af00      	add	r7, sp, #0
 8008106:	6078      	str	r0, [r7, #4]
 8008108:	6039      	str	r1, [r7, #0]
 800810a:	687b      	ldr	r3, [r7, #4]
 800810c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8008110:	2b01      	cmp	r3, #1
 8008112:	d101      	bne.n	8008118 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8008114:	2302      	movs	r3, #2
 8008116:	e074      	b.n	8008202 <HAL_TIMEx_MasterConfigSynchronization+0x102>
 8008118:	687b      	ldr	r3, [r7, #4]
 800811a:	2201      	movs	r2, #1
 800811c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008120:	687b      	ldr	r3, [r7, #4]
 8008122:	2202      	movs	r2, #2
 8008124:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8008128:	687b      	ldr	r3, [r7, #4]
 800812a:	681b      	ldr	r3, [r3, #0]
 800812c:	685b      	ldr	r3, [r3, #4]
 800812e:	60fb      	str	r3, [r7, #12]
 8008130:	687b      	ldr	r3, [r7, #4]
 8008132:	681b      	ldr	r3, [r3, #0]
 8008134:	689b      	ldr	r3, [r3, #8]
 8008136:	60bb      	str	r3, [r7, #8]
 8008138:	687b      	ldr	r3, [r7, #4]
 800813a:	681b      	ldr	r3, [r3, #0]
 800813c:	4a34      	ldr	r2, [pc, #208]	@ (8008210 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 800813e:	4293      	cmp	r3, r2
 8008140:	d009      	beq.n	8008156 <HAL_TIMEx_MasterConfigSynchronization+0x56>
 8008142:	687b      	ldr	r3, [r7, #4]
 8008144:	681b      	ldr	r3, [r3, #0]
 8008146:	4a33      	ldr	r2, [pc, #204]	@ (8008214 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 8008148:	4293      	cmp	r3, r2
 800814a:	d004      	beq.n	8008156 <HAL_TIMEx_MasterConfigSynchronization+0x56>
 800814c:	687b      	ldr	r3, [r7, #4]
 800814e:	681b      	ldr	r3, [r3, #0]
 8008150:	4a31      	ldr	r2, [pc, #196]	@ (8008218 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 8008152:	4293      	cmp	r3, r2
 8008154:	d108      	bne.n	8008168 <HAL_TIMEx_MasterConfigSynchronization+0x68>
 8008156:	68fb      	ldr	r3, [r7, #12]
 8008158:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 800815c:	60fb      	str	r3, [r7, #12]
 800815e:	683b      	ldr	r3, [r7, #0]
 8008160:	685b      	ldr	r3, [r3, #4]
 8008162:	68fa      	ldr	r2, [r7, #12]
 8008164:	4313      	orrs	r3, r2
 8008166:	60fb      	str	r3, [r7, #12]
 8008168:	68fb      	ldr	r3, [r7, #12]
 800816a:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 800816e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008172:	60fb      	str	r3, [r7, #12]
 8008174:	683b      	ldr	r3, [r7, #0]
 8008176:	681b      	ldr	r3, [r3, #0]
 8008178:	68fa      	ldr	r2, [r7, #12]
 800817a:	4313      	orrs	r3, r2
 800817c:	60fb      	str	r3, [r7, #12]
 800817e:	687b      	ldr	r3, [r7, #4]
 8008180:	681b      	ldr	r3, [r3, #0]
 8008182:	68fa      	ldr	r2, [r7, #12]
 8008184:	605a      	str	r2, [r3, #4]
 8008186:	687b      	ldr	r3, [r7, #4]
 8008188:	681b      	ldr	r3, [r3, #0]
 800818a:	4a21      	ldr	r2, [pc, #132]	@ (8008210 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 800818c:	4293      	cmp	r3, r2
 800818e:	d022      	beq.n	80081d6 <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 8008190:	687b      	ldr	r3, [r7, #4]
 8008192:	681b      	ldr	r3, [r3, #0]
 8008194:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008198:	d01d      	beq.n	80081d6 <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 800819a:	687b      	ldr	r3, [r7, #4]
 800819c:	681b      	ldr	r3, [r3, #0]
 800819e:	4a1f      	ldr	r2, [pc, #124]	@ (800821c <HAL_TIMEx_MasterConfigSynchronization+0x11c>)
 80081a0:	4293      	cmp	r3, r2
 80081a2:	d018      	beq.n	80081d6 <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 80081a4:	687b      	ldr	r3, [r7, #4]
 80081a6:	681b      	ldr	r3, [r3, #0]
 80081a8:	4a1d      	ldr	r2, [pc, #116]	@ (8008220 <HAL_TIMEx_MasterConfigSynchronization+0x120>)
 80081aa:	4293      	cmp	r3, r2
 80081ac:	d013      	beq.n	80081d6 <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 80081ae:	687b      	ldr	r3, [r7, #4]
 80081b0:	681b      	ldr	r3, [r3, #0]
 80081b2:	4a1c      	ldr	r2, [pc, #112]	@ (8008224 <HAL_TIMEx_MasterConfigSynchronization+0x124>)
 80081b4:	4293      	cmp	r3, r2
 80081b6:	d00e      	beq.n	80081d6 <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 80081b8:	687b      	ldr	r3, [r7, #4]
 80081ba:	681b      	ldr	r3, [r3, #0]
 80081bc:	4a15      	ldr	r2, [pc, #84]	@ (8008214 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 80081be:	4293      	cmp	r3, r2
 80081c0:	d009      	beq.n	80081d6 <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 80081c2:	687b      	ldr	r3, [r7, #4]
 80081c4:	681b      	ldr	r3, [r3, #0]
 80081c6:	4a18      	ldr	r2, [pc, #96]	@ (8008228 <HAL_TIMEx_MasterConfigSynchronization+0x128>)
 80081c8:	4293      	cmp	r3, r2
 80081ca:	d004      	beq.n	80081d6 <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 80081cc:	687b      	ldr	r3, [r7, #4]
 80081ce:	681b      	ldr	r3, [r3, #0]
 80081d0:	4a11      	ldr	r2, [pc, #68]	@ (8008218 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 80081d2:	4293      	cmp	r3, r2
 80081d4:	d10c      	bne.n	80081f0 <HAL_TIMEx_MasterConfigSynchronization+0xf0>
 80081d6:	68bb      	ldr	r3, [r7, #8]
 80081d8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80081dc:	60bb      	str	r3, [r7, #8]
 80081de:	683b      	ldr	r3, [r7, #0]
 80081e0:	689b      	ldr	r3, [r3, #8]
 80081e2:	68ba      	ldr	r2, [r7, #8]
 80081e4:	4313      	orrs	r3, r2
 80081e6:	60bb      	str	r3, [r7, #8]
 80081e8:	687b      	ldr	r3, [r7, #4]
 80081ea:	681b      	ldr	r3, [r3, #0]
 80081ec:	68ba      	ldr	r2, [r7, #8]
 80081ee:	609a      	str	r2, [r3, #8]
 80081f0:	687b      	ldr	r3, [r7, #4]
 80081f2:	2201      	movs	r2, #1
 80081f4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80081f8:	687b      	ldr	r3, [r7, #4]
 80081fa:	2200      	movs	r2, #0
 80081fc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008200:	2300      	movs	r3, #0
 8008202:	4618      	mov	r0, r3
 8008204:	3714      	adds	r7, #20
 8008206:	46bd      	mov	sp, r7
 8008208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800820c:	4770      	bx	lr
 800820e:	bf00      	nop
 8008210:	40012c00 	.word	0x40012c00
 8008214:	40013400 	.word	0x40013400
 8008218:	40015000 	.word	0x40015000
 800821c:	40000400 	.word	0x40000400
 8008220:	40000800 	.word	0x40000800
 8008224:	40000c00 	.word	0x40000c00
 8008228:	40014000 	.word	0x40014000

0800822c <HAL_TIMEx_ConfigBreakDeadTime>:
 800822c:	b480      	push	{r7}
 800822e:	b085      	sub	sp, #20
 8008230:	af00      	add	r7, sp, #0
 8008232:	6078      	str	r0, [r7, #4]
 8008234:	6039      	str	r1, [r7, #0]
 8008236:	2300      	movs	r3, #0
 8008238:	60fb      	str	r3, [r7, #12]
 800823a:	687b      	ldr	r3, [r7, #4]
 800823c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8008240:	2b01      	cmp	r3, #1
 8008242:	d101      	bne.n	8008248 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8008244:	2302      	movs	r3, #2
 8008246:	e096      	b.n	8008376 <HAL_TIMEx_ConfigBreakDeadTime+0x14a>
 8008248:	687b      	ldr	r3, [r7, #4]
 800824a:	2201      	movs	r2, #1
 800824c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008250:	68fb      	ldr	r3, [r7, #12]
 8008252:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8008256:	683b      	ldr	r3, [r7, #0]
 8008258:	68db      	ldr	r3, [r3, #12]
 800825a:	4313      	orrs	r3, r2
 800825c:	60fb      	str	r3, [r7, #12]
 800825e:	68fb      	ldr	r3, [r7, #12]
 8008260:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8008264:	683b      	ldr	r3, [r7, #0]
 8008266:	689b      	ldr	r3, [r3, #8]
 8008268:	4313      	orrs	r3, r2
 800826a:	60fb      	str	r3, [r7, #12]
 800826c:	68fb      	ldr	r3, [r7, #12]
 800826e:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 8008272:	683b      	ldr	r3, [r7, #0]
 8008274:	685b      	ldr	r3, [r3, #4]
 8008276:	4313      	orrs	r3, r2
 8008278:	60fb      	str	r3, [r7, #12]
 800827a:	68fb      	ldr	r3, [r7, #12]
 800827c:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8008280:	683b      	ldr	r3, [r7, #0]
 8008282:	681b      	ldr	r3, [r3, #0]
 8008284:	4313      	orrs	r3, r2
 8008286:	60fb      	str	r3, [r7, #12]
 8008288:	68fb      	ldr	r3, [r7, #12]
 800828a:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 800828e:	683b      	ldr	r3, [r7, #0]
 8008290:	691b      	ldr	r3, [r3, #16]
 8008292:	4313      	orrs	r3, r2
 8008294:	60fb      	str	r3, [r7, #12]
 8008296:	68fb      	ldr	r3, [r7, #12]
 8008298:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 800829c:	683b      	ldr	r3, [r7, #0]
 800829e:	695b      	ldr	r3, [r3, #20]
 80082a0:	4313      	orrs	r3, r2
 80082a2:	60fb      	str	r3, [r7, #12]
 80082a4:	68fb      	ldr	r3, [r7, #12]
 80082a6:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 80082aa:	683b      	ldr	r3, [r7, #0]
 80082ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80082ae:	4313      	orrs	r3, r2
 80082b0:	60fb      	str	r3, [r7, #12]
 80082b2:	68fb      	ldr	r3, [r7, #12]
 80082b4:	f423 2270 	bic.w	r2, r3, #983040	@ 0xf0000
 80082b8:	683b      	ldr	r3, [r7, #0]
 80082ba:	699b      	ldr	r3, [r3, #24]
 80082bc:	041b      	lsls	r3, r3, #16
 80082be:	4313      	orrs	r3, r2
 80082c0:	60fb      	str	r3, [r7, #12]
 80082c2:	687b      	ldr	r3, [r7, #4]
 80082c4:	681b      	ldr	r3, [r3, #0]
 80082c6:	4a2f      	ldr	r2, [pc, #188]	@ (8008384 <HAL_TIMEx_ConfigBreakDeadTime+0x158>)
 80082c8:	4293      	cmp	r3, r2
 80082ca:	d009      	beq.n	80082e0 <HAL_TIMEx_ConfigBreakDeadTime+0xb4>
 80082cc:	687b      	ldr	r3, [r7, #4]
 80082ce:	681b      	ldr	r3, [r3, #0]
 80082d0:	4a2d      	ldr	r2, [pc, #180]	@ (8008388 <HAL_TIMEx_ConfigBreakDeadTime+0x15c>)
 80082d2:	4293      	cmp	r3, r2
 80082d4:	d004      	beq.n	80082e0 <HAL_TIMEx_ConfigBreakDeadTime+0xb4>
 80082d6:	687b      	ldr	r3, [r7, #4]
 80082d8:	681b      	ldr	r3, [r3, #0]
 80082da:	4a2c      	ldr	r2, [pc, #176]	@ (800838c <HAL_TIMEx_ConfigBreakDeadTime+0x160>)
 80082dc:	4293      	cmp	r3, r2
 80082de:	d106      	bne.n	80082ee <HAL_TIMEx_ConfigBreakDeadTime+0xc2>
 80082e0:	68fb      	ldr	r3, [r7, #12]
 80082e2:	f023 5280 	bic.w	r2, r3, #268435456	@ 0x10000000
 80082e6:	683b      	ldr	r3, [r7, #0]
 80082e8:	69db      	ldr	r3, [r3, #28]
 80082ea:	4313      	orrs	r3, r2
 80082ec:	60fb      	str	r3, [r7, #12]
 80082ee:	687b      	ldr	r3, [r7, #4]
 80082f0:	681b      	ldr	r3, [r3, #0]
 80082f2:	4a24      	ldr	r2, [pc, #144]	@ (8008384 <HAL_TIMEx_ConfigBreakDeadTime+0x158>)
 80082f4:	4293      	cmp	r3, r2
 80082f6:	d009      	beq.n	800830c <HAL_TIMEx_ConfigBreakDeadTime+0xe0>
 80082f8:	687b      	ldr	r3, [r7, #4]
 80082fa:	681b      	ldr	r3, [r3, #0]
 80082fc:	4a22      	ldr	r2, [pc, #136]	@ (8008388 <HAL_TIMEx_ConfigBreakDeadTime+0x15c>)
 80082fe:	4293      	cmp	r3, r2
 8008300:	d004      	beq.n	800830c <HAL_TIMEx_ConfigBreakDeadTime+0xe0>
 8008302:	687b      	ldr	r3, [r7, #4]
 8008304:	681b      	ldr	r3, [r3, #0]
 8008306:	4a21      	ldr	r2, [pc, #132]	@ (800838c <HAL_TIMEx_ConfigBreakDeadTime+0x160>)
 8008308:	4293      	cmp	r3, r2
 800830a:	d12b      	bne.n	8008364 <HAL_TIMEx_ConfigBreakDeadTime+0x138>
 800830c:	68fb      	ldr	r3, [r7, #12]
 800830e:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 8008312:	683b      	ldr	r3, [r7, #0]
 8008314:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008316:	051b      	lsls	r3, r3, #20
 8008318:	4313      	orrs	r3, r2
 800831a:	60fb      	str	r3, [r7, #12]
 800831c:	68fb      	ldr	r3, [r7, #12]
 800831e:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8008322:	683b      	ldr	r3, [r7, #0]
 8008324:	6a1b      	ldr	r3, [r3, #32]
 8008326:	4313      	orrs	r3, r2
 8008328:	60fb      	str	r3, [r7, #12]
 800832a:	68fb      	ldr	r3, [r7, #12]
 800832c:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 8008330:	683b      	ldr	r3, [r7, #0]
 8008332:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008334:	4313      	orrs	r3, r2
 8008336:	60fb      	str	r3, [r7, #12]
 8008338:	687b      	ldr	r3, [r7, #4]
 800833a:	681b      	ldr	r3, [r3, #0]
 800833c:	4a11      	ldr	r2, [pc, #68]	@ (8008384 <HAL_TIMEx_ConfigBreakDeadTime+0x158>)
 800833e:	4293      	cmp	r3, r2
 8008340:	d009      	beq.n	8008356 <HAL_TIMEx_ConfigBreakDeadTime+0x12a>
 8008342:	687b      	ldr	r3, [r7, #4]
 8008344:	681b      	ldr	r3, [r3, #0]
 8008346:	4a10      	ldr	r2, [pc, #64]	@ (8008388 <HAL_TIMEx_ConfigBreakDeadTime+0x15c>)
 8008348:	4293      	cmp	r3, r2
 800834a:	d004      	beq.n	8008356 <HAL_TIMEx_ConfigBreakDeadTime+0x12a>
 800834c:	687b      	ldr	r3, [r7, #4]
 800834e:	681b      	ldr	r3, [r3, #0]
 8008350:	4a0e      	ldr	r2, [pc, #56]	@ (800838c <HAL_TIMEx_ConfigBreakDeadTime+0x160>)
 8008352:	4293      	cmp	r3, r2
 8008354:	d106      	bne.n	8008364 <HAL_TIMEx_ConfigBreakDeadTime+0x138>
 8008356:	68fb      	ldr	r3, [r7, #12]
 8008358:	f023 5200 	bic.w	r2, r3, #536870912	@ 0x20000000
 800835c:	683b      	ldr	r3, [r7, #0]
 800835e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008360:	4313      	orrs	r3, r2
 8008362:	60fb      	str	r3, [r7, #12]
 8008364:	687b      	ldr	r3, [r7, #4]
 8008366:	681b      	ldr	r3, [r3, #0]
 8008368:	68fa      	ldr	r2, [r7, #12]
 800836a:	645a      	str	r2, [r3, #68]	@ 0x44
 800836c:	687b      	ldr	r3, [r7, #4]
 800836e:	2200      	movs	r2, #0
 8008370:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008374:	2300      	movs	r3, #0
 8008376:	4618      	mov	r0, r3
 8008378:	3714      	adds	r7, #20
 800837a:	46bd      	mov	sp, r7
 800837c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008380:	4770      	bx	lr
 8008382:	bf00      	nop
 8008384:	40012c00 	.word	0x40012c00
 8008388:	40013400 	.word	0x40013400
 800838c:	40015000 	.word	0x40015000

08008390 <HAL_TIMEx_CommutCallback>:
 8008390:	b480      	push	{r7}
 8008392:	b083      	sub	sp, #12
 8008394:	af00      	add	r7, sp, #0
 8008396:	6078      	str	r0, [r7, #4]
 8008398:	bf00      	nop
 800839a:	370c      	adds	r7, #12
 800839c:	46bd      	mov	sp, r7
 800839e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083a2:	4770      	bx	lr

080083a4 <HAL_TIMEx_BreakCallback>:
 80083a4:	b480      	push	{r7}
 80083a6:	b083      	sub	sp, #12
 80083a8:	af00      	add	r7, sp, #0
 80083aa:	6078      	str	r0, [r7, #4]
 80083ac:	bf00      	nop
 80083ae:	370c      	adds	r7, #12
 80083b0:	46bd      	mov	sp, r7
 80083b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083b6:	4770      	bx	lr

080083b8 <HAL_TIMEx_Break2Callback>:
 80083b8:	b480      	push	{r7}
 80083ba:	b083      	sub	sp, #12
 80083bc:	af00      	add	r7, sp, #0
 80083be:	6078      	str	r0, [r7, #4]
 80083c0:	bf00      	nop
 80083c2:	370c      	adds	r7, #12
 80083c4:	46bd      	mov	sp, r7
 80083c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083ca:	4770      	bx	lr

080083cc <HAL_TIMEx_EncoderIndexCallback>:
 80083cc:	b480      	push	{r7}
 80083ce:	b083      	sub	sp, #12
 80083d0:	af00      	add	r7, sp, #0
 80083d2:	6078      	str	r0, [r7, #4]
 80083d4:	bf00      	nop
 80083d6:	370c      	adds	r7, #12
 80083d8:	46bd      	mov	sp, r7
 80083da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083de:	4770      	bx	lr

080083e0 <HAL_TIMEx_DirectionChangeCallback>:
 80083e0:	b480      	push	{r7}
 80083e2:	b083      	sub	sp, #12
 80083e4:	af00      	add	r7, sp, #0
 80083e6:	6078      	str	r0, [r7, #4]
 80083e8:	bf00      	nop
 80083ea:	370c      	adds	r7, #12
 80083ec:	46bd      	mov	sp, r7
 80083ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083f2:	4770      	bx	lr

080083f4 <HAL_TIMEx_IndexErrorCallback>:
 80083f4:	b480      	push	{r7}
 80083f6:	b083      	sub	sp, #12
 80083f8:	af00      	add	r7, sp, #0
 80083fa:	6078      	str	r0, [r7, #4]
 80083fc:	bf00      	nop
 80083fe:	370c      	adds	r7, #12
 8008400:	46bd      	mov	sp, r7
 8008402:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008406:	4770      	bx	lr

08008408 <HAL_TIMEx_TransitionErrorCallback>:
 8008408:	b480      	push	{r7}
 800840a:	b083      	sub	sp, #12
 800840c:	af00      	add	r7, sp, #0
 800840e:	6078      	str	r0, [r7, #4]
 8008410:	bf00      	nop
 8008412:	370c      	adds	r7, #12
 8008414:	46bd      	mov	sp, r7
 8008416:	f85d 7b04 	ldr.w	r7, [sp], #4
 800841a:	4770      	bx	lr

0800841c <HAL_UART_Init>:
 800841c:	b580      	push	{r7, lr}
 800841e:	b082      	sub	sp, #8
 8008420:	af00      	add	r7, sp, #0
 8008422:	6078      	str	r0, [r7, #4]
 8008424:	687b      	ldr	r3, [r7, #4]
 8008426:	2b00      	cmp	r3, #0
 8008428:	d101      	bne.n	800842e <HAL_UART_Init+0x12>
 800842a:	2301      	movs	r3, #1
 800842c:	e042      	b.n	80084b4 <HAL_UART_Init+0x98>
 800842e:	687b      	ldr	r3, [r7, #4]
 8008430:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8008434:	2b00      	cmp	r3, #0
 8008436:	d106      	bne.n	8008446 <HAL_UART_Init+0x2a>
 8008438:	687b      	ldr	r3, [r7, #4]
 800843a:	2200      	movs	r2, #0
 800843c:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 8008440:	6878      	ldr	r0, [r7, #4]
 8008442:	f7f9 ffc3 	bl	80023cc <HAL_UART_MspInit>
 8008446:	687b      	ldr	r3, [r7, #4]
 8008448:	2224      	movs	r2, #36	@ 0x24
 800844a:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800844e:	687b      	ldr	r3, [r7, #4]
 8008450:	681b      	ldr	r3, [r3, #0]
 8008452:	681a      	ldr	r2, [r3, #0]
 8008454:	687b      	ldr	r3, [r7, #4]
 8008456:	681b      	ldr	r3, [r3, #0]
 8008458:	f022 0201 	bic.w	r2, r2, #1
 800845c:	601a      	str	r2, [r3, #0]
 800845e:	6878      	ldr	r0, [r7, #4]
 8008460:	f000 f938 	bl	80086d4 <UART_SetConfig>
 8008464:	4603      	mov	r3, r0
 8008466:	2b01      	cmp	r3, #1
 8008468:	d101      	bne.n	800846e <HAL_UART_Init+0x52>
 800846a:	2301      	movs	r3, #1
 800846c:	e022      	b.n	80084b4 <HAL_UART_Init+0x98>
 800846e:	687b      	ldr	r3, [r7, #4]
 8008470:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008472:	2b00      	cmp	r3, #0
 8008474:	d002      	beq.n	800847c <HAL_UART_Init+0x60>
 8008476:	6878      	ldr	r0, [r7, #4]
 8008478:	f000 fc28 	bl	8008ccc <UART_AdvFeatureConfig>
 800847c:	687b      	ldr	r3, [r7, #4]
 800847e:	681b      	ldr	r3, [r3, #0]
 8008480:	685a      	ldr	r2, [r3, #4]
 8008482:	687b      	ldr	r3, [r7, #4]
 8008484:	681b      	ldr	r3, [r3, #0]
 8008486:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800848a:	605a      	str	r2, [r3, #4]
 800848c:	687b      	ldr	r3, [r7, #4]
 800848e:	681b      	ldr	r3, [r3, #0]
 8008490:	689a      	ldr	r2, [r3, #8]
 8008492:	687b      	ldr	r3, [r7, #4]
 8008494:	681b      	ldr	r3, [r3, #0]
 8008496:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800849a:	609a      	str	r2, [r3, #8]
 800849c:	687b      	ldr	r3, [r7, #4]
 800849e:	681b      	ldr	r3, [r3, #0]
 80084a0:	681a      	ldr	r2, [r3, #0]
 80084a2:	687b      	ldr	r3, [r7, #4]
 80084a4:	681b      	ldr	r3, [r3, #0]
 80084a6:	f042 0201 	orr.w	r2, r2, #1
 80084aa:	601a      	str	r2, [r3, #0]
 80084ac:	6878      	ldr	r0, [r7, #4]
 80084ae:	f000 fcaf 	bl	8008e10 <UART_CheckIdleState>
 80084b2:	4603      	mov	r3, r0
 80084b4:	4618      	mov	r0, r3
 80084b6:	3708      	adds	r7, #8
 80084b8:	46bd      	mov	sp, r7
 80084ba:	bd80      	pop	{r7, pc}

080084bc <HAL_UART_Transmit>:
 80084bc:	b580      	push	{r7, lr}
 80084be:	b08a      	sub	sp, #40	@ 0x28
 80084c0:	af02      	add	r7, sp, #8
 80084c2:	60f8      	str	r0, [r7, #12]
 80084c4:	60b9      	str	r1, [r7, #8]
 80084c6:	603b      	str	r3, [r7, #0]
 80084c8:	4613      	mov	r3, r2
 80084ca:	80fb      	strh	r3, [r7, #6]
 80084cc:	68fb      	ldr	r3, [r7, #12]
 80084ce:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80084d2:	2b20      	cmp	r3, #32
 80084d4:	f040 8083 	bne.w	80085de <HAL_UART_Transmit+0x122>
 80084d8:	68bb      	ldr	r3, [r7, #8]
 80084da:	2b00      	cmp	r3, #0
 80084dc:	d002      	beq.n	80084e4 <HAL_UART_Transmit+0x28>
 80084de:	88fb      	ldrh	r3, [r7, #6]
 80084e0:	2b00      	cmp	r3, #0
 80084e2:	d101      	bne.n	80084e8 <HAL_UART_Transmit+0x2c>
 80084e4:	2301      	movs	r3, #1
 80084e6:	e07b      	b.n	80085e0 <HAL_UART_Transmit+0x124>
 80084e8:	68fb      	ldr	r3, [r7, #12]
 80084ea:	f893 3080 	ldrb.w	r3, [r3, #128]	@ 0x80
 80084ee:	2b01      	cmp	r3, #1
 80084f0:	d101      	bne.n	80084f6 <HAL_UART_Transmit+0x3a>
 80084f2:	2302      	movs	r3, #2
 80084f4:	e074      	b.n	80085e0 <HAL_UART_Transmit+0x124>
 80084f6:	68fb      	ldr	r3, [r7, #12]
 80084f8:	2201      	movs	r2, #1
 80084fa:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 80084fe:	68fb      	ldr	r3, [r7, #12]
 8008500:	2200      	movs	r2, #0
 8008502:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8008506:	68fb      	ldr	r3, [r7, #12]
 8008508:	2221      	movs	r2, #33	@ 0x21
 800850a:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800850e:	f7fa faff 	bl	8002b10 <HAL_GetTick>
 8008512:	6178      	str	r0, [r7, #20]
 8008514:	68fb      	ldr	r3, [r7, #12]
 8008516:	88fa      	ldrh	r2, [r7, #6]
 8008518:	f8a3 2054 	strh.w	r2, [r3, #84]	@ 0x54
 800851c:	68fb      	ldr	r3, [r7, #12]
 800851e:	88fa      	ldrh	r2, [r7, #6]
 8008520:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 8008524:	68fb      	ldr	r3, [r7, #12]
 8008526:	689b      	ldr	r3, [r3, #8]
 8008528:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800852c:	d108      	bne.n	8008540 <HAL_UART_Transmit+0x84>
 800852e:	68fb      	ldr	r3, [r7, #12]
 8008530:	691b      	ldr	r3, [r3, #16]
 8008532:	2b00      	cmp	r3, #0
 8008534:	d104      	bne.n	8008540 <HAL_UART_Transmit+0x84>
 8008536:	2300      	movs	r3, #0
 8008538:	61fb      	str	r3, [r7, #28]
 800853a:	68bb      	ldr	r3, [r7, #8]
 800853c:	61bb      	str	r3, [r7, #24]
 800853e:	e003      	b.n	8008548 <HAL_UART_Transmit+0x8c>
 8008540:	68bb      	ldr	r3, [r7, #8]
 8008542:	61fb      	str	r3, [r7, #28]
 8008544:	2300      	movs	r3, #0
 8008546:	61bb      	str	r3, [r7, #24]
 8008548:	68fb      	ldr	r3, [r7, #12]
 800854a:	2200      	movs	r2, #0
 800854c:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 8008550:	e02c      	b.n	80085ac <HAL_UART_Transmit+0xf0>
 8008552:	683b      	ldr	r3, [r7, #0]
 8008554:	9300      	str	r3, [sp, #0]
 8008556:	697b      	ldr	r3, [r7, #20]
 8008558:	2200      	movs	r2, #0
 800855a:	2180      	movs	r1, #128	@ 0x80
 800855c:	68f8      	ldr	r0, [r7, #12]
 800855e:	f000 fca2 	bl	8008ea6 <UART_WaitOnFlagUntilTimeout>
 8008562:	4603      	mov	r3, r0
 8008564:	2b00      	cmp	r3, #0
 8008566:	d001      	beq.n	800856c <HAL_UART_Transmit+0xb0>
 8008568:	2303      	movs	r3, #3
 800856a:	e039      	b.n	80085e0 <HAL_UART_Transmit+0x124>
 800856c:	69fb      	ldr	r3, [r7, #28]
 800856e:	2b00      	cmp	r3, #0
 8008570:	d10b      	bne.n	800858a <HAL_UART_Transmit+0xce>
 8008572:	69bb      	ldr	r3, [r7, #24]
 8008574:	881b      	ldrh	r3, [r3, #0]
 8008576:	461a      	mov	r2, r3
 8008578:	68fb      	ldr	r3, [r7, #12]
 800857a:	681b      	ldr	r3, [r3, #0]
 800857c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8008580:	629a      	str	r2, [r3, #40]	@ 0x28
 8008582:	69bb      	ldr	r3, [r7, #24]
 8008584:	3302      	adds	r3, #2
 8008586:	61bb      	str	r3, [r7, #24]
 8008588:	e007      	b.n	800859a <HAL_UART_Transmit+0xde>
 800858a:	69fb      	ldr	r3, [r7, #28]
 800858c:	781a      	ldrb	r2, [r3, #0]
 800858e:	68fb      	ldr	r3, [r7, #12]
 8008590:	681b      	ldr	r3, [r3, #0]
 8008592:	629a      	str	r2, [r3, #40]	@ 0x28
 8008594:	69fb      	ldr	r3, [r7, #28]
 8008596:	3301      	adds	r3, #1
 8008598:	61fb      	str	r3, [r7, #28]
 800859a:	68fb      	ldr	r3, [r7, #12]
 800859c:	f8b3 3056 	ldrh.w	r3, [r3, #86]	@ 0x56
 80085a0:	b29b      	uxth	r3, r3
 80085a2:	3b01      	subs	r3, #1
 80085a4:	b29a      	uxth	r2, r3
 80085a6:	68fb      	ldr	r3, [r7, #12]
 80085a8:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 80085ac:	68fb      	ldr	r3, [r7, #12]
 80085ae:	f8b3 3056 	ldrh.w	r3, [r3, #86]	@ 0x56
 80085b2:	b29b      	uxth	r3, r3
 80085b4:	2b00      	cmp	r3, #0
 80085b6:	d1cc      	bne.n	8008552 <HAL_UART_Transmit+0x96>
 80085b8:	683b      	ldr	r3, [r7, #0]
 80085ba:	9300      	str	r3, [sp, #0]
 80085bc:	697b      	ldr	r3, [r7, #20]
 80085be:	2200      	movs	r2, #0
 80085c0:	2140      	movs	r1, #64	@ 0x40
 80085c2:	68f8      	ldr	r0, [r7, #12]
 80085c4:	f000 fc6f 	bl	8008ea6 <UART_WaitOnFlagUntilTimeout>
 80085c8:	4603      	mov	r3, r0
 80085ca:	2b00      	cmp	r3, #0
 80085cc:	d001      	beq.n	80085d2 <HAL_UART_Transmit+0x116>
 80085ce:	2303      	movs	r3, #3
 80085d0:	e006      	b.n	80085e0 <HAL_UART_Transmit+0x124>
 80085d2:	68fb      	ldr	r3, [r7, #12]
 80085d4:	2220      	movs	r2, #32
 80085d6:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80085da:	2300      	movs	r3, #0
 80085dc:	e000      	b.n	80085e0 <HAL_UART_Transmit+0x124>
 80085de:	2302      	movs	r3, #2
 80085e0:	4618      	mov	r0, r3
 80085e2:	3720      	adds	r7, #32
 80085e4:	46bd      	mov	sp, r7
 80085e6:	bd80      	pop	{r7, pc}

080085e8 <HAL_UART_Receive_DMA>:
 80085e8:	b580      	push	{r7, lr}
 80085ea:	b08a      	sub	sp, #40	@ 0x28
 80085ec:	af00      	add	r7, sp, #0
 80085ee:	60f8      	str	r0, [r7, #12]
 80085f0:	60b9      	str	r1, [r7, #8]
 80085f2:	4613      	mov	r3, r2
 80085f4:	80fb      	strh	r3, [r7, #6]
 80085f6:	68fb      	ldr	r3, [r7, #12]
 80085f8:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80085fc:	2b20      	cmp	r3, #32
 80085fe:	d142      	bne.n	8008686 <HAL_UART_Receive_DMA+0x9e>
 8008600:	68bb      	ldr	r3, [r7, #8]
 8008602:	2b00      	cmp	r3, #0
 8008604:	d002      	beq.n	800860c <HAL_UART_Receive_DMA+0x24>
 8008606:	88fb      	ldrh	r3, [r7, #6]
 8008608:	2b00      	cmp	r3, #0
 800860a:	d101      	bne.n	8008610 <HAL_UART_Receive_DMA+0x28>
 800860c:	2301      	movs	r3, #1
 800860e:	e03b      	b.n	8008688 <HAL_UART_Receive_DMA+0xa0>
 8008610:	68fb      	ldr	r3, [r7, #12]
 8008612:	f893 3080 	ldrb.w	r3, [r3, #128]	@ 0x80
 8008616:	2b01      	cmp	r3, #1
 8008618:	d101      	bne.n	800861e <HAL_UART_Receive_DMA+0x36>
 800861a:	2302      	movs	r3, #2
 800861c:	e034      	b.n	8008688 <HAL_UART_Receive_DMA+0xa0>
 800861e:	68fb      	ldr	r3, [r7, #12]
 8008620:	2201      	movs	r2, #1
 8008622:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 8008626:	68fb      	ldr	r3, [r7, #12]
 8008628:	2200      	movs	r2, #0
 800862a:	66da      	str	r2, [r3, #108]	@ 0x6c
 800862c:	68fb      	ldr	r3, [r7, #12]
 800862e:	681b      	ldr	r3, [r3, #0]
 8008630:	4a17      	ldr	r2, [pc, #92]	@ (8008690 <HAL_UART_Receive_DMA+0xa8>)
 8008632:	4293      	cmp	r3, r2
 8008634:	d01f      	beq.n	8008676 <HAL_UART_Receive_DMA+0x8e>
 8008636:	68fb      	ldr	r3, [r7, #12]
 8008638:	681b      	ldr	r3, [r3, #0]
 800863a:	685b      	ldr	r3, [r3, #4]
 800863c:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8008640:	2b00      	cmp	r3, #0
 8008642:	d018      	beq.n	8008676 <HAL_UART_Receive_DMA+0x8e>
 8008644:	68fb      	ldr	r3, [r7, #12]
 8008646:	681b      	ldr	r3, [r3, #0]
 8008648:	617b      	str	r3, [r7, #20]
 800864a:	697b      	ldr	r3, [r7, #20]
 800864c:	e853 3f00 	ldrex	r3, [r3]
 8008650:	613b      	str	r3, [r7, #16]
 8008652:	693b      	ldr	r3, [r7, #16]
 8008654:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8008658:	627b      	str	r3, [r7, #36]	@ 0x24
 800865a:	68fb      	ldr	r3, [r7, #12]
 800865c:	681b      	ldr	r3, [r3, #0]
 800865e:	461a      	mov	r2, r3
 8008660:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008662:	623b      	str	r3, [r7, #32]
 8008664:	61fa      	str	r2, [r7, #28]
 8008666:	69f9      	ldr	r1, [r7, #28]
 8008668:	6a3a      	ldr	r2, [r7, #32]
 800866a:	e841 2300 	strex	r3, r2, [r1]
 800866e:	61bb      	str	r3, [r7, #24]
 8008670:	69bb      	ldr	r3, [r7, #24]
 8008672:	2b00      	cmp	r3, #0
 8008674:	d1e6      	bne.n	8008644 <HAL_UART_Receive_DMA+0x5c>
 8008676:	88fb      	ldrh	r3, [r7, #6]
 8008678:	461a      	mov	r2, r3
 800867a:	68b9      	ldr	r1, [r7, #8]
 800867c:	68f8      	ldr	r0, [r7, #12]
 800867e:	f000 fcdb 	bl	8009038 <UART_Start_Receive_DMA>
 8008682:	4603      	mov	r3, r0
 8008684:	e000      	b.n	8008688 <HAL_UART_Receive_DMA+0xa0>
 8008686:	2302      	movs	r3, #2
 8008688:	4618      	mov	r0, r3
 800868a:	3728      	adds	r7, #40	@ 0x28
 800868c:	46bd      	mov	sp, r7
 800868e:	bd80      	pop	{r7, pc}
 8008690:	40008000 	.word	0x40008000

08008694 <HAL_UART_RxHalfCpltCallback>:
 8008694:	b480      	push	{r7}
 8008696:	b083      	sub	sp, #12
 8008698:	af00      	add	r7, sp, #0
 800869a:	6078      	str	r0, [r7, #4]
 800869c:	bf00      	nop
 800869e:	370c      	adds	r7, #12
 80086a0:	46bd      	mov	sp, r7
 80086a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086a6:	4770      	bx	lr

080086a8 <HAL_UART_ErrorCallback>:
 80086a8:	b480      	push	{r7}
 80086aa:	b083      	sub	sp, #12
 80086ac:	af00      	add	r7, sp, #0
 80086ae:	6078      	str	r0, [r7, #4]
 80086b0:	bf00      	nop
 80086b2:	370c      	adds	r7, #12
 80086b4:	46bd      	mov	sp, r7
 80086b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086ba:	4770      	bx	lr

080086bc <HAL_UARTEx_RxEventCallback>:
 80086bc:	b480      	push	{r7}
 80086be:	b083      	sub	sp, #12
 80086c0:	af00      	add	r7, sp, #0
 80086c2:	6078      	str	r0, [r7, #4]
 80086c4:	460b      	mov	r3, r1
 80086c6:	807b      	strh	r3, [r7, #2]
 80086c8:	bf00      	nop
 80086ca:	370c      	adds	r7, #12
 80086cc:	46bd      	mov	sp, r7
 80086ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086d2:	4770      	bx	lr

080086d4 <UART_SetConfig>:
 80086d4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80086d8:	b08c      	sub	sp, #48	@ 0x30
 80086da:	af00      	add	r7, sp, #0
 80086dc:	6178      	str	r0, [r7, #20]
 80086de:	2300      	movs	r3, #0
 80086e0:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 80086e4:	697b      	ldr	r3, [r7, #20]
 80086e6:	689a      	ldr	r2, [r3, #8]
 80086e8:	697b      	ldr	r3, [r7, #20]
 80086ea:	691b      	ldr	r3, [r3, #16]
 80086ec:	431a      	orrs	r2, r3
 80086ee:	697b      	ldr	r3, [r7, #20]
 80086f0:	695b      	ldr	r3, [r3, #20]
 80086f2:	431a      	orrs	r2, r3
 80086f4:	697b      	ldr	r3, [r7, #20]
 80086f6:	69db      	ldr	r3, [r3, #28]
 80086f8:	4313      	orrs	r3, r2
 80086fa:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80086fc:	697b      	ldr	r3, [r7, #20]
 80086fe:	681b      	ldr	r3, [r3, #0]
 8008700:	681a      	ldr	r2, [r3, #0]
 8008702:	4baa      	ldr	r3, [pc, #680]	@ (80089ac <UART_SetConfig+0x2d8>)
 8008704:	4013      	ands	r3, r2
 8008706:	697a      	ldr	r2, [r7, #20]
 8008708:	6812      	ldr	r2, [r2, #0]
 800870a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800870c:	430b      	orrs	r3, r1
 800870e:	6013      	str	r3, [r2, #0]
 8008710:	697b      	ldr	r3, [r7, #20]
 8008712:	681b      	ldr	r3, [r3, #0]
 8008714:	685b      	ldr	r3, [r3, #4]
 8008716:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800871a:	697b      	ldr	r3, [r7, #20]
 800871c:	68da      	ldr	r2, [r3, #12]
 800871e:	697b      	ldr	r3, [r7, #20]
 8008720:	681b      	ldr	r3, [r3, #0]
 8008722:	430a      	orrs	r2, r1
 8008724:	605a      	str	r2, [r3, #4]
 8008726:	697b      	ldr	r3, [r7, #20]
 8008728:	699b      	ldr	r3, [r3, #24]
 800872a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800872c:	697b      	ldr	r3, [r7, #20]
 800872e:	681b      	ldr	r3, [r3, #0]
 8008730:	4a9f      	ldr	r2, [pc, #636]	@ (80089b0 <UART_SetConfig+0x2dc>)
 8008732:	4293      	cmp	r3, r2
 8008734:	d004      	beq.n	8008740 <UART_SetConfig+0x6c>
 8008736:	697b      	ldr	r3, [r7, #20]
 8008738:	6a1b      	ldr	r3, [r3, #32]
 800873a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800873c:	4313      	orrs	r3, r2
 800873e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008740:	697b      	ldr	r3, [r7, #20]
 8008742:	681b      	ldr	r3, [r3, #0]
 8008744:	689b      	ldr	r3, [r3, #8]
 8008746:	f023 436e 	bic.w	r3, r3, #3992977408	@ 0xee000000
 800874a:	f423 6330 	bic.w	r3, r3, #2816	@ 0xb00
 800874e:	697a      	ldr	r2, [r7, #20]
 8008750:	6812      	ldr	r2, [r2, #0]
 8008752:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8008754:	430b      	orrs	r3, r1
 8008756:	6093      	str	r3, [r2, #8]
 8008758:	697b      	ldr	r3, [r7, #20]
 800875a:	681b      	ldr	r3, [r3, #0]
 800875c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800875e:	f023 010f 	bic.w	r1, r3, #15
 8008762:	697b      	ldr	r3, [r7, #20]
 8008764:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8008766:	697b      	ldr	r3, [r7, #20]
 8008768:	681b      	ldr	r3, [r3, #0]
 800876a:	430a      	orrs	r2, r1
 800876c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800876e:	697b      	ldr	r3, [r7, #20]
 8008770:	681b      	ldr	r3, [r3, #0]
 8008772:	4a90      	ldr	r2, [pc, #576]	@ (80089b4 <UART_SetConfig+0x2e0>)
 8008774:	4293      	cmp	r3, r2
 8008776:	d125      	bne.n	80087c4 <UART_SetConfig+0xf0>
 8008778:	4b8f      	ldr	r3, [pc, #572]	@ (80089b8 <UART_SetConfig+0x2e4>)
 800877a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800877e:	f003 0303 	and.w	r3, r3, #3
 8008782:	2b03      	cmp	r3, #3
 8008784:	d81a      	bhi.n	80087bc <UART_SetConfig+0xe8>
 8008786:	a201      	add	r2, pc, #4	@ (adr r2, 800878c <UART_SetConfig+0xb8>)
 8008788:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800878c:	0800879d 	.word	0x0800879d
 8008790:	080087ad 	.word	0x080087ad
 8008794:	080087a5 	.word	0x080087a5
 8008798:	080087b5 	.word	0x080087b5
 800879c:	2301      	movs	r3, #1
 800879e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80087a2:	e116      	b.n	80089d2 <UART_SetConfig+0x2fe>
 80087a4:	2302      	movs	r3, #2
 80087a6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80087aa:	e112      	b.n	80089d2 <UART_SetConfig+0x2fe>
 80087ac:	2304      	movs	r3, #4
 80087ae:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80087b2:	e10e      	b.n	80089d2 <UART_SetConfig+0x2fe>
 80087b4:	2308      	movs	r3, #8
 80087b6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80087ba:	e10a      	b.n	80089d2 <UART_SetConfig+0x2fe>
 80087bc:	2310      	movs	r3, #16
 80087be:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80087c2:	e106      	b.n	80089d2 <UART_SetConfig+0x2fe>
 80087c4:	697b      	ldr	r3, [r7, #20]
 80087c6:	681b      	ldr	r3, [r3, #0]
 80087c8:	4a7c      	ldr	r2, [pc, #496]	@ (80089bc <UART_SetConfig+0x2e8>)
 80087ca:	4293      	cmp	r3, r2
 80087cc:	d138      	bne.n	8008840 <UART_SetConfig+0x16c>
 80087ce:	4b7a      	ldr	r3, [pc, #488]	@ (80089b8 <UART_SetConfig+0x2e4>)
 80087d0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80087d4:	f003 030c 	and.w	r3, r3, #12
 80087d8:	2b0c      	cmp	r3, #12
 80087da:	d82d      	bhi.n	8008838 <UART_SetConfig+0x164>
 80087dc:	a201      	add	r2, pc, #4	@ (adr r2, 80087e4 <UART_SetConfig+0x110>)
 80087de:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80087e2:	bf00      	nop
 80087e4:	08008819 	.word	0x08008819
 80087e8:	08008839 	.word	0x08008839
 80087ec:	08008839 	.word	0x08008839
 80087f0:	08008839 	.word	0x08008839
 80087f4:	08008829 	.word	0x08008829
 80087f8:	08008839 	.word	0x08008839
 80087fc:	08008839 	.word	0x08008839
 8008800:	08008839 	.word	0x08008839
 8008804:	08008821 	.word	0x08008821
 8008808:	08008839 	.word	0x08008839
 800880c:	08008839 	.word	0x08008839
 8008810:	08008839 	.word	0x08008839
 8008814:	08008831 	.word	0x08008831
 8008818:	2300      	movs	r3, #0
 800881a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800881e:	e0d8      	b.n	80089d2 <UART_SetConfig+0x2fe>
 8008820:	2302      	movs	r3, #2
 8008822:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008826:	e0d4      	b.n	80089d2 <UART_SetConfig+0x2fe>
 8008828:	2304      	movs	r3, #4
 800882a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800882e:	e0d0      	b.n	80089d2 <UART_SetConfig+0x2fe>
 8008830:	2308      	movs	r3, #8
 8008832:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008836:	e0cc      	b.n	80089d2 <UART_SetConfig+0x2fe>
 8008838:	2310      	movs	r3, #16
 800883a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800883e:	e0c8      	b.n	80089d2 <UART_SetConfig+0x2fe>
 8008840:	697b      	ldr	r3, [r7, #20]
 8008842:	681b      	ldr	r3, [r3, #0]
 8008844:	4a5e      	ldr	r2, [pc, #376]	@ (80089c0 <UART_SetConfig+0x2ec>)
 8008846:	4293      	cmp	r3, r2
 8008848:	d125      	bne.n	8008896 <UART_SetConfig+0x1c2>
 800884a:	4b5b      	ldr	r3, [pc, #364]	@ (80089b8 <UART_SetConfig+0x2e4>)
 800884c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008850:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 8008854:	2b30      	cmp	r3, #48	@ 0x30
 8008856:	d016      	beq.n	8008886 <UART_SetConfig+0x1b2>
 8008858:	2b30      	cmp	r3, #48	@ 0x30
 800885a:	d818      	bhi.n	800888e <UART_SetConfig+0x1ba>
 800885c:	2b20      	cmp	r3, #32
 800885e:	d00a      	beq.n	8008876 <UART_SetConfig+0x1a2>
 8008860:	2b20      	cmp	r3, #32
 8008862:	d814      	bhi.n	800888e <UART_SetConfig+0x1ba>
 8008864:	2b00      	cmp	r3, #0
 8008866:	d002      	beq.n	800886e <UART_SetConfig+0x19a>
 8008868:	2b10      	cmp	r3, #16
 800886a:	d008      	beq.n	800887e <UART_SetConfig+0x1aa>
 800886c:	e00f      	b.n	800888e <UART_SetConfig+0x1ba>
 800886e:	2300      	movs	r3, #0
 8008870:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008874:	e0ad      	b.n	80089d2 <UART_SetConfig+0x2fe>
 8008876:	2302      	movs	r3, #2
 8008878:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800887c:	e0a9      	b.n	80089d2 <UART_SetConfig+0x2fe>
 800887e:	2304      	movs	r3, #4
 8008880:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008884:	e0a5      	b.n	80089d2 <UART_SetConfig+0x2fe>
 8008886:	2308      	movs	r3, #8
 8008888:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800888c:	e0a1      	b.n	80089d2 <UART_SetConfig+0x2fe>
 800888e:	2310      	movs	r3, #16
 8008890:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008894:	e09d      	b.n	80089d2 <UART_SetConfig+0x2fe>
 8008896:	697b      	ldr	r3, [r7, #20]
 8008898:	681b      	ldr	r3, [r3, #0]
 800889a:	4a4a      	ldr	r2, [pc, #296]	@ (80089c4 <UART_SetConfig+0x2f0>)
 800889c:	4293      	cmp	r3, r2
 800889e:	d125      	bne.n	80088ec <UART_SetConfig+0x218>
 80088a0:	4b45      	ldr	r3, [pc, #276]	@ (80089b8 <UART_SetConfig+0x2e4>)
 80088a2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80088a6:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 80088aa:	2bc0      	cmp	r3, #192	@ 0xc0
 80088ac:	d016      	beq.n	80088dc <UART_SetConfig+0x208>
 80088ae:	2bc0      	cmp	r3, #192	@ 0xc0
 80088b0:	d818      	bhi.n	80088e4 <UART_SetConfig+0x210>
 80088b2:	2b80      	cmp	r3, #128	@ 0x80
 80088b4:	d00a      	beq.n	80088cc <UART_SetConfig+0x1f8>
 80088b6:	2b80      	cmp	r3, #128	@ 0x80
 80088b8:	d814      	bhi.n	80088e4 <UART_SetConfig+0x210>
 80088ba:	2b00      	cmp	r3, #0
 80088bc:	d002      	beq.n	80088c4 <UART_SetConfig+0x1f0>
 80088be:	2b40      	cmp	r3, #64	@ 0x40
 80088c0:	d008      	beq.n	80088d4 <UART_SetConfig+0x200>
 80088c2:	e00f      	b.n	80088e4 <UART_SetConfig+0x210>
 80088c4:	2300      	movs	r3, #0
 80088c6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80088ca:	e082      	b.n	80089d2 <UART_SetConfig+0x2fe>
 80088cc:	2302      	movs	r3, #2
 80088ce:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80088d2:	e07e      	b.n	80089d2 <UART_SetConfig+0x2fe>
 80088d4:	2304      	movs	r3, #4
 80088d6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80088da:	e07a      	b.n	80089d2 <UART_SetConfig+0x2fe>
 80088dc:	2308      	movs	r3, #8
 80088de:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80088e2:	e076      	b.n	80089d2 <UART_SetConfig+0x2fe>
 80088e4:	2310      	movs	r3, #16
 80088e6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80088ea:	e072      	b.n	80089d2 <UART_SetConfig+0x2fe>
 80088ec:	697b      	ldr	r3, [r7, #20]
 80088ee:	681b      	ldr	r3, [r3, #0]
 80088f0:	4a35      	ldr	r2, [pc, #212]	@ (80089c8 <UART_SetConfig+0x2f4>)
 80088f2:	4293      	cmp	r3, r2
 80088f4:	d12a      	bne.n	800894c <UART_SetConfig+0x278>
 80088f6:	4b30      	ldr	r3, [pc, #192]	@ (80089b8 <UART_SetConfig+0x2e4>)
 80088f8:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80088fc:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8008900:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8008904:	d01a      	beq.n	800893c <UART_SetConfig+0x268>
 8008906:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800890a:	d81b      	bhi.n	8008944 <UART_SetConfig+0x270>
 800890c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8008910:	d00c      	beq.n	800892c <UART_SetConfig+0x258>
 8008912:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8008916:	d815      	bhi.n	8008944 <UART_SetConfig+0x270>
 8008918:	2b00      	cmp	r3, #0
 800891a:	d003      	beq.n	8008924 <UART_SetConfig+0x250>
 800891c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008920:	d008      	beq.n	8008934 <UART_SetConfig+0x260>
 8008922:	e00f      	b.n	8008944 <UART_SetConfig+0x270>
 8008924:	2300      	movs	r3, #0
 8008926:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800892a:	e052      	b.n	80089d2 <UART_SetConfig+0x2fe>
 800892c:	2302      	movs	r3, #2
 800892e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008932:	e04e      	b.n	80089d2 <UART_SetConfig+0x2fe>
 8008934:	2304      	movs	r3, #4
 8008936:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800893a:	e04a      	b.n	80089d2 <UART_SetConfig+0x2fe>
 800893c:	2308      	movs	r3, #8
 800893e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008942:	e046      	b.n	80089d2 <UART_SetConfig+0x2fe>
 8008944:	2310      	movs	r3, #16
 8008946:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800894a:	e042      	b.n	80089d2 <UART_SetConfig+0x2fe>
 800894c:	697b      	ldr	r3, [r7, #20]
 800894e:	681b      	ldr	r3, [r3, #0]
 8008950:	4a17      	ldr	r2, [pc, #92]	@ (80089b0 <UART_SetConfig+0x2dc>)
 8008952:	4293      	cmp	r3, r2
 8008954:	d13a      	bne.n	80089cc <UART_SetConfig+0x2f8>
 8008956:	4b18      	ldr	r3, [pc, #96]	@ (80089b8 <UART_SetConfig+0x2e4>)
 8008958:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800895c:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8008960:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8008964:	d01a      	beq.n	800899c <UART_SetConfig+0x2c8>
 8008966:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800896a:	d81b      	bhi.n	80089a4 <UART_SetConfig+0x2d0>
 800896c:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8008970:	d00c      	beq.n	800898c <UART_SetConfig+0x2b8>
 8008972:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8008976:	d815      	bhi.n	80089a4 <UART_SetConfig+0x2d0>
 8008978:	2b00      	cmp	r3, #0
 800897a:	d003      	beq.n	8008984 <UART_SetConfig+0x2b0>
 800897c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8008980:	d008      	beq.n	8008994 <UART_SetConfig+0x2c0>
 8008982:	e00f      	b.n	80089a4 <UART_SetConfig+0x2d0>
 8008984:	2300      	movs	r3, #0
 8008986:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800898a:	e022      	b.n	80089d2 <UART_SetConfig+0x2fe>
 800898c:	2302      	movs	r3, #2
 800898e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008992:	e01e      	b.n	80089d2 <UART_SetConfig+0x2fe>
 8008994:	2304      	movs	r3, #4
 8008996:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800899a:	e01a      	b.n	80089d2 <UART_SetConfig+0x2fe>
 800899c:	2308      	movs	r3, #8
 800899e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80089a2:	e016      	b.n	80089d2 <UART_SetConfig+0x2fe>
 80089a4:	2310      	movs	r3, #16
 80089a6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80089aa:	e012      	b.n	80089d2 <UART_SetConfig+0x2fe>
 80089ac:	cfff69f3 	.word	0xcfff69f3
 80089b0:	40008000 	.word	0x40008000
 80089b4:	40013800 	.word	0x40013800
 80089b8:	40021000 	.word	0x40021000
 80089bc:	40004400 	.word	0x40004400
 80089c0:	40004800 	.word	0x40004800
 80089c4:	40004c00 	.word	0x40004c00
 80089c8:	40005000 	.word	0x40005000
 80089cc:	2310      	movs	r3, #16
 80089ce:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80089d2:	697b      	ldr	r3, [r7, #20]
 80089d4:	681b      	ldr	r3, [r3, #0]
 80089d6:	4aae      	ldr	r2, [pc, #696]	@ (8008c90 <UART_SetConfig+0x5bc>)
 80089d8:	4293      	cmp	r3, r2
 80089da:	f040 8097 	bne.w	8008b0c <UART_SetConfig+0x438>
 80089de:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 80089e2:	2b08      	cmp	r3, #8
 80089e4:	d823      	bhi.n	8008a2e <UART_SetConfig+0x35a>
 80089e6:	a201      	add	r2, pc, #4	@ (adr r2, 80089ec <UART_SetConfig+0x318>)
 80089e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80089ec:	08008a11 	.word	0x08008a11
 80089f0:	08008a2f 	.word	0x08008a2f
 80089f4:	08008a19 	.word	0x08008a19
 80089f8:	08008a2f 	.word	0x08008a2f
 80089fc:	08008a1f 	.word	0x08008a1f
 8008a00:	08008a2f 	.word	0x08008a2f
 8008a04:	08008a2f 	.word	0x08008a2f
 8008a08:	08008a2f 	.word	0x08008a2f
 8008a0c:	08008a27 	.word	0x08008a27
 8008a10:	f7fd fb0c 	bl	800602c <HAL_RCC_GetPCLK1Freq>
 8008a14:	6278      	str	r0, [r7, #36]	@ 0x24
 8008a16:	e010      	b.n	8008a3a <UART_SetConfig+0x366>
 8008a18:	4b9e      	ldr	r3, [pc, #632]	@ (8008c94 <UART_SetConfig+0x5c0>)
 8008a1a:	627b      	str	r3, [r7, #36]	@ 0x24
 8008a1c:	e00d      	b.n	8008a3a <UART_SetConfig+0x366>
 8008a1e:	f7fd fa97 	bl	8005f50 <HAL_RCC_GetSysClockFreq>
 8008a22:	6278      	str	r0, [r7, #36]	@ 0x24
 8008a24:	e009      	b.n	8008a3a <UART_SetConfig+0x366>
 8008a26:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8008a2a:	627b      	str	r3, [r7, #36]	@ 0x24
 8008a2c:	e005      	b.n	8008a3a <UART_SetConfig+0x366>
 8008a2e:	2300      	movs	r3, #0
 8008a30:	627b      	str	r3, [r7, #36]	@ 0x24
 8008a32:	2301      	movs	r3, #1
 8008a34:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 8008a38:	bf00      	nop
 8008a3a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008a3c:	2b00      	cmp	r3, #0
 8008a3e:	f000 8130 	beq.w	8008ca2 <UART_SetConfig+0x5ce>
 8008a42:	697b      	ldr	r3, [r7, #20]
 8008a44:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008a46:	4a94      	ldr	r2, [pc, #592]	@ (8008c98 <UART_SetConfig+0x5c4>)
 8008a48:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8008a4c:	461a      	mov	r2, r3
 8008a4e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008a50:	fbb3 f3f2 	udiv	r3, r3, r2
 8008a54:	61bb      	str	r3, [r7, #24]
 8008a56:	697b      	ldr	r3, [r7, #20]
 8008a58:	685a      	ldr	r2, [r3, #4]
 8008a5a:	4613      	mov	r3, r2
 8008a5c:	005b      	lsls	r3, r3, #1
 8008a5e:	4413      	add	r3, r2
 8008a60:	69ba      	ldr	r2, [r7, #24]
 8008a62:	429a      	cmp	r2, r3
 8008a64:	d305      	bcc.n	8008a72 <UART_SetConfig+0x39e>
 8008a66:	697b      	ldr	r3, [r7, #20]
 8008a68:	685b      	ldr	r3, [r3, #4]
 8008a6a:	031b      	lsls	r3, r3, #12
 8008a6c:	69ba      	ldr	r2, [r7, #24]
 8008a6e:	429a      	cmp	r2, r3
 8008a70:	d903      	bls.n	8008a7a <UART_SetConfig+0x3a6>
 8008a72:	2301      	movs	r3, #1
 8008a74:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 8008a78:	e113      	b.n	8008ca2 <UART_SetConfig+0x5ce>
 8008a7a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008a7c:	2200      	movs	r2, #0
 8008a7e:	60bb      	str	r3, [r7, #8]
 8008a80:	60fa      	str	r2, [r7, #12]
 8008a82:	697b      	ldr	r3, [r7, #20]
 8008a84:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008a86:	4a84      	ldr	r2, [pc, #528]	@ (8008c98 <UART_SetConfig+0x5c4>)
 8008a88:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8008a8c:	b29b      	uxth	r3, r3
 8008a8e:	2200      	movs	r2, #0
 8008a90:	603b      	str	r3, [r7, #0]
 8008a92:	607a      	str	r2, [r7, #4]
 8008a94:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008a98:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8008a9c:	f7f7 fc18 	bl	80002d0 <__aeabi_uldivmod>
 8008aa0:	4602      	mov	r2, r0
 8008aa2:	460b      	mov	r3, r1
 8008aa4:	4610      	mov	r0, r2
 8008aa6:	4619      	mov	r1, r3
 8008aa8:	f04f 0200 	mov.w	r2, #0
 8008aac:	f04f 0300 	mov.w	r3, #0
 8008ab0:	020b      	lsls	r3, r1, #8
 8008ab2:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 8008ab6:	0202      	lsls	r2, r0, #8
 8008ab8:	6979      	ldr	r1, [r7, #20]
 8008aba:	6849      	ldr	r1, [r1, #4]
 8008abc:	0849      	lsrs	r1, r1, #1
 8008abe:	2000      	movs	r0, #0
 8008ac0:	460c      	mov	r4, r1
 8008ac2:	4605      	mov	r5, r0
 8008ac4:	eb12 0804 	adds.w	r8, r2, r4
 8008ac8:	eb43 0905 	adc.w	r9, r3, r5
 8008acc:	697b      	ldr	r3, [r7, #20]
 8008ace:	685b      	ldr	r3, [r3, #4]
 8008ad0:	2200      	movs	r2, #0
 8008ad2:	469a      	mov	sl, r3
 8008ad4:	4693      	mov	fp, r2
 8008ad6:	4652      	mov	r2, sl
 8008ad8:	465b      	mov	r3, fp
 8008ada:	4640      	mov	r0, r8
 8008adc:	4649      	mov	r1, r9
 8008ade:	f7f7 fbf7 	bl	80002d0 <__aeabi_uldivmod>
 8008ae2:	4602      	mov	r2, r0
 8008ae4:	460b      	mov	r3, r1
 8008ae6:	4613      	mov	r3, r2
 8008ae8:	623b      	str	r3, [r7, #32]
 8008aea:	6a3b      	ldr	r3, [r7, #32]
 8008aec:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8008af0:	d308      	bcc.n	8008b04 <UART_SetConfig+0x430>
 8008af2:	6a3b      	ldr	r3, [r7, #32]
 8008af4:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8008af8:	d204      	bcs.n	8008b04 <UART_SetConfig+0x430>
 8008afa:	697b      	ldr	r3, [r7, #20]
 8008afc:	681b      	ldr	r3, [r3, #0]
 8008afe:	6a3a      	ldr	r2, [r7, #32]
 8008b00:	60da      	str	r2, [r3, #12]
 8008b02:	e0ce      	b.n	8008ca2 <UART_SetConfig+0x5ce>
 8008b04:	2301      	movs	r3, #1
 8008b06:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 8008b0a:	e0ca      	b.n	8008ca2 <UART_SetConfig+0x5ce>
 8008b0c:	697b      	ldr	r3, [r7, #20]
 8008b0e:	69db      	ldr	r3, [r3, #28]
 8008b10:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8008b14:	d166      	bne.n	8008be4 <UART_SetConfig+0x510>
 8008b16:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 8008b1a:	2b08      	cmp	r3, #8
 8008b1c:	d827      	bhi.n	8008b6e <UART_SetConfig+0x49a>
 8008b1e:	a201      	add	r2, pc, #4	@ (adr r2, 8008b24 <UART_SetConfig+0x450>)
 8008b20:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008b24:	08008b49 	.word	0x08008b49
 8008b28:	08008b51 	.word	0x08008b51
 8008b2c:	08008b59 	.word	0x08008b59
 8008b30:	08008b6f 	.word	0x08008b6f
 8008b34:	08008b5f 	.word	0x08008b5f
 8008b38:	08008b6f 	.word	0x08008b6f
 8008b3c:	08008b6f 	.word	0x08008b6f
 8008b40:	08008b6f 	.word	0x08008b6f
 8008b44:	08008b67 	.word	0x08008b67
 8008b48:	f7fd fa70 	bl	800602c <HAL_RCC_GetPCLK1Freq>
 8008b4c:	6278      	str	r0, [r7, #36]	@ 0x24
 8008b4e:	e014      	b.n	8008b7a <UART_SetConfig+0x4a6>
 8008b50:	f7fd fa82 	bl	8006058 <HAL_RCC_GetPCLK2Freq>
 8008b54:	6278      	str	r0, [r7, #36]	@ 0x24
 8008b56:	e010      	b.n	8008b7a <UART_SetConfig+0x4a6>
 8008b58:	4b4e      	ldr	r3, [pc, #312]	@ (8008c94 <UART_SetConfig+0x5c0>)
 8008b5a:	627b      	str	r3, [r7, #36]	@ 0x24
 8008b5c:	e00d      	b.n	8008b7a <UART_SetConfig+0x4a6>
 8008b5e:	f7fd f9f7 	bl	8005f50 <HAL_RCC_GetSysClockFreq>
 8008b62:	6278      	str	r0, [r7, #36]	@ 0x24
 8008b64:	e009      	b.n	8008b7a <UART_SetConfig+0x4a6>
 8008b66:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8008b6a:	627b      	str	r3, [r7, #36]	@ 0x24
 8008b6c:	e005      	b.n	8008b7a <UART_SetConfig+0x4a6>
 8008b6e:	2300      	movs	r3, #0
 8008b70:	627b      	str	r3, [r7, #36]	@ 0x24
 8008b72:	2301      	movs	r3, #1
 8008b74:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 8008b78:	bf00      	nop
 8008b7a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008b7c:	2b00      	cmp	r3, #0
 8008b7e:	f000 8090 	beq.w	8008ca2 <UART_SetConfig+0x5ce>
 8008b82:	697b      	ldr	r3, [r7, #20]
 8008b84:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008b86:	4a44      	ldr	r2, [pc, #272]	@ (8008c98 <UART_SetConfig+0x5c4>)
 8008b88:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8008b8c:	461a      	mov	r2, r3
 8008b8e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008b90:	fbb3 f3f2 	udiv	r3, r3, r2
 8008b94:	005a      	lsls	r2, r3, #1
 8008b96:	697b      	ldr	r3, [r7, #20]
 8008b98:	685b      	ldr	r3, [r3, #4]
 8008b9a:	085b      	lsrs	r3, r3, #1
 8008b9c:	441a      	add	r2, r3
 8008b9e:	697b      	ldr	r3, [r7, #20]
 8008ba0:	685b      	ldr	r3, [r3, #4]
 8008ba2:	fbb2 f3f3 	udiv	r3, r2, r3
 8008ba6:	623b      	str	r3, [r7, #32]
 8008ba8:	6a3b      	ldr	r3, [r7, #32]
 8008baa:	2b0f      	cmp	r3, #15
 8008bac:	d916      	bls.n	8008bdc <UART_SetConfig+0x508>
 8008bae:	6a3b      	ldr	r3, [r7, #32]
 8008bb0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008bb4:	d212      	bcs.n	8008bdc <UART_SetConfig+0x508>
 8008bb6:	6a3b      	ldr	r3, [r7, #32]
 8008bb8:	b29b      	uxth	r3, r3
 8008bba:	f023 030f 	bic.w	r3, r3, #15
 8008bbe:	83fb      	strh	r3, [r7, #30]
 8008bc0:	6a3b      	ldr	r3, [r7, #32]
 8008bc2:	085b      	lsrs	r3, r3, #1
 8008bc4:	b29b      	uxth	r3, r3
 8008bc6:	f003 0307 	and.w	r3, r3, #7
 8008bca:	b29a      	uxth	r2, r3
 8008bcc:	8bfb      	ldrh	r3, [r7, #30]
 8008bce:	4313      	orrs	r3, r2
 8008bd0:	83fb      	strh	r3, [r7, #30]
 8008bd2:	697b      	ldr	r3, [r7, #20]
 8008bd4:	681b      	ldr	r3, [r3, #0]
 8008bd6:	8bfa      	ldrh	r2, [r7, #30]
 8008bd8:	60da      	str	r2, [r3, #12]
 8008bda:	e062      	b.n	8008ca2 <UART_SetConfig+0x5ce>
 8008bdc:	2301      	movs	r3, #1
 8008bde:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 8008be2:	e05e      	b.n	8008ca2 <UART_SetConfig+0x5ce>
 8008be4:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 8008be8:	2b08      	cmp	r3, #8
 8008bea:	d828      	bhi.n	8008c3e <UART_SetConfig+0x56a>
 8008bec:	a201      	add	r2, pc, #4	@ (adr r2, 8008bf4 <UART_SetConfig+0x520>)
 8008bee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008bf2:	bf00      	nop
 8008bf4:	08008c19 	.word	0x08008c19
 8008bf8:	08008c21 	.word	0x08008c21
 8008bfc:	08008c29 	.word	0x08008c29
 8008c00:	08008c3f 	.word	0x08008c3f
 8008c04:	08008c2f 	.word	0x08008c2f
 8008c08:	08008c3f 	.word	0x08008c3f
 8008c0c:	08008c3f 	.word	0x08008c3f
 8008c10:	08008c3f 	.word	0x08008c3f
 8008c14:	08008c37 	.word	0x08008c37
 8008c18:	f7fd fa08 	bl	800602c <HAL_RCC_GetPCLK1Freq>
 8008c1c:	6278      	str	r0, [r7, #36]	@ 0x24
 8008c1e:	e014      	b.n	8008c4a <UART_SetConfig+0x576>
 8008c20:	f7fd fa1a 	bl	8006058 <HAL_RCC_GetPCLK2Freq>
 8008c24:	6278      	str	r0, [r7, #36]	@ 0x24
 8008c26:	e010      	b.n	8008c4a <UART_SetConfig+0x576>
 8008c28:	4b1a      	ldr	r3, [pc, #104]	@ (8008c94 <UART_SetConfig+0x5c0>)
 8008c2a:	627b      	str	r3, [r7, #36]	@ 0x24
 8008c2c:	e00d      	b.n	8008c4a <UART_SetConfig+0x576>
 8008c2e:	f7fd f98f 	bl	8005f50 <HAL_RCC_GetSysClockFreq>
 8008c32:	6278      	str	r0, [r7, #36]	@ 0x24
 8008c34:	e009      	b.n	8008c4a <UART_SetConfig+0x576>
 8008c36:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8008c3a:	627b      	str	r3, [r7, #36]	@ 0x24
 8008c3c:	e005      	b.n	8008c4a <UART_SetConfig+0x576>
 8008c3e:	2300      	movs	r3, #0
 8008c40:	627b      	str	r3, [r7, #36]	@ 0x24
 8008c42:	2301      	movs	r3, #1
 8008c44:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 8008c48:	bf00      	nop
 8008c4a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008c4c:	2b00      	cmp	r3, #0
 8008c4e:	d028      	beq.n	8008ca2 <UART_SetConfig+0x5ce>
 8008c50:	697b      	ldr	r3, [r7, #20]
 8008c52:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008c54:	4a10      	ldr	r2, [pc, #64]	@ (8008c98 <UART_SetConfig+0x5c4>)
 8008c56:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8008c5a:	461a      	mov	r2, r3
 8008c5c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008c5e:	fbb3 f2f2 	udiv	r2, r3, r2
 8008c62:	697b      	ldr	r3, [r7, #20]
 8008c64:	685b      	ldr	r3, [r3, #4]
 8008c66:	085b      	lsrs	r3, r3, #1
 8008c68:	441a      	add	r2, r3
 8008c6a:	697b      	ldr	r3, [r7, #20]
 8008c6c:	685b      	ldr	r3, [r3, #4]
 8008c6e:	fbb2 f3f3 	udiv	r3, r2, r3
 8008c72:	623b      	str	r3, [r7, #32]
 8008c74:	6a3b      	ldr	r3, [r7, #32]
 8008c76:	2b0f      	cmp	r3, #15
 8008c78:	d910      	bls.n	8008c9c <UART_SetConfig+0x5c8>
 8008c7a:	6a3b      	ldr	r3, [r7, #32]
 8008c7c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008c80:	d20c      	bcs.n	8008c9c <UART_SetConfig+0x5c8>
 8008c82:	6a3b      	ldr	r3, [r7, #32]
 8008c84:	b29a      	uxth	r2, r3
 8008c86:	697b      	ldr	r3, [r7, #20]
 8008c88:	681b      	ldr	r3, [r3, #0]
 8008c8a:	60da      	str	r2, [r3, #12]
 8008c8c:	e009      	b.n	8008ca2 <UART_SetConfig+0x5ce>
 8008c8e:	bf00      	nop
 8008c90:	40008000 	.word	0x40008000
 8008c94:	00f42400 	.word	0x00f42400
 8008c98:	0800d364 	.word	0x0800d364
 8008c9c:	2301      	movs	r3, #1
 8008c9e:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 8008ca2:	697b      	ldr	r3, [r7, #20]
 8008ca4:	2201      	movs	r2, #1
 8008ca6:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8008caa:	697b      	ldr	r3, [r7, #20]
 8008cac:	2201      	movs	r2, #1
 8008cae:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 8008cb2:	697b      	ldr	r3, [r7, #20]
 8008cb4:	2200      	movs	r2, #0
 8008cb6:	671a      	str	r2, [r3, #112]	@ 0x70
 8008cb8:	697b      	ldr	r3, [r7, #20]
 8008cba:	2200      	movs	r2, #0
 8008cbc:	675a      	str	r2, [r3, #116]	@ 0x74
 8008cbe:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 8008cc2:	4618      	mov	r0, r3
 8008cc4:	3730      	adds	r7, #48	@ 0x30
 8008cc6:	46bd      	mov	sp, r7
 8008cc8:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}

08008ccc <UART_AdvFeatureConfig>:
 8008ccc:	b480      	push	{r7}
 8008cce:	b083      	sub	sp, #12
 8008cd0:	af00      	add	r7, sp, #0
 8008cd2:	6078      	str	r0, [r7, #4]
 8008cd4:	687b      	ldr	r3, [r7, #4]
 8008cd6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008cd8:	f003 0301 	and.w	r3, r3, #1
 8008cdc:	2b00      	cmp	r3, #0
 8008cde:	d00a      	beq.n	8008cf6 <UART_AdvFeatureConfig+0x2a>
 8008ce0:	687b      	ldr	r3, [r7, #4]
 8008ce2:	681b      	ldr	r3, [r3, #0]
 8008ce4:	685b      	ldr	r3, [r3, #4]
 8008ce6:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 8008cea:	687b      	ldr	r3, [r7, #4]
 8008cec:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008cee:	687b      	ldr	r3, [r7, #4]
 8008cf0:	681b      	ldr	r3, [r3, #0]
 8008cf2:	430a      	orrs	r2, r1
 8008cf4:	605a      	str	r2, [r3, #4]
 8008cf6:	687b      	ldr	r3, [r7, #4]
 8008cf8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008cfa:	f003 0302 	and.w	r3, r3, #2
 8008cfe:	2b00      	cmp	r3, #0
 8008d00:	d00a      	beq.n	8008d18 <UART_AdvFeatureConfig+0x4c>
 8008d02:	687b      	ldr	r3, [r7, #4]
 8008d04:	681b      	ldr	r3, [r3, #0]
 8008d06:	685b      	ldr	r3, [r3, #4]
 8008d08:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 8008d0c:	687b      	ldr	r3, [r7, #4]
 8008d0e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8008d10:	687b      	ldr	r3, [r7, #4]
 8008d12:	681b      	ldr	r3, [r3, #0]
 8008d14:	430a      	orrs	r2, r1
 8008d16:	605a      	str	r2, [r3, #4]
 8008d18:	687b      	ldr	r3, [r7, #4]
 8008d1a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008d1c:	f003 0304 	and.w	r3, r3, #4
 8008d20:	2b00      	cmp	r3, #0
 8008d22:	d00a      	beq.n	8008d3a <UART_AdvFeatureConfig+0x6e>
 8008d24:	687b      	ldr	r3, [r7, #4]
 8008d26:	681b      	ldr	r3, [r3, #0]
 8008d28:	685b      	ldr	r3, [r3, #4]
 8008d2a:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 8008d2e:	687b      	ldr	r3, [r7, #4]
 8008d30:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8008d32:	687b      	ldr	r3, [r7, #4]
 8008d34:	681b      	ldr	r3, [r3, #0]
 8008d36:	430a      	orrs	r2, r1
 8008d38:	605a      	str	r2, [r3, #4]
 8008d3a:	687b      	ldr	r3, [r7, #4]
 8008d3c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008d3e:	f003 0308 	and.w	r3, r3, #8
 8008d42:	2b00      	cmp	r3, #0
 8008d44:	d00a      	beq.n	8008d5c <UART_AdvFeatureConfig+0x90>
 8008d46:	687b      	ldr	r3, [r7, #4]
 8008d48:	681b      	ldr	r3, [r3, #0]
 8008d4a:	685b      	ldr	r3, [r3, #4]
 8008d4c:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 8008d50:	687b      	ldr	r3, [r7, #4]
 8008d52:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8008d54:	687b      	ldr	r3, [r7, #4]
 8008d56:	681b      	ldr	r3, [r3, #0]
 8008d58:	430a      	orrs	r2, r1
 8008d5a:	605a      	str	r2, [r3, #4]
 8008d5c:	687b      	ldr	r3, [r7, #4]
 8008d5e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008d60:	f003 0310 	and.w	r3, r3, #16
 8008d64:	2b00      	cmp	r3, #0
 8008d66:	d00a      	beq.n	8008d7e <UART_AdvFeatureConfig+0xb2>
 8008d68:	687b      	ldr	r3, [r7, #4]
 8008d6a:	681b      	ldr	r3, [r3, #0]
 8008d6c:	689b      	ldr	r3, [r3, #8]
 8008d6e:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 8008d72:	687b      	ldr	r3, [r7, #4]
 8008d74:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8008d76:	687b      	ldr	r3, [r7, #4]
 8008d78:	681b      	ldr	r3, [r3, #0]
 8008d7a:	430a      	orrs	r2, r1
 8008d7c:	609a      	str	r2, [r3, #8]
 8008d7e:	687b      	ldr	r3, [r7, #4]
 8008d80:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008d82:	f003 0320 	and.w	r3, r3, #32
 8008d86:	2b00      	cmp	r3, #0
 8008d88:	d00a      	beq.n	8008da0 <UART_AdvFeatureConfig+0xd4>
 8008d8a:	687b      	ldr	r3, [r7, #4]
 8008d8c:	681b      	ldr	r3, [r3, #0]
 8008d8e:	689b      	ldr	r3, [r3, #8]
 8008d90:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 8008d94:	687b      	ldr	r3, [r7, #4]
 8008d96:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8008d98:	687b      	ldr	r3, [r7, #4]
 8008d9a:	681b      	ldr	r3, [r3, #0]
 8008d9c:	430a      	orrs	r2, r1
 8008d9e:	609a      	str	r2, [r3, #8]
 8008da0:	687b      	ldr	r3, [r7, #4]
 8008da2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008da4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008da8:	2b00      	cmp	r3, #0
 8008daa:	d01a      	beq.n	8008de2 <UART_AdvFeatureConfig+0x116>
 8008dac:	687b      	ldr	r3, [r7, #4]
 8008dae:	681b      	ldr	r3, [r3, #0]
 8008db0:	685b      	ldr	r3, [r3, #4]
 8008db2:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 8008db6:	687b      	ldr	r3, [r7, #4]
 8008db8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8008dba:	687b      	ldr	r3, [r7, #4]
 8008dbc:	681b      	ldr	r3, [r3, #0]
 8008dbe:	430a      	orrs	r2, r1
 8008dc0:	605a      	str	r2, [r3, #4]
 8008dc2:	687b      	ldr	r3, [r7, #4]
 8008dc4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8008dc6:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8008dca:	d10a      	bne.n	8008de2 <UART_AdvFeatureConfig+0x116>
 8008dcc:	687b      	ldr	r3, [r7, #4]
 8008dce:	681b      	ldr	r3, [r3, #0]
 8008dd0:	685b      	ldr	r3, [r3, #4]
 8008dd2:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 8008dd6:	687b      	ldr	r3, [r7, #4]
 8008dd8:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8008dda:	687b      	ldr	r3, [r7, #4]
 8008ddc:	681b      	ldr	r3, [r3, #0]
 8008dde:	430a      	orrs	r2, r1
 8008de0:	605a      	str	r2, [r3, #4]
 8008de2:	687b      	ldr	r3, [r7, #4]
 8008de4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008de6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8008dea:	2b00      	cmp	r3, #0
 8008dec:	d00a      	beq.n	8008e04 <UART_AdvFeatureConfig+0x138>
 8008dee:	687b      	ldr	r3, [r7, #4]
 8008df0:	681b      	ldr	r3, [r3, #0]
 8008df2:	685b      	ldr	r3, [r3, #4]
 8008df4:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 8008df8:	687b      	ldr	r3, [r7, #4]
 8008dfa:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8008dfc:	687b      	ldr	r3, [r7, #4]
 8008dfe:	681b      	ldr	r3, [r3, #0]
 8008e00:	430a      	orrs	r2, r1
 8008e02:	605a      	str	r2, [r3, #4]
 8008e04:	bf00      	nop
 8008e06:	370c      	adds	r7, #12
 8008e08:	46bd      	mov	sp, r7
 8008e0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e0e:	4770      	bx	lr

08008e10 <UART_CheckIdleState>:
 8008e10:	b580      	push	{r7, lr}
 8008e12:	b086      	sub	sp, #24
 8008e14:	af02      	add	r7, sp, #8
 8008e16:	6078      	str	r0, [r7, #4]
 8008e18:	687b      	ldr	r3, [r7, #4]
 8008e1a:	2200      	movs	r2, #0
 8008e1c:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8008e20:	f7f9 fe76 	bl	8002b10 <HAL_GetTick>
 8008e24:	60f8      	str	r0, [r7, #12]
 8008e26:	687b      	ldr	r3, [r7, #4]
 8008e28:	681b      	ldr	r3, [r3, #0]
 8008e2a:	681b      	ldr	r3, [r3, #0]
 8008e2c:	f003 0308 	and.w	r3, r3, #8
 8008e30:	2b08      	cmp	r3, #8
 8008e32:	d10e      	bne.n	8008e52 <UART_CheckIdleState+0x42>
 8008e34:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8008e38:	9300      	str	r3, [sp, #0]
 8008e3a:	68fb      	ldr	r3, [r7, #12]
 8008e3c:	2200      	movs	r2, #0
 8008e3e:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 8008e42:	6878      	ldr	r0, [r7, #4]
 8008e44:	f000 f82f 	bl	8008ea6 <UART_WaitOnFlagUntilTimeout>
 8008e48:	4603      	mov	r3, r0
 8008e4a:	2b00      	cmp	r3, #0
 8008e4c:	d001      	beq.n	8008e52 <UART_CheckIdleState+0x42>
 8008e4e:	2303      	movs	r3, #3
 8008e50:	e025      	b.n	8008e9e <UART_CheckIdleState+0x8e>
 8008e52:	687b      	ldr	r3, [r7, #4]
 8008e54:	681b      	ldr	r3, [r3, #0]
 8008e56:	681b      	ldr	r3, [r3, #0]
 8008e58:	f003 0304 	and.w	r3, r3, #4
 8008e5c:	2b04      	cmp	r3, #4
 8008e5e:	d10e      	bne.n	8008e7e <UART_CheckIdleState+0x6e>
 8008e60:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8008e64:	9300      	str	r3, [sp, #0]
 8008e66:	68fb      	ldr	r3, [r7, #12]
 8008e68:	2200      	movs	r2, #0
 8008e6a:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 8008e6e:	6878      	ldr	r0, [r7, #4]
 8008e70:	f000 f819 	bl	8008ea6 <UART_WaitOnFlagUntilTimeout>
 8008e74:	4603      	mov	r3, r0
 8008e76:	2b00      	cmp	r3, #0
 8008e78:	d001      	beq.n	8008e7e <UART_CheckIdleState+0x6e>
 8008e7a:	2303      	movs	r3, #3
 8008e7c:	e00f      	b.n	8008e9e <UART_CheckIdleState+0x8e>
 8008e7e:	687b      	ldr	r3, [r7, #4]
 8008e80:	2220      	movs	r2, #32
 8008e82:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8008e86:	687b      	ldr	r3, [r7, #4]
 8008e88:	2220      	movs	r2, #32
 8008e8a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8008e8e:	687b      	ldr	r3, [r7, #4]
 8008e90:	2200      	movs	r2, #0
 8008e92:	66da      	str	r2, [r3, #108]	@ 0x6c
 8008e94:	687b      	ldr	r3, [r7, #4]
 8008e96:	2200      	movs	r2, #0
 8008e98:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 8008e9c:	2300      	movs	r3, #0
 8008e9e:	4618      	mov	r0, r3
 8008ea0:	3710      	adds	r7, #16
 8008ea2:	46bd      	mov	sp, r7
 8008ea4:	bd80      	pop	{r7, pc}

08008ea6 <UART_WaitOnFlagUntilTimeout>:
 8008ea6:	b580      	push	{r7, lr}
 8008ea8:	b09c      	sub	sp, #112	@ 0x70
 8008eaa:	af00      	add	r7, sp, #0
 8008eac:	60f8      	str	r0, [r7, #12]
 8008eae:	60b9      	str	r1, [r7, #8]
 8008eb0:	603b      	str	r3, [r7, #0]
 8008eb2:	4613      	mov	r3, r2
 8008eb4:	71fb      	strb	r3, [r7, #7]
 8008eb6:	e0a9      	b.n	800900c <UART_WaitOnFlagUntilTimeout+0x166>
 8008eb8:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8008eba:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008ebe:	f000 80a5 	beq.w	800900c <UART_WaitOnFlagUntilTimeout+0x166>
 8008ec2:	f7f9 fe25 	bl	8002b10 <HAL_GetTick>
 8008ec6:	4602      	mov	r2, r0
 8008ec8:	683b      	ldr	r3, [r7, #0]
 8008eca:	1ad3      	subs	r3, r2, r3
 8008ecc:	6fba      	ldr	r2, [r7, #120]	@ 0x78
 8008ece:	429a      	cmp	r2, r3
 8008ed0:	d302      	bcc.n	8008ed8 <UART_WaitOnFlagUntilTimeout+0x32>
 8008ed2:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8008ed4:	2b00      	cmp	r3, #0
 8008ed6:	d140      	bne.n	8008f5a <UART_WaitOnFlagUntilTimeout+0xb4>
 8008ed8:	68fb      	ldr	r3, [r7, #12]
 8008eda:	681b      	ldr	r3, [r3, #0]
 8008edc:	653b      	str	r3, [r7, #80]	@ 0x50
 8008ede:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8008ee0:	e853 3f00 	ldrex	r3, [r3]
 8008ee4:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8008ee6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8008ee8:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
 8008eec:	667b      	str	r3, [r7, #100]	@ 0x64
 8008eee:	68fb      	ldr	r3, [r7, #12]
 8008ef0:	681b      	ldr	r3, [r3, #0]
 8008ef2:	461a      	mov	r2, r3
 8008ef4:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8008ef6:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8008ef8:	65ba      	str	r2, [r7, #88]	@ 0x58
 8008efa:	6db9      	ldr	r1, [r7, #88]	@ 0x58
 8008efc:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8008efe:	e841 2300 	strex	r3, r2, [r1]
 8008f02:	657b      	str	r3, [r7, #84]	@ 0x54
 8008f04:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8008f06:	2b00      	cmp	r3, #0
 8008f08:	d1e6      	bne.n	8008ed8 <UART_WaitOnFlagUntilTimeout+0x32>
 8008f0a:	68fb      	ldr	r3, [r7, #12]
 8008f0c:	681b      	ldr	r3, [r3, #0]
 8008f0e:	3308      	adds	r3, #8
 8008f10:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008f12:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8008f14:	e853 3f00 	ldrex	r3, [r3]
 8008f18:	63bb      	str	r3, [r7, #56]	@ 0x38
 8008f1a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008f1c:	f023 0301 	bic.w	r3, r3, #1
 8008f20:	663b      	str	r3, [r7, #96]	@ 0x60
 8008f22:	68fb      	ldr	r3, [r7, #12]
 8008f24:	681b      	ldr	r3, [r3, #0]
 8008f26:	3308      	adds	r3, #8
 8008f28:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 8008f2a:	64ba      	str	r2, [r7, #72]	@ 0x48
 8008f2c:	647b      	str	r3, [r7, #68]	@ 0x44
 8008f2e:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 8008f30:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8008f32:	e841 2300 	strex	r3, r2, [r1]
 8008f36:	643b      	str	r3, [r7, #64]	@ 0x40
 8008f38:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8008f3a:	2b00      	cmp	r3, #0
 8008f3c:	d1e5      	bne.n	8008f0a <UART_WaitOnFlagUntilTimeout+0x64>
 8008f3e:	68fb      	ldr	r3, [r7, #12]
 8008f40:	2220      	movs	r2, #32
 8008f42:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8008f46:	68fb      	ldr	r3, [r7, #12]
 8008f48:	2220      	movs	r2, #32
 8008f4a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8008f4e:	68fb      	ldr	r3, [r7, #12]
 8008f50:	2200      	movs	r2, #0
 8008f52:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 8008f56:	2303      	movs	r3, #3
 8008f58:	e069      	b.n	800902e <UART_WaitOnFlagUntilTimeout+0x188>
 8008f5a:	68fb      	ldr	r3, [r7, #12]
 8008f5c:	681b      	ldr	r3, [r3, #0]
 8008f5e:	681b      	ldr	r3, [r3, #0]
 8008f60:	f003 0304 	and.w	r3, r3, #4
 8008f64:	2b00      	cmp	r3, #0
 8008f66:	d051      	beq.n	800900c <UART_WaitOnFlagUntilTimeout+0x166>
 8008f68:	68fb      	ldr	r3, [r7, #12]
 8008f6a:	681b      	ldr	r3, [r3, #0]
 8008f6c:	69db      	ldr	r3, [r3, #28]
 8008f6e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8008f72:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8008f76:	d149      	bne.n	800900c <UART_WaitOnFlagUntilTimeout+0x166>
 8008f78:	68fb      	ldr	r3, [r7, #12]
 8008f7a:	681b      	ldr	r3, [r3, #0]
 8008f7c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8008f80:	621a      	str	r2, [r3, #32]
 8008f82:	68fb      	ldr	r3, [r7, #12]
 8008f84:	681b      	ldr	r3, [r3, #0]
 8008f86:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008f88:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f8a:	e853 3f00 	ldrex	r3, [r3]
 8008f8e:	627b      	str	r3, [r7, #36]	@ 0x24
 8008f90:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f92:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
 8008f96:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8008f98:	68fb      	ldr	r3, [r7, #12]
 8008f9a:	681b      	ldr	r3, [r3, #0]
 8008f9c:	461a      	mov	r2, r3
 8008f9e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8008fa0:	637b      	str	r3, [r7, #52]	@ 0x34
 8008fa2:	633a      	str	r2, [r7, #48]	@ 0x30
 8008fa4:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8008fa6:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8008fa8:	e841 2300 	strex	r3, r2, [r1]
 8008fac:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008fae:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008fb0:	2b00      	cmp	r3, #0
 8008fb2:	d1e6      	bne.n	8008f82 <UART_WaitOnFlagUntilTimeout+0xdc>
 8008fb4:	68fb      	ldr	r3, [r7, #12]
 8008fb6:	681b      	ldr	r3, [r3, #0]
 8008fb8:	3308      	adds	r3, #8
 8008fba:	617b      	str	r3, [r7, #20]
 8008fbc:	697b      	ldr	r3, [r7, #20]
 8008fbe:	e853 3f00 	ldrex	r3, [r3]
 8008fc2:	613b      	str	r3, [r7, #16]
 8008fc4:	693b      	ldr	r3, [r7, #16]
 8008fc6:	f023 0301 	bic.w	r3, r3, #1
 8008fca:	66bb      	str	r3, [r7, #104]	@ 0x68
 8008fcc:	68fb      	ldr	r3, [r7, #12]
 8008fce:	681b      	ldr	r3, [r3, #0]
 8008fd0:	3308      	adds	r3, #8
 8008fd2:	6eba      	ldr	r2, [r7, #104]	@ 0x68
 8008fd4:	623a      	str	r2, [r7, #32]
 8008fd6:	61fb      	str	r3, [r7, #28]
 8008fd8:	69f9      	ldr	r1, [r7, #28]
 8008fda:	6a3a      	ldr	r2, [r7, #32]
 8008fdc:	e841 2300 	strex	r3, r2, [r1]
 8008fe0:	61bb      	str	r3, [r7, #24]
 8008fe2:	69bb      	ldr	r3, [r7, #24]
 8008fe4:	2b00      	cmp	r3, #0
 8008fe6:	d1e5      	bne.n	8008fb4 <UART_WaitOnFlagUntilTimeout+0x10e>
 8008fe8:	68fb      	ldr	r3, [r7, #12]
 8008fea:	2220      	movs	r2, #32
 8008fec:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8008ff0:	68fb      	ldr	r3, [r7, #12]
 8008ff2:	2220      	movs	r2, #32
 8008ff4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8008ff8:	68fb      	ldr	r3, [r7, #12]
 8008ffa:	2220      	movs	r2, #32
 8008ffc:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8009000:	68fb      	ldr	r3, [r7, #12]
 8009002:	2200      	movs	r2, #0
 8009004:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 8009008:	2303      	movs	r3, #3
 800900a:	e010      	b.n	800902e <UART_WaitOnFlagUntilTimeout+0x188>
 800900c:	68fb      	ldr	r3, [r7, #12]
 800900e:	681b      	ldr	r3, [r3, #0]
 8009010:	69da      	ldr	r2, [r3, #28]
 8009012:	68bb      	ldr	r3, [r7, #8]
 8009014:	4013      	ands	r3, r2
 8009016:	68ba      	ldr	r2, [r7, #8]
 8009018:	429a      	cmp	r2, r3
 800901a:	bf0c      	ite	eq
 800901c:	2301      	moveq	r3, #1
 800901e:	2300      	movne	r3, #0
 8009020:	b2db      	uxtb	r3, r3
 8009022:	461a      	mov	r2, r3
 8009024:	79fb      	ldrb	r3, [r7, #7]
 8009026:	429a      	cmp	r2, r3
 8009028:	f43f af46 	beq.w	8008eb8 <UART_WaitOnFlagUntilTimeout+0x12>
 800902c:	2300      	movs	r3, #0
 800902e:	4618      	mov	r0, r3
 8009030:	3770      	adds	r7, #112	@ 0x70
 8009032:	46bd      	mov	sp, r7
 8009034:	bd80      	pop	{r7, pc}
	...

08009038 <UART_Start_Receive_DMA>:
 8009038:	b580      	push	{r7, lr}
 800903a:	b096      	sub	sp, #88	@ 0x58
 800903c:	af00      	add	r7, sp, #0
 800903e:	60f8      	str	r0, [r7, #12]
 8009040:	60b9      	str	r1, [r7, #8]
 8009042:	4613      	mov	r3, r2
 8009044:	80fb      	strh	r3, [r7, #6]
 8009046:	68fb      	ldr	r3, [r7, #12]
 8009048:	68ba      	ldr	r2, [r7, #8]
 800904a:	659a      	str	r2, [r3, #88]	@ 0x58
 800904c:	68fb      	ldr	r3, [r7, #12]
 800904e:	88fa      	ldrh	r2, [r7, #6]
 8009050:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8009054:	68fb      	ldr	r3, [r7, #12]
 8009056:	2200      	movs	r2, #0
 8009058:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800905c:	68fb      	ldr	r3, [r7, #12]
 800905e:	2222      	movs	r2, #34	@ 0x22
 8009060:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009064:	68fb      	ldr	r3, [r7, #12]
 8009066:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8009068:	2b00      	cmp	r3, #0
 800906a:	d02c      	beq.n	80090c6 <UART_Start_Receive_DMA+0x8e>
 800906c:	68fb      	ldr	r3, [r7, #12]
 800906e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8009070:	4a42      	ldr	r2, [pc, #264]	@ (800917c <UART_Start_Receive_DMA+0x144>)
 8009072:	62da      	str	r2, [r3, #44]	@ 0x2c
 8009074:	68fb      	ldr	r3, [r7, #12]
 8009076:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8009078:	4a41      	ldr	r2, [pc, #260]	@ (8009180 <UART_Start_Receive_DMA+0x148>)
 800907a:	631a      	str	r2, [r3, #48]	@ 0x30
 800907c:	68fb      	ldr	r3, [r7, #12]
 800907e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8009080:	4a40      	ldr	r2, [pc, #256]	@ (8009184 <UART_Start_Receive_DMA+0x14c>)
 8009082:	635a      	str	r2, [r3, #52]	@ 0x34
 8009084:	68fb      	ldr	r3, [r7, #12]
 8009086:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8009088:	2200      	movs	r2, #0
 800908a:	639a      	str	r2, [r3, #56]	@ 0x38
 800908c:	68fb      	ldr	r3, [r7, #12]
 800908e:	6fd8      	ldr	r0, [r3, #124]	@ 0x7c
 8009090:	68fb      	ldr	r3, [r7, #12]
 8009092:	681b      	ldr	r3, [r3, #0]
 8009094:	3324      	adds	r3, #36	@ 0x24
 8009096:	4619      	mov	r1, r3
 8009098:	68fb      	ldr	r3, [r7, #12]
 800909a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800909c:	461a      	mov	r2, r3
 800909e:	88fb      	ldrh	r3, [r7, #6]
 80090a0:	f7fb faf6 	bl	8004690 <HAL_DMA_Start_IT>
 80090a4:	4603      	mov	r3, r0
 80090a6:	2b00      	cmp	r3, #0
 80090a8:	d00d      	beq.n	80090c6 <UART_Start_Receive_DMA+0x8e>
 80090aa:	68fb      	ldr	r3, [r7, #12]
 80090ac:	2210      	movs	r2, #16
 80090ae:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80090b2:	68fb      	ldr	r3, [r7, #12]
 80090b4:	2200      	movs	r2, #0
 80090b6:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 80090ba:	68fb      	ldr	r3, [r7, #12]
 80090bc:	2220      	movs	r2, #32
 80090be:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80090c2:	2301      	movs	r3, #1
 80090c4:	e055      	b.n	8009172 <UART_Start_Receive_DMA+0x13a>
 80090c6:	68fb      	ldr	r3, [r7, #12]
 80090c8:	2200      	movs	r2, #0
 80090ca:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 80090ce:	68fb      	ldr	r3, [r7, #12]
 80090d0:	691b      	ldr	r3, [r3, #16]
 80090d2:	2b00      	cmp	r3, #0
 80090d4:	d018      	beq.n	8009108 <UART_Start_Receive_DMA+0xd0>
 80090d6:	68fb      	ldr	r3, [r7, #12]
 80090d8:	681b      	ldr	r3, [r3, #0]
 80090da:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80090dc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80090de:	e853 3f00 	ldrex	r3, [r3]
 80090e2:	63bb      	str	r3, [r7, #56]	@ 0x38
 80090e4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80090e6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80090ea:	657b      	str	r3, [r7, #84]	@ 0x54
 80090ec:	68fb      	ldr	r3, [r7, #12]
 80090ee:	681b      	ldr	r3, [r3, #0]
 80090f0:	461a      	mov	r2, r3
 80090f2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80090f4:	64bb      	str	r3, [r7, #72]	@ 0x48
 80090f6:	647a      	str	r2, [r7, #68]	@ 0x44
 80090f8:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 80090fa:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80090fc:	e841 2300 	strex	r3, r2, [r1]
 8009100:	643b      	str	r3, [r7, #64]	@ 0x40
 8009102:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8009104:	2b00      	cmp	r3, #0
 8009106:	d1e6      	bne.n	80090d6 <UART_Start_Receive_DMA+0x9e>
 8009108:	68fb      	ldr	r3, [r7, #12]
 800910a:	681b      	ldr	r3, [r3, #0]
 800910c:	3308      	adds	r3, #8
 800910e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009110:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009112:	e853 3f00 	ldrex	r3, [r3]
 8009116:	627b      	str	r3, [r7, #36]	@ 0x24
 8009118:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800911a:	f043 0301 	orr.w	r3, r3, #1
 800911e:	653b      	str	r3, [r7, #80]	@ 0x50
 8009120:	68fb      	ldr	r3, [r7, #12]
 8009122:	681b      	ldr	r3, [r3, #0]
 8009124:	3308      	adds	r3, #8
 8009126:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 8009128:	637a      	str	r2, [r7, #52]	@ 0x34
 800912a:	633b      	str	r3, [r7, #48]	@ 0x30
 800912c:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800912e:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8009130:	e841 2300 	strex	r3, r2, [r1]
 8009134:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8009136:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009138:	2b00      	cmp	r3, #0
 800913a:	d1e5      	bne.n	8009108 <UART_Start_Receive_DMA+0xd0>
 800913c:	68fb      	ldr	r3, [r7, #12]
 800913e:	681b      	ldr	r3, [r3, #0]
 8009140:	3308      	adds	r3, #8
 8009142:	617b      	str	r3, [r7, #20]
 8009144:	697b      	ldr	r3, [r7, #20]
 8009146:	e853 3f00 	ldrex	r3, [r3]
 800914a:	613b      	str	r3, [r7, #16]
 800914c:	693b      	ldr	r3, [r7, #16]
 800914e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8009152:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8009154:	68fb      	ldr	r3, [r7, #12]
 8009156:	681b      	ldr	r3, [r3, #0]
 8009158:	3308      	adds	r3, #8
 800915a:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800915c:	623a      	str	r2, [r7, #32]
 800915e:	61fb      	str	r3, [r7, #28]
 8009160:	69f9      	ldr	r1, [r7, #28]
 8009162:	6a3a      	ldr	r2, [r7, #32]
 8009164:	e841 2300 	strex	r3, r2, [r1]
 8009168:	61bb      	str	r3, [r7, #24]
 800916a:	69bb      	ldr	r3, [r7, #24]
 800916c:	2b00      	cmp	r3, #0
 800916e:	d1e5      	bne.n	800913c <UART_Start_Receive_DMA+0x104>
 8009170:	2300      	movs	r3, #0
 8009172:	4618      	mov	r0, r3
 8009174:	3758      	adds	r7, #88	@ 0x58
 8009176:	46bd      	mov	sp, r7
 8009178:	bd80      	pop	{r7, pc}
 800917a:	bf00      	nop
 800917c:	080092d7 	.word	0x080092d7
 8009180:	080093fd 	.word	0x080093fd
 8009184:	08009435 	.word	0x08009435

08009188 <UART_EndTxTransfer>:
 8009188:	b480      	push	{r7}
 800918a:	b08f      	sub	sp, #60	@ 0x3c
 800918c:	af00      	add	r7, sp, #0
 800918e:	6078      	str	r0, [r7, #4]
 8009190:	687b      	ldr	r3, [r7, #4]
 8009192:	681b      	ldr	r3, [r3, #0]
 8009194:	623b      	str	r3, [r7, #32]
 8009196:	6a3b      	ldr	r3, [r7, #32]
 8009198:	e853 3f00 	ldrex	r3, [r3]
 800919c:	61fb      	str	r3, [r7, #28]
 800919e:	69fb      	ldr	r3, [r7, #28]
 80091a0:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 80091a4:	637b      	str	r3, [r7, #52]	@ 0x34
 80091a6:	687b      	ldr	r3, [r7, #4]
 80091a8:	681b      	ldr	r3, [r3, #0]
 80091aa:	461a      	mov	r2, r3
 80091ac:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80091ae:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80091b0:	62ba      	str	r2, [r7, #40]	@ 0x28
 80091b2:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80091b4:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80091b6:	e841 2300 	strex	r3, r2, [r1]
 80091ba:	627b      	str	r3, [r7, #36]	@ 0x24
 80091bc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80091be:	2b00      	cmp	r3, #0
 80091c0:	d1e6      	bne.n	8009190 <UART_EndTxTransfer+0x8>
 80091c2:	687b      	ldr	r3, [r7, #4]
 80091c4:	681b      	ldr	r3, [r3, #0]
 80091c6:	3308      	adds	r3, #8
 80091c8:	60fb      	str	r3, [r7, #12]
 80091ca:	68fb      	ldr	r3, [r7, #12]
 80091cc:	e853 3f00 	ldrex	r3, [r3]
 80091d0:	60bb      	str	r3, [r7, #8]
 80091d2:	68bb      	ldr	r3, [r7, #8]
 80091d4:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 80091d8:	633b      	str	r3, [r7, #48]	@ 0x30
 80091da:	687b      	ldr	r3, [r7, #4]
 80091dc:	681b      	ldr	r3, [r3, #0]
 80091de:	3308      	adds	r3, #8
 80091e0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80091e2:	61ba      	str	r2, [r7, #24]
 80091e4:	617b      	str	r3, [r7, #20]
 80091e6:	6979      	ldr	r1, [r7, #20]
 80091e8:	69ba      	ldr	r2, [r7, #24]
 80091ea:	e841 2300 	strex	r3, r2, [r1]
 80091ee:	613b      	str	r3, [r7, #16]
 80091f0:	693b      	ldr	r3, [r7, #16]
 80091f2:	2b00      	cmp	r3, #0
 80091f4:	d1e5      	bne.n	80091c2 <UART_EndTxTransfer+0x3a>
 80091f6:	687b      	ldr	r3, [r7, #4]
 80091f8:	2220      	movs	r2, #32
 80091fa:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80091fe:	bf00      	nop
 8009200:	373c      	adds	r7, #60	@ 0x3c
 8009202:	46bd      	mov	sp, r7
 8009204:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009208:	4770      	bx	lr

0800920a <UART_EndRxTransfer>:
 800920a:	b480      	push	{r7}
 800920c:	b095      	sub	sp, #84	@ 0x54
 800920e:	af00      	add	r7, sp, #0
 8009210:	6078      	str	r0, [r7, #4]
 8009212:	687b      	ldr	r3, [r7, #4]
 8009214:	681b      	ldr	r3, [r3, #0]
 8009216:	637b      	str	r3, [r7, #52]	@ 0x34
 8009218:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800921a:	e853 3f00 	ldrex	r3, [r3]
 800921e:	633b      	str	r3, [r7, #48]	@ 0x30
 8009220:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009222:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8009226:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8009228:	687b      	ldr	r3, [r7, #4]
 800922a:	681b      	ldr	r3, [r3, #0]
 800922c:	461a      	mov	r2, r3
 800922e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8009230:	643b      	str	r3, [r7, #64]	@ 0x40
 8009232:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8009234:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8009236:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8009238:	e841 2300 	strex	r3, r2, [r1]
 800923c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800923e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009240:	2b00      	cmp	r3, #0
 8009242:	d1e6      	bne.n	8009212 <UART_EndRxTransfer+0x8>
 8009244:	687b      	ldr	r3, [r7, #4]
 8009246:	681b      	ldr	r3, [r3, #0]
 8009248:	3308      	adds	r3, #8
 800924a:	623b      	str	r3, [r7, #32]
 800924c:	6a3b      	ldr	r3, [r7, #32]
 800924e:	e853 3f00 	ldrex	r3, [r3]
 8009252:	61fb      	str	r3, [r7, #28]
 8009254:	69fb      	ldr	r3, [r7, #28]
 8009256:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800925a:	f023 0301 	bic.w	r3, r3, #1
 800925e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8009260:	687b      	ldr	r3, [r7, #4]
 8009262:	681b      	ldr	r3, [r3, #0]
 8009264:	3308      	adds	r3, #8
 8009266:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8009268:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800926a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800926c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800926e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8009270:	e841 2300 	strex	r3, r2, [r1]
 8009274:	627b      	str	r3, [r7, #36]	@ 0x24
 8009276:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009278:	2b00      	cmp	r3, #0
 800927a:	d1e3      	bne.n	8009244 <UART_EndRxTransfer+0x3a>
 800927c:	687b      	ldr	r3, [r7, #4]
 800927e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8009280:	2b01      	cmp	r3, #1
 8009282:	d118      	bne.n	80092b6 <UART_EndRxTransfer+0xac>
 8009284:	687b      	ldr	r3, [r7, #4]
 8009286:	681b      	ldr	r3, [r3, #0]
 8009288:	60fb      	str	r3, [r7, #12]
 800928a:	68fb      	ldr	r3, [r7, #12]
 800928c:	e853 3f00 	ldrex	r3, [r3]
 8009290:	60bb      	str	r3, [r7, #8]
 8009292:	68bb      	ldr	r3, [r7, #8]
 8009294:	f023 0310 	bic.w	r3, r3, #16
 8009298:	647b      	str	r3, [r7, #68]	@ 0x44
 800929a:	687b      	ldr	r3, [r7, #4]
 800929c:	681b      	ldr	r3, [r3, #0]
 800929e:	461a      	mov	r2, r3
 80092a0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80092a2:	61bb      	str	r3, [r7, #24]
 80092a4:	617a      	str	r2, [r7, #20]
 80092a6:	6979      	ldr	r1, [r7, #20]
 80092a8:	69ba      	ldr	r2, [r7, #24]
 80092aa:	e841 2300 	strex	r3, r2, [r1]
 80092ae:	613b      	str	r3, [r7, #16]
 80092b0:	693b      	ldr	r3, [r7, #16]
 80092b2:	2b00      	cmp	r3, #0
 80092b4:	d1e6      	bne.n	8009284 <UART_EndRxTransfer+0x7a>
 80092b6:	687b      	ldr	r3, [r7, #4]
 80092b8:	2220      	movs	r2, #32
 80092ba:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80092be:	687b      	ldr	r3, [r7, #4]
 80092c0:	2200      	movs	r2, #0
 80092c2:	66da      	str	r2, [r3, #108]	@ 0x6c
 80092c4:	687b      	ldr	r3, [r7, #4]
 80092c6:	2200      	movs	r2, #0
 80092c8:	671a      	str	r2, [r3, #112]	@ 0x70
 80092ca:	bf00      	nop
 80092cc:	3754      	adds	r7, #84	@ 0x54
 80092ce:	46bd      	mov	sp, r7
 80092d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092d4:	4770      	bx	lr

080092d6 <UART_DMAReceiveCplt>:
 80092d6:	b580      	push	{r7, lr}
 80092d8:	b09c      	sub	sp, #112	@ 0x70
 80092da:	af00      	add	r7, sp, #0
 80092dc:	6078      	str	r0, [r7, #4]
 80092de:	687b      	ldr	r3, [r7, #4]
 80092e0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80092e2:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80092e4:	687b      	ldr	r3, [r7, #4]
 80092e6:	681b      	ldr	r3, [r3, #0]
 80092e8:	681b      	ldr	r3, [r3, #0]
 80092ea:	f003 0320 	and.w	r3, r3, #32
 80092ee:	2b00      	cmp	r3, #0
 80092f0:	d171      	bne.n	80093d6 <UART_DMAReceiveCplt+0x100>
 80092f2:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80092f4:	2200      	movs	r2, #0
 80092f6:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 80092fa:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80092fc:	681b      	ldr	r3, [r3, #0]
 80092fe:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8009300:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8009302:	e853 3f00 	ldrex	r3, [r3]
 8009306:	64bb      	str	r3, [r7, #72]	@ 0x48
 8009308:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800930a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800930e:	66bb      	str	r3, [r7, #104]	@ 0x68
 8009310:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8009312:	681b      	ldr	r3, [r3, #0]
 8009314:	461a      	mov	r2, r3
 8009316:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8009318:	65bb      	str	r3, [r7, #88]	@ 0x58
 800931a:	657a      	str	r2, [r7, #84]	@ 0x54
 800931c:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800931e:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8009320:	e841 2300 	strex	r3, r2, [r1]
 8009324:	653b      	str	r3, [r7, #80]	@ 0x50
 8009326:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8009328:	2b00      	cmp	r3, #0
 800932a:	d1e6      	bne.n	80092fa <UART_DMAReceiveCplt+0x24>
 800932c:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800932e:	681b      	ldr	r3, [r3, #0]
 8009330:	3308      	adds	r3, #8
 8009332:	63bb      	str	r3, [r7, #56]	@ 0x38
 8009334:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009336:	e853 3f00 	ldrex	r3, [r3]
 800933a:	637b      	str	r3, [r7, #52]	@ 0x34
 800933c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800933e:	f023 0301 	bic.w	r3, r3, #1
 8009342:	667b      	str	r3, [r7, #100]	@ 0x64
 8009344:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8009346:	681b      	ldr	r3, [r3, #0]
 8009348:	3308      	adds	r3, #8
 800934a:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 800934c:	647a      	str	r2, [r7, #68]	@ 0x44
 800934e:	643b      	str	r3, [r7, #64]	@ 0x40
 8009350:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8009352:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8009354:	e841 2300 	strex	r3, r2, [r1]
 8009358:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800935a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800935c:	2b00      	cmp	r3, #0
 800935e:	d1e5      	bne.n	800932c <UART_DMAReceiveCplt+0x56>
 8009360:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8009362:	681b      	ldr	r3, [r3, #0]
 8009364:	3308      	adds	r3, #8
 8009366:	627b      	str	r3, [r7, #36]	@ 0x24
 8009368:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800936a:	e853 3f00 	ldrex	r3, [r3]
 800936e:	623b      	str	r3, [r7, #32]
 8009370:	6a3b      	ldr	r3, [r7, #32]
 8009372:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8009376:	663b      	str	r3, [r7, #96]	@ 0x60
 8009378:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800937a:	681b      	ldr	r3, [r3, #0]
 800937c:	3308      	adds	r3, #8
 800937e:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 8009380:	633a      	str	r2, [r7, #48]	@ 0x30
 8009382:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8009384:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8009386:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8009388:	e841 2300 	strex	r3, r2, [r1]
 800938c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800938e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009390:	2b00      	cmp	r3, #0
 8009392:	d1e5      	bne.n	8009360 <UART_DMAReceiveCplt+0x8a>
 8009394:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8009396:	2220      	movs	r2, #32
 8009398:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800939c:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800939e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80093a0:	2b01      	cmp	r3, #1
 80093a2:	d118      	bne.n	80093d6 <UART_DMAReceiveCplt+0x100>
 80093a4:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80093a6:	681b      	ldr	r3, [r3, #0]
 80093a8:	613b      	str	r3, [r7, #16]
 80093aa:	693b      	ldr	r3, [r7, #16]
 80093ac:	e853 3f00 	ldrex	r3, [r3]
 80093b0:	60fb      	str	r3, [r7, #12]
 80093b2:	68fb      	ldr	r3, [r7, #12]
 80093b4:	f023 0310 	bic.w	r3, r3, #16
 80093b8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80093ba:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80093bc:	681b      	ldr	r3, [r3, #0]
 80093be:	461a      	mov	r2, r3
 80093c0:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80093c2:	61fb      	str	r3, [r7, #28]
 80093c4:	61ba      	str	r2, [r7, #24]
 80093c6:	69b9      	ldr	r1, [r7, #24]
 80093c8:	69fa      	ldr	r2, [r7, #28]
 80093ca:	e841 2300 	strex	r3, r2, [r1]
 80093ce:	617b      	str	r3, [r7, #20]
 80093d0:	697b      	ldr	r3, [r7, #20]
 80093d2:	2b00      	cmp	r3, #0
 80093d4:	d1e6      	bne.n	80093a4 <UART_DMAReceiveCplt+0xce>
 80093d6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80093d8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80093da:	2b01      	cmp	r3, #1
 80093dc:	d107      	bne.n	80093ee <UART_DMAReceiveCplt+0x118>
 80093de:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80093e0:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 80093e4:	4619      	mov	r1, r3
 80093e6:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 80093e8:	f7ff f968 	bl	80086bc <HAL_UARTEx_RxEventCallback>
 80093ec:	e002      	b.n	80093f4 <UART_DMAReceiveCplt+0x11e>
 80093ee:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 80093f0:	f7f7 fae0 	bl	80009b4 <HAL_UART_RxCpltCallback>
 80093f4:	bf00      	nop
 80093f6:	3770      	adds	r7, #112	@ 0x70
 80093f8:	46bd      	mov	sp, r7
 80093fa:	bd80      	pop	{r7, pc}

080093fc <UART_DMARxHalfCplt>:
 80093fc:	b580      	push	{r7, lr}
 80093fe:	b084      	sub	sp, #16
 8009400:	af00      	add	r7, sp, #0
 8009402:	6078      	str	r0, [r7, #4]
 8009404:	687b      	ldr	r3, [r7, #4]
 8009406:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009408:	60fb      	str	r3, [r7, #12]
 800940a:	68fb      	ldr	r3, [r7, #12]
 800940c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800940e:	2b01      	cmp	r3, #1
 8009410:	d109      	bne.n	8009426 <UART_DMARxHalfCplt+0x2a>
 8009412:	68fb      	ldr	r3, [r7, #12]
 8009414:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 8009418:	085b      	lsrs	r3, r3, #1
 800941a:	b29b      	uxth	r3, r3
 800941c:	4619      	mov	r1, r3
 800941e:	68f8      	ldr	r0, [r7, #12]
 8009420:	f7ff f94c 	bl	80086bc <HAL_UARTEx_RxEventCallback>
 8009424:	e002      	b.n	800942c <UART_DMARxHalfCplt+0x30>
 8009426:	68f8      	ldr	r0, [r7, #12]
 8009428:	f7ff f934 	bl	8008694 <HAL_UART_RxHalfCpltCallback>
 800942c:	bf00      	nop
 800942e:	3710      	adds	r7, #16
 8009430:	46bd      	mov	sp, r7
 8009432:	bd80      	pop	{r7, pc}

08009434 <UART_DMAError>:
 8009434:	b580      	push	{r7, lr}
 8009436:	b086      	sub	sp, #24
 8009438:	af00      	add	r7, sp, #0
 800943a:	6078      	str	r0, [r7, #4]
 800943c:	687b      	ldr	r3, [r7, #4]
 800943e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009440:	617b      	str	r3, [r7, #20]
 8009442:	697b      	ldr	r3, [r7, #20]
 8009444:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8009448:	613b      	str	r3, [r7, #16]
 800944a:	697b      	ldr	r3, [r7, #20]
 800944c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8009450:	60fb      	str	r3, [r7, #12]
 8009452:	697b      	ldr	r3, [r7, #20]
 8009454:	681b      	ldr	r3, [r3, #0]
 8009456:	689b      	ldr	r3, [r3, #8]
 8009458:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800945c:	2b80      	cmp	r3, #128	@ 0x80
 800945e:	d109      	bne.n	8009474 <UART_DMAError+0x40>
 8009460:	693b      	ldr	r3, [r7, #16]
 8009462:	2b21      	cmp	r3, #33	@ 0x21
 8009464:	d106      	bne.n	8009474 <UART_DMAError+0x40>
 8009466:	697b      	ldr	r3, [r7, #20]
 8009468:	2200      	movs	r2, #0
 800946a:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 800946e:	6978      	ldr	r0, [r7, #20]
 8009470:	f7ff fe8a 	bl	8009188 <UART_EndTxTransfer>
 8009474:	697b      	ldr	r3, [r7, #20]
 8009476:	681b      	ldr	r3, [r3, #0]
 8009478:	689b      	ldr	r3, [r3, #8]
 800947a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800947e:	2b40      	cmp	r3, #64	@ 0x40
 8009480:	d109      	bne.n	8009496 <UART_DMAError+0x62>
 8009482:	68fb      	ldr	r3, [r7, #12]
 8009484:	2b22      	cmp	r3, #34	@ 0x22
 8009486:	d106      	bne.n	8009496 <UART_DMAError+0x62>
 8009488:	697b      	ldr	r3, [r7, #20]
 800948a:	2200      	movs	r2, #0
 800948c:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 8009490:	6978      	ldr	r0, [r7, #20]
 8009492:	f7ff feba 	bl	800920a <UART_EndRxTransfer>
 8009496:	697b      	ldr	r3, [r7, #20]
 8009498:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800949c:	f043 0210 	orr.w	r2, r3, #16
 80094a0:	697b      	ldr	r3, [r7, #20]
 80094a2:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80094a6:	6978      	ldr	r0, [r7, #20]
 80094a8:	f7ff f8fe 	bl	80086a8 <HAL_UART_ErrorCallback>
 80094ac:	bf00      	nop
 80094ae:	3718      	adds	r7, #24
 80094b0:	46bd      	mov	sp, r7
 80094b2:	bd80      	pop	{r7, pc}

080094b4 <HAL_UARTEx_DisableFifoMode>:
 80094b4:	b480      	push	{r7}
 80094b6:	b085      	sub	sp, #20
 80094b8:	af00      	add	r7, sp, #0
 80094ba:	6078      	str	r0, [r7, #4]
 80094bc:	687b      	ldr	r3, [r7, #4]
 80094be:	f893 3080 	ldrb.w	r3, [r3, #128]	@ 0x80
 80094c2:	2b01      	cmp	r3, #1
 80094c4:	d101      	bne.n	80094ca <HAL_UARTEx_DisableFifoMode+0x16>
 80094c6:	2302      	movs	r3, #2
 80094c8:	e027      	b.n	800951a <HAL_UARTEx_DisableFifoMode+0x66>
 80094ca:	687b      	ldr	r3, [r7, #4]
 80094cc:	2201      	movs	r2, #1
 80094ce:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 80094d2:	687b      	ldr	r3, [r7, #4]
 80094d4:	2224      	movs	r2, #36	@ 0x24
 80094d6:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80094da:	687b      	ldr	r3, [r7, #4]
 80094dc:	681b      	ldr	r3, [r3, #0]
 80094de:	681b      	ldr	r3, [r3, #0]
 80094e0:	60fb      	str	r3, [r7, #12]
 80094e2:	687b      	ldr	r3, [r7, #4]
 80094e4:	681b      	ldr	r3, [r3, #0]
 80094e6:	681a      	ldr	r2, [r3, #0]
 80094e8:	687b      	ldr	r3, [r7, #4]
 80094ea:	681b      	ldr	r3, [r3, #0]
 80094ec:	f022 0201 	bic.w	r2, r2, #1
 80094f0:	601a      	str	r2, [r3, #0]
 80094f2:	68fb      	ldr	r3, [r7, #12]
 80094f4:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 80094f8:	60fb      	str	r3, [r7, #12]
 80094fa:	687b      	ldr	r3, [r7, #4]
 80094fc:	2200      	movs	r2, #0
 80094fe:	665a      	str	r2, [r3, #100]	@ 0x64
 8009500:	687b      	ldr	r3, [r7, #4]
 8009502:	681b      	ldr	r3, [r3, #0]
 8009504:	68fa      	ldr	r2, [r7, #12]
 8009506:	601a      	str	r2, [r3, #0]
 8009508:	687b      	ldr	r3, [r7, #4]
 800950a:	2220      	movs	r2, #32
 800950c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8009510:	687b      	ldr	r3, [r7, #4]
 8009512:	2200      	movs	r2, #0
 8009514:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 8009518:	2300      	movs	r3, #0
 800951a:	4618      	mov	r0, r3
 800951c:	3714      	adds	r7, #20
 800951e:	46bd      	mov	sp, r7
 8009520:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009524:	4770      	bx	lr

08009526 <HAL_UARTEx_SetTxFifoThreshold>:
 8009526:	b580      	push	{r7, lr}
 8009528:	b084      	sub	sp, #16
 800952a:	af00      	add	r7, sp, #0
 800952c:	6078      	str	r0, [r7, #4]
 800952e:	6039      	str	r1, [r7, #0]
 8009530:	687b      	ldr	r3, [r7, #4]
 8009532:	f893 3080 	ldrb.w	r3, [r3, #128]	@ 0x80
 8009536:	2b01      	cmp	r3, #1
 8009538:	d101      	bne.n	800953e <HAL_UARTEx_SetTxFifoThreshold+0x18>
 800953a:	2302      	movs	r3, #2
 800953c:	e02d      	b.n	800959a <HAL_UARTEx_SetTxFifoThreshold+0x74>
 800953e:	687b      	ldr	r3, [r7, #4]
 8009540:	2201      	movs	r2, #1
 8009542:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 8009546:	687b      	ldr	r3, [r7, #4]
 8009548:	2224      	movs	r2, #36	@ 0x24
 800954a:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800954e:	687b      	ldr	r3, [r7, #4]
 8009550:	681b      	ldr	r3, [r3, #0]
 8009552:	681b      	ldr	r3, [r3, #0]
 8009554:	60fb      	str	r3, [r7, #12]
 8009556:	687b      	ldr	r3, [r7, #4]
 8009558:	681b      	ldr	r3, [r3, #0]
 800955a:	681a      	ldr	r2, [r3, #0]
 800955c:	687b      	ldr	r3, [r7, #4]
 800955e:	681b      	ldr	r3, [r3, #0]
 8009560:	f022 0201 	bic.w	r2, r2, #1
 8009564:	601a      	str	r2, [r3, #0]
 8009566:	687b      	ldr	r3, [r7, #4]
 8009568:	681b      	ldr	r3, [r3, #0]
 800956a:	689b      	ldr	r3, [r3, #8]
 800956c:	f023 4160 	bic.w	r1, r3, #3758096384	@ 0xe0000000
 8009570:	687b      	ldr	r3, [r7, #4]
 8009572:	681b      	ldr	r3, [r3, #0]
 8009574:	683a      	ldr	r2, [r7, #0]
 8009576:	430a      	orrs	r2, r1
 8009578:	609a      	str	r2, [r3, #8]
 800957a:	6878      	ldr	r0, [r7, #4]
 800957c:	f000 f850 	bl	8009620 <UARTEx_SetNbDataToProcess>
 8009580:	687b      	ldr	r3, [r7, #4]
 8009582:	681b      	ldr	r3, [r3, #0]
 8009584:	68fa      	ldr	r2, [r7, #12]
 8009586:	601a      	str	r2, [r3, #0]
 8009588:	687b      	ldr	r3, [r7, #4]
 800958a:	2220      	movs	r2, #32
 800958c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8009590:	687b      	ldr	r3, [r7, #4]
 8009592:	2200      	movs	r2, #0
 8009594:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 8009598:	2300      	movs	r3, #0
 800959a:	4618      	mov	r0, r3
 800959c:	3710      	adds	r7, #16
 800959e:	46bd      	mov	sp, r7
 80095a0:	bd80      	pop	{r7, pc}

080095a2 <HAL_UARTEx_SetRxFifoThreshold>:
 80095a2:	b580      	push	{r7, lr}
 80095a4:	b084      	sub	sp, #16
 80095a6:	af00      	add	r7, sp, #0
 80095a8:	6078      	str	r0, [r7, #4]
 80095aa:	6039      	str	r1, [r7, #0]
 80095ac:	687b      	ldr	r3, [r7, #4]
 80095ae:	f893 3080 	ldrb.w	r3, [r3, #128]	@ 0x80
 80095b2:	2b01      	cmp	r3, #1
 80095b4:	d101      	bne.n	80095ba <HAL_UARTEx_SetRxFifoThreshold+0x18>
 80095b6:	2302      	movs	r3, #2
 80095b8:	e02d      	b.n	8009616 <HAL_UARTEx_SetRxFifoThreshold+0x74>
 80095ba:	687b      	ldr	r3, [r7, #4]
 80095bc:	2201      	movs	r2, #1
 80095be:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 80095c2:	687b      	ldr	r3, [r7, #4]
 80095c4:	2224      	movs	r2, #36	@ 0x24
 80095c6:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80095ca:	687b      	ldr	r3, [r7, #4]
 80095cc:	681b      	ldr	r3, [r3, #0]
 80095ce:	681b      	ldr	r3, [r3, #0]
 80095d0:	60fb      	str	r3, [r7, #12]
 80095d2:	687b      	ldr	r3, [r7, #4]
 80095d4:	681b      	ldr	r3, [r3, #0]
 80095d6:	681a      	ldr	r2, [r3, #0]
 80095d8:	687b      	ldr	r3, [r7, #4]
 80095da:	681b      	ldr	r3, [r3, #0]
 80095dc:	f022 0201 	bic.w	r2, r2, #1
 80095e0:	601a      	str	r2, [r3, #0]
 80095e2:	687b      	ldr	r3, [r7, #4]
 80095e4:	681b      	ldr	r3, [r3, #0]
 80095e6:	689b      	ldr	r3, [r3, #8]
 80095e8:	f023 6160 	bic.w	r1, r3, #234881024	@ 0xe000000
 80095ec:	687b      	ldr	r3, [r7, #4]
 80095ee:	681b      	ldr	r3, [r3, #0]
 80095f0:	683a      	ldr	r2, [r7, #0]
 80095f2:	430a      	orrs	r2, r1
 80095f4:	609a      	str	r2, [r3, #8]
 80095f6:	6878      	ldr	r0, [r7, #4]
 80095f8:	f000 f812 	bl	8009620 <UARTEx_SetNbDataToProcess>
 80095fc:	687b      	ldr	r3, [r7, #4]
 80095fe:	681b      	ldr	r3, [r3, #0]
 8009600:	68fa      	ldr	r2, [r7, #12]
 8009602:	601a      	str	r2, [r3, #0]
 8009604:	687b      	ldr	r3, [r7, #4]
 8009606:	2220      	movs	r2, #32
 8009608:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800960c:	687b      	ldr	r3, [r7, #4]
 800960e:	2200      	movs	r2, #0
 8009610:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 8009614:	2300      	movs	r3, #0
 8009616:	4618      	mov	r0, r3
 8009618:	3710      	adds	r7, #16
 800961a:	46bd      	mov	sp, r7
 800961c:	bd80      	pop	{r7, pc}
	...

08009620 <UARTEx_SetNbDataToProcess>:
 8009620:	b480      	push	{r7}
 8009622:	b085      	sub	sp, #20
 8009624:	af00      	add	r7, sp, #0
 8009626:	6078      	str	r0, [r7, #4]
 8009628:	687b      	ldr	r3, [r7, #4]
 800962a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800962c:	2b00      	cmp	r3, #0
 800962e:	d108      	bne.n	8009642 <UARTEx_SetNbDataToProcess+0x22>
 8009630:	687b      	ldr	r3, [r7, #4]
 8009632:	2201      	movs	r2, #1
 8009634:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8009638:	687b      	ldr	r3, [r7, #4]
 800963a:	2201      	movs	r2, #1
 800963c:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 8009640:	e031      	b.n	80096a6 <UARTEx_SetNbDataToProcess+0x86>
 8009642:	2308      	movs	r3, #8
 8009644:	73fb      	strb	r3, [r7, #15]
 8009646:	2308      	movs	r3, #8
 8009648:	73bb      	strb	r3, [r7, #14]
 800964a:	687b      	ldr	r3, [r7, #4]
 800964c:	681b      	ldr	r3, [r3, #0]
 800964e:	689b      	ldr	r3, [r3, #8]
 8009650:	0e5b      	lsrs	r3, r3, #25
 8009652:	b2db      	uxtb	r3, r3
 8009654:	f003 0307 	and.w	r3, r3, #7
 8009658:	737b      	strb	r3, [r7, #13]
 800965a:	687b      	ldr	r3, [r7, #4]
 800965c:	681b      	ldr	r3, [r3, #0]
 800965e:	689b      	ldr	r3, [r3, #8]
 8009660:	0f5b      	lsrs	r3, r3, #29
 8009662:	b2db      	uxtb	r3, r3
 8009664:	f003 0307 	and.w	r3, r3, #7
 8009668:	733b      	strb	r3, [r7, #12]
 800966a:	7bbb      	ldrb	r3, [r7, #14]
 800966c:	7b3a      	ldrb	r2, [r7, #12]
 800966e:	4911      	ldr	r1, [pc, #68]	@ (80096b4 <UARTEx_SetNbDataToProcess+0x94>)
 8009670:	5c8a      	ldrb	r2, [r1, r2]
 8009672:	fb02 f303 	mul.w	r3, r2, r3
 8009676:	7b3a      	ldrb	r2, [r7, #12]
 8009678:	490f      	ldr	r1, [pc, #60]	@ (80096b8 <UARTEx_SetNbDataToProcess+0x98>)
 800967a:	5c8a      	ldrb	r2, [r1, r2]
 800967c:	fb93 f3f2 	sdiv	r3, r3, r2
 8009680:	b29a      	uxth	r2, r3
 8009682:	687b      	ldr	r3, [r7, #4]
 8009684:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8009688:	7bfb      	ldrb	r3, [r7, #15]
 800968a:	7b7a      	ldrb	r2, [r7, #13]
 800968c:	4909      	ldr	r1, [pc, #36]	@ (80096b4 <UARTEx_SetNbDataToProcess+0x94>)
 800968e:	5c8a      	ldrb	r2, [r1, r2]
 8009690:	fb02 f303 	mul.w	r3, r2, r3
 8009694:	7b7a      	ldrb	r2, [r7, #13]
 8009696:	4908      	ldr	r1, [pc, #32]	@ (80096b8 <UARTEx_SetNbDataToProcess+0x98>)
 8009698:	5c8a      	ldrb	r2, [r1, r2]
 800969a:	fb93 f3f2 	sdiv	r3, r3, r2
 800969e:	b29a      	uxth	r2, r3
 80096a0:	687b      	ldr	r3, [r7, #4]
 80096a2:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 80096a6:	bf00      	nop
 80096a8:	3714      	adds	r7, #20
 80096aa:	46bd      	mov	sp, r7
 80096ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096b0:	4770      	bx	lr
 80096b2:	bf00      	nop
 80096b4:	0800d37c 	.word	0x0800d37c
 80096b8:	0800d384 	.word	0x0800d384

080096bc <SPI_QCA7000_Read_Signature>:

void SPI_Transmit_Receive();
void Serial_Print();


uint16_t SPI_QCA7000_Read_Signature(void){
 80096bc:	b580      	push	{r7, lr}
 80096be:	b082      	sub	sp, #8
 80096c0:	af00      	add	r7, sp, #0
    uint16_t sig;
    uint8_t i;
    i = 0;
 80096c2:	2300      	movs	r3, #0
 80096c4:	71fb      	strb	r3, [r7, #7]
    spi_tx_buffer[i++] = 0xDA;
 80096c6:	79fb      	ldrb	r3, [r7, #7]
 80096c8:	1c5a      	adds	r2, r3, #1
 80096ca:	71fa      	strb	r2, [r7, #7]
 80096cc:	461a      	mov	r2, r3
 80096ce:	4b1b      	ldr	r3, [pc, #108]	@ (800973c <SPI_QCA7000_Read_Signature+0x80>)
 80096d0:	21da      	movs	r1, #218	@ 0xda
 80096d2:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 80096d4:	79fb      	ldrb	r3, [r7, #7]
 80096d6:	1c5a      	adds	r2, r3, #1
 80096d8:	71fa      	strb	r2, [r7, #7]
 80096da:	461a      	mov	r2, r3
 80096dc:	4b17      	ldr	r3, [pc, #92]	@ (800973c <SPI_QCA7000_Read_Signature+0x80>)
 80096de:	2100      	movs	r1, #0
 80096e0:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 80096e2:	79fb      	ldrb	r3, [r7, #7]
 80096e4:	1c5a      	adds	r2, r3, #1
 80096e6:	71fa      	strb	r2, [r7, #7]
 80096e8:	461a      	mov	r2, r3
 80096ea:	4b14      	ldr	r3, [pc, #80]	@ (800973c <SPI_QCA7000_Read_Signature+0x80>)
 80096ec:	2100      	movs	r1, #0
 80096ee:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 80096f0:	79fb      	ldrb	r3, [r7, #7]
 80096f2:	1c5a      	adds	r2, r3, #1
 80096f4:	71fa      	strb	r2, [r7, #7]
 80096f6:	461a      	mov	r2, r3
 80096f8:	4b10      	ldr	r3, [pc, #64]	@ (800973c <SPI_QCA7000_Read_Signature+0x80>)
 80096fa:	2100      	movs	r1, #0
 80096fc:	5499      	strb	r1, [r3, r2]
    spi_data_size = i;
 80096fe:	79fb      	ldrb	r3, [r7, #7]
 8009700:	b29a      	uxth	r2, r3
 8009702:	4b0f      	ldr	r3, [pc, #60]	@ (8009740 <SPI_QCA7000_Read_Signature+0x84>)
 8009704:	801a      	strh	r2, [r3, #0]
    SPI_Transmit_Receive();
 8009706:	f7f7 f875 	bl	80007f4 <SPI_Transmit_Receive>

    sig = spi_rx_buffer[2];
 800970a:	4b0e      	ldr	r3, [pc, #56]	@ (8009744 <SPI_QCA7000_Read_Signature+0x88>)
 800970c:	789b      	ldrb	r3, [r3, #2]
 800970e:	80bb      	strh	r3, [r7, #4]
    sig <<= 8;
 8009710:	88bb      	ldrh	r3, [r7, #4]
 8009712:	021b      	lsls	r3, r3, #8
 8009714:	80bb      	strh	r3, [r7, #4]
    sig += spi_rx_buffer[3];
 8009716:	4b0b      	ldr	r3, [pc, #44]	@ (8009744 <SPI_QCA7000_Read_Signature+0x88>)
 8009718:	78db      	ldrb	r3, [r3, #3]
 800971a:	461a      	mov	r2, r3
 800971c:	88bb      	ldrh	r3, [r7, #4]
 800971e:	4413      	add	r3, r2
 8009720:	80bb      	strh	r3, [r7, #4]

    sprintf(serial_output_buffer, "Hello, sig is %X ", sig);
 8009722:	88bb      	ldrh	r3, [r7, #4]
 8009724:	461a      	mov	r2, r3
 8009726:	4908      	ldr	r1, [pc, #32]	@ (8009748 <SPI_QCA7000_Read_Signature+0x8c>)
 8009728:	4808      	ldr	r0, [pc, #32]	@ (800974c <SPI_QCA7000_Read_Signature+0x90>)
 800972a:	f002 f94b 	bl	800b9c4 <siprintf>
    Serial_Print();
 800972e:	f7f7 f803 	bl	8000738 <Serial_Print>

    return sig;
 8009732:	88bb      	ldrh	r3, [r7, #4]
}
 8009734:	4618      	mov	r0, r3
 8009736:	3708      	adds	r7, #8
 8009738:	46bd      	mov	sp, r7
 800973a:	bd80      	pop	{r7, pc}
 800973c:	20000e14 	.word	0x20000e14
 8009740:	20001e7c 	.word	0x20001e7c
 8009744:	20001648 	.word	0x20001648
 8009748:	0800ccfc 	.word	0x0800ccfc
 800974c:	200005e0 	.word	0x200005e0

08009750 <SPI_QCA7000_Read_WRBUF_SPC_AVA>:

uint16_t SPI_QCA7000_Read_WRBUF_SPC_AVA(void){
 8009750:	b580      	push	{r7, lr}
 8009752:	b082      	sub	sp, #8
 8009754:	af00      	add	r7, sp, #0
    uint16_t len;
    uint8_t i;
    i = 0;
 8009756:	2300      	movs	r3, #0
 8009758:	71fb      	strb	r3, [r7, #7]
    spi_tx_buffer[i++] = 0xC2;
 800975a:	79fb      	ldrb	r3, [r7, #7]
 800975c:	1c5a      	adds	r2, r3, #1
 800975e:	71fa      	strb	r2, [r7, #7]
 8009760:	461a      	mov	r2, r3
 8009762:	4b17      	ldr	r3, [pc, #92]	@ (80097c0 <SPI_QCA7000_Read_WRBUF_SPC_AVA+0x70>)
 8009764:	21c2      	movs	r1, #194	@ 0xc2
 8009766:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 8009768:	79fb      	ldrb	r3, [r7, #7]
 800976a:	1c5a      	adds	r2, r3, #1
 800976c:	71fa      	strb	r2, [r7, #7]
 800976e:	461a      	mov	r2, r3
 8009770:	4b13      	ldr	r3, [pc, #76]	@ (80097c0 <SPI_QCA7000_Read_WRBUF_SPC_AVA+0x70>)
 8009772:	2100      	movs	r1, #0
 8009774:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 8009776:	79fb      	ldrb	r3, [r7, #7]
 8009778:	1c5a      	adds	r2, r3, #1
 800977a:	71fa      	strb	r2, [r7, #7]
 800977c:	461a      	mov	r2, r3
 800977e:	4b10      	ldr	r3, [pc, #64]	@ (80097c0 <SPI_QCA7000_Read_WRBUF_SPC_AVA+0x70>)
 8009780:	2100      	movs	r1, #0
 8009782:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 8009784:	79fb      	ldrb	r3, [r7, #7]
 8009786:	1c5a      	adds	r2, r3, #1
 8009788:	71fa      	strb	r2, [r7, #7]
 800978a:	461a      	mov	r2, r3
 800978c:	4b0c      	ldr	r3, [pc, #48]	@ (80097c0 <SPI_QCA7000_Read_WRBUF_SPC_AVA+0x70>)
 800978e:	2100      	movs	r1, #0
 8009790:	5499      	strb	r1, [r3, r2]
    spi_data_size = i;
 8009792:	79fb      	ldrb	r3, [r7, #7]
 8009794:	b29a      	uxth	r2, r3
 8009796:	4b0b      	ldr	r3, [pc, #44]	@ (80097c4 <SPI_QCA7000_Read_WRBUF_SPC_AVA+0x74>)
 8009798:	801a      	strh	r2, [r3, #0]
    SPI_Transmit_Receive();
 800979a:	f7f7 f82b 	bl	80007f4 <SPI_Transmit_Receive>

    len = spi_rx_buffer[2];
 800979e:	4b0a      	ldr	r3, [pc, #40]	@ (80097c8 <SPI_QCA7000_Read_WRBUF_SPC_AVA+0x78>)
 80097a0:	789b      	ldrb	r3, [r3, #2]
 80097a2:	80bb      	strh	r3, [r7, #4]
    len <<= 8;
 80097a4:	88bb      	ldrh	r3, [r7, #4]
 80097a6:	021b      	lsls	r3, r3, #8
 80097a8:	80bb      	strh	r3, [r7, #4]
    len += spi_rx_buffer[3];
 80097aa:	4b07      	ldr	r3, [pc, #28]	@ (80097c8 <SPI_QCA7000_Read_WRBUF_SPC_AVA+0x78>)
 80097ac:	78db      	ldrb	r3, [r3, #3]
 80097ae:	461a      	mov	r2, r3
 80097b0:	88bb      	ldrh	r3, [r7, #4]
 80097b2:	4413      	add	r3, r2
 80097b4:	80bb      	strh	r3, [r7, #4]

//    sprintf(serial_output_buffer,"WRBUF_SPC_AVA is %X ", len);
//    Serial_Print();

    return len;
 80097b6:	88bb      	ldrh	r3, [r7, #4]
}
 80097b8:	4618      	mov	r0, r3
 80097ba:	3708      	adds	r7, #8
 80097bc:	46bd      	mov	sp, r7
 80097be:	bd80      	pop	{r7, pc}
 80097c0:	20000e14 	.word	0x20000e14
 80097c4:	20001e7c 	.word	0x20001e7c
 80097c8:	20001648 	.word	0x20001648

080097cc <SPI_QCA7000_Read_RDBUF_SPC_AVA>:

uint16_t SPI_QCA7000_Read_RDBUF_SPC_AVA(void){
 80097cc:	b580      	push	{r7, lr}
 80097ce:	b082      	sub	sp, #8
 80097d0:	af00      	add	r7, sp, #0
    uint16_t len;
    uint8_t i;
    i = 0;
 80097d2:	2300      	movs	r3, #0
 80097d4:	71fb      	strb	r3, [r7, #7]
    spi_tx_buffer[i++] = 0xC3;
 80097d6:	79fb      	ldrb	r3, [r7, #7]
 80097d8:	1c5a      	adds	r2, r3, #1
 80097da:	71fa      	strb	r2, [r7, #7]
 80097dc:	461a      	mov	r2, r3
 80097de:	4b17      	ldr	r3, [pc, #92]	@ (800983c <SPI_QCA7000_Read_RDBUF_SPC_AVA+0x70>)
 80097e0:	21c3      	movs	r1, #195	@ 0xc3
 80097e2:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 80097e4:	79fb      	ldrb	r3, [r7, #7]
 80097e6:	1c5a      	adds	r2, r3, #1
 80097e8:	71fa      	strb	r2, [r7, #7]
 80097ea:	461a      	mov	r2, r3
 80097ec:	4b13      	ldr	r3, [pc, #76]	@ (800983c <SPI_QCA7000_Read_RDBUF_SPC_AVA+0x70>)
 80097ee:	2100      	movs	r1, #0
 80097f0:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 80097f2:	79fb      	ldrb	r3, [r7, #7]
 80097f4:	1c5a      	adds	r2, r3, #1
 80097f6:	71fa      	strb	r2, [r7, #7]
 80097f8:	461a      	mov	r2, r3
 80097fa:	4b10      	ldr	r3, [pc, #64]	@ (800983c <SPI_QCA7000_Read_RDBUF_SPC_AVA+0x70>)
 80097fc:	2100      	movs	r1, #0
 80097fe:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 8009800:	79fb      	ldrb	r3, [r7, #7]
 8009802:	1c5a      	adds	r2, r3, #1
 8009804:	71fa      	strb	r2, [r7, #7]
 8009806:	461a      	mov	r2, r3
 8009808:	4b0c      	ldr	r3, [pc, #48]	@ (800983c <SPI_QCA7000_Read_RDBUF_SPC_AVA+0x70>)
 800980a:	2100      	movs	r1, #0
 800980c:	5499      	strb	r1, [r3, r2]
    spi_data_size = i;
 800980e:	79fb      	ldrb	r3, [r7, #7]
 8009810:	b29a      	uxth	r2, r3
 8009812:	4b0b      	ldr	r3, [pc, #44]	@ (8009840 <SPI_QCA7000_Read_RDBUF_SPC_AVA+0x74>)
 8009814:	801a      	strh	r2, [r3, #0]
    SPI_Transmit_Receive();
 8009816:	f7f6 ffed 	bl	80007f4 <SPI_Transmit_Receive>

    len = spi_rx_buffer[2];
 800981a:	4b0a      	ldr	r3, [pc, #40]	@ (8009844 <SPI_QCA7000_Read_RDBUF_SPC_AVA+0x78>)
 800981c:	789b      	ldrb	r3, [r3, #2]
 800981e:	80bb      	strh	r3, [r7, #4]
    len <<= 8;
 8009820:	88bb      	ldrh	r3, [r7, #4]
 8009822:	021b      	lsls	r3, r3, #8
 8009824:	80bb      	strh	r3, [r7, #4]
    len += spi_rx_buffer[3];
 8009826:	4b07      	ldr	r3, [pc, #28]	@ (8009844 <SPI_QCA7000_Read_RDBUF_SPC_AVA+0x78>)
 8009828:	78db      	ldrb	r3, [r3, #3]
 800982a:	461a      	mov	r2, r3
 800982c:	88bb      	ldrh	r3, [r7, #4]
 800982e:	4413      	add	r3, r2
 8009830:	80bb      	strh	r3, [r7, #4]

//    sprintf(serial_output_buffer,"RDBUF_SPC_AVA is %X ", len);
//    Serial_Print();

    return len;
 8009832:	88bb      	ldrh	r3, [r7, #4]
}
 8009834:	4618      	mov	r0, r3
 8009836:	3708      	adds	r7, #8
 8009838:	46bd      	mov	sp, r7
 800983a:	bd80      	pop	{r7, pc}
 800983c:	20000e14 	.word	0x20000e14
 8009840:	20001e7c 	.word	0x20001e7c
 8009844:	20001648 	.word	0x20001648

08009848 <SPI_QCA7000_Write_BFR_SIZE>:

void SPI_QCA7000_Write_BFR_SIZE(uint16_t len){
 8009848:	b580      	push	{r7, lr}
 800984a:	b084      	sub	sp, #16
 800984c:	af00      	add	r7, sp, #0
 800984e:	4603      	mov	r3, r0
 8009850:	80fb      	strh	r3, [r7, #6]
    uint8_t i;
    i = 0;
 8009852:	2300      	movs	r3, #0
 8009854:	73fb      	strb	r3, [r7, #15]
    spi_tx_buffer[i++] = 0x41;
 8009856:	7bfb      	ldrb	r3, [r7, #15]
 8009858:	1c5a      	adds	r2, r3, #1
 800985a:	73fa      	strb	r2, [r7, #15]
 800985c:	461a      	mov	r2, r3
 800985e:	4b13      	ldr	r3, [pc, #76]	@ (80098ac <SPI_QCA7000_Write_BFR_SIZE+0x64>)
 8009860:	2141      	movs	r1, #65	@ 0x41
 8009862:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 8009864:	7bfb      	ldrb	r3, [r7, #15]
 8009866:	1c5a      	adds	r2, r3, #1
 8009868:	73fa      	strb	r2, [r7, #15]
 800986a:	461a      	mov	r2, r3
 800986c:	4b0f      	ldr	r3, [pc, #60]	@ (80098ac <SPI_QCA7000_Write_BFR_SIZE+0x64>)
 800986e:	2100      	movs	r1, #0
 8009870:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = len >> 8;
 8009872:	88fb      	ldrh	r3, [r7, #6]
 8009874:	0a1b      	lsrs	r3, r3, #8
 8009876:	b299      	uxth	r1, r3
 8009878:	7bfb      	ldrb	r3, [r7, #15]
 800987a:	1c5a      	adds	r2, r3, #1
 800987c:	73fa      	strb	r2, [r7, #15]
 800987e:	461a      	mov	r2, r3
 8009880:	b2c9      	uxtb	r1, r1
 8009882:	4b0a      	ldr	r3, [pc, #40]	@ (80098ac <SPI_QCA7000_Write_BFR_SIZE+0x64>)
 8009884:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = (uint8_t)len;
 8009886:	7bfb      	ldrb	r3, [r7, #15]
 8009888:	1c5a      	adds	r2, r3, #1
 800988a:	73fa      	strb	r2, [r7, #15]
 800988c:	461a      	mov	r2, r3
 800988e:	88fb      	ldrh	r3, [r7, #6]
 8009890:	b2d9      	uxtb	r1, r3
 8009892:	4b06      	ldr	r3, [pc, #24]	@ (80098ac <SPI_QCA7000_Write_BFR_SIZE+0x64>)
 8009894:	5499      	strb	r1, [r3, r2]
    spi_data_size = i;
 8009896:	7bfb      	ldrb	r3, [r7, #15]
 8009898:	b29a      	uxth	r2, r3
 800989a:	4b05      	ldr	r3, [pc, #20]	@ (80098b0 <SPI_QCA7000_Write_BFR_SIZE+0x68>)
 800989c:	801a      	strh	r2, [r3, #0]
    SPI_Transmit_Receive();
 800989e:	f7f6 ffa9 	bl	80007f4 <SPI_Transmit_Receive>
}
 80098a2:	bf00      	nop
 80098a4:	3710      	adds	r7, #16
 80098a6:	46bd      	mov	sp, r7
 80098a8:	bd80      	pop	{r7, pc}
 80098aa:	bf00      	nop
 80098ac:	20000e14 	.word	0x20000e14
 80098b0:	20001e7c 	.word	0x20001e7c

080098b4 <SPI_QCA7000_Disable_REG_INTR_DISABLE>:

void SPI_QCA7000_Disable_REG_INTR_DISABLE(void){
 80098b4:	b580      	push	{r7, lr}
 80098b6:	b082      	sub	sp, #8
 80098b8:	af00      	add	r7, sp, #0
    uint8_t i;
    i=0;
 80098ba:	2300      	movs	r3, #0
 80098bc:	71fb      	strb	r3, [r7, #7]
    spi_tx_buffer[i++] = 0x4D;
 80098be:	79fb      	ldrb	r3, [r7, #7]
 80098c0:	1c5a      	adds	r2, r3, #1
 80098c2:	71fa      	strb	r2, [r7, #7]
 80098c4:	461a      	mov	r2, r3
 80098c6:	4b11      	ldr	r3, [pc, #68]	@ (800990c <SPI_QCA7000_Disable_REG_INTR_DISABLE+0x58>)
 80098c8:	214d      	movs	r1, #77	@ 0x4d
 80098ca:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 80098cc:	79fb      	ldrb	r3, [r7, #7]
 80098ce:	1c5a      	adds	r2, r3, #1
 80098d0:	71fa      	strb	r2, [r7, #7]
 80098d2:	461a      	mov	r2, r3
 80098d4:	4b0d      	ldr	r3, [pc, #52]	@ (800990c <SPI_QCA7000_Disable_REG_INTR_DISABLE+0x58>)
 80098d6:	2100      	movs	r1, #0
 80098d8:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 80098da:	79fb      	ldrb	r3, [r7, #7]
 80098dc:	1c5a      	adds	r2, r3, #1
 80098de:	71fa      	strb	r2, [r7, #7]
 80098e0:	461a      	mov	r2, r3
 80098e2:	4b0a      	ldr	r3, [pc, #40]	@ (800990c <SPI_QCA7000_Disable_REG_INTR_DISABLE+0x58>)
 80098e4:	2100      	movs	r1, #0
 80098e6:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 80098e8:	79fb      	ldrb	r3, [r7, #7]
 80098ea:	1c5a      	adds	r2, r3, #1
 80098ec:	71fa      	strb	r2, [r7, #7]
 80098ee:	461a      	mov	r2, r3
 80098f0:	4b06      	ldr	r3, [pc, #24]	@ (800990c <SPI_QCA7000_Disable_REG_INTR_DISABLE+0x58>)
 80098f2:	2100      	movs	r1, #0
 80098f4:	5499      	strb	r1, [r3, r2]
    spi_data_size = i;
 80098f6:	79fb      	ldrb	r3, [r7, #7]
 80098f8:	b29a      	uxth	r2, r3
 80098fa:	4b05      	ldr	r3, [pc, #20]	@ (8009910 <SPI_QCA7000_Disable_REG_INTR_DISABLE+0x5c>)
 80098fc:	801a      	strh	r2, [r3, #0]
    SPI_Transmit_Receive();
 80098fe:	f7f6 ff79 	bl	80007f4 <SPI_Transmit_Receive>

//    sprintf(serial_output_buffer, "REG_INTR_ENABLE is disabled ");
//    Serial_Print();
}
 8009902:	bf00      	nop
 8009904:	3708      	adds	r7, #8
 8009906:	46bd      	mov	sp, r7
 8009908:	bd80      	pop	{r7, pc}
 800990a:	bf00      	nop
 800990c:	20000e14 	.word	0x20000e14
 8009910:	20001e7c 	.word	0x20001e7c

08009914 <SPI_QCA7000_Enable_REG_INTR_ENABLE>:

void SPI_QCA7000_Enable_REG_INTR_ENABLE(void){
 8009914:	b580      	push	{r7, lr}
 8009916:	b082      	sub	sp, #8
 8009918:	af00      	add	r7, sp, #0
    uint8_t i;
    i=0;
 800991a:	2300      	movs	r3, #0
 800991c:	71fb      	strb	r3, [r7, #7]
    spi_tx_buffer[i++] = 0x4D;
 800991e:	79fb      	ldrb	r3, [r7, #7]
 8009920:	1c5a      	adds	r2, r3, #1
 8009922:	71fa      	strb	r2, [r7, #7]
 8009924:	461a      	mov	r2, r3
 8009926:	4b11      	ldr	r3, [pc, #68]	@ (800996c <SPI_QCA7000_Enable_REG_INTR_ENABLE+0x58>)
 8009928:	214d      	movs	r1, #77	@ 0x4d
 800992a:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 800992c:	79fb      	ldrb	r3, [r7, #7]
 800992e:	1c5a      	adds	r2, r3, #1
 8009930:	71fa      	strb	r2, [r7, #7]
 8009932:	461a      	mov	r2, r3
 8009934:	4b0d      	ldr	r3, [pc, #52]	@ (800996c <SPI_QCA7000_Enable_REG_INTR_ENABLE+0x58>)
 8009936:	2100      	movs	r1, #0
 8009938:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 800993a:	79fb      	ldrb	r3, [r7, #7]
 800993c:	1c5a      	adds	r2, r3, #1
 800993e:	71fa      	strb	r2, [r7, #7]
 8009940:	461a      	mov	r2, r3
 8009942:	4b0a      	ldr	r3, [pc, #40]	@ (800996c <SPI_QCA7000_Enable_REG_INTR_ENABLE+0x58>)
 8009944:	2100      	movs	r1, #0
 8009946:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x47;
 8009948:	79fb      	ldrb	r3, [r7, #7]
 800994a:	1c5a      	adds	r2, r3, #1
 800994c:	71fa      	strb	r2, [r7, #7]
 800994e:	461a      	mov	r2, r3
 8009950:	4b06      	ldr	r3, [pc, #24]	@ (800996c <SPI_QCA7000_Enable_REG_INTR_ENABLE+0x58>)
 8009952:	2147      	movs	r1, #71	@ 0x47
 8009954:	5499      	strb	r1, [r3, r2]
    spi_data_size = i;
 8009956:	79fb      	ldrb	r3, [r7, #7]
 8009958:	b29a      	uxth	r2, r3
 800995a:	4b05      	ldr	r3, [pc, #20]	@ (8009970 <SPI_QCA7000_Enable_REG_INTR_ENABLE+0x5c>)
 800995c:	801a      	strh	r2, [r3, #0]
    SPI_Transmit_Receive();
 800995e:	f7f6 ff49 	bl	80007f4 <SPI_Transmit_Receive>

//    sprintf(serial_output_buffer, "REG_INTR_ENABLE is enabled ");
//    Serial_Print();
}
 8009962:	bf00      	nop
 8009964:	3708      	adds	r7, #8
 8009966:	46bd      	mov	sp, r7
 8009968:	bd80      	pop	{r7, pc}
 800996a:	bf00      	nop
 800996c:	20000e14 	.word	0x20000e14
 8009970:	20001e7c 	.word	0x20001e7c

08009974 <SPI_QCA7000_Read_REG_INTR_CAUSE>:

uint16_t SPI_QCA7000_Read_REG_INTR_CAUSE(void){
 8009974:	b580      	push	{r7, lr}
 8009976:	b082      	sub	sp, #8
 8009978:	af00      	add	r7, sp, #0
    uint16_t cause;
    uint8_t i;
    i=0;
 800997a:	2300      	movs	r3, #0
 800997c:	71fb      	strb	r3, [r7, #7]
    spi_tx_buffer[i++] = 0xCC;
 800997e:	79fb      	ldrb	r3, [r7, #7]
 8009980:	1c5a      	adds	r2, r3, #1
 8009982:	71fa      	strb	r2, [r7, #7]
 8009984:	461a      	mov	r2, r3
 8009986:	4b36      	ldr	r3, [pc, #216]	@ (8009a60 <SPI_QCA7000_Read_REG_INTR_CAUSE+0xec>)
 8009988:	21cc      	movs	r1, #204	@ 0xcc
 800998a:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 800998c:	79fb      	ldrb	r3, [r7, #7]
 800998e:	1c5a      	adds	r2, r3, #1
 8009990:	71fa      	strb	r2, [r7, #7]
 8009992:	461a      	mov	r2, r3
 8009994:	4b32      	ldr	r3, [pc, #200]	@ (8009a60 <SPI_QCA7000_Read_REG_INTR_CAUSE+0xec>)
 8009996:	2100      	movs	r1, #0
 8009998:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 800999a:	79fb      	ldrb	r3, [r7, #7]
 800999c:	1c5a      	adds	r2, r3, #1
 800999e:	71fa      	strb	r2, [r7, #7]
 80099a0:	461a      	mov	r2, r3
 80099a2:	4b2f      	ldr	r3, [pc, #188]	@ (8009a60 <SPI_QCA7000_Read_REG_INTR_CAUSE+0xec>)
 80099a4:	2100      	movs	r1, #0
 80099a6:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 80099a8:	79fb      	ldrb	r3, [r7, #7]
 80099aa:	1c5a      	adds	r2, r3, #1
 80099ac:	71fa      	strb	r2, [r7, #7]
 80099ae:	461a      	mov	r2, r3
 80099b0:	4b2b      	ldr	r3, [pc, #172]	@ (8009a60 <SPI_QCA7000_Read_REG_INTR_CAUSE+0xec>)
 80099b2:	2100      	movs	r1, #0
 80099b4:	5499      	strb	r1, [r3, r2]
    spi_data_size = i;
 80099b6:	79fb      	ldrb	r3, [r7, #7]
 80099b8:	b29a      	uxth	r2, r3
 80099ba:	4b2a      	ldr	r3, [pc, #168]	@ (8009a64 <SPI_QCA7000_Read_REG_INTR_CAUSE+0xf0>)
 80099bc:	801a      	strh	r2, [r3, #0]
    SPI_Transmit_Receive();
 80099be:	f7f6 ff19 	bl	80007f4 <SPI_Transmit_Receive>

    cause = spi_rx_buffer[2];
 80099c2:	4b29      	ldr	r3, [pc, #164]	@ (8009a68 <SPI_QCA7000_Read_REG_INTR_CAUSE+0xf4>)
 80099c4:	789b      	ldrb	r3, [r3, #2]
 80099c6:	80bb      	strh	r3, [r7, #4]
    cause <<= 8;
 80099c8:	88bb      	ldrh	r3, [r7, #4]
 80099ca:	021b      	lsls	r3, r3, #8
 80099cc:	80bb      	strh	r3, [r7, #4]
    cause += spi_rx_buffer[3];
 80099ce:	4b26      	ldr	r3, [pc, #152]	@ (8009a68 <SPI_QCA7000_Read_REG_INTR_CAUSE+0xf4>)
 80099d0:	78db      	ldrb	r3, [r3, #3]
 80099d2:	461a      	mov	r2, r3
 80099d4:	88bb      	ldrh	r3, [r7, #4]
 80099d6:	4413      	add	r3, r2
 80099d8:	80bb      	strh	r3, [r7, #4]

    if(cause & 0x0400){
 80099da:	88bb      	ldrh	r3, [r7, #4]
 80099dc:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80099e0:	2b00      	cmp	r3, #0
 80099e2:	d005      	beq.n	80099f0 <SPI_QCA7000_Read_REG_INTR_CAUSE+0x7c>
    	sprintf(serial_output_buffer, "REG_INTR_CAUSE is %X, SPI_INT_WRBUF_BELOW_WM ", cause);
 80099e4:	88bb      	ldrh	r3, [r7, #4]
 80099e6:	461a      	mov	r2, r3
 80099e8:	4920      	ldr	r1, [pc, #128]	@ (8009a6c <SPI_QCA7000_Read_REG_INTR_CAUSE+0xf8>)
 80099ea:	4821      	ldr	r0, [pc, #132]	@ (8009a70 <SPI_QCA7000_Read_REG_INTR_CAUSE+0xfc>)
 80099ec:	f001 ffea 	bl	800b9c4 <siprintf>
//    	Serial_Print();
    }
    if(cause & 0x0040){
 80099f0:	88bb      	ldrh	r3, [r7, #4]
 80099f2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80099f6:	2b00      	cmp	r3, #0
 80099f8:	d007      	beq.n	8009a0a <SPI_QCA7000_Read_REG_INTR_CAUSE+0x96>
    	sprintf(serial_output_buffer, "REG_INTR_CAUSE is %X, SPI_INT_CPU_ON ", cause);
 80099fa:	88bb      	ldrh	r3, [r7, #4]
 80099fc:	461a      	mov	r2, r3
 80099fe:	491d      	ldr	r1, [pc, #116]	@ (8009a74 <SPI_QCA7000_Read_REG_INTR_CAUSE+0x100>)
 8009a00:	481b      	ldr	r0, [pc, #108]	@ (8009a70 <SPI_QCA7000_Read_REG_INTR_CAUSE+0xfc>)
 8009a02:	f001 ffdf 	bl	800b9c4 <siprintf>
    	SPI_QCA7000_Init_Setup();
 8009a06:	f000 f8ab 	bl	8009b60 <SPI_QCA7000_Init_Setup>
//    	Serial_Print();
    }
    if(cause & 0x0008){
 8009a0a:	88bb      	ldrh	r3, [r7, #4]
 8009a0c:	f003 0308 	and.w	r3, r3, #8
 8009a10:	2b00      	cmp	r3, #0
 8009a12:	d005      	beq.n	8009a20 <SPI_QCA7000_Read_REG_INTR_CAUSE+0xac>
    	sprintf(serial_output_buffer, "REG_INTR_CAUSE is %X, SPI_INT_ADDR_ERR ", cause);
 8009a14:	88bb      	ldrh	r3, [r7, #4]
 8009a16:	461a      	mov	r2, r3
 8009a18:	4917      	ldr	r1, [pc, #92]	@ (8009a78 <SPI_QCA7000_Read_REG_INTR_CAUSE+0x104>)
 8009a1a:	4815      	ldr	r0, [pc, #84]	@ (8009a70 <SPI_QCA7000_Read_REG_INTR_CAUSE+0xfc>)
 8009a1c:	f001 ffd2 	bl	800b9c4 <siprintf>
//    	Serial_Print();
    }
    if(cause & 0x0004){
 8009a20:	88bb      	ldrh	r3, [r7, #4]
 8009a22:	f003 0304 	and.w	r3, r3, #4
 8009a26:	2b00      	cmp	r3, #0
 8009a28:	d007      	beq.n	8009a3a <SPI_QCA7000_Read_REG_INTR_CAUSE+0xc6>
    	sprintf(serial_output_buffer, "REG_INTR_CAUSE is %X, SPI_INT_WRBUF_ERR ", cause);
 8009a2a:	88bb      	ldrh	r3, [r7, #4]
 8009a2c:	461a      	mov	r2, r3
 8009a2e:	4913      	ldr	r1, [pc, #76]	@ (8009a7c <SPI_QCA7000_Read_REG_INTR_CAUSE+0x108>)
 8009a30:	480f      	ldr	r0, [pc, #60]	@ (8009a70 <SPI_QCA7000_Read_REG_INTR_CAUSE+0xfc>)
 8009a32:	f001 ffc7 	bl	800b9c4 <siprintf>
    	SPI_QCA7000_Write_Config();
 8009a36:	f000 f859 	bl	8009aec <SPI_QCA7000_Write_Config>
//    	Serial_Print();
    }
    if(cause & 0x0002){
 8009a3a:	88bb      	ldrh	r3, [r7, #4]
 8009a3c:	f003 0302 	and.w	r3, r3, #2
 8009a40:	2b00      	cmp	r3, #0
 8009a42:	d001      	beq.n	8009a48 <SPI_QCA7000_Read_REG_INTR_CAUSE+0xd4>
//    	sprintf(serial_output_buffer, "REG_INTR_CAUSE is %X, SPI_INT_RDBUF_ERR ", cause);
    	SPI_QCA7000_Write_Config();
 8009a44:	f000 f852 	bl	8009aec <SPI_QCA7000_Write_Config>
//    	Serial_Print();
    }
    if(cause & 0x0001){
 8009a48:	88bb      	ldrh	r3, [r7, #4]
 8009a4a:	f003 0301 	and.w	r3, r3, #1
 8009a4e:	2b00      	cmp	r3, #0
 8009a50:	d001      	beq.n	8009a56 <SPI_QCA7000_Read_REG_INTR_CAUSE+0xe2>
//    	sprintf(serial_output_buffer, "REG_INTR_CAUSE is %X, SPI_INT_PKT_AVLBL ", cause);
//    	Serial_Print();
    	SPI_QCA7000_Read_Eth_Frame();
 8009a52:	f000 f9bf 	bl	8009dd4 <SPI_QCA7000_Read_Eth_Frame>
    }

    return cause;
 8009a56:	88bb      	ldrh	r3, [r7, #4]
}
 8009a58:	4618      	mov	r0, r3
 8009a5a:	3708      	adds	r7, #8
 8009a5c:	46bd      	mov	sp, r7
 8009a5e:	bd80      	pop	{r7, pc}
 8009a60:	20000e14 	.word	0x20000e14
 8009a64:	20001e7c 	.word	0x20001e7c
 8009a68:	20001648 	.word	0x20001648
 8009a6c:	0800cd10 	.word	0x0800cd10
 8009a70:	200005e0 	.word	0x200005e0
 8009a74:	0800cd40 	.word	0x0800cd40
 8009a78:	0800cd68 	.word	0x0800cd68
 8009a7c:	0800cd90 	.word	0x0800cd90

08009a80 <SPI_QCA7000_Confirm_REG_INTR_CAUSE>:

void SPI_QCA7000_Confirm_REG_INTR_CAUSE(uint16_t cause){
 8009a80:	b580      	push	{r7, lr}
 8009a82:	b084      	sub	sp, #16
 8009a84:	af00      	add	r7, sp, #0
 8009a86:	4603      	mov	r3, r0
 8009a88:	80fb      	strh	r3, [r7, #6]
    uint8_t i;
    i=0;
 8009a8a:	2300      	movs	r3, #0
 8009a8c:	73fb      	strb	r3, [r7, #15]
    spi_tx_buffer[i++] = 0x4C;
 8009a8e:	7bfb      	ldrb	r3, [r7, #15]
 8009a90:	1c5a      	adds	r2, r3, #1
 8009a92:	73fa      	strb	r2, [r7, #15]
 8009a94:	461a      	mov	r2, r3
 8009a96:	4b13      	ldr	r3, [pc, #76]	@ (8009ae4 <SPI_QCA7000_Confirm_REG_INTR_CAUSE+0x64>)
 8009a98:	214c      	movs	r1, #76	@ 0x4c
 8009a9a:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 8009a9c:	7bfb      	ldrb	r3, [r7, #15]
 8009a9e:	1c5a      	adds	r2, r3, #1
 8009aa0:	73fa      	strb	r2, [r7, #15]
 8009aa2:	461a      	mov	r2, r3
 8009aa4:	4b0f      	ldr	r3, [pc, #60]	@ (8009ae4 <SPI_QCA7000_Confirm_REG_INTR_CAUSE+0x64>)
 8009aa6:	2100      	movs	r1, #0
 8009aa8:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = cause >> 8;
 8009aaa:	88fb      	ldrh	r3, [r7, #6]
 8009aac:	0a1b      	lsrs	r3, r3, #8
 8009aae:	b299      	uxth	r1, r3
 8009ab0:	7bfb      	ldrb	r3, [r7, #15]
 8009ab2:	1c5a      	adds	r2, r3, #1
 8009ab4:	73fa      	strb	r2, [r7, #15]
 8009ab6:	461a      	mov	r2, r3
 8009ab8:	b2c9      	uxtb	r1, r1
 8009aba:	4b0a      	ldr	r3, [pc, #40]	@ (8009ae4 <SPI_QCA7000_Confirm_REG_INTR_CAUSE+0x64>)
 8009abc:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = (uint8_t)cause;
 8009abe:	7bfb      	ldrb	r3, [r7, #15]
 8009ac0:	1c5a      	adds	r2, r3, #1
 8009ac2:	73fa      	strb	r2, [r7, #15]
 8009ac4:	461a      	mov	r2, r3
 8009ac6:	88fb      	ldrh	r3, [r7, #6]
 8009ac8:	b2d9      	uxtb	r1, r3
 8009aca:	4b06      	ldr	r3, [pc, #24]	@ (8009ae4 <SPI_QCA7000_Confirm_REG_INTR_CAUSE+0x64>)
 8009acc:	5499      	strb	r1, [r3, r2]
    spi_data_size = i;
 8009ace:	7bfb      	ldrb	r3, [r7, #15]
 8009ad0:	b29a      	uxth	r2, r3
 8009ad2:	4b05      	ldr	r3, [pc, #20]	@ (8009ae8 <SPI_QCA7000_Confirm_REG_INTR_CAUSE+0x68>)
 8009ad4:	801a      	strh	r2, [r3, #0]
    SPI_Transmit_Receive();
 8009ad6:	f7f6 fe8d 	bl	80007f4 <SPI_Transmit_Receive>
}
 8009ada:	bf00      	nop
 8009adc:	3710      	adds	r7, #16
 8009ade:	46bd      	mov	sp, r7
 8009ae0:	bd80      	pop	{r7, pc}
 8009ae2:	bf00      	nop
 8009ae4:	20000e14 	.word	0x20000e14
 8009ae8:	20001e7c 	.word	0x20001e7c

08009aec <SPI_QCA7000_Write_Config>:

    sprintf(serial_output_buffer, "Reset Configuration ");
    Serial_Print();
}

void SPI_QCA7000_Write_Config(void){
 8009aec:	b580      	push	{r7, lr}
 8009aee:	b082      	sub	sp, #8
 8009af0:	af00      	add	r7, sp, #0
    uint8_t i;
    i = 0;
 8009af2:	2300      	movs	r3, #0
 8009af4:	71fb      	strb	r3, [r7, #7]
    spi_tx_buffer[i++] = 0x44;
 8009af6:	79fb      	ldrb	r3, [r7, #7]
 8009af8:	1c5a      	adds	r2, r3, #1
 8009afa:	71fa      	strb	r2, [r7, #7]
 8009afc:	461a      	mov	r2, r3
 8009afe:	4b14      	ldr	r3, [pc, #80]	@ (8009b50 <SPI_QCA7000_Write_Config+0x64>)
 8009b00:	2144      	movs	r1, #68	@ 0x44
 8009b02:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 8009b04:	79fb      	ldrb	r3, [r7, #7]
 8009b06:	1c5a      	adds	r2, r3, #1
 8009b08:	71fa      	strb	r2, [r7, #7]
 8009b0a:	461a      	mov	r2, r3
 8009b0c:	4b10      	ldr	r3, [pc, #64]	@ (8009b50 <SPI_QCA7000_Write_Config+0x64>)
 8009b0e:	2100      	movs	r1, #0
 8009b10:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 8009b12:	79fb      	ldrb	r3, [r7, #7]
 8009b14:	1c5a      	adds	r2, r3, #1
 8009b16:	71fa      	strb	r2, [r7, #7]
 8009b18:	461a      	mov	r2, r3
 8009b1a:	4b0d      	ldr	r3, [pc, #52]	@ (8009b50 <SPI_QCA7000_Write_Config+0x64>)
 8009b1c:	2100      	movs	r1, #0
 8009b1e:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 8009b20:	79fb      	ldrb	r3, [r7, #7]
 8009b22:	1c5a      	adds	r2, r3, #1
 8009b24:	71fa      	strb	r2, [r7, #7]
 8009b26:	461a      	mov	r2, r3
 8009b28:	4b09      	ldr	r3, [pc, #36]	@ (8009b50 <SPI_QCA7000_Write_Config+0x64>)
 8009b2a:	2100      	movs	r1, #0
 8009b2c:	5499      	strb	r1, [r3, r2]
    spi_data_size = i;
 8009b2e:	79fb      	ldrb	r3, [r7, #7]
 8009b30:	b29a      	uxth	r2, r3
 8009b32:	4b08      	ldr	r3, [pc, #32]	@ (8009b54 <SPI_QCA7000_Write_Config+0x68>)
 8009b34:	801a      	strh	r2, [r3, #0]
    SPI_Transmit_Receive();
 8009b36:	f7f6 fe5d 	bl	80007f4 <SPI_Transmit_Receive>

    sprintf(serial_output_buffer, "Set Configuration ");
 8009b3a:	4907      	ldr	r1, [pc, #28]	@ (8009b58 <SPI_QCA7000_Write_Config+0x6c>)
 8009b3c:	4807      	ldr	r0, [pc, #28]	@ (8009b5c <SPI_QCA7000_Write_Config+0x70>)
 8009b3e:	f001 ff41 	bl	800b9c4 <siprintf>
    Serial_Print();
 8009b42:	f7f6 fdf9 	bl	8000738 <Serial_Print>
}
 8009b46:	bf00      	nop
 8009b48:	3708      	adds	r7, #8
 8009b4a:	46bd      	mov	sp, r7
 8009b4c:	bd80      	pop	{r7, pc}
 8009b4e:	bf00      	nop
 8009b50:	20000e14 	.word	0x20000e14
 8009b54:	20001e7c 	.word	0x20001e7c
 8009b58:	0800cdd4 	.word	0x0800cdd4
 8009b5c:	200005e0 	.word	0x200005e0

08009b60 <SPI_QCA7000_Init_Setup>:

void SPI_QCA7000_Init_Setup(void){
 8009b60:	b580      	push	{r7, lr}
 8009b62:	b082      	sub	sp, #8
 8009b64:	af00      	add	r7, sp, #0
	uint16_t sig;
	sig = SPI_QCA7000_Read_Signature();
 8009b66:	f7ff fda9 	bl	80096bc <SPI_QCA7000_Read_Signature>
 8009b6a:	4603      	mov	r3, r0
 8009b6c:	80fb      	strh	r3, [r7, #6]
	sig = 0x0000;
 8009b6e:	2300      	movs	r3, #0
 8009b70:	80fb      	strh	r3, [r7, #6]
	sig = SPI_QCA7000_Read_Signature();
 8009b72:	f7ff fda3 	bl	80096bc <SPI_QCA7000_Read_Signature>
 8009b76:	4603      	mov	r3, r0
 8009b78:	80fb      	strh	r3, [r7, #6]
	if(sig == 0xAA55) SPI_QCA7000_Enable_REG_INTR_ENABLE();
 8009b7a:	88fb      	ldrh	r3, [r7, #6]
 8009b7c:	f64a 2255 	movw	r2, #43605	@ 0xaa55
 8009b80:	4293      	cmp	r3, r2
 8009b82:	d101      	bne.n	8009b88 <SPI_QCA7000_Init_Setup+0x28>
 8009b84:	f7ff fec6 	bl	8009914 <SPI_QCA7000_Enable_REG_INTR_ENABLE>
}
 8009b88:	bf00      	nop
 8009b8a:	3708      	adds	r7, #8
 8009b8c:	46bd      	mov	sp, r7
 8009b8e:	bd80      	pop	{r7, pc}

08009b90 <SPI_QCA7000_Check_Rx_Data>:

void SPI_QCA7000_Check_Rx_Data(uint16_t available_bytes){
 8009b90:	b580      	push	{r7, lr}
 8009b92:	b086      	sub	sp, #24
 8009b94:	af00      	add	r7, sp, #0
 8009b96:	4603      	mov	r3, r0
 8009b98:	80fb      	strh	r3, [r7, #6]
	 uint16_t  spi_len, eth_len;
	 uint8_t *p;
	 uint8_t  blDone = 0;
 8009b9a:	2300      	movs	r3, #0
 8009b9c:	74fb      	strb	r3, [r7, #19]
//	 uint8_t counterOfEthFramesInSpiFrame;
//	 counterOfEthFramesInSpiFrame = 0;
	 p = spi_rx_buffer;
 8009b9e:	4b5a      	ldr	r3, [pc, #360]	@ (8009d08 <SPI_QCA7000_Check_Rx_Data+0x178>)
 8009ba0:	617b      	str	r3, [r7, #20]

	 while (!blDone) {  /* The SPI receive buffer may contain multiple Ethernet frames. Run through all. */
 8009ba2:	e0a8      	b.n	8009cf6 <SPI_QCA7000_Check_Rx_Data+0x166>
	         2 byte reserved 00 00
	         payload
	         2 byte End of frame, 55 55 */
	       /* The higher 2 bytes of the len are assumed to be 0. */
	       /* The lower two bytes of the "outer" len, big endian: */
	       spi_len = p[2]; spi_len<<=8; spi_len+=p[3];
 8009ba4:	697b      	ldr	r3, [r7, #20]
 8009ba6:	3302      	adds	r3, #2
 8009ba8:	781b      	ldrb	r3, [r3, #0]
 8009baa:	823b      	strh	r3, [r7, #16]
 8009bac:	8a3b      	ldrh	r3, [r7, #16]
 8009bae:	021b      	lsls	r3, r3, #8
 8009bb0:	823b      	strh	r3, [r7, #16]
 8009bb2:	697b      	ldr	r3, [r7, #20]
 8009bb4:	3303      	adds	r3, #3
 8009bb6:	781b      	ldrb	r3, [r3, #0]
 8009bb8:	461a      	mov	r2, r3
 8009bba:	8a3b      	ldrh	r3, [r7, #16]
 8009bbc:	4413      	add	r3, r2
 8009bbe:	823b      	strh	r3, [r7, #16]
	       /* The "inner" len, little endian. */
	       eth_len = p[9]; eth_len<<=8; eth_len+=p[8];
 8009bc0:	697b      	ldr	r3, [r7, #20]
 8009bc2:	3309      	adds	r3, #9
 8009bc4:	781b      	ldrb	r3, [r3, #0]
 8009bc6:	81fb      	strh	r3, [r7, #14]
 8009bc8:	89fb      	ldrh	r3, [r7, #14]
 8009bca:	021b      	lsls	r3, r3, #8
 8009bcc:	81fb      	strh	r3, [r7, #14]
 8009bce:	697b      	ldr	r3, [r7, #20]
 8009bd0:	3308      	adds	r3, #8
 8009bd2:	781b      	ldrb	r3, [r3, #0]
 8009bd4:	461a      	mov	r2, r3
 8009bd6:	89fb      	ldrh	r3, [r7, #14]
 8009bd8:	4413      	add	r3, r2
 8009bda:	81fb      	strh	r3, [r7, #14]
	       if ((p[4]=0xAA) && (p[5]=0xAA) && (p[6]=0xAA) && (p[7]=0xAA)
 8009bdc:	697b      	ldr	r3, [r7, #20]
 8009bde:	3304      	adds	r3, #4
 8009be0:	22aa      	movs	r2, #170	@ 0xaa
 8009be2:	701a      	strb	r2, [r3, #0]
 8009be4:	697b      	ldr	r3, [r7, #20]
 8009be6:	3305      	adds	r3, #5
 8009be8:	22aa      	movs	r2, #170	@ 0xaa
 8009bea:	701a      	strb	r2, [r3, #0]
 8009bec:	697b      	ldr	r3, [r7, #20]
 8009bee:	3306      	adds	r3, #6
 8009bf0:	22aa      	movs	r2, #170	@ 0xaa
 8009bf2:	701a      	strb	r2, [r3, #0]
 8009bf4:	697b      	ldr	r3, [r7, #20]
 8009bf6:	3307      	adds	r3, #7
 8009bf8:	22aa      	movs	r2, #170	@ 0xaa
 8009bfa:	701a      	strb	r2, [r3, #0]
	             && (eth_len+10 == spi_len)) {
 8009bfc:	89fb      	ldrh	r3, [r7, #14]
 8009bfe:	f103 020a 	add.w	r2, r3, #10
 8009c02:	8a3b      	ldrh	r3, [r7, #16]
 8009c04:	429a      	cmp	r2, r3
 8009c06:	d174      	bne.n	8009cf2 <SPI_QCA7000_Check_Rx_Data+0x162>
	           //counterOfEthFramesInSpiFrame++;
	           /* The start of frame and the two length informations are plausible. Copy the payload to the eth receive buffer. */
	    	   eth_rx_size = eth_len;
 8009c08:	4a40      	ldr	r2, [pc, #256]	@ (8009d0c <SPI_QCA7000_Check_Rx_Data+0x17c>)
 8009c0a:	89fb      	ldrh	r3, [r7, #14]
 8009c0c:	8013      	strh	r3, [r2, #0]
	           /* but limit the length, to avoid buffer overflow */
//	           if (eth_rx_size > ETH_RECEIVE_BUFFER_SIZE) {
//	               eth_rx_size = ETH_RECEIVE_BUFFER_SIZE;
//	               debugCounter_cutted_myethreceivebufferLen++;
//	           }
	           memcpy(eth_rx_buffer, &p[12], eth_rx_size);
 8009c0e:	697b      	ldr	r3, [r7, #20]
 8009c10:	330c      	adds	r3, #12
 8009c12:	4a3e      	ldr	r2, [pc, #248]	@ (8009d0c <SPI_QCA7000_Check_Rx_Data+0x17c>)
 8009c14:	8812      	ldrh	r2, [r2, #0]
 8009c16:	4619      	mov	r1, r3
 8009c18:	483d      	ldr	r0, [pc, #244]	@ (8009d10 <SPI_QCA7000_Check_Rx_Data+0x180>)
 8009c1a:	f001 ffb2 	bl	800bb82 <memcpy>
	           /* We received an ethernet package. Determine its type, and dispatch it to the related handler. */
	           uint16_t mtype = HPGP_Get_MTYPE(eth_rx_buffer);
 8009c1e:	483c      	ldr	r0, [pc, #240]	@ (8009d10 <SPI_QCA7000_Check_Rx_Data+0x180>)
 8009c20:	f000 fc14 	bl	800a44c <HPGP_Get_MTYPE>
 8009c24:	4603      	mov	r3, r0
 8009c26:	81bb      	strh	r3, [r7, #12]
	           if (mtype == 0x88E1) {
 8009c28:	89bb      	ldrh	r3, [r7, #12]
 8009c2a:	f648 02e1 	movw	r2, #35041	@ 0x88e1
 8009c2e:	4293      	cmp	r3, r2
 8009c30:	d107      	bne.n	8009c42 <SPI_QCA7000_Check_Rx_Data+0xb2>
	        	   /* it is a HomePlug message */
                   //Serial.println("Its a HomePlug message.");
                   sprintf(serial_output_buffer, "Its a HomePlug message.");
 8009c32:	4938      	ldr	r1, [pc, #224]	@ (8009d14 <SPI_QCA7000_Check_Rx_Data+0x184>)
 8009c34:	4838      	ldr	r0, [pc, #224]	@ (8009d18 <SPI_QCA7000_Check_Rx_Data+0x188>)
 8009c36:	f001 fec5 	bl	800b9c4 <siprintf>
                   Serial_Print();
 8009c3a:	f7f6 fd7d 	bl	8000738 <Serial_Print>
                   //evaluateReceivedHomeplugPacket();
//                   HPGP_Evaluate_HomePlug_Packet();
         		  PEF_Evaluate_Exchange_Data();
 8009c3e:	f001 fcdf 	bl	800b600 <PEF_Evaluate_Exchange_Data>
//	           if(eth_rx_buffer[15] == 0x64 && eth_rx_buffer[16] == 0x60){
//	        	   HPGP_EVSE_Respond_SLAC_PARM_CNF();
//	        	   SPI_QCA7000_Send_Eth_Frame();
//	           }
	           /*-------------------------*/
	           available_bytes = available_bytes - spi_len - 4;
 8009c42:	88fa      	ldrh	r2, [r7, #6]
 8009c44:	8a3b      	ldrh	r3, [r7, #16]
 8009c46:	1ad3      	subs	r3, r2, r3
 8009c48:	b29b      	uxth	r3, r3
 8009c4a:	3b04      	subs	r3, #4
 8009c4c:	80fb      	strh	r3, [r7, #6]
	           p += spi_len+4;
 8009c4e:	8a3b      	ldrh	r3, [r7, #16]
 8009c50:	3304      	adds	r3, #4
 8009c52:	697a      	ldr	r2, [r7, #20]
 8009c54:	4413      	add	r3, r2
 8009c56:	617b      	str	r3, [r7, #20]
	           if(available_bytes == 0){
 8009c58:	88fb      	ldrh	r3, [r7, #6]
 8009c5a:	2b00      	cmp	r3, #0
 8009c5c:	d106      	bne.n	8009c6c <SPI_QCA7000_Check_Rx_Data+0xdc>
                   sprintf(serial_output_buffer, "Only one frame! ");
 8009c5e:	492f      	ldr	r1, [pc, #188]	@ (8009d1c <SPI_QCA7000_Check_Rx_Data+0x18c>)
 8009c60:	482d      	ldr	r0, [pc, #180]	@ (8009d18 <SPI_QCA7000_Check_Rx_Data+0x188>)
 8009c62:	f001 feaf 	bl	800b9c4 <siprintf>
                   Serial_Print();
 8009c66:	f7f6 fd67 	bl	8000738 <Serial_Print>
 8009c6a:	e03f      	b.n	8009cec <SPI_QCA7000_Check_Rx_Data+0x15c>
	           }
	           else if(available_bytes != 0){
 8009c6c:	88fb      	ldrh	r3, [r7, #6]
 8009c6e:	2b00      	cmp	r3, #0
 8009c70:	d03c      	beq.n	8009cec <SPI_QCA7000_Check_Rx_Data+0x15c>
	        	   spi_len = p[2]; spi_len<<=8; spi_len+=p[3];
 8009c72:	697b      	ldr	r3, [r7, #20]
 8009c74:	3302      	adds	r3, #2
 8009c76:	781b      	ldrb	r3, [r3, #0]
 8009c78:	823b      	strh	r3, [r7, #16]
 8009c7a:	8a3b      	ldrh	r3, [r7, #16]
 8009c7c:	021b      	lsls	r3, r3, #8
 8009c7e:	823b      	strh	r3, [r7, #16]
 8009c80:	697b      	ldr	r3, [r7, #20]
 8009c82:	3303      	adds	r3, #3
 8009c84:	781b      	ldrb	r3, [r3, #0]
 8009c86:	461a      	mov	r2, r3
 8009c88:	8a3b      	ldrh	r3, [r7, #16]
 8009c8a:	4413      	add	r3, r2
 8009c8c:	823b      	strh	r3, [r7, #16]
	        	   eth_len = p[9]; eth_len<<=8; eth_len+=p[8];
 8009c8e:	697b      	ldr	r3, [r7, #20]
 8009c90:	3309      	adds	r3, #9
 8009c92:	781b      	ldrb	r3, [r3, #0]
 8009c94:	81fb      	strh	r3, [r7, #14]
 8009c96:	89fb      	ldrh	r3, [r7, #14]
 8009c98:	021b      	lsls	r3, r3, #8
 8009c9a:	81fb      	strh	r3, [r7, #14]
 8009c9c:	697b      	ldr	r3, [r7, #20]
 8009c9e:	3308      	adds	r3, #8
 8009ca0:	781b      	ldrb	r3, [r3, #0]
 8009ca2:	461a      	mov	r2, r3
 8009ca4:	89fb      	ldrh	r3, [r7, #14]
 8009ca6:	4413      	add	r3, r2
 8009ca8:	81fb      	strh	r3, [r7, #14]
	        	   if ((p[4]=0xAA) && (p[5]=0xAA) && (p[6]=0xAA) && (p[7]=0xAA)
 8009caa:	697b      	ldr	r3, [r7, #20]
 8009cac:	3304      	adds	r3, #4
 8009cae:	22aa      	movs	r2, #170	@ 0xaa
 8009cb0:	701a      	strb	r2, [r3, #0]
 8009cb2:	697b      	ldr	r3, [r7, #20]
 8009cb4:	3305      	adds	r3, #5
 8009cb6:	22aa      	movs	r2, #170	@ 0xaa
 8009cb8:	701a      	strb	r2, [r3, #0]
 8009cba:	697b      	ldr	r3, [r7, #20]
 8009cbc:	3306      	adds	r3, #6
 8009cbe:	22aa      	movs	r2, #170	@ 0xaa
 8009cc0:	701a      	strb	r2, [r3, #0]
 8009cc2:	697b      	ldr	r3, [r7, #20]
 8009cc4:	3307      	adds	r3, #7
 8009cc6:	22aa      	movs	r2, #170	@ 0xaa
 8009cc8:	701a      	strb	r2, [r3, #0]
	        	   	             && (eth_len+10 == spi_len)) {
 8009cca:	89fb      	ldrh	r3, [r7, #14]
 8009ccc:	f103 020a 	add.w	r2, r3, #10
 8009cd0:	8a3b      	ldrh	r3, [r7, #16]
 8009cd2:	429a      	cmp	r2, r3
 8009cd4:	d102      	bne.n	8009cdc <SPI_QCA7000_Check_Rx_Data+0x14c>
	        		   eth_2nd_rx_size = eth_len;
 8009cd6:	4a12      	ldr	r2, [pc, #72]	@ (8009d20 <SPI_QCA7000_Check_Rx_Data+0x190>)
 8009cd8:	89fb      	ldrh	r3, [r7, #14]
 8009cda:	8013      	strh	r3, [r2, #0]
	           	   }
	        	   memcpy(eth_2nd_rx_buffer, &p[12], eth_2nd_rx_size);
 8009cdc:	697b      	ldr	r3, [r7, #20]
 8009cde:	330c      	adds	r3, #12
 8009ce0:	4a0f      	ldr	r2, [pc, #60]	@ (8009d20 <SPI_QCA7000_Check_Rx_Data+0x190>)
 8009ce2:	8812      	ldrh	r2, [r2, #0]
 8009ce4:	4619      	mov	r1, r3
 8009ce6:	480f      	ldr	r0, [pc, #60]	@ (8009d24 <SPI_QCA7000_Check_Rx_Data+0x194>)
 8009ce8:	f001 ff4b 	bl	800bb82 <memcpy>
//	             Serial.print(String(p[9], HEX) + " ");
//	             */
//	           } else {
//	             blDone=1;
//	           }
	           blDone=1;
 8009cec:	2301      	movs	r3, #1
 8009cee:	74fb      	strb	r3, [r7, #19]
	             && (eth_len+10 == spi_len)) {
 8009cf0:	e001      	b.n	8009cf6 <SPI_QCA7000_Check_Rx_Data+0x166>
	     }
	     else {
	         /* no valid header -> end */
	         blDone=1;
 8009cf2:	2301      	movs	r3, #1
 8009cf4:	74fb      	strb	r3, [r7, #19]
	 while (!blDone) {  /* The SPI receive buffer may contain multiple Ethernet frames. Run through all. */
 8009cf6:	7cfb      	ldrb	r3, [r7, #19]
 8009cf8:	2b00      	cmp	r3, #0
 8009cfa:	f43f af53 	beq.w	8009ba4 <SPI_QCA7000_Check_Rx_Data+0x14>
	     }
	 }
}
 8009cfe:	bf00      	nop
 8009d00:	bf00      	nop
 8009d02:	3718      	adds	r7, #24
 8009d04:	46bd      	mov	sp, r7
 8009d06:	bd80      	pop	{r7, pc}
 8009d08:	20001648 	.word	0x20001648
 8009d0c:	20002076 	.word	0x20002076
 8009d10:	20001f7c 	.word	0x20001f7c
 8009d14:	0800cde8 	.word	0x0800cde8
 8009d18:	200005e0 	.word	0x200005e0
 8009d1c:	0800ce00 	.word	0x0800ce00
 8009d20:	20002172 	.word	0x20002172
 8009d24:	20002078 	.word	0x20002078

08009d28 <SPI_QCA7000_Send_Eth_Frame>:

void SPI_QCA7000_Send_Eth_Frame(void){
 8009d28:	b580      	push	{r7, lr}
 8009d2a:	af00      	add	r7, sp, #0
    SPI_QCA7000_Read_WRBUF_SPC_AVA();
 8009d2c:	f7ff fd10 	bl	8009750 <SPI_QCA7000_Read_WRBUF_SPC_AVA>
    SPI_QCA7000_Write_BFR_SIZE(eth_tx_size + 10);
 8009d30:	4b23      	ldr	r3, [pc, #140]	@ (8009dc0 <SPI_QCA7000_Send_Eth_Frame+0x98>)
 8009d32:	881b      	ldrh	r3, [r3, #0]
 8009d34:	330a      	adds	r3, #10
 8009d36:	b29b      	uxth	r3, r3
 8009d38:	4618      	mov	r0, r3
 8009d3a:	f7ff fd85 	bl	8009848 <SPI_QCA7000_Write_BFR_SIZE>

    spi_tx_buffer[0] = 0x00;
 8009d3e:	4b21      	ldr	r3, [pc, #132]	@ (8009dc4 <SPI_QCA7000_Send_Eth_Frame+0x9c>)
 8009d40:	2200      	movs	r2, #0
 8009d42:	701a      	strb	r2, [r3, #0]
    spi_tx_buffer[1] = 0x00;
 8009d44:	4b1f      	ldr	r3, [pc, #124]	@ (8009dc4 <SPI_QCA7000_Send_Eth_Frame+0x9c>)
 8009d46:	2200      	movs	r2, #0
 8009d48:	705a      	strb	r2, [r3, #1]
    spi_tx_buffer[2] = 0xAA;
 8009d4a:	4b1e      	ldr	r3, [pc, #120]	@ (8009dc4 <SPI_QCA7000_Send_Eth_Frame+0x9c>)
 8009d4c:	22aa      	movs	r2, #170	@ 0xaa
 8009d4e:	709a      	strb	r2, [r3, #2]
    spi_tx_buffer[3] = 0xAA;
 8009d50:	4b1c      	ldr	r3, [pc, #112]	@ (8009dc4 <SPI_QCA7000_Send_Eth_Frame+0x9c>)
 8009d52:	22aa      	movs	r2, #170	@ 0xaa
 8009d54:	70da      	strb	r2, [r3, #3]
    spi_tx_buffer[4] = 0xAA;
 8009d56:	4b1b      	ldr	r3, [pc, #108]	@ (8009dc4 <SPI_QCA7000_Send_Eth_Frame+0x9c>)
 8009d58:	22aa      	movs	r2, #170	@ 0xaa
 8009d5a:	711a      	strb	r2, [r3, #4]
    spi_tx_buffer[5] = 0xAA;
 8009d5c:	4b19      	ldr	r3, [pc, #100]	@ (8009dc4 <SPI_QCA7000_Send_Eth_Frame+0x9c>)
 8009d5e:	22aa      	movs	r2, #170	@ 0xaa
 8009d60:	715a      	strb	r2, [r3, #5]
    spi_tx_buffer[6] = (uint8_t)eth_tx_size;
 8009d62:	4b17      	ldr	r3, [pc, #92]	@ (8009dc0 <SPI_QCA7000_Send_Eth_Frame+0x98>)
 8009d64:	881b      	ldrh	r3, [r3, #0]
 8009d66:	b2da      	uxtb	r2, r3
 8009d68:	4b16      	ldr	r3, [pc, #88]	@ (8009dc4 <SPI_QCA7000_Send_Eth_Frame+0x9c>)
 8009d6a:	719a      	strb	r2, [r3, #6]
    spi_tx_buffer[7] = eth_tx_size >> 8;
 8009d6c:	4b14      	ldr	r3, [pc, #80]	@ (8009dc0 <SPI_QCA7000_Send_Eth_Frame+0x98>)
 8009d6e:	881b      	ldrh	r3, [r3, #0]
 8009d70:	0a1b      	lsrs	r3, r3, #8
 8009d72:	b29b      	uxth	r3, r3
 8009d74:	b2da      	uxtb	r2, r3
 8009d76:	4b13      	ldr	r3, [pc, #76]	@ (8009dc4 <SPI_QCA7000_Send_Eth_Frame+0x9c>)
 8009d78:	71da      	strb	r2, [r3, #7]
    spi_tx_buffer[8] = 0x00;
 8009d7a:	4b12      	ldr	r3, [pc, #72]	@ (8009dc4 <SPI_QCA7000_Send_Eth_Frame+0x9c>)
 8009d7c:	2200      	movs	r2, #0
 8009d7e:	721a      	strb	r2, [r3, #8]
    spi_tx_buffer[9] = 0x00;
 8009d80:	4b10      	ldr	r3, [pc, #64]	@ (8009dc4 <SPI_QCA7000_Send_Eth_Frame+0x9c>)
 8009d82:	2200      	movs	r2, #0
 8009d84:	725a      	strb	r2, [r3, #9]
    memcpy(&spi_tx_buffer[10], eth_tx_buffer, eth_tx_size);
 8009d86:	4b0e      	ldr	r3, [pc, #56]	@ (8009dc0 <SPI_QCA7000_Send_Eth_Frame+0x98>)
 8009d88:	881b      	ldrh	r3, [r3, #0]
 8009d8a:	461a      	mov	r2, r3
 8009d8c:	490e      	ldr	r1, [pc, #56]	@ (8009dc8 <SPI_QCA7000_Send_Eth_Frame+0xa0>)
 8009d8e:	480f      	ldr	r0, [pc, #60]	@ (8009dcc <SPI_QCA7000_Send_Eth_Frame+0xa4>)
 8009d90:	f001 fef7 	bl	800bb82 <memcpy>
    spi_tx_buffer[10 + eth_tx_size] = 0x55;
 8009d94:	4b0a      	ldr	r3, [pc, #40]	@ (8009dc0 <SPI_QCA7000_Send_Eth_Frame+0x98>)
 8009d96:	881b      	ldrh	r3, [r3, #0]
 8009d98:	330a      	adds	r3, #10
 8009d9a:	4a0a      	ldr	r2, [pc, #40]	@ (8009dc4 <SPI_QCA7000_Send_Eth_Frame+0x9c>)
 8009d9c:	2155      	movs	r1, #85	@ 0x55
 8009d9e:	54d1      	strb	r1, [r2, r3]
    spi_tx_buffer[11 + eth_tx_size] = 0x55;
 8009da0:	4b07      	ldr	r3, [pc, #28]	@ (8009dc0 <SPI_QCA7000_Send_Eth_Frame+0x98>)
 8009da2:	881b      	ldrh	r3, [r3, #0]
 8009da4:	330b      	adds	r3, #11
 8009da6:	4a07      	ldr	r2, [pc, #28]	@ (8009dc4 <SPI_QCA7000_Send_Eth_Frame+0x9c>)
 8009da8:	2155      	movs	r1, #85	@ 0x55
 8009daa:	54d1      	strb	r1, [r2, r3]
    spi_data_size = 12 + eth_tx_size;
 8009dac:	4b04      	ldr	r3, [pc, #16]	@ (8009dc0 <SPI_QCA7000_Send_Eth_Frame+0x98>)
 8009dae:	881b      	ldrh	r3, [r3, #0]
 8009db0:	330c      	adds	r3, #12
 8009db2:	b29a      	uxth	r2, r3
 8009db4:	4b06      	ldr	r3, [pc, #24]	@ (8009dd0 <SPI_QCA7000_Send_Eth_Frame+0xa8>)
 8009db6:	801a      	strh	r2, [r3, #0]
    SPI_Transmit_Receive();
 8009db8:	f7f6 fd1c 	bl	80007f4 <SPI_Transmit_Receive>
//    uint8_t i;
//    for(i=0; i<spi_data_size; i++){
//    	sprintf(serial_output_buffer + strlen(serial_output_buffer), " %X ", spi_tx_buffer[i]);
//    }
//    Serial_Print();
}
 8009dbc:	bf00      	nop
 8009dbe:	bd80      	pop	{r7, pc}
 8009dc0:	20001f7a 	.word	0x20001f7a
 8009dc4:	20000e14 	.word	0x20000e14
 8009dc8:	20001e80 	.word	0x20001e80
 8009dcc:	20000e1e 	.word	0x20000e1e
 8009dd0:	20001e7c 	.word	0x20001e7c

08009dd4 <SPI_QCA7000_Read_Eth_Frame>:

void SPI_QCA7000_Read_Eth_Frame(void){
 8009dd4:	b580      	push	{r7, lr}
 8009dd6:	b082      	sub	sp, #8
 8009dd8:	af00      	add	r7, sp, #0
    uint8_t i;
    i = 0;
 8009dda:	2300      	movs	r3, #0
 8009ddc:	71fb      	strb	r3, [r7, #7]
    uint16_t ava_size;
    ava_size = SPI_QCA7000_Read_RDBUF_SPC_AVA();
 8009dde:	f7ff fcf5 	bl	80097cc <SPI_QCA7000_Read_RDBUF_SPC_AVA>
 8009de2:	4603      	mov	r3, r0
 8009de4:	80bb      	strh	r3, [r7, #4]
    if(ava_size == 0){
 8009de6:	88bb      	ldrh	r3, [r7, #4]
 8009de8:	2b00      	cmp	r3, #0
 8009dea:	d03e      	beq.n	8009e6a <SPI_QCA7000_Read_Eth_Frame+0x96>
    	return;
    }
    SPI_QCA7000_Write_BFR_SIZE(ava_size);
 8009dec:	88bb      	ldrh	r3, [r7, #4]
 8009dee:	4618      	mov	r0, r3
 8009df0:	f7ff fd2a 	bl	8009848 <SPI_QCA7000_Write_BFR_SIZE>

    spi_tx_buffer[i++] = 0x80;
 8009df4:	79fb      	ldrb	r3, [r7, #7]
 8009df6:	1c5a      	adds	r2, r3, #1
 8009df8:	71fa      	strb	r2, [r7, #7]
 8009dfa:	461a      	mov	r2, r3
 8009dfc:	4b1d      	ldr	r3, [pc, #116]	@ (8009e74 <SPI_QCA7000_Read_Eth_Frame+0xa0>)
 8009dfe:	2180      	movs	r1, #128	@ 0x80
 8009e00:	5499      	strb	r1, [r3, r2]
    spi_tx_buffer[i++] = 0x00;
 8009e02:	79fb      	ldrb	r3, [r7, #7]
 8009e04:	1c5a      	adds	r2, r3, #1
 8009e06:	71fa      	strb	r2, [r7, #7]
 8009e08:	461a      	mov	r2, r3
 8009e0a:	4b1a      	ldr	r3, [pc, #104]	@ (8009e74 <SPI_QCA7000_Read_Eth_Frame+0xa0>)
 8009e0c:	2100      	movs	r1, #0
 8009e0e:	5499      	strb	r1, [r3, r2]

    spi_data_size = ava_size + 2;
 8009e10:	88bb      	ldrh	r3, [r7, #4]
 8009e12:	3302      	adds	r3, #2
 8009e14:	b29a      	uxth	r2, r3
 8009e16:	4b18      	ldr	r3, [pc, #96]	@ (8009e78 <SPI_QCA7000_Read_Eth_Frame+0xa4>)
 8009e18:	801a      	strh	r2, [r3, #0]

    SPI_Transmit_Receive();
 8009e1a:	f7f6 fceb 	bl	80007f4 <SPI_Transmit_Receive>

    for(i=0; i<ava_size; i++){
 8009e1e:	2300      	movs	r3, #0
 8009e20:	71fb      	strb	r3, [r7, #7]
 8009e22:	e016      	b.n	8009e52 <SPI_QCA7000_Read_Eth_Frame+0x7e>
        spi_rx_buffer[i] = spi_rx_buffer[i+2];
 8009e24:	79fb      	ldrb	r3, [r7, #7]
 8009e26:	1c9a      	adds	r2, r3, #2
 8009e28:	79fb      	ldrb	r3, [r7, #7]
 8009e2a:	4914      	ldr	r1, [pc, #80]	@ (8009e7c <SPI_QCA7000_Read_Eth_Frame+0xa8>)
 8009e2c:	5c89      	ldrb	r1, [r1, r2]
 8009e2e:	4a13      	ldr	r2, [pc, #76]	@ (8009e7c <SPI_QCA7000_Read_Eth_Frame+0xa8>)
 8009e30:	54d1      	strb	r1, [r2, r3]
   		sprintf(serial_output_buffer + strlen(serial_output_buffer), " %X ", spi_rx_buffer[i]);
 8009e32:	4813      	ldr	r0, [pc, #76]	@ (8009e80 <SPI_QCA7000_Read_Eth_Frame+0xac>)
 8009e34:	f7f6 f9f4 	bl	8000220 <strlen>
 8009e38:	4603      	mov	r3, r0
 8009e3a:	4a11      	ldr	r2, [pc, #68]	@ (8009e80 <SPI_QCA7000_Read_Eth_Frame+0xac>)
 8009e3c:	1898      	adds	r0, r3, r2
 8009e3e:	79fb      	ldrb	r3, [r7, #7]
 8009e40:	4a0e      	ldr	r2, [pc, #56]	@ (8009e7c <SPI_QCA7000_Read_Eth_Frame+0xa8>)
 8009e42:	5cd3      	ldrb	r3, [r2, r3]
 8009e44:	461a      	mov	r2, r3
 8009e46:	490f      	ldr	r1, [pc, #60]	@ (8009e84 <SPI_QCA7000_Read_Eth_Frame+0xb0>)
 8009e48:	f001 fdbc 	bl	800b9c4 <siprintf>
    for(i=0; i<ava_size; i++){
 8009e4c:	79fb      	ldrb	r3, [r7, #7]
 8009e4e:	3301      	adds	r3, #1
 8009e50:	71fb      	strb	r3, [r7, #7]
 8009e52:	79fb      	ldrb	r3, [r7, #7]
 8009e54:	b29b      	uxth	r3, r3
 8009e56:	88ba      	ldrh	r2, [r7, #4]
 8009e58:	429a      	cmp	r2, r3
 8009e5a:	d8e3      	bhi.n	8009e24 <SPI_QCA7000_Read_Eth_Frame+0x50>
    }
	Serial_Print();
 8009e5c:	f7f6 fc6c 	bl	8000738 <Serial_Print>

    SPI_QCA7000_Check_Rx_Data(ava_size);
 8009e60:	88bb      	ldrh	r3, [r7, #4]
 8009e62:	4618      	mov	r0, r3
 8009e64:	f7ff fe94 	bl	8009b90 <SPI_QCA7000_Check_Rx_Data>
 8009e68:	e000      	b.n	8009e6c <SPI_QCA7000_Read_Eth_Frame+0x98>
    	return;
 8009e6a:	bf00      	nop
//	sprintf(serial_output_buffer, "abc: %X %X ", spi_rx_buffer[2], spi_rx_buffer[3] );
//	Serial_Print();
}
 8009e6c:	3708      	adds	r7, #8
 8009e6e:	46bd      	mov	sp, r7
 8009e70:	bd80      	pop	{r7, pc}
 8009e72:	bf00      	nop
 8009e74:	20000e14 	.word	0x20000e14
 8009e78:	20001e7c 	.word	0x20001e7c
 8009e7c:	20001648 	.word	0x20001648
 8009e80:	200005e0 	.word	0x200005e0
 8009e84:	0800ce14 	.word	0x0800ce14

08009e88 <SPI_QCA7000_Handling_Intr>:

void SPI_QCA7000_Handling_Intr(void){
 8009e88:	b580      	push	{r7, lr}
 8009e8a:	b082      	sub	sp, #8
 8009e8c:	af00      	add	r7, sp, #0
    SPI_QCA7000_Disable_REG_INTR_DISABLE();
 8009e8e:	f7ff fd11 	bl	80098b4 <SPI_QCA7000_Disable_REG_INTR_DISABLE>
    uint16_t cause;
    cause = SPI_QCA7000_Read_REG_INTR_CAUSE();
 8009e92:	f7ff fd6f 	bl	8009974 <SPI_QCA7000_Read_REG_INTR_CAUSE>
 8009e96:	4603      	mov	r3, r0
 8009e98:	80fb      	strh	r3, [r7, #6]
    SPI_QCA7000_Confirm_REG_INTR_CAUSE(cause);
 8009e9a:	88fb      	ldrh	r3, [r7, #6]
 8009e9c:	4618      	mov	r0, r3
 8009e9e:	f7ff fdef 	bl	8009a80 <SPI_QCA7000_Confirm_REG_INTR_CAUSE>
    SPI_QCA7000_Enable_REG_INTR_ENABLE();
 8009ea2:	f7ff fd37 	bl	8009914 <SPI_QCA7000_Enable_REG_INTR_ENABLE>
}
 8009ea6:	bf00      	nop
 8009ea8:	3708      	adds	r7, #8
 8009eaa:	46bd      	mov	sp, r7
 8009eac:	bd80      	pop	{r7, pc}
	...

08009eb0 <HMI_Compose_Pre_Charge_Parm>:
//  HAL_UART_Transmit(&huart2, &END_BYTE, 1, 10);
//}

hmi_data myHMI;

void HMI_Compose_Pre_Charge_Parm(uint8_t type, uint16_t value){
 8009eb0:	b580      	push	{r7, lr}
 8009eb2:	b082      	sub	sp, #8
 8009eb4:	af00      	add	r7, sp, #0
 8009eb6:	4603      	mov	r3, r0
 8009eb8:	460a      	mov	r2, r1
 8009eba:	71fb      	strb	r3, [r7, #7]
 8009ebc:	4613      	mov	r3, r2
 8009ebe:	80bb      	strh	r3, [r7, #4]
	switch(type){
 8009ec0:	79fb      	ldrb	r3, [r7, #7]
 8009ec2:	3b30      	subs	r3, #48	@ 0x30
 8009ec4:	2b12      	cmp	r3, #18
 8009ec6:	f200 8081 	bhi.w	8009fcc <HMI_Compose_Pre_Charge_Parm+0x11c>
 8009eca:	a201      	add	r2, pc, #4	@ (adr r2, 8009ed0 <HMI_Compose_Pre_Charge_Parm+0x20>)
 8009ecc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009ed0:	08009f1d 	.word	0x08009f1d
 8009ed4:	08009fcd 	.word	0x08009fcd
 8009ed8:	08009f37 	.word	0x08009f37
 8009edc:	08009f53 	.word	0x08009f53
 8009ee0:	08009f6f 	.word	0x08009f6f
 8009ee4:	08009f7d 	.word	0x08009f7d
 8009ee8:	08009f61 	.word	0x08009f61
 8009eec:	08009f45 	.word	0x08009f45
 8009ef0:	08009f87 	.word	0x08009f87
 8009ef4:	08009fa3 	.word	0x08009fa3
 8009ef8:	08009fcd 	.word	0x08009fcd
 8009efc:	08009fcd 	.word	0x08009fcd
 8009f00:	08009fcd 	.word	0x08009fcd
 8009f04:	08009fcd 	.word	0x08009fcd
 8009f08:	08009fcd 	.word	0x08009fcd
 8009f0c:	08009fcd 	.word	0x08009fcd
 8009f10:	08009fbf 	.word	0x08009fbf
 8009f14:	08009fb1 	.word	0x08009fb1
 8009f18:	08009f95 	.word	0x08009f95
	case HMI_COMPATIBLE:
		if(value == 0x00AA) sprintf(hmi_buffer,"com.val=\"Compatible\"");
 8009f1c:	88bb      	ldrh	r3, [r7, #4]
 8009f1e:	2baa      	cmp	r3, #170	@ 0xaa
 8009f20:	d104      	bne.n	8009f2c <HMI_Compose_Pre_Charge_Parm+0x7c>
 8009f22:	492c      	ldr	r1, [pc, #176]	@ (8009fd4 <HMI_Compose_Pre_Charge_Parm+0x124>)
 8009f24:	482c      	ldr	r0, [pc, #176]	@ (8009fd8 <HMI_Compose_Pre_Charge_Parm+0x128>)
 8009f26:	f001 fd4d 	bl	800b9c4 <siprintf>
		else sprintf(hmi_buffer,"com.val=\"Incompatible\"");
		break;
 8009f2a:	e04f      	b.n	8009fcc <HMI_Compose_Pre_Charge_Parm+0x11c>
		else sprintf(hmi_buffer,"com.val=\"Incompatible\"");
 8009f2c:	492b      	ldr	r1, [pc, #172]	@ (8009fdc <HMI_Compose_Pre_Charge_Parm+0x12c>)
 8009f2e:	482a      	ldr	r0, [pc, #168]	@ (8009fd8 <HMI_Compose_Pre_Charge_Parm+0x128>)
 8009f30:	f001 fd48 	bl	800b9c4 <siprintf>
		break;
 8009f34:	e04a      	b.n	8009fcc <HMI_Compose_Pre_Charge_Parm+0x11c>
	case HMI_InitSoC:
		sprintf(hmi_buffer,"InitSoC1.val=%u", value);
 8009f36:	88bb      	ldrh	r3, [r7, #4]
 8009f38:	461a      	mov	r2, r3
 8009f3a:	4929      	ldr	r1, [pc, #164]	@ (8009fe0 <HMI_Compose_Pre_Charge_Parm+0x130>)
 8009f3c:	4826      	ldr	r0, [pc, #152]	@ (8009fd8 <HMI_Compose_Pre_Charge_Parm+0x128>)
 8009f3e:	f001 fd41 	bl	800b9c4 <siprintf>
		break;
 8009f42:	e043      	b.n	8009fcc <HMI_Compose_Pre_Charge_Parm+0x11c>
	case HMI_SoC:
		sprintf(hmi_buffer,"SoC1.val=%u", value);
 8009f44:	88bb      	ldrh	r3, [r7, #4]
 8009f46:	461a      	mov	r2, r3
 8009f48:	4926      	ldr	r1, [pc, #152]	@ (8009fe4 <HMI_Compose_Pre_Charge_Parm+0x134>)
 8009f4a:	4823      	ldr	r0, [pc, #140]	@ (8009fd8 <HMI_Compose_Pre_Charge_Parm+0x128>)
 8009f4c:	f001 fd3a 	bl	800b9c4 <siprintf>
		break;
 8009f50:	e03c      	b.n	8009fcc <HMI_Compose_Pre_Charge_Parm+0x11c>
	case HMI_SoH:
		sprintf(hmi_buffer,"SoH1.val=%u", value);
 8009f52:	88bb      	ldrh	r3, [r7, #4]
 8009f54:	461a      	mov	r2, r3
 8009f56:	4924      	ldr	r1, [pc, #144]	@ (8009fe8 <HMI_Compose_Pre_Charge_Parm+0x138>)
 8009f58:	481f      	ldr	r0, [pc, #124]	@ (8009fd8 <HMI_Compose_Pre_Charge_Parm+0x128>)
 8009f5a:	f001 fd33 	bl	800b9c4 <siprintf>
		break;
 8009f5e:	e035      	b.n	8009fcc <HMI_Compose_Pre_Charge_Parm+0x11c>
	case HMI_CHARGING_TIME_MIN:
		sprintf(hmi_buffer,"min1.val=%u", value);
 8009f60:	88bb      	ldrh	r3, [r7, #4]
 8009f62:	461a      	mov	r2, r3
 8009f64:	4921      	ldr	r1, [pc, #132]	@ (8009fec <HMI_Compose_Pre_Charge_Parm+0x13c>)
 8009f66:	481c      	ldr	r0, [pc, #112]	@ (8009fd8 <HMI_Compose_Pre_Charge_Parm+0x128>)
 8009f68:	f001 fd2c 	bl	800b9c4 <siprintf>
		break;
 8009f6c:	e02e      	b.n	8009fcc <HMI_Compose_Pre_Charge_Parm+0x11c>
	case HMI_CHARGING_TIME_HOUR:
		sprintf(hmi_buffer,"hour1.val=%u", value);
 8009f6e:	88bb      	ldrh	r3, [r7, #4]
 8009f70:	461a      	mov	r2, r3
 8009f72:	491f      	ldr	r1, [pc, #124]	@ (8009ff0 <HMI_Compose_Pre_Charge_Parm+0x140>)
 8009f74:	4818      	ldr	r0, [pc, #96]	@ (8009fd8 <HMI_Compose_Pre_Charge_Parm+0x128>)
 8009f76:	f001 fd25 	bl	800b9c4 <siprintf>
		break;
 8009f7a:	e027      	b.n	8009fcc <HMI_Compose_Pre_Charge_Parm+0x11c>
	case HMI_CAR_MODEL:
		sprintf(hmi_buffer,"model.val=\"Ioniq 5\"");
 8009f7c:	491d      	ldr	r1, [pc, #116]	@ (8009ff4 <HMI_Compose_Pre_Charge_Parm+0x144>)
 8009f7e:	4816      	ldr	r0, [pc, #88]	@ (8009fd8 <HMI_Compose_Pre_Charge_Parm+0x128>)
 8009f80:	f001 fd20 	bl	800b9c4 <siprintf>
		break;
 8009f84:	e022      	b.n	8009fcc <HMI_Compose_Pre_Charge_Parm+0x11c>

	//
	case HMI_InitSoC2:
		sprintf(hmi_buffer,"InitSoC2.val=%u", value);
 8009f86:	88bb      	ldrh	r3, [r7, #4]
 8009f88:	461a      	mov	r2, r3
 8009f8a:	491b      	ldr	r1, [pc, #108]	@ (8009ff8 <HMI_Compose_Pre_Charge_Parm+0x148>)
 8009f8c:	4812      	ldr	r0, [pc, #72]	@ (8009fd8 <HMI_Compose_Pre_Charge_Parm+0x128>)
 8009f8e:	f001 fd19 	bl	800b9c4 <siprintf>
		break;
 8009f92:	e01b      	b.n	8009fcc <HMI_Compose_Pre_Charge_Parm+0x11c>
	case HMI_SoC2:
		sprintf(hmi_buffer,"SoC2.val=%u", value);
 8009f94:	88bb      	ldrh	r3, [r7, #4]
 8009f96:	461a      	mov	r2, r3
 8009f98:	4918      	ldr	r1, [pc, #96]	@ (8009ffc <HMI_Compose_Pre_Charge_Parm+0x14c>)
 8009f9a:	480f      	ldr	r0, [pc, #60]	@ (8009fd8 <HMI_Compose_Pre_Charge_Parm+0x128>)
 8009f9c:	f001 fd12 	bl	800b9c4 <siprintf>
		break;
 8009fa0:	e014      	b.n	8009fcc <HMI_Compose_Pre_Charge_Parm+0x11c>
	case HMI_SoH2:
		sprintf(hmi_buffer,"SoH2.val=%u", value);
 8009fa2:	88bb      	ldrh	r3, [r7, #4]
 8009fa4:	461a      	mov	r2, r3
 8009fa6:	4916      	ldr	r1, [pc, #88]	@ (800a000 <HMI_Compose_Pre_Charge_Parm+0x150>)
 8009fa8:	480b      	ldr	r0, [pc, #44]	@ (8009fd8 <HMI_Compose_Pre_Charge_Parm+0x128>)
 8009faa:	f001 fd0b 	bl	800b9c4 <siprintf>
		break;
 8009fae:	e00d      	b.n	8009fcc <HMI_Compose_Pre_Charge_Parm+0x11c>
	case HMI_CHARGING_TIME_MIN2:
		sprintf(hmi_buffer,"min2.val=%u", value);
 8009fb0:	88bb      	ldrh	r3, [r7, #4]
 8009fb2:	461a      	mov	r2, r3
 8009fb4:	4913      	ldr	r1, [pc, #76]	@ (800a004 <HMI_Compose_Pre_Charge_Parm+0x154>)
 8009fb6:	4808      	ldr	r0, [pc, #32]	@ (8009fd8 <HMI_Compose_Pre_Charge_Parm+0x128>)
 8009fb8:	f001 fd04 	bl	800b9c4 <siprintf>
		break;
 8009fbc:	e006      	b.n	8009fcc <HMI_Compose_Pre_Charge_Parm+0x11c>
	case HMI_CHARGING_TIME_HOUR2:
		sprintf(hmi_buffer,"hour2.val=%u", value);
 8009fbe:	88bb      	ldrh	r3, [r7, #4]
 8009fc0:	461a      	mov	r2, r3
 8009fc2:	4911      	ldr	r1, [pc, #68]	@ (800a008 <HMI_Compose_Pre_Charge_Parm+0x158>)
 8009fc4:	4804      	ldr	r0, [pc, #16]	@ (8009fd8 <HMI_Compose_Pre_Charge_Parm+0x128>)
 8009fc6:	f001 fcfd 	bl	800b9c4 <siprintf>
		break;
 8009fca:	bf00      	nop
	}
}
 8009fcc:	bf00      	nop
 8009fce:	3708      	adds	r7, #8
 8009fd0:	46bd      	mov	sp, r7
 8009fd2:	bd80      	pop	{r7, pc}
 8009fd4:	0800ce1c 	.word	0x0800ce1c
 8009fd8:	20002174 	.word	0x20002174
 8009fdc:	0800ce34 	.word	0x0800ce34
 8009fe0:	0800ce4c 	.word	0x0800ce4c
 8009fe4:	0800ce5c 	.word	0x0800ce5c
 8009fe8:	0800ce68 	.word	0x0800ce68
 8009fec:	0800ce74 	.word	0x0800ce74
 8009ff0:	0800ce80 	.word	0x0800ce80
 8009ff4:	0800ce90 	.word	0x0800ce90
 8009ff8:	0800cea4 	.word	0x0800cea4
 8009ffc:	0800ceb4 	.word	0x0800ceb4
 800a000:	0800cec0 	.word	0x0800cec0
 800a004:	0800cecc 	.word	0x0800cecc
 800a008:	0800ced8 	.word	0x0800ced8

0800a00c <HMI_Compose_Realtime_Data>:

void HMI_Compose_Realtime_Data(uint8_t type, uint16_t value){
 800a00c:	b580      	push	{r7, lr}
 800a00e:	b082      	sub	sp, #8
 800a010:	af00      	add	r7, sp, #0
 800a012:	4603      	mov	r3, r0
 800a014:	460a      	mov	r2, r1
 800a016:	71fb      	strb	r3, [r7, #7]
 800a018:	4613      	mov	r3, r2
 800a01a:	80bb      	strh	r3, [r7, #4]
	switch(type){
 800a01c:	79fb      	ldrb	r3, [r7, #7]
 800a01e:	2b44      	cmp	r3, #68	@ 0x44
 800a020:	f200 80d4 	bhi.w	800a1cc <HMI_Compose_Realtime_Data+0x1c0>
 800a024:	a201      	add	r2, pc, #4	@ (adr r2, 800a02c <HMI_Compose_Realtime_Data+0x20>)
 800a026:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a02a:	bf00      	nop
 800a02c:	0800a187 	.word	0x0800a187
 800a030:	0800a195 	.word	0x0800a195
 800a034:	0800a1a3 	.word	0x0800a1a3
 800a038:	0800a1b1 	.word	0x0800a1b1
 800a03c:	0800a15d 	.word	0x0800a15d
 800a040:	0800a16b 	.word	0x0800a16b
 800a044:	0800a179 	.word	0x0800a179
 800a048:	0800a1cd 	.word	0x0800a1cd
 800a04c:	0800a1cd 	.word	0x0800a1cd
 800a050:	0800a1cd 	.word	0x0800a1cd
 800a054:	0800a1cd 	.word	0x0800a1cd
 800a058:	0800a1cd 	.word	0x0800a1cd
 800a05c:	0800a1cd 	.word	0x0800a1cd
 800a060:	0800a1cd 	.word	0x0800a1cd
 800a064:	0800a1cd 	.word	0x0800a1cd
 800a068:	0800a1cd 	.word	0x0800a1cd
 800a06c:	0800a1cd 	.word	0x0800a1cd
 800a070:	0800a1cd 	.word	0x0800a1cd
 800a074:	0800a1cd 	.word	0x0800a1cd
 800a078:	0800a1cd 	.word	0x0800a1cd
 800a07c:	0800a1cd 	.word	0x0800a1cd
 800a080:	0800a1cd 	.word	0x0800a1cd
 800a084:	0800a1cd 	.word	0x0800a1cd
 800a088:	0800a1cd 	.word	0x0800a1cd
 800a08c:	0800a1cd 	.word	0x0800a1cd
 800a090:	0800a1cd 	.word	0x0800a1cd
 800a094:	0800a1cd 	.word	0x0800a1cd
 800a098:	0800a1cd 	.word	0x0800a1cd
 800a09c:	0800a1cd 	.word	0x0800a1cd
 800a0a0:	0800a1cd 	.word	0x0800a1cd
 800a0a4:	0800a1cd 	.word	0x0800a1cd
 800a0a8:	0800a1cd 	.word	0x0800a1cd
 800a0ac:	0800a1cd 	.word	0x0800a1cd
 800a0b0:	0800a1cd 	.word	0x0800a1cd
 800a0b4:	0800a1cd 	.word	0x0800a1cd
 800a0b8:	0800a1cd 	.word	0x0800a1cd
 800a0bc:	0800a1cd 	.word	0x0800a1cd
 800a0c0:	0800a1cd 	.word	0x0800a1cd
 800a0c4:	0800a1cd 	.word	0x0800a1cd
 800a0c8:	0800a1cd 	.word	0x0800a1cd
 800a0cc:	0800a1cd 	.word	0x0800a1cd
 800a0d0:	0800a1cd 	.word	0x0800a1cd
 800a0d4:	0800a1cd 	.word	0x0800a1cd
 800a0d8:	0800a1cd 	.word	0x0800a1cd
 800a0dc:	0800a1cd 	.word	0x0800a1cd
 800a0e0:	0800a1cd 	.word	0x0800a1cd
 800a0e4:	0800a1cd 	.word	0x0800a1cd
 800a0e8:	0800a1cd 	.word	0x0800a1cd
 800a0ec:	0800a1cd 	.word	0x0800a1cd
 800a0f0:	0800a1cd 	.word	0x0800a1cd
 800a0f4:	0800a1cd 	.word	0x0800a1cd
 800a0f8:	0800a1cd 	.word	0x0800a1cd
 800a0fc:	0800a1cd 	.word	0x0800a1cd
 800a100:	0800a1cd 	.word	0x0800a1cd
 800a104:	0800a1cd 	.word	0x0800a1cd
 800a108:	0800a1bf 	.word	0x0800a1bf
 800a10c:	0800a1cd 	.word	0x0800a1cd
 800a110:	0800a1cd 	.word	0x0800a1cd
 800a114:	0800a1cd 	.word	0x0800a1cd
 800a118:	0800a1cd 	.word	0x0800a1cd
 800a11c:	0800a1cd 	.word	0x0800a1cd
 800a120:	0800a1cd 	.word	0x0800a1cd
 800a124:	0800a1cd 	.word	0x0800a1cd
 800a128:	0800a1cd 	.word	0x0800a1cd
 800a12c:	0800a1cd 	.word	0x0800a1cd
 800a130:	0800a1cd 	.word	0x0800a1cd
 800a134:	0800a1cd 	.word	0x0800a1cd
 800a138:	0800a141 	.word	0x0800a141
 800a13c:	0800a14f 	.word	0x0800a14f
	case HMI_TRAN_STATUS1:
		sprintf(hmi_buffer,"Authorize.plug_s1.val=%u", value);
 800a140:	88bb      	ldrh	r3, [r7, #4]
 800a142:	461a      	mov	r2, r3
 800a144:	4923      	ldr	r1, [pc, #140]	@ (800a1d4 <HMI_Compose_Realtime_Data+0x1c8>)
 800a146:	4824      	ldr	r0, [pc, #144]	@ (800a1d8 <HMI_Compose_Realtime_Data+0x1cc>)
 800a148:	f001 fc3c 	bl	800b9c4 <siprintf>
		break;
 800a14c:	e03e      	b.n	800a1cc <HMI_Compose_Realtime_Data+0x1c0>
	case HMI_TRAN_STATUS2:
		sprintf(hmi_buffer,"Authorize.plug_s2.val=%u", value);
 800a14e:	88bb      	ldrh	r3, [r7, #4]
 800a150:	461a      	mov	r2, r3
 800a152:	4922      	ldr	r1, [pc, #136]	@ (800a1dc <HMI_Compose_Realtime_Data+0x1d0>)
 800a154:	4820      	ldr	r0, [pc, #128]	@ (800a1d8 <HMI_Compose_Realtime_Data+0x1cc>)
 800a156:	f001 fc35 	bl	800b9c4 <siprintf>
		break;
 800a15a:	e037      	b.n	800a1cc <HMI_Compose_Realtime_Data+0x1c0>
	case HMI_VOLTAGE2:
		sprintf(hmi_buffer,"v2.val=%u", value);
 800a15c:	88bb      	ldrh	r3, [r7, #4]
 800a15e:	461a      	mov	r2, r3
 800a160:	491f      	ldr	r1, [pc, #124]	@ (800a1e0 <HMI_Compose_Realtime_Data+0x1d4>)
 800a162:	481d      	ldr	r0, [pc, #116]	@ (800a1d8 <HMI_Compose_Realtime_Data+0x1cc>)
 800a164:	f001 fc2e 	bl	800b9c4 <siprintf>
		break;
 800a168:	e030      	b.n	800a1cc <HMI_Compose_Realtime_Data+0x1c0>
	case HMI_CURRENT2:
		sprintf(hmi_buffer,"i2.val=%u", value);
 800a16a:	88bb      	ldrh	r3, [r7, #4]
 800a16c:	461a      	mov	r2, r3
 800a16e:	491d      	ldr	r1, [pc, #116]	@ (800a1e4 <HMI_Compose_Realtime_Data+0x1d8>)
 800a170:	4819      	ldr	r0, [pc, #100]	@ (800a1d8 <HMI_Compose_Realtime_Data+0x1cc>)
 800a172:	f001 fc27 	bl	800b9c4 <siprintf>
		break;
 800a176:	e029      	b.n	800a1cc <HMI_Compose_Realtime_Data+0x1c0>
	case HMI_TEMP2:
		sprintf(hmi_buffer,"t2.val=%u", value);
 800a178:	88bb      	ldrh	r3, [r7, #4]
 800a17a:	461a      	mov	r2, r3
 800a17c:	491a      	ldr	r1, [pc, #104]	@ (800a1e8 <HMI_Compose_Realtime_Data+0x1dc>)
 800a17e:	4816      	ldr	r0, [pc, #88]	@ (800a1d8 <HMI_Compose_Realtime_Data+0x1cc>)
 800a180:	f001 fc20 	bl	800b9c4 <siprintf>
		break;
 800a184:	e022      	b.n	800a1cc <HMI_Compose_Realtime_Data+0x1c0>
	case HMI_VOLTAGE:
		sprintf(hmi_buffer,"v1.val=%u", value);
 800a186:	88bb      	ldrh	r3, [r7, #4]
 800a188:	461a      	mov	r2, r3
 800a18a:	4918      	ldr	r1, [pc, #96]	@ (800a1ec <HMI_Compose_Realtime_Data+0x1e0>)
 800a18c:	4812      	ldr	r0, [pc, #72]	@ (800a1d8 <HMI_Compose_Realtime_Data+0x1cc>)
 800a18e:	f001 fc19 	bl	800b9c4 <siprintf>
		break;
 800a192:	e01b      	b.n	800a1cc <HMI_Compose_Realtime_Data+0x1c0>
	case HMI_CURRENT:
		sprintf(hmi_buffer,"i1.val=%u", value);
 800a194:	88bb      	ldrh	r3, [r7, #4]
 800a196:	461a      	mov	r2, r3
 800a198:	4915      	ldr	r1, [pc, #84]	@ (800a1f0 <HMI_Compose_Realtime_Data+0x1e4>)
 800a19a:	480f      	ldr	r0, [pc, #60]	@ (800a1d8 <HMI_Compose_Realtime_Data+0x1cc>)
 800a19c:	f001 fc12 	bl	800b9c4 <siprintf>
		break;
 800a1a0:	e014      	b.n	800a1cc <HMI_Compose_Realtime_Data+0x1c0>
	case HMI_TEMP:
		sprintf(hmi_buffer,"t1.val=%u", value);
 800a1a2:	88bb      	ldrh	r3, [r7, #4]
 800a1a4:	461a      	mov	r2, r3
 800a1a6:	4913      	ldr	r1, [pc, #76]	@ (800a1f4 <HMI_Compose_Realtime_Data+0x1e8>)
 800a1a8:	480b      	ldr	r0, [pc, #44]	@ (800a1d8 <HMI_Compose_Realtime_Data+0x1cc>)
 800a1aa:	f001 fc0b 	bl	800b9c4 <siprintf>
		break;
 800a1ae:	e00d      	b.n	800a1cc <HMI_Compose_Realtime_Data+0x1c0>
	case HMI_IREF:
		sprintf(hmi_buffer,"iref.val=%u", value);
 800a1b0:	88bb      	ldrh	r3, [r7, #4]
 800a1b2:	461a      	mov	r2, r3
 800a1b4:	4910      	ldr	r1, [pc, #64]	@ (800a1f8 <HMI_Compose_Realtime_Data+0x1ec>)
 800a1b6:	4808      	ldr	r0, [pc, #32]	@ (800a1d8 <HMI_Compose_Realtime_Data+0x1cc>)
 800a1b8:	f001 fc04 	bl	800b9c4 <siprintf>
		break;
 800a1bc:	e006      	b.n	800a1cc <HMI_Compose_Realtime_Data+0x1c0>
	case HMI_SoC:
		sprintf(hmi_buffer,"SoC1.val=%u", value);
 800a1be:	88bb      	ldrh	r3, [r7, #4]
 800a1c0:	461a      	mov	r2, r3
 800a1c2:	490e      	ldr	r1, [pc, #56]	@ (800a1fc <HMI_Compose_Realtime_Data+0x1f0>)
 800a1c4:	4804      	ldr	r0, [pc, #16]	@ (800a1d8 <HMI_Compose_Realtime_Data+0x1cc>)
 800a1c6:	f001 fbfd 	bl	800b9c4 <siprintf>
		break;
 800a1ca:	bf00      	nop
	}
}
 800a1cc:	bf00      	nop
 800a1ce:	3708      	adds	r7, #8
 800a1d0:	46bd      	mov	sp, r7
 800a1d2:	bd80      	pop	{r7, pc}
 800a1d4:	0800cee8 	.word	0x0800cee8
 800a1d8:	20002174 	.word	0x20002174
 800a1dc:	0800cf04 	.word	0x0800cf04
 800a1e0:	0800cf20 	.word	0x0800cf20
 800a1e4:	0800cf2c 	.word	0x0800cf2c
 800a1e8:	0800cf38 	.word	0x0800cf38
 800a1ec:	0800cf44 	.word	0x0800cf44
 800a1f0:	0800cf50 	.word	0x0800cf50
 800a1f4:	0800cf5c 	.word	0x0800cf5c
 800a1f8:	0800cf68 	.word	0x0800cf68
 800a1fc:	0800ce5c 	.word	0x0800ce5c

0800a200 <HMI_Compose_Status>:

void HMI_Compose_Status(uint8_t status){
 800a200:	b580      	push	{r7, lr}
 800a202:	b082      	sub	sp, #8
 800a204:	af00      	add	r7, sp, #0
 800a206:	4603      	mov	r3, r0
 800a208:	71fb      	strb	r3, [r7, #7]
	switch(status){
 800a20a:	79fb      	ldrb	r3, [r7, #7]
 800a20c:	3b10      	subs	r3, #16
 800a20e:	2b15      	cmp	r3, #21
 800a210:	d851      	bhi.n	800a2b6 <HMI_Compose_Status+0xb6>
 800a212:	a201      	add	r2, pc, #4	@ (adr r2, 800a218 <HMI_Compose_Status+0x18>)
 800a214:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a218:	0800a27b 	.word	0x0800a27b
 800a21c:	0800a285 	.word	0x0800a285
 800a220:	0800a299 	.word	0x0800a299
 800a224:	0800a271 	.word	0x0800a271
 800a228:	0800a28f 	.word	0x0800a28f
 800a22c:	0800a2b7 	.word	0x0800a2b7
 800a230:	0800a2b7 	.word	0x0800a2b7
 800a234:	0800a2b7 	.word	0x0800a2b7
 800a238:	0800a2b7 	.word	0x0800a2b7
 800a23c:	0800a2b7 	.word	0x0800a2b7
 800a240:	0800a2b7 	.word	0x0800a2b7
 800a244:	0800a2b7 	.word	0x0800a2b7
 800a248:	0800a2b7 	.word	0x0800a2b7
 800a24c:	0800a2b7 	.word	0x0800a2b7
 800a250:	0800a2b7 	.word	0x0800a2b7
 800a254:	0800a2b7 	.word	0x0800a2b7
 800a258:	0800a2a3 	.word	0x0800a2a3
 800a25c:	0800a2b7 	.word	0x0800a2b7
 800a260:	0800a2b7 	.word	0x0800a2b7
 800a264:	0800a2b7 	.word	0x0800a2b7
 800a268:	0800a2b7 	.word	0x0800a2b7
 800a26c:	0800a2ad 	.word	0x0800a2ad
	case HMI_PAGE1:
		sprintf(hmi_buffer,"page 1");
 800a270:	4913      	ldr	r1, [pc, #76]	@ (800a2c0 <HMI_Compose_Status+0xc0>)
 800a272:	4814      	ldr	r0, [pc, #80]	@ (800a2c4 <HMI_Compose_Status+0xc4>)
 800a274:	f001 fba6 	bl	800b9c4 <siprintf>
		break;
 800a278:	e01d      	b.n	800a2b6 <HMI_Compose_Status+0xb6>
	case HMI_STOP:
		sprintf(hmi_buffer,"bug.val=0");
 800a27a:	4913      	ldr	r1, [pc, #76]	@ (800a2c8 <HMI_Compose_Status+0xc8>)
 800a27c:	4811      	ldr	r0, [pc, #68]	@ (800a2c4 <HMI_Compose_Status+0xc4>)
 800a27e:	f001 fba1 	bl	800b9c4 <siprintf>
		break;
 800a282:	e018      	b.n	800a2b6 <HMI_Compose_Status+0xb6>
	case HMI_CONNECT:
		sprintf(hmi_buffer,"state1.txt=\"Connected\"");
 800a284:	4911      	ldr	r1, [pc, #68]	@ (800a2cc <HMI_Compose_Status+0xcc>)
 800a286:	480f      	ldr	r0, [pc, #60]	@ (800a2c4 <HMI_Compose_Status+0xc4>)
 800a288:	f001 fb9c 	bl	800b9c4 <siprintf>
		break;
 800a28c:	e013      	b.n	800a2b6 <HMI_Compose_Status+0xb6>
	case HMI_CONNECT2:
		sprintf(hmi_buffer,"state2.txt=\"Connected\"");
 800a28e:	4910      	ldr	r1, [pc, #64]	@ (800a2d0 <HMI_Compose_Status+0xd0>)
 800a290:	480c      	ldr	r0, [pc, #48]	@ (800a2c4 <HMI_Compose_Status+0xc4>)
 800a292:	f001 fb97 	bl	800b9c4 <siprintf>
		break;
 800a296:	e00e      	b.n	800a2b6 <HMI_Compose_Status+0xb6>
	case HMI_READY:
		sprintf(hmi_buffer,"state.txt=\"Ready\"");
 800a298:	490e      	ldr	r1, [pc, #56]	@ (800a2d4 <HMI_Compose_Status+0xd4>)
 800a29a:	480a      	ldr	r0, [pc, #40]	@ (800a2c4 <HMI_Compose_Status+0xc4>)
 800a29c:	f001 fb92 	bl	800b9c4 <siprintf>
		break;
 800a2a0:	e009      	b.n	800a2b6 <HMI_Compose_Status+0xb6>
	case HMI_WARNING_1:
		sprintf(hmi_buffer,"bug.val=1");
 800a2a2:	490d      	ldr	r1, [pc, #52]	@ (800a2d8 <HMI_Compose_Status+0xd8>)
 800a2a4:	4807      	ldr	r0, [pc, #28]	@ (800a2c4 <HMI_Compose_Status+0xc4>)
 800a2a6:	f001 fb8d 	bl	800b9c4 <siprintf>
		break;
 800a2aa:	e004      	b.n	800a2b6 <HMI_Compose_Status+0xb6>
	case HMI_ERROR_1:
		sprintf(hmi_buffer,"bug.val=2");
 800a2ac:	490b      	ldr	r1, [pc, #44]	@ (800a2dc <HMI_Compose_Status+0xdc>)
 800a2ae:	4805      	ldr	r0, [pc, #20]	@ (800a2c4 <HMI_Compose_Status+0xc4>)
 800a2b0:	f001 fb88 	bl	800b9c4 <siprintf>
		break;
 800a2b4:	bf00      	nop
	}
}
 800a2b6:	bf00      	nop
 800a2b8:	3708      	adds	r7, #8
 800a2ba:	46bd      	mov	sp, r7
 800a2bc:	bd80      	pop	{r7, pc}
 800a2be:	bf00      	nop
 800a2c0:	0800cf74 	.word	0x0800cf74
 800a2c4:	20002174 	.word	0x20002174
 800a2c8:	0800cf7c 	.word	0x0800cf7c
 800a2cc:	0800cf88 	.word	0x0800cf88
 800a2d0:	0800cfa0 	.word	0x0800cfa0
 800a2d4:	0800cfb8 	.word	0x0800cfb8
 800a2d8:	0800cfcc 	.word	0x0800cfcc
 800a2dc:	0800cfd8 	.word	0x0800cfd8

0800a2e0 <HMI_Evaluate_Setting_Data>:

void HMI_Evaluate_Setting_Data(uint8_t str[8])
{
 800a2e0:	b480      	push	{r7}
 800a2e2:	b083      	sub	sp, #12
 800a2e4:	af00      	add	r7, sp, #0
 800a2e6:	6078      	str	r0, [r7, #4]
	myHMI.cable = str[0];
 800a2e8:	687b      	ldr	r3, [r7, #4]
 800a2ea:	781a      	ldrb	r2, [r3, #0]
 800a2ec:	4b4c      	ldr	r3, [pc, #304]	@ (800a420 <HMI_Evaluate_Setting_Data+0x140>)
 800a2ee:	701a      	strb	r2, [r3, #0]
	myHMI.mode = str[1];
 800a2f0:	687b      	ldr	r3, [r7, #4]
 800a2f2:	785a      	ldrb	r2, [r3, #1]
 800a2f4:	4b4a      	ldr	r3, [pc, #296]	@ (800a420 <HMI_Evaluate_Setting_Data+0x140>)
 800a2f6:	705a      	strb	r2, [r3, #1]
	switch(myHMI.mode)
 800a2f8:	4b49      	ldr	r3, [pc, #292]	@ (800a420 <HMI_Evaluate_Setting_Data+0x140>)
 800a2fa:	785b      	ldrb	r3, [r3, #1]
 800a2fc:	3b30      	subs	r3, #48	@ 0x30
 800a2fe:	2b03      	cmp	r3, #3
 800a300:	f200 8088 	bhi.w	800a414 <HMI_Evaluate_Setting_Data+0x134>
 800a304:	a201      	add	r2, pc, #4	@ (adr r2, 800a30c <HMI_Evaluate_Setting_Data+0x2c>)
 800a306:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a30a:	bf00      	nop
 800a30c:	0800a31d 	.word	0x0800a31d
 800a310:	0800a32b 	.word	0x0800a32b
 800a314:	0800a339 	.word	0x0800a339
 800a318:	0800a383 	.word	0x0800a383
	{
	case '0':
		myHMI.voltage = 200;
 800a31c:	4b40      	ldr	r3, [pc, #256]	@ (800a420 <HMI_Evaluate_Setting_Data+0x140>)
 800a31e:	22c8      	movs	r2, #200	@ 0xc8
 800a320:	805a      	strh	r2, [r3, #2]
		myHMI.current = 15;
 800a322:	4b3f      	ldr	r3, [pc, #252]	@ (800a420 <HMI_Evaluate_Setting_Data+0x140>)
 800a324:	220f      	movs	r2, #15
 800a326:	809a      	strh	r2, [r3, #4]
	break;
 800a328:	e074      	b.n	800a414 <HMI_Evaluate_Setting_Data+0x134>
	case '1':
		myHMI.voltage = 200;
 800a32a:	4b3d      	ldr	r3, [pc, #244]	@ (800a420 <HMI_Evaluate_Setting_Data+0x140>)
 800a32c:	22c8      	movs	r2, #200	@ 0xc8
 800a32e:	805a      	strh	r2, [r3, #2]
		myHMI.current = 15;
 800a330:	4b3b      	ldr	r3, [pc, #236]	@ (800a420 <HMI_Evaluate_Setting_Data+0x140>)
 800a332:	220f      	movs	r2, #15
 800a334:	809a      	strh	r2, [r3, #4]
	break;
 800a336:	e06d      	b.n	800a414 <HMI_Evaluate_Setting_Data+0x134>
	case '2':
		myHMI.time = (str[2]-48)*100 + (str[3]-48)*10 + (str[4]-48);
 800a338:	687b      	ldr	r3, [r7, #4]
 800a33a:	3302      	adds	r3, #2
 800a33c:	781b      	ldrb	r3, [r3, #0]
 800a33e:	3b30      	subs	r3, #48	@ 0x30
 800a340:	b29b      	uxth	r3, r3
 800a342:	461a      	mov	r2, r3
 800a344:	0092      	lsls	r2, r2, #2
 800a346:	4413      	add	r3, r2
 800a348:	461a      	mov	r2, r3
 800a34a:	0091      	lsls	r1, r2, #2
 800a34c:	461a      	mov	r2, r3
 800a34e:	460b      	mov	r3, r1
 800a350:	4413      	add	r3, r2
 800a352:	009b      	lsls	r3, r3, #2
 800a354:	b29a      	uxth	r2, r3
 800a356:	687b      	ldr	r3, [r7, #4]
 800a358:	3303      	adds	r3, #3
 800a35a:	781b      	ldrb	r3, [r3, #0]
 800a35c:	3b30      	subs	r3, #48	@ 0x30
 800a35e:	b29b      	uxth	r3, r3
 800a360:	4619      	mov	r1, r3
 800a362:	0089      	lsls	r1, r1, #2
 800a364:	440b      	add	r3, r1
 800a366:	005b      	lsls	r3, r3, #1
 800a368:	b29b      	uxth	r3, r3
 800a36a:	4413      	add	r3, r2
 800a36c:	b29b      	uxth	r3, r3
 800a36e:	687a      	ldr	r2, [r7, #4]
 800a370:	3204      	adds	r2, #4
 800a372:	7812      	ldrb	r2, [r2, #0]
 800a374:	4413      	add	r3, r2
 800a376:	b29b      	uxth	r3, r3
 800a378:	3b30      	subs	r3, #48	@ 0x30
 800a37a:	b29a      	uxth	r2, r3
 800a37c:	4b28      	ldr	r3, [pc, #160]	@ (800a420 <HMI_Evaluate_Setting_Data+0x140>)
 800a37e:	80da      	strh	r2, [r3, #6]
	break;
 800a380:	e048      	b.n	800a414 <HMI_Evaluate_Setting_Data+0x134>
	case '3':
		myHMI.voltage = (str[2]-48)*100 + (str[3]-48)*10 + (str[4]-48);
 800a382:	687b      	ldr	r3, [r7, #4]
 800a384:	3302      	adds	r3, #2
 800a386:	781b      	ldrb	r3, [r3, #0]
 800a388:	3b30      	subs	r3, #48	@ 0x30
 800a38a:	b29b      	uxth	r3, r3
 800a38c:	461a      	mov	r2, r3
 800a38e:	0092      	lsls	r2, r2, #2
 800a390:	4413      	add	r3, r2
 800a392:	461a      	mov	r2, r3
 800a394:	0091      	lsls	r1, r2, #2
 800a396:	461a      	mov	r2, r3
 800a398:	460b      	mov	r3, r1
 800a39a:	4413      	add	r3, r2
 800a39c:	009b      	lsls	r3, r3, #2
 800a39e:	b29a      	uxth	r2, r3
 800a3a0:	687b      	ldr	r3, [r7, #4]
 800a3a2:	3303      	adds	r3, #3
 800a3a4:	781b      	ldrb	r3, [r3, #0]
 800a3a6:	3b30      	subs	r3, #48	@ 0x30
 800a3a8:	b29b      	uxth	r3, r3
 800a3aa:	4619      	mov	r1, r3
 800a3ac:	0089      	lsls	r1, r1, #2
 800a3ae:	440b      	add	r3, r1
 800a3b0:	005b      	lsls	r3, r3, #1
 800a3b2:	b29b      	uxth	r3, r3
 800a3b4:	4413      	add	r3, r2
 800a3b6:	b29b      	uxth	r3, r3
 800a3b8:	687a      	ldr	r2, [r7, #4]
 800a3ba:	3204      	adds	r2, #4
 800a3bc:	7812      	ldrb	r2, [r2, #0]
 800a3be:	4413      	add	r3, r2
 800a3c0:	b29b      	uxth	r3, r3
 800a3c2:	3b30      	subs	r3, #48	@ 0x30
 800a3c4:	b29a      	uxth	r2, r3
 800a3c6:	4b16      	ldr	r3, [pc, #88]	@ (800a420 <HMI_Evaluate_Setting_Data+0x140>)
 800a3c8:	805a      	strh	r2, [r3, #2]
		myHMI.current = (str[5]-48)*100 + (str[6]-48)*10 + (str[7]-48);
 800a3ca:	687b      	ldr	r3, [r7, #4]
 800a3cc:	3305      	adds	r3, #5
 800a3ce:	781b      	ldrb	r3, [r3, #0]
 800a3d0:	3b30      	subs	r3, #48	@ 0x30
 800a3d2:	b29b      	uxth	r3, r3
 800a3d4:	461a      	mov	r2, r3
 800a3d6:	0092      	lsls	r2, r2, #2
 800a3d8:	4413      	add	r3, r2
 800a3da:	461a      	mov	r2, r3
 800a3dc:	0091      	lsls	r1, r2, #2
 800a3de:	461a      	mov	r2, r3
 800a3e0:	460b      	mov	r3, r1
 800a3e2:	4413      	add	r3, r2
 800a3e4:	009b      	lsls	r3, r3, #2
 800a3e6:	b29a      	uxth	r2, r3
 800a3e8:	687b      	ldr	r3, [r7, #4]
 800a3ea:	3306      	adds	r3, #6
 800a3ec:	781b      	ldrb	r3, [r3, #0]
 800a3ee:	3b30      	subs	r3, #48	@ 0x30
 800a3f0:	b29b      	uxth	r3, r3
 800a3f2:	4619      	mov	r1, r3
 800a3f4:	0089      	lsls	r1, r1, #2
 800a3f6:	440b      	add	r3, r1
 800a3f8:	005b      	lsls	r3, r3, #1
 800a3fa:	b29b      	uxth	r3, r3
 800a3fc:	4413      	add	r3, r2
 800a3fe:	b29b      	uxth	r3, r3
 800a400:	687a      	ldr	r2, [r7, #4]
 800a402:	3207      	adds	r2, #7
 800a404:	7812      	ldrb	r2, [r2, #0]
 800a406:	4413      	add	r3, r2
 800a408:	b29b      	uxth	r3, r3
 800a40a:	3b30      	subs	r3, #48	@ 0x30
 800a40c:	b29a      	uxth	r2, r3
 800a40e:	4b04      	ldr	r3, [pc, #16]	@ (800a420 <HMI_Evaluate_Setting_Data+0x140>)
 800a410:	809a      	strh	r2, [r3, #4]
	break;
 800a412:	bf00      	nop
	}
}
 800a414:	bf00      	nop
 800a416:	370c      	adds	r7, #12
 800a418:	46bd      	mov	sp, r7
 800a41a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a41e:	4770      	bx	lr
 800a420:	200021a8 	.word	0x200021a8

0800a424 <HPGP_Fill_Address>:
/********** local prototypes *****************************************/
void HPGP_Compose_ATTEN_CHAR_RSP(void);
void HPGP_SLAC_Enter_State(int n);
void HPGP_Compose_SET_KEY_REQ(void);

void HPGP_Fill_Address(const uint8_t *mac, uint8_t offset) {
 800a424:	b580      	push	{r7, lr}
 800a426:	b082      	sub	sp, #8
 800a428:	af00      	add	r7, sp, #0
 800a42a:	6078      	str	r0, [r7, #4]
 800a42c:	460b      	mov	r3, r1
 800a42e:	70fb      	strb	r3, [r7, #3]
 /* at offset 0 in the ethernet frame, we have the destination MAC.
    we can give a different offset, to re-use the MAC also in the data area */
  memcpy(&eth_tx_buffer[offset], mac, 6);
 800a430:	78fb      	ldrb	r3, [r7, #3]
 800a432:	4a05      	ldr	r2, [pc, #20]	@ (800a448 <HPGP_Fill_Address+0x24>)
 800a434:	4413      	add	r3, r2
 800a436:	2206      	movs	r2, #6
 800a438:	6879      	ldr	r1, [r7, #4]
 800a43a:	4618      	mov	r0, r3
 800a43c:	f001 fba1 	bl	800bb82 <memcpy>
}
 800a440:	bf00      	nop
 800a442:	3708      	adds	r7, #8
 800a444:	46bd      	mov	sp, r7
 800a446:	bd80      	pop	{r7, pc}
 800a448:	20001e80 	.word	0x20001e80

0800a44c <HPGP_Get_MTYPE>:

/* Extracting the MTYPE from a received message. */
uint16_t HPGP_Get_MTYPE(uint8_t *eth_rx_buffer) {
 800a44c:	b480      	push	{r7}
 800a44e:	b085      	sub	sp, #20
 800a450:	af00      	add	r7, sp, #0
 800a452:	6078      	str	r0, [r7, #4]
  uint16_t mtype=0;
 800a454:	2300      	movs	r3, #0
 800a456:	81fb      	strh	r3, [r7, #14]
  mtype=eth_rx_buffer[12]*256 + eth_rx_buffer[13];
 800a458:	687b      	ldr	r3, [r7, #4]
 800a45a:	330c      	adds	r3, #12
 800a45c:	781b      	ldrb	r3, [r3, #0]
 800a45e:	021b      	lsls	r3, r3, #8
 800a460:	b29b      	uxth	r3, r3
 800a462:	687a      	ldr	r2, [r7, #4]
 800a464:	320d      	adds	r2, #13
 800a466:	7812      	ldrb	r2, [r2, #0]
 800a468:	4413      	add	r3, r2
 800a46a:	81fb      	strh	r3, [r7, #14]
  return mtype;
 800a46c:	89fb      	ldrh	r3, [r7, #14]
}
 800a46e:	4618      	mov	r0, r3
 800a470:	3714      	adds	r7, #20
 800a472:	46bd      	mov	sp, r7
 800a474:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a478:	4770      	bx	lr
	...

0800a47c <HPGP_Clean_Tx_Buffer>:

void HPGP_Clean_Tx_Buffer(void) {
 800a47c:	b480      	push	{r7}
 800a47e:	b083      	sub	sp, #12
 800a480:	af00      	add	r7, sp, #0
  /* fill the complete ethernet transmit buffer with 0x00 */
  int i;
  for (i=0; i<ETH_TRANSMIT_BUFFER_SIZE; i++) {
 800a482:	2300      	movs	r3, #0
 800a484:	607b      	str	r3, [r7, #4]
 800a486:	e007      	b.n	800a498 <HPGP_Clean_Tx_Buffer+0x1c>
    eth_tx_buffer[i]=0;
 800a488:	4a08      	ldr	r2, [pc, #32]	@ (800a4ac <HPGP_Clean_Tx_Buffer+0x30>)
 800a48a:	687b      	ldr	r3, [r7, #4]
 800a48c:	4413      	add	r3, r2
 800a48e:	2200      	movs	r2, #0
 800a490:	701a      	strb	r2, [r3, #0]
  for (i=0; i<ETH_TRANSMIT_BUFFER_SIZE; i++) {
 800a492:	687b      	ldr	r3, [r7, #4]
 800a494:	3301      	adds	r3, #1
 800a496:	607b      	str	r3, [r7, #4]
 800a498:	687b      	ldr	r3, [r7, #4]
 800a49a:	2bf9      	cmp	r3, #249	@ 0xf9
 800a49c:	ddf4      	ble.n	800a488 <HPGP_Clean_Tx_Buffer+0xc>
  }
}
 800a49e:	bf00      	nop
 800a4a0:	bf00      	nop
 800a4a2:	370c      	adds	r7, #12
 800a4a4:	46bd      	mov	sp, r7
 800a4a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4aa:	4770      	bx	lr
 800a4ac:	20001e80 	.word	0x20001e80

0800a4b0 <PEF_Get_Data>:

ev_parameter myEV;
evse_parameter myEVSE;

/* Parameter Exchanged Function */
void PEF_Get_Data(uint8_t *mac, uint8_t offset, uint8_t len) {
 800a4b0:	b580      	push	{r7, lr}
 800a4b2:	b082      	sub	sp, #8
 800a4b4:	af00      	add	r7, sp, #0
 800a4b6:	6078      	str	r0, [r7, #4]
 800a4b8:	460b      	mov	r3, r1
 800a4ba:	70fb      	strb	r3, [r7, #3]
 800a4bc:	4613      	mov	r3, r2
 800a4be:	70bb      	strb	r3, [r7, #2]
	memcpy(mac, &eth_rx_buffer[offset], len);
 800a4c0:	78fb      	ldrb	r3, [r7, #3]
 800a4c2:	4a05      	ldr	r2, [pc, #20]	@ (800a4d8 <PEF_Get_Data+0x28>)
 800a4c4:	4413      	add	r3, r2
 800a4c6:	78ba      	ldrb	r2, [r7, #2]
 800a4c8:	4619      	mov	r1, r3
 800a4ca:	6878      	ldr	r0, [r7, #4]
 800a4cc:	f001 fb59 	bl	800bb82 <memcpy>
}
 800a4d0:	bf00      	nop
 800a4d2:	3708      	adds	r7, #8
 800a4d4:	46bd      	mov	sp, r7
 800a4d6:	bd80      	pop	{r7, pc}
 800a4d8:	20001f7c 	.word	0x20001f7c

0800a4dc <PEF_Compose_Initialization_Cnf>:
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
	eth_tx_buffer[28] = 0x00;
	// Body
}

void PEF_Compose_Initialization_Cnf(void) {
 800a4dc:	b580      	push	{r7, lr}
 800a4de:	af00      	add	r7, sp, #0
	/* Initialization Confirm */
	eth_tx_size = 60;
 800a4e0:	4b19      	ldr	r3, [pc, #100]	@ (800a548 <PEF_Compose_Initialization_Cnf+0x6c>)
 800a4e2:	223c      	movs	r2, #60	@ 0x3c
 800a4e4:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800a4e6:	f7ff ffc9 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800a4ea:	2100      	movs	r1, #0
 800a4ec:	4817      	ldr	r0, [pc, #92]	@ (800a54c <PEF_Compose_Initialization_Cnf+0x70>)
 800a4ee:	f7ff ff99 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evseID, 6);
 800a4f2:	2106      	movs	r1, #6
 800a4f4:	4816      	ldr	r0, [pc, #88]	@ (800a550 <PEF_Compose_Initialization_Cnf+0x74>)
 800a4f6:	f7ff ff95 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800a4fa:	4b16      	ldr	r3, [pc, #88]	@ (800a554 <PEF_Compose_Initialization_Cnf+0x78>)
 800a4fc:	2288      	movs	r2, #136	@ 0x88
 800a4fe:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800a500:	4b14      	ldr	r3, [pc, #80]	@ (800a554 <PEF_Compose_Initialization_Cnf+0x78>)
 800a502:	22e1      	movs	r2, #225	@ 0xe1
 800a504:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800a506:	4b13      	ldr	r3, [pc, #76]	@ (800a554 <PEF_Compose_Initialization_Cnf+0x78>)
 800a508:	2201      	movs	r2, #1
 800a50a:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE1; // EXCHANGE_DATA
 800a50c:	4b11      	ldr	r3, [pc, #68]	@ (800a554 <PEF_Compose_Initialization_Cnf+0x78>)
 800a50e:	22e1      	movs	r2, #225	@ 0xe1
 800a510:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800a512:	4b10      	ldr	r3, [pc, #64]	@ (800a554 <PEF_Compose_Initialization_Cnf+0x78>)
 800a514:	2260      	movs	r2, #96	@ 0x60
 800a516:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800a518:	4b0e      	ldr	r3, [pc, #56]	@ (800a554 <PEF_Compose_Initialization_Cnf+0x78>)
 800a51a:	2200      	movs	r2, #0
 800a51c:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800a51e:	4b0d      	ldr	r3, [pc, #52]	@ (800a554 <PEF_Compose_Initialization_Cnf+0x78>)
 800a520:	2200      	movs	r2, #0
 800a522:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800a524:	2113      	movs	r1, #19
 800a526:	480c      	ldr	r0, [pc, #48]	@ (800a558 <PEF_Compose_Initialization_Cnf+0x7c>)
 800a528:	f7ff ff7c 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xB0; // Session + State
 800a52c:	4b09      	ldr	r3, [pc, #36]	@ (800a554 <PEF_Compose_Initialization_Cnf+0x78>)
 800a52e:	22b0      	movs	r2, #176	@ 0xb0
 800a530:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x01; // Function + Message Type
 800a532:	4b08      	ldr	r3, [pc, #32]	@ (800a554 <PEF_Compose_Initialization_Cnf+0x78>)
 800a534:	2201      	movs	r2, #1
 800a536:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800a538:	4b06      	ldr	r3, [pc, #24]	@ (800a554 <PEF_Compose_Initialization_Cnf+0x78>)
 800a53a:	2200      	movs	r2, #0
 800a53c:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800a53e:	4b05      	ldr	r3, [pc, #20]	@ (800a554 <PEF_Compose_Initialization_Cnf+0x78>)
 800a540:	2200      	movs	r2, #0
 800a542:	771a      	strb	r2, [r3, #28]
	// Body
}
 800a544:	bf00      	nop
 800a546:	bd80      	pop	{r7, pc}
 800a548:	20001f7a 	.word	0x20001f7a
 800a54c:	200021b0 	.word	0x200021b0
 800a550:	20000028 	.word	0x20000028
 800a554:	20001e80 	.word	0x20001e80
 800a558:	20000018 	.word	0x20000018

0800a55c <PEF_Evaluate_Initialization>:

void PEF_Evaluate_Initialization(void) {
 800a55c:	b580      	push	{r7, lr}
 800a55e:	af00      	add	r7, sp, #0
	PEF_Get_Data(yourID, 6, 6);
 800a560:	2206      	movs	r2, #6
 800a562:	2106      	movs	r1, #6
 800a564:	4804      	ldr	r0, [pc, #16]	@ (800a578 <PEF_Evaluate_Initialization+0x1c>)
 800a566:	f7ff ffa3 	bl	800a4b0 <PEF_Get_Data>
	PEF_Get_Data(sessionID, 19, 6);
 800a56a:	2206      	movs	r2, #6
 800a56c:	2113      	movs	r1, #19
 800a56e:	4803      	ldr	r0, [pc, #12]	@ (800a57c <PEF_Evaluate_Initialization+0x20>)
 800a570:	f7ff ff9e 	bl	800a4b0 <PEF_Get_Data>
}
 800a574:	bf00      	nop
 800a576:	bd80      	pop	{r7, pc}
 800a578:	200021b0 	.word	0x200021b0
 800a57c:	20000018 	.word	0x20000018

0800a580 <PEF_Compose_Parameter_Exchange_Req>:

void PEF_Compose_Parameter_Exchange_Req(void) {
 800a580:	b580      	push	{r7, lr}
 800a582:	af00      	add	r7, sp, #0
	myEV.control_protocol_number = 0xAA;
 800a584:	4b43      	ldr	r3, [pc, #268]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a586:	22aa      	movs	r2, #170	@ 0xaa
 800a588:	701a      	strb	r2, [r3, #0]
	myEV.rate_capacity_battery = 0x3A;
 800a58a:	4b42      	ldr	r3, [pc, #264]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a58c:	223a      	movs	r2, #58	@ 0x3a
 800a58e:	705a      	strb	r2, [r3, #1]
	myEV.current_battery = 0x14;
 800a590:	4b40      	ldr	r3, [pc, #256]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a592:	2214      	movs	r2, #20
 800a594:	809a      	strh	r2, [r3, #4]
	myEV.max_battery = 0x0320;
 800a596:	4b3f      	ldr	r3, [pc, #252]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a598:	f44f 7248 	mov.w	r2, #800	@ 0x320
 800a59c:	80da      	strh	r2, [r3, #6]
	myEV.max_charging_time = 0x0258;
 800a59e:	4b3d      	ldr	r3, [pc, #244]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a5a0:	f44f 7216 	mov.w	r2, #600	@ 0x258
 800a5a4:	811a      	strh	r2, [r3, #8]
	myEV.target_battery_voltage = 0x00C8;
 800a5a6:	4b3b      	ldr	r3, [pc, #236]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a5a8:	22c8      	movs	r2, #200	@ 0xc8
 800a5aa:	815a      	strh	r2, [r3, #10]
	myEV.vehicle_charging_enabled = 0xAA;
 800a5ac:	4b39      	ldr	r3, [pc, #228]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a5ae:	22aa      	movs	r2, #170	@ 0xaa
 800a5b0:	731a      	strb	r2, [r3, #12]

	/* Parameter Exchange Request */
	eth_tx_size = 60;
 800a5b2:	4b39      	ldr	r3, [pc, #228]	@ (800a698 <PEF_Compose_Parameter_Exchange_Req+0x118>)
 800a5b4:	223c      	movs	r2, #60	@ 0x3c
 800a5b6:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800a5b8:	f7ff ff60 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800a5bc:	2100      	movs	r1, #0
 800a5be:	4837      	ldr	r0, [pc, #220]	@ (800a69c <PEF_Compose_Parameter_Exchange_Req+0x11c>)
 800a5c0:	f7ff ff30 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evID, 6);
 800a5c4:	2106      	movs	r1, #6
 800a5c6:	4836      	ldr	r0, [pc, #216]	@ (800a6a0 <PEF_Compose_Parameter_Exchange_Req+0x120>)
 800a5c8:	f7ff ff2c 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800a5cc:	4b35      	ldr	r3, [pc, #212]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a5ce:	2288      	movs	r2, #136	@ 0x88
 800a5d0:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800a5d2:	4b34      	ldr	r3, [pc, #208]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a5d4:	22e1      	movs	r2, #225	@ 0xe1
 800a5d6:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800a5d8:	4b32      	ldr	r3, [pc, #200]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a5da:	2201      	movs	r2, #1
 800a5dc:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800a5de:	4b31      	ldr	r3, [pc, #196]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a5e0:	22e0      	movs	r2, #224	@ 0xe0
 800a5e2:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800a5e4:	4b2f      	ldr	r3, [pc, #188]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a5e6:	2260      	movs	r2, #96	@ 0x60
 800a5e8:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800a5ea:	4b2e      	ldr	r3, [pc, #184]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a5ec:	2200      	movs	r2, #0
 800a5ee:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800a5f0:	4b2c      	ldr	r3, [pc, #176]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a5f2:	2200      	movs	r2, #0
 800a5f4:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800a5f6:	2113      	movs	r1, #19
 800a5f8:	482b      	ldr	r0, [pc, #172]	@ (800a6a8 <PEF_Compose_Parameter_Exchange_Req+0x128>)
 800a5fa:	f7ff ff13 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xB0; // Session + State
 800a5fe:	4b29      	ldr	r3, [pc, #164]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a600:	22b0      	movs	r2, #176	@ 0xb0
 800a602:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x04; // Function + Message Type
 800a604:	4b27      	ldr	r3, [pc, #156]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a606:	2204      	movs	r2, #4
 800a608:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800a60a:	4b26      	ldr	r3, [pc, #152]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a60c:	2200      	movs	r2, #0
 800a60e:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800a610:	4b24      	ldr	r3, [pc, #144]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a612:	2200      	movs	r2, #0
 800a614:	771a      	strb	r2, [r3, #28]
	// Body
	eth_tx_buffer[29] = myEV.control_protocol_number;
 800a616:	4b1f      	ldr	r3, [pc, #124]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a618:	781a      	ldrb	r2, [r3, #0]
 800a61a:	4b22      	ldr	r3, [pc, #136]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a61c:	775a      	strb	r2, [r3, #29]
	eth_tx_buffer[30] = myEV.rate_capacity_battery;
 800a61e:	4b1d      	ldr	r3, [pc, #116]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a620:	785a      	ldrb	r2, [r3, #1]
 800a622:	4b20      	ldr	r3, [pc, #128]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a624:	779a      	strb	r2, [r3, #30]
	eth_tx_buffer[31] = myEV.current_battery;
 800a626:	4b1b      	ldr	r3, [pc, #108]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a628:	889b      	ldrh	r3, [r3, #4]
 800a62a:	b2da      	uxtb	r2, r3
 800a62c:	4b1d      	ldr	r3, [pc, #116]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a62e:	77da      	strb	r2, [r3, #31]
	eth_tx_buffer[32] = (myEV.max_battery >> 8);
 800a630:	4b18      	ldr	r3, [pc, #96]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a632:	88db      	ldrh	r3, [r3, #6]
 800a634:	0a1b      	lsrs	r3, r3, #8
 800a636:	b29b      	uxth	r3, r3
 800a638:	b2da      	uxtb	r2, r3
 800a63a:	4b1a      	ldr	r3, [pc, #104]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a63c:	f883 2020 	strb.w	r2, [r3, #32]
	eth_tx_buffer[33] = myEV.max_battery;
 800a640:	4b14      	ldr	r3, [pc, #80]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a642:	88db      	ldrh	r3, [r3, #6]
 800a644:	b2da      	uxtb	r2, r3
 800a646:	4b17      	ldr	r3, [pc, #92]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a648:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
	eth_tx_buffer[34] = (myEV.max_charging_time >> 8);
 800a64c:	4b11      	ldr	r3, [pc, #68]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a64e:	891b      	ldrh	r3, [r3, #8]
 800a650:	0a1b      	lsrs	r3, r3, #8
 800a652:	b29b      	uxth	r3, r3
 800a654:	b2da      	uxtb	r2, r3
 800a656:	4b13      	ldr	r3, [pc, #76]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a658:	f883 2022 	strb.w	r2, [r3, #34]	@ 0x22
	eth_tx_buffer[35] = myEV.max_charging_time;
 800a65c:	4b0d      	ldr	r3, [pc, #52]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a65e:	891b      	ldrh	r3, [r3, #8]
 800a660:	b2da      	uxtb	r2, r3
 800a662:	4b10      	ldr	r3, [pc, #64]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a664:	f883 2023 	strb.w	r2, [r3, #35]	@ 0x23
	eth_tx_buffer[36] = (myEV.target_battery_voltage >> 8);
 800a668:	4b0a      	ldr	r3, [pc, #40]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a66a:	895b      	ldrh	r3, [r3, #10]
 800a66c:	0a1b      	lsrs	r3, r3, #8
 800a66e:	b29b      	uxth	r3, r3
 800a670:	b2da      	uxtb	r2, r3
 800a672:	4b0c      	ldr	r3, [pc, #48]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a674:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
	eth_tx_buffer[37] = myEV.target_battery_voltage;
 800a678:	4b06      	ldr	r3, [pc, #24]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a67a:	895b      	ldrh	r3, [r3, #10]
 800a67c:	b2da      	uxtb	r2, r3
 800a67e:	4b09      	ldr	r3, [pc, #36]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a680:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
	eth_tx_buffer[38] = myEV.vehicle_charging_enabled;
 800a684:	4b03      	ldr	r3, [pc, #12]	@ (800a694 <PEF_Compose_Parameter_Exchange_Req+0x114>)
 800a686:	7b1a      	ldrb	r2, [r3, #12]
 800a688:	4b06      	ldr	r3, [pc, #24]	@ (800a6a4 <PEF_Compose_Parameter_Exchange_Req+0x124>)
 800a68a:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
}
 800a68e:	bf00      	nop
 800a690:	bd80      	pop	{r7, pc}
 800a692:	bf00      	nop
 800a694:	200021b8 	.word	0x200021b8
 800a698:	20001f7a 	.word	0x20001f7a
 800a69c:	200021b0 	.word	0x200021b0
 800a6a0:	20000020 	.word	0x20000020
 800a6a4:	20001e80 	.word	0x20001e80
 800a6a8:	20000018 	.word	0x20000018

0800a6ac <PEF_Compose_Parameter_Exchange_Res>:

void PEF_Compose_Parameter_Exchange_Res(void) {
 800a6ac:	b580      	push	{r7, lr}
 800a6ae:	af00      	add	r7, sp, #0
	myEVSE.control_protocol_number = 0xAA;
 800a6b0:	4b31      	ldr	r3, [pc, #196]	@ (800a778 <PEF_Compose_Parameter_Exchange_Res+0xcc>)
 800a6b2:	22aa      	movs	r2, #170	@ 0xaa
 800a6b4:	701a      	strb	r2, [r3, #0]
	myEVSE.available_output_voltage = 0x0190;
 800a6b6:	4b30      	ldr	r3, [pc, #192]	@ (800a778 <PEF_Compose_Parameter_Exchange_Res+0xcc>)
 800a6b8:	f44f 72c8 	mov.w	r2, #400	@ 0x190
 800a6bc:	805a      	strh	r2, [r3, #2]
	myEVSE.available_output_current = 0x0032;
 800a6be:	4b2e      	ldr	r3, [pc, #184]	@ (800a778 <PEF_Compose_Parameter_Exchange_Res+0xcc>)
 800a6c0:	2232      	movs	r2, #50	@ 0x32
 800a6c2:	809a      	strh	r2, [r3, #4]
	myEVSE.battery_incompability = 0xAA;
 800a6c4:	4b2c      	ldr	r3, [pc, #176]	@ (800a778 <PEF_Compose_Parameter_Exchange_Res+0xcc>)
 800a6c6:	22aa      	movs	r2, #170	@ 0xaa
 800a6c8:	719a      	strb	r2, [r3, #6]

	/* Parameter Exchange Response */
	eth_tx_size = 60;
 800a6ca:	4b2c      	ldr	r3, [pc, #176]	@ (800a77c <PEF_Compose_Parameter_Exchange_Res+0xd0>)
 800a6cc:	223c      	movs	r2, #60	@ 0x3c
 800a6ce:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800a6d0:	f7ff fed4 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800a6d4:	2100      	movs	r1, #0
 800a6d6:	482a      	ldr	r0, [pc, #168]	@ (800a780 <PEF_Compose_Parameter_Exchange_Res+0xd4>)
 800a6d8:	f7ff fea4 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evseID, 6);
 800a6dc:	2106      	movs	r1, #6
 800a6de:	4829      	ldr	r0, [pc, #164]	@ (800a784 <PEF_Compose_Parameter_Exchange_Res+0xd8>)
 800a6e0:	f7ff fea0 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800a6e4:	4b28      	ldr	r3, [pc, #160]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a6e6:	2288      	movs	r2, #136	@ 0x88
 800a6e8:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800a6ea:	4b27      	ldr	r3, [pc, #156]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a6ec:	22e1      	movs	r2, #225	@ 0xe1
 800a6ee:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800a6f0:	4b25      	ldr	r3, [pc, #148]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a6f2:	2201      	movs	r2, #1
 800a6f4:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800a6f6:	4b24      	ldr	r3, [pc, #144]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a6f8:	22e0      	movs	r2, #224	@ 0xe0
 800a6fa:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800a6fc:	4b22      	ldr	r3, [pc, #136]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a6fe:	2260      	movs	r2, #96	@ 0x60
 800a700:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800a702:	4b21      	ldr	r3, [pc, #132]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a704:	2200      	movs	r2, #0
 800a706:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800a708:	4b1f      	ldr	r3, [pc, #124]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a70a:	2200      	movs	r2, #0
 800a70c:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800a70e:	2113      	movs	r1, #19
 800a710:	481e      	ldr	r0, [pc, #120]	@ (800a78c <PEF_Compose_Parameter_Exchange_Res+0xe0>)
 800a712:	f7ff fe87 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xB0; // Session + State
 800a716:	4b1c      	ldr	r3, [pc, #112]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a718:	22b0      	movs	r2, #176	@ 0xb0
 800a71a:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x07; // Function + Message Type
 800a71c:	4b1a      	ldr	r3, [pc, #104]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a71e:	2207      	movs	r2, #7
 800a720:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800a722:	4b19      	ldr	r3, [pc, #100]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a724:	2200      	movs	r2, #0
 800a726:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800a728:	4b17      	ldr	r3, [pc, #92]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a72a:	2200      	movs	r2, #0
 800a72c:	771a      	strb	r2, [r3, #28]
	// Body
	eth_tx_buffer[29] = myEVSE.control_protocol_number;
 800a72e:	4b12      	ldr	r3, [pc, #72]	@ (800a778 <PEF_Compose_Parameter_Exchange_Res+0xcc>)
 800a730:	781a      	ldrb	r2, [r3, #0]
 800a732:	4b15      	ldr	r3, [pc, #84]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a734:	775a      	strb	r2, [r3, #29]
	eth_tx_buffer[30] = (myEVSE.available_output_voltage >> 8);
 800a736:	4b10      	ldr	r3, [pc, #64]	@ (800a778 <PEF_Compose_Parameter_Exchange_Res+0xcc>)
 800a738:	885b      	ldrh	r3, [r3, #2]
 800a73a:	0a1b      	lsrs	r3, r3, #8
 800a73c:	b29b      	uxth	r3, r3
 800a73e:	b2da      	uxtb	r2, r3
 800a740:	4b11      	ldr	r3, [pc, #68]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a742:	779a      	strb	r2, [r3, #30]
	eth_tx_buffer[31] = myEVSE.available_output_voltage;
 800a744:	4b0c      	ldr	r3, [pc, #48]	@ (800a778 <PEF_Compose_Parameter_Exchange_Res+0xcc>)
 800a746:	885b      	ldrh	r3, [r3, #2]
 800a748:	b2da      	uxtb	r2, r3
 800a74a:	4b0f      	ldr	r3, [pc, #60]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a74c:	77da      	strb	r2, [r3, #31]
	eth_tx_buffer[32] = (myEVSE.available_output_current >> 8);
 800a74e:	4b0a      	ldr	r3, [pc, #40]	@ (800a778 <PEF_Compose_Parameter_Exchange_Res+0xcc>)
 800a750:	889b      	ldrh	r3, [r3, #4]
 800a752:	0a1b      	lsrs	r3, r3, #8
 800a754:	b29b      	uxth	r3, r3
 800a756:	b2da      	uxtb	r2, r3
 800a758:	4b0b      	ldr	r3, [pc, #44]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a75a:	f883 2020 	strb.w	r2, [r3, #32]
	eth_tx_buffer[33] = myEVSE.available_output_current;
 800a75e:	4b06      	ldr	r3, [pc, #24]	@ (800a778 <PEF_Compose_Parameter_Exchange_Res+0xcc>)
 800a760:	889b      	ldrh	r3, [r3, #4]
 800a762:	b2da      	uxtb	r2, r3
 800a764:	4b08      	ldr	r3, [pc, #32]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a766:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
	eth_tx_buffer[34] = myEVSE.battery_incompability;
 800a76a:	4b03      	ldr	r3, [pc, #12]	@ (800a778 <PEF_Compose_Parameter_Exchange_Res+0xcc>)
 800a76c:	799a      	ldrb	r2, [r3, #6]
 800a76e:	4b06      	ldr	r3, [pc, #24]	@ (800a788 <PEF_Compose_Parameter_Exchange_Res+0xdc>)
 800a770:	f883 2022 	strb.w	r2, [r3, #34]	@ 0x22
}
 800a774:	bf00      	nop
 800a776:	bd80      	pop	{r7, pc}
 800a778:	200021cc 	.word	0x200021cc
 800a77c:	20001f7a 	.word	0x20001f7a
 800a780:	200021b0 	.word	0x200021b0
 800a784:	20000028 	.word	0x20000028
 800a788:	20001e80 	.word	0x20001e80
 800a78c:	20000018 	.word	0x20000018

0800a790 <PEF_Compose_Parameter_Exchange_Cnf>:

void PEF_Compose_Parameter_Exchange_Cnf(void) {
 800a790:	b580      	push	{r7, lr}
 800a792:	af00      	add	r7, sp, #0
	/* Parameter Exchange Confirm */
	eth_tx_size = 60;
 800a794:	4b19      	ldr	r3, [pc, #100]	@ (800a7fc <PEF_Compose_Parameter_Exchange_Cnf+0x6c>)
 800a796:	223c      	movs	r2, #60	@ 0x3c
 800a798:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800a79a:	f7ff fe6f 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800a79e:	2100      	movs	r1, #0
 800a7a0:	4817      	ldr	r0, [pc, #92]	@ (800a800 <PEF_Compose_Parameter_Exchange_Cnf+0x70>)
 800a7a2:	f7ff fe3f 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evID, 6);
 800a7a6:	2106      	movs	r1, #6
 800a7a8:	4816      	ldr	r0, [pc, #88]	@ (800a804 <PEF_Compose_Parameter_Exchange_Cnf+0x74>)
 800a7aa:	f7ff fe3b 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800a7ae:	4b16      	ldr	r3, [pc, #88]	@ (800a808 <PEF_Compose_Parameter_Exchange_Cnf+0x78>)
 800a7b0:	2288      	movs	r2, #136	@ 0x88
 800a7b2:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800a7b4:	4b14      	ldr	r3, [pc, #80]	@ (800a808 <PEF_Compose_Parameter_Exchange_Cnf+0x78>)
 800a7b6:	22e1      	movs	r2, #225	@ 0xe1
 800a7b8:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800a7ba:	4b13      	ldr	r3, [pc, #76]	@ (800a808 <PEF_Compose_Parameter_Exchange_Cnf+0x78>)
 800a7bc:	2201      	movs	r2, #1
 800a7be:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800a7c0:	4b11      	ldr	r3, [pc, #68]	@ (800a808 <PEF_Compose_Parameter_Exchange_Cnf+0x78>)
 800a7c2:	22e0      	movs	r2, #224	@ 0xe0
 800a7c4:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800a7c6:	4b10      	ldr	r3, [pc, #64]	@ (800a808 <PEF_Compose_Parameter_Exchange_Cnf+0x78>)
 800a7c8:	2260      	movs	r2, #96	@ 0x60
 800a7ca:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800a7cc:	4b0e      	ldr	r3, [pc, #56]	@ (800a808 <PEF_Compose_Parameter_Exchange_Cnf+0x78>)
 800a7ce:	2200      	movs	r2, #0
 800a7d0:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800a7d2:	4b0d      	ldr	r3, [pc, #52]	@ (800a808 <PEF_Compose_Parameter_Exchange_Cnf+0x78>)
 800a7d4:	2200      	movs	r2, #0
 800a7d6:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800a7d8:	2113      	movs	r1, #19
 800a7da:	480c      	ldr	r0, [pc, #48]	@ (800a80c <PEF_Compose_Parameter_Exchange_Cnf+0x7c>)
 800a7dc:	f7ff fe22 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xB0; // Session + State
 800a7e0:	4b09      	ldr	r3, [pc, #36]	@ (800a808 <PEF_Compose_Parameter_Exchange_Cnf+0x78>)
 800a7e2:	22b0      	movs	r2, #176	@ 0xb0
 800a7e4:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x05; // Function + Message Type
 800a7e6:	4b08      	ldr	r3, [pc, #32]	@ (800a808 <PEF_Compose_Parameter_Exchange_Cnf+0x78>)
 800a7e8:	2205      	movs	r2, #5
 800a7ea:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800a7ec:	4b06      	ldr	r3, [pc, #24]	@ (800a808 <PEF_Compose_Parameter_Exchange_Cnf+0x78>)
 800a7ee:	2200      	movs	r2, #0
 800a7f0:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800a7f2:	4b05      	ldr	r3, [pc, #20]	@ (800a808 <PEF_Compose_Parameter_Exchange_Cnf+0x78>)
 800a7f4:	2200      	movs	r2, #0
 800a7f6:	771a      	strb	r2, [r3, #28]
	// Body
}
 800a7f8:	bf00      	nop
 800a7fa:	bd80      	pop	{r7, pc}
 800a7fc:	20001f7a 	.word	0x20001f7a
 800a800:	200021b0 	.word	0x200021b0
 800a804:	20000020 	.word	0x20000020
 800a808:	20001e80 	.word	0x20001e80
 800a80c:	20000018 	.word	0x20000018

0800a810 <PEF_Evaluate_Parameter_Exchange_Req>:

void PEF_Evaluate_Parameter_Exchange_Req(void) {
 800a810:	b480      	push	{r7}
 800a812:	af00      	add	r7, sp, #0
	myEV.control_protocol_number = eth_rx_buffer[29];
 800a814:	4b1d      	ldr	r3, [pc, #116]	@ (800a88c <PEF_Evaluate_Parameter_Exchange_Req+0x7c>)
 800a816:	7f5a      	ldrb	r2, [r3, #29]
 800a818:	4b1d      	ldr	r3, [pc, #116]	@ (800a890 <PEF_Evaluate_Parameter_Exchange_Req+0x80>)
 800a81a:	701a      	strb	r2, [r3, #0]
	myEV.rate_capacity_battery = eth_rx_buffer[30];
 800a81c:	4b1b      	ldr	r3, [pc, #108]	@ (800a88c <PEF_Evaluate_Parameter_Exchange_Req+0x7c>)
 800a81e:	7f9a      	ldrb	r2, [r3, #30]
 800a820:	4b1b      	ldr	r3, [pc, #108]	@ (800a890 <PEF_Evaluate_Parameter_Exchange_Req+0x80>)
 800a822:	705a      	strb	r2, [r3, #1]
	myEV.current_battery = eth_rx_buffer[31];
 800a824:	4b19      	ldr	r3, [pc, #100]	@ (800a88c <PEF_Evaluate_Parameter_Exchange_Req+0x7c>)
 800a826:	7fdb      	ldrb	r3, [r3, #31]
 800a828:	461a      	mov	r2, r3
 800a82a:	4b19      	ldr	r3, [pc, #100]	@ (800a890 <PEF_Evaluate_Parameter_Exchange_Req+0x80>)
 800a82c:	809a      	strh	r2, [r3, #4]
	myEV.max_battery = (eth_rx_buffer[32] << 8) + eth_rx_buffer[33];
 800a82e:	4b17      	ldr	r3, [pc, #92]	@ (800a88c <PEF_Evaluate_Parameter_Exchange_Req+0x7c>)
 800a830:	f893 3020 	ldrb.w	r3, [r3, #32]
 800a834:	021b      	lsls	r3, r3, #8
 800a836:	b29b      	uxth	r3, r3
 800a838:	4a14      	ldr	r2, [pc, #80]	@ (800a88c <PEF_Evaluate_Parameter_Exchange_Req+0x7c>)
 800a83a:	f892 2021 	ldrb.w	r2, [r2, #33]	@ 0x21
 800a83e:	4413      	add	r3, r2
 800a840:	b29a      	uxth	r2, r3
 800a842:	4b13      	ldr	r3, [pc, #76]	@ (800a890 <PEF_Evaluate_Parameter_Exchange_Req+0x80>)
 800a844:	80da      	strh	r2, [r3, #6]
	myEV.max_charging_time = (eth_rx_buffer[34] << 8) + eth_rx_buffer[35];
 800a846:	4b11      	ldr	r3, [pc, #68]	@ (800a88c <PEF_Evaluate_Parameter_Exchange_Req+0x7c>)
 800a848:	f893 3022 	ldrb.w	r3, [r3, #34]	@ 0x22
 800a84c:	021b      	lsls	r3, r3, #8
 800a84e:	b29b      	uxth	r3, r3
 800a850:	4a0e      	ldr	r2, [pc, #56]	@ (800a88c <PEF_Evaluate_Parameter_Exchange_Req+0x7c>)
 800a852:	f892 2023 	ldrb.w	r2, [r2, #35]	@ 0x23
 800a856:	4413      	add	r3, r2
 800a858:	b29a      	uxth	r2, r3
 800a85a:	4b0d      	ldr	r3, [pc, #52]	@ (800a890 <PEF_Evaluate_Parameter_Exchange_Req+0x80>)
 800a85c:	811a      	strh	r2, [r3, #8]
	myEV.target_battery_voltage = (eth_rx_buffer[36] << 8) + eth_rx_buffer[37];
 800a85e:	4b0b      	ldr	r3, [pc, #44]	@ (800a88c <PEF_Evaluate_Parameter_Exchange_Req+0x7c>)
 800a860:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800a864:	021b      	lsls	r3, r3, #8
 800a866:	b29b      	uxth	r3, r3
 800a868:	4a08      	ldr	r2, [pc, #32]	@ (800a88c <PEF_Evaluate_Parameter_Exchange_Req+0x7c>)
 800a86a:	f892 2025 	ldrb.w	r2, [r2, #37]	@ 0x25
 800a86e:	4413      	add	r3, r2
 800a870:	b29a      	uxth	r2, r3
 800a872:	4b07      	ldr	r3, [pc, #28]	@ (800a890 <PEF_Evaluate_Parameter_Exchange_Req+0x80>)
 800a874:	815a      	strh	r2, [r3, #10]
	myEV.vehicle_charging_enabled = eth_rx_buffer[38];
 800a876:	4b05      	ldr	r3, [pc, #20]	@ (800a88c <PEF_Evaluate_Parameter_Exchange_Req+0x7c>)
 800a878:	f893 2026 	ldrb.w	r2, [r3, #38]	@ 0x26
 800a87c:	4b04      	ldr	r3, [pc, #16]	@ (800a890 <PEF_Evaluate_Parameter_Exchange_Req+0x80>)
 800a87e:	731a      	strb	r2, [r3, #12]
}
 800a880:	bf00      	nop
 800a882:	46bd      	mov	sp, r7
 800a884:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a888:	4770      	bx	lr
 800a88a:	bf00      	nop
 800a88c:	20001f7c 	.word	0x20001f7c
 800a890:	200021b8 	.word	0x200021b8

0800a894 <PEF_Evaluate_Parameter_Exchange_Res>:

void PEF_Evaluate_Parameter_Exchange_Res(void) {
 800a894:	b480      	push	{r7}
 800a896:	af00      	add	r7, sp, #0
	myEVSE.control_protocol_number = eth_rx_buffer[29];
 800a898:	4b11      	ldr	r3, [pc, #68]	@ (800a8e0 <PEF_Evaluate_Parameter_Exchange_Res+0x4c>)
 800a89a:	7f5a      	ldrb	r2, [r3, #29]
 800a89c:	4b11      	ldr	r3, [pc, #68]	@ (800a8e4 <PEF_Evaluate_Parameter_Exchange_Res+0x50>)
 800a89e:	701a      	strb	r2, [r3, #0]
	myEVSE.available_output_voltage = (eth_rx_buffer[30] << 8)
 800a8a0:	4b0f      	ldr	r3, [pc, #60]	@ (800a8e0 <PEF_Evaluate_Parameter_Exchange_Res+0x4c>)
 800a8a2:	7f9b      	ldrb	r3, [r3, #30]
 800a8a4:	021b      	lsls	r3, r3, #8
 800a8a6:	b29b      	uxth	r3, r3
			+ eth_rx_buffer[31];
 800a8a8:	4a0d      	ldr	r2, [pc, #52]	@ (800a8e0 <PEF_Evaluate_Parameter_Exchange_Res+0x4c>)
 800a8aa:	7fd2      	ldrb	r2, [r2, #31]
 800a8ac:	4413      	add	r3, r2
 800a8ae:	b29a      	uxth	r2, r3
	myEVSE.available_output_voltage = (eth_rx_buffer[30] << 8)
 800a8b0:	4b0c      	ldr	r3, [pc, #48]	@ (800a8e4 <PEF_Evaluate_Parameter_Exchange_Res+0x50>)
 800a8b2:	805a      	strh	r2, [r3, #2]
	myEVSE.available_output_current = (eth_rx_buffer[32] << 8)
 800a8b4:	4b0a      	ldr	r3, [pc, #40]	@ (800a8e0 <PEF_Evaluate_Parameter_Exchange_Res+0x4c>)
 800a8b6:	f893 3020 	ldrb.w	r3, [r3, #32]
 800a8ba:	021b      	lsls	r3, r3, #8
 800a8bc:	b29b      	uxth	r3, r3
			+ eth_rx_buffer[33];
 800a8be:	4a08      	ldr	r2, [pc, #32]	@ (800a8e0 <PEF_Evaluate_Parameter_Exchange_Res+0x4c>)
 800a8c0:	f892 2021 	ldrb.w	r2, [r2, #33]	@ 0x21
 800a8c4:	4413      	add	r3, r2
 800a8c6:	b29a      	uxth	r2, r3
	myEVSE.available_output_current = (eth_rx_buffer[32] << 8)
 800a8c8:	4b06      	ldr	r3, [pc, #24]	@ (800a8e4 <PEF_Evaluate_Parameter_Exchange_Res+0x50>)
 800a8ca:	809a      	strh	r2, [r3, #4]
	myEVSE.battery_incompability = eth_rx_buffer[34];
 800a8cc:	4b04      	ldr	r3, [pc, #16]	@ (800a8e0 <PEF_Evaluate_Parameter_Exchange_Res+0x4c>)
 800a8ce:	f893 2022 	ldrb.w	r2, [r3, #34]	@ 0x22
 800a8d2:	4b04      	ldr	r3, [pc, #16]	@ (800a8e4 <PEF_Evaluate_Parameter_Exchange_Res+0x50>)
 800a8d4:	719a      	strb	r2, [r3, #6]
}
 800a8d6:	bf00      	nop
 800a8d8:	46bd      	mov	sp, r7
 800a8da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8de:	4770      	bx	lr
 800a8e0:	20001f7c 	.word	0x20001f7c
 800a8e4:	200021cc 	.word	0x200021cc

0800a8e8 <PEF_Compose_Connector_Lock_Cnf>:
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
	eth_tx_buffer[28] = 0x00;
	// Body
}

void PEF_Compose_Connector_Lock_Cnf(void) {
 800a8e8:	b580      	push	{r7, lr}
 800a8ea:	af00      	add	r7, sp, #0
	/* Connector Lock Confirm */
	eth_tx_size = 60;
 800a8ec:	4b19      	ldr	r3, [pc, #100]	@ (800a954 <PEF_Compose_Connector_Lock_Cnf+0x6c>)
 800a8ee:	223c      	movs	r2, #60	@ 0x3c
 800a8f0:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800a8f2:	f7ff fdc3 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800a8f6:	2100      	movs	r1, #0
 800a8f8:	4817      	ldr	r0, [pc, #92]	@ (800a958 <PEF_Compose_Connector_Lock_Cnf+0x70>)
 800a8fa:	f7ff fd93 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evseID, 6);
 800a8fe:	2106      	movs	r1, #6
 800a900:	4816      	ldr	r0, [pc, #88]	@ (800a95c <PEF_Compose_Connector_Lock_Cnf+0x74>)
 800a902:	f7ff fd8f 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800a906:	4b16      	ldr	r3, [pc, #88]	@ (800a960 <PEF_Compose_Connector_Lock_Cnf+0x78>)
 800a908:	2288      	movs	r2, #136	@ 0x88
 800a90a:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800a90c:	4b14      	ldr	r3, [pc, #80]	@ (800a960 <PEF_Compose_Connector_Lock_Cnf+0x78>)
 800a90e:	22e1      	movs	r2, #225	@ 0xe1
 800a910:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800a912:	4b13      	ldr	r3, [pc, #76]	@ (800a960 <PEF_Compose_Connector_Lock_Cnf+0x78>)
 800a914:	2201      	movs	r2, #1
 800a916:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800a918:	4b11      	ldr	r3, [pc, #68]	@ (800a960 <PEF_Compose_Connector_Lock_Cnf+0x78>)
 800a91a:	22e0      	movs	r2, #224	@ 0xe0
 800a91c:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800a91e:	4b10      	ldr	r3, [pc, #64]	@ (800a960 <PEF_Compose_Connector_Lock_Cnf+0x78>)
 800a920:	2260      	movs	r2, #96	@ 0x60
 800a922:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800a924:	4b0e      	ldr	r3, [pc, #56]	@ (800a960 <PEF_Compose_Connector_Lock_Cnf+0x78>)
 800a926:	2200      	movs	r2, #0
 800a928:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800a92a:	4b0d      	ldr	r3, [pc, #52]	@ (800a960 <PEF_Compose_Connector_Lock_Cnf+0x78>)
 800a92c:	2200      	movs	r2, #0
 800a92e:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800a930:	2113      	movs	r1, #19
 800a932:	480c      	ldr	r0, [pc, #48]	@ (800a964 <PEF_Compose_Connector_Lock_Cnf+0x7c>)
 800a934:	f7ff fd76 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xB0; // Session + State
 800a938:	4b09      	ldr	r3, [pc, #36]	@ (800a960 <PEF_Compose_Connector_Lock_Cnf+0x78>)
 800a93a:	22b0      	movs	r2, #176	@ 0xb0
 800a93c:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x09; // Function + Message Type
 800a93e:	4b08      	ldr	r3, [pc, #32]	@ (800a960 <PEF_Compose_Connector_Lock_Cnf+0x78>)
 800a940:	2209      	movs	r2, #9
 800a942:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800a944:	4b06      	ldr	r3, [pc, #24]	@ (800a960 <PEF_Compose_Connector_Lock_Cnf+0x78>)
 800a946:	2200      	movs	r2, #0
 800a948:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800a94a:	4b05      	ldr	r3, [pc, #20]	@ (800a960 <PEF_Compose_Connector_Lock_Cnf+0x78>)
 800a94c:	2200      	movs	r2, #0
 800a94e:	771a      	strb	r2, [r3, #28]
	// Body
}
 800a950:	bf00      	nop
 800a952:	bd80      	pop	{r7, pc}
 800a954:	20001f7a 	.word	0x20001f7a
 800a958:	200021b0 	.word	0x200021b0
 800a95c:	20000028 	.word	0x20000028
 800a960:	20001e80 	.word	0x20001e80
 800a964:	20000018 	.word	0x20000018

0800a968 <PEF_Compose_Contactor_Close_Req>:

void PEF_Compose_Contactor_Close_Req(void) {
 800a968:	b580      	push	{r7, lr}
 800a96a:	af00      	add	r7, sp, #0
	/* Contactor Close Request */
	eth_tx_size = 60;
 800a96c:	4b19      	ldr	r3, [pc, #100]	@ (800a9d4 <PEF_Compose_Contactor_Close_Req+0x6c>)
 800a96e:	223c      	movs	r2, #60	@ 0x3c
 800a970:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800a972:	f7ff fd83 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800a976:	2100      	movs	r1, #0
 800a978:	4817      	ldr	r0, [pc, #92]	@ (800a9d8 <PEF_Compose_Contactor_Close_Req+0x70>)
 800a97a:	f7ff fd53 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evseID, 6);
 800a97e:	2106      	movs	r1, #6
 800a980:	4816      	ldr	r0, [pc, #88]	@ (800a9dc <PEF_Compose_Contactor_Close_Req+0x74>)
 800a982:	f7ff fd4f 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800a986:	4b16      	ldr	r3, [pc, #88]	@ (800a9e0 <PEF_Compose_Contactor_Close_Req+0x78>)
 800a988:	2288      	movs	r2, #136	@ 0x88
 800a98a:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800a98c:	4b14      	ldr	r3, [pc, #80]	@ (800a9e0 <PEF_Compose_Contactor_Close_Req+0x78>)
 800a98e:	22e1      	movs	r2, #225	@ 0xe1
 800a990:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800a992:	4b13      	ldr	r3, [pc, #76]	@ (800a9e0 <PEF_Compose_Contactor_Close_Req+0x78>)
 800a994:	2201      	movs	r2, #1
 800a996:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800a998:	4b11      	ldr	r3, [pc, #68]	@ (800a9e0 <PEF_Compose_Contactor_Close_Req+0x78>)
 800a99a:	22e0      	movs	r2, #224	@ 0xe0
 800a99c:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800a99e:	4b10      	ldr	r3, [pc, #64]	@ (800a9e0 <PEF_Compose_Contactor_Close_Req+0x78>)
 800a9a0:	2260      	movs	r2, #96	@ 0x60
 800a9a2:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800a9a4:	4b0e      	ldr	r3, [pc, #56]	@ (800a9e0 <PEF_Compose_Contactor_Close_Req+0x78>)
 800a9a6:	2200      	movs	r2, #0
 800a9a8:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800a9aa:	4b0d      	ldr	r3, [pc, #52]	@ (800a9e0 <PEF_Compose_Contactor_Close_Req+0x78>)
 800a9ac:	2200      	movs	r2, #0
 800a9ae:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800a9b0:	2113      	movs	r1, #19
 800a9b2:	480c      	ldr	r0, [pc, #48]	@ (800a9e4 <PEF_Compose_Contactor_Close_Req+0x7c>)
 800a9b4:	f7ff fd36 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xC1; // Session + State
 800a9b8:	4b09      	ldr	r3, [pc, #36]	@ (800a9e0 <PEF_Compose_Contactor_Close_Req+0x78>)
 800a9ba:	22c1      	movs	r2, #193	@ 0xc1
 800a9bc:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x0C; // Function + Message Type
 800a9be:	4b08      	ldr	r3, [pc, #32]	@ (800a9e0 <PEF_Compose_Contactor_Close_Req+0x78>)
 800a9c0:	220c      	movs	r2, #12
 800a9c2:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800a9c4:	4b06      	ldr	r3, [pc, #24]	@ (800a9e0 <PEF_Compose_Contactor_Close_Req+0x78>)
 800a9c6:	2200      	movs	r2, #0
 800a9c8:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800a9ca:	4b05      	ldr	r3, [pc, #20]	@ (800a9e0 <PEF_Compose_Contactor_Close_Req+0x78>)
 800a9cc:	2200      	movs	r2, #0
 800a9ce:	771a      	strb	r2, [r3, #28]
	// Body
}
 800a9d0:	bf00      	nop
 800a9d2:	bd80      	pop	{r7, pc}
 800a9d4:	20001f7a 	.word	0x20001f7a
 800a9d8:	200021b0 	.word	0x200021b0
 800a9dc:	20000028 	.word	0x20000028
 800a9e0:	20001e80 	.word	0x20001e80
 800a9e4:	20000018 	.word	0x20000018

0800a9e8 <PEF_Compose_Contactor_Close_Cnf>:

void PEF_Compose_Contactor_Close_Cnf(void) {
 800a9e8:	b580      	push	{r7, lr}
 800a9ea:	af00      	add	r7, sp, #0
	/* Contactor Close Confirm */
	eth_tx_size = 60;
 800a9ec:	4b19      	ldr	r3, [pc, #100]	@ (800aa54 <PEF_Compose_Contactor_Close_Cnf+0x6c>)
 800a9ee:	223c      	movs	r2, #60	@ 0x3c
 800a9f0:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800a9f2:	f7ff fd43 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800a9f6:	2100      	movs	r1, #0
 800a9f8:	4817      	ldr	r0, [pc, #92]	@ (800aa58 <PEF_Compose_Contactor_Close_Cnf+0x70>)
 800a9fa:	f7ff fd13 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evID, 6);
 800a9fe:	2106      	movs	r1, #6
 800aa00:	4816      	ldr	r0, [pc, #88]	@ (800aa5c <PEF_Compose_Contactor_Close_Cnf+0x74>)
 800aa02:	f7ff fd0f 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800aa06:	4b16      	ldr	r3, [pc, #88]	@ (800aa60 <PEF_Compose_Contactor_Close_Cnf+0x78>)
 800aa08:	2288      	movs	r2, #136	@ 0x88
 800aa0a:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800aa0c:	4b14      	ldr	r3, [pc, #80]	@ (800aa60 <PEF_Compose_Contactor_Close_Cnf+0x78>)
 800aa0e:	22e1      	movs	r2, #225	@ 0xe1
 800aa10:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800aa12:	4b13      	ldr	r3, [pc, #76]	@ (800aa60 <PEF_Compose_Contactor_Close_Cnf+0x78>)
 800aa14:	2201      	movs	r2, #1
 800aa16:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800aa18:	4b11      	ldr	r3, [pc, #68]	@ (800aa60 <PEF_Compose_Contactor_Close_Cnf+0x78>)
 800aa1a:	22e0      	movs	r2, #224	@ 0xe0
 800aa1c:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800aa1e:	4b10      	ldr	r3, [pc, #64]	@ (800aa60 <PEF_Compose_Contactor_Close_Cnf+0x78>)
 800aa20:	2260      	movs	r2, #96	@ 0x60
 800aa22:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800aa24:	4b0e      	ldr	r3, [pc, #56]	@ (800aa60 <PEF_Compose_Contactor_Close_Cnf+0x78>)
 800aa26:	2200      	movs	r2, #0
 800aa28:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800aa2a:	4b0d      	ldr	r3, [pc, #52]	@ (800aa60 <PEF_Compose_Contactor_Close_Cnf+0x78>)
 800aa2c:	2200      	movs	r2, #0
 800aa2e:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800aa30:	2113      	movs	r1, #19
 800aa32:	480c      	ldr	r0, [pc, #48]	@ (800aa64 <PEF_Compose_Contactor_Close_Cnf+0x7c>)
 800aa34:	f7ff fcf6 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xC1; // Session + State
 800aa38:	4b09      	ldr	r3, [pc, #36]	@ (800aa60 <PEF_Compose_Contactor_Close_Cnf+0x78>)
 800aa3a:	22c1      	movs	r2, #193	@ 0xc1
 800aa3c:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x0D; // Function + Message Type
 800aa3e:	4b08      	ldr	r3, [pc, #32]	@ (800aa60 <PEF_Compose_Contactor_Close_Cnf+0x78>)
 800aa40:	220d      	movs	r2, #13
 800aa42:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800aa44:	4b06      	ldr	r3, [pc, #24]	@ (800aa60 <PEF_Compose_Contactor_Close_Cnf+0x78>)
 800aa46:	2200      	movs	r2, #0
 800aa48:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800aa4a:	4b05      	ldr	r3, [pc, #20]	@ (800aa60 <PEF_Compose_Contactor_Close_Cnf+0x78>)
 800aa4c:	2200      	movs	r2, #0
 800aa4e:	771a      	strb	r2, [r3, #28]
	// Body
}
 800aa50:	bf00      	nop
 800aa52:	bd80      	pop	{r7, pc}
 800aa54:	20001f7a 	.word	0x20001f7a
 800aa58:	200021b0 	.word	0x200021b0
 800aa5c:	20000020 	.word	0x20000020
 800aa60:	20001e80 	.word	0x20001e80
 800aa64:	20000018 	.word	0x20000018

0800aa68 <PEF_Compose_Charging_Current_Demand_Res>:
}

void PEF_Compose_Charging_Current_Demand_Res(uint8_t station_status,
		uint16_t output_voltage, uint16_t output_current,
		uint16_t remaining_charging_time, uint8_t station_mal,
		uint8_t charge_system_mal) {
 800aa68:	b590      	push	{r4, r7, lr}
 800aa6a:	b083      	sub	sp, #12
 800aa6c:	af00      	add	r7, sp, #0
 800aa6e:	4604      	mov	r4, r0
 800aa70:	4608      	mov	r0, r1
 800aa72:	4611      	mov	r1, r2
 800aa74:	461a      	mov	r2, r3
 800aa76:	4623      	mov	r3, r4
 800aa78:	71fb      	strb	r3, [r7, #7]
 800aa7a:	4603      	mov	r3, r0
 800aa7c:	80bb      	strh	r3, [r7, #4]
 800aa7e:	460b      	mov	r3, r1
 800aa80:	807b      	strh	r3, [r7, #2]
 800aa82:	4613      	mov	r3, r2
 800aa84:	803b      	strh	r3, [r7, #0]
	myEVSE.station_status = station_status;
 800aa86:	4a3f      	ldr	r2, [pc, #252]	@ (800ab84 <PEF_Compose_Charging_Current_Demand_Res+0x11c>)
 800aa88:	79fb      	ldrb	r3, [r7, #7]
 800aa8a:	71d3      	strb	r3, [r2, #7]
	myEVSE.output_current = output_current;
 800aa8c:	4a3d      	ldr	r2, [pc, #244]	@ (800ab84 <PEF_Compose_Charging_Current_Demand_Res+0x11c>)
 800aa8e:	887b      	ldrh	r3, [r7, #2]
 800aa90:	8153      	strh	r3, [r2, #10]
	myEVSE.output_voltage = output_voltage;
 800aa92:	4a3c      	ldr	r2, [pc, #240]	@ (800ab84 <PEF_Compose_Charging_Current_Demand_Res+0x11c>)
 800aa94:	88bb      	ldrh	r3, [r7, #4]
 800aa96:	8113      	strh	r3, [r2, #8]
	myEVSE.remaining_charging_time = remaining_charging_time;
 800aa98:	4a3a      	ldr	r2, [pc, #232]	@ (800ab84 <PEF_Compose_Charging_Current_Demand_Res+0x11c>)
 800aa9a:	883b      	ldrh	r3, [r7, #0]
 800aa9c:	8193      	strh	r3, [r2, #12]
	myEVSE.station_malfunction = station_mal;
 800aa9e:	4a39      	ldr	r2, [pc, #228]	@ (800ab84 <PEF_Compose_Charging_Current_Demand_Res+0x11c>)
 800aaa0:	7e3b      	ldrb	r3, [r7, #24]
 800aaa2:	7393      	strb	r3, [r2, #14]
	myEVSE.charging_system_malfunction = charge_system_mal;
 800aaa4:	4a37      	ldr	r2, [pc, #220]	@ (800ab84 <PEF_Compose_Charging_Current_Demand_Res+0x11c>)
 800aaa6:	7f3b      	ldrb	r3, [r7, #28]
 800aaa8:	73d3      	strb	r3, [r2, #15]

	/* Charging by Current Demand Response */
	eth_tx_size = 60;
 800aaaa:	4b37      	ldr	r3, [pc, #220]	@ (800ab88 <PEF_Compose_Charging_Current_Demand_Res+0x120>)
 800aaac:	223c      	movs	r2, #60	@ 0x3c
 800aaae:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800aab0:	f7ff fce4 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800aab4:	2100      	movs	r1, #0
 800aab6:	4835      	ldr	r0, [pc, #212]	@ (800ab8c <PEF_Compose_Charging_Current_Demand_Res+0x124>)
 800aab8:	f7ff fcb4 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evseID, 6);
 800aabc:	2106      	movs	r1, #6
 800aabe:	4834      	ldr	r0, [pc, #208]	@ (800ab90 <PEF_Compose_Charging_Current_Demand_Res+0x128>)
 800aac0:	f7ff fcb0 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800aac4:	4b33      	ldr	r3, [pc, #204]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800aac6:	2288      	movs	r2, #136	@ 0x88
 800aac8:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800aaca:	4b32      	ldr	r3, [pc, #200]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800aacc:	22e1      	movs	r2, #225	@ 0xe1
 800aace:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800aad0:	4b30      	ldr	r3, [pc, #192]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800aad2:	2201      	movs	r2, #1
 800aad4:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800aad6:	4b2f      	ldr	r3, [pc, #188]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800aad8:	22e0      	movs	r2, #224	@ 0xe0
 800aada:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800aadc:	4b2d      	ldr	r3, [pc, #180]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800aade:	2260      	movs	r2, #96	@ 0x60
 800aae0:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800aae2:	4b2c      	ldr	r3, [pc, #176]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800aae4:	2200      	movs	r2, #0
 800aae6:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800aae8:	4b2a      	ldr	r3, [pc, #168]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800aaea:	2200      	movs	r2, #0
 800aaec:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800aaee:	2113      	movs	r1, #19
 800aaf0:	4829      	ldr	r0, [pc, #164]	@ (800ab98 <PEF_Compose_Charging_Current_Demand_Res+0x130>)
 800aaf2:	f7ff fc97 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xC1; // Session + State
 800aaf6:	4b27      	ldr	r3, [pc, #156]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800aaf8:	22c1      	movs	r2, #193	@ 0xc1
 800aafa:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x13; // Function + Message Type
 800aafc:	4b25      	ldr	r3, [pc, #148]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800aafe:	2213      	movs	r2, #19
 800ab00:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800ab02:	4b24      	ldr	r3, [pc, #144]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800ab04:	2200      	movs	r2, #0
 800ab06:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800ab08:	4b22      	ldr	r3, [pc, #136]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800ab0a:	2200      	movs	r2, #0
 800ab0c:	771a      	strb	r2, [r3, #28]
	// Body
	eth_tx_buffer[29] = myEVSE.station_status;
 800ab0e:	4b1d      	ldr	r3, [pc, #116]	@ (800ab84 <PEF_Compose_Charging_Current_Demand_Res+0x11c>)
 800ab10:	79da      	ldrb	r2, [r3, #7]
 800ab12:	4b20      	ldr	r3, [pc, #128]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800ab14:	775a      	strb	r2, [r3, #29]
	eth_tx_buffer[30] = (myEVSE.output_current >> 8);
 800ab16:	4b1b      	ldr	r3, [pc, #108]	@ (800ab84 <PEF_Compose_Charging_Current_Demand_Res+0x11c>)
 800ab18:	895b      	ldrh	r3, [r3, #10]
 800ab1a:	0a1b      	lsrs	r3, r3, #8
 800ab1c:	b29b      	uxth	r3, r3
 800ab1e:	b2da      	uxtb	r2, r3
 800ab20:	4b1c      	ldr	r3, [pc, #112]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800ab22:	779a      	strb	r2, [r3, #30]
	eth_tx_buffer[31] = myEVSE.output_current;
 800ab24:	4b17      	ldr	r3, [pc, #92]	@ (800ab84 <PEF_Compose_Charging_Current_Demand_Res+0x11c>)
 800ab26:	895b      	ldrh	r3, [r3, #10]
 800ab28:	b2da      	uxtb	r2, r3
 800ab2a:	4b1a      	ldr	r3, [pc, #104]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800ab2c:	77da      	strb	r2, [r3, #31]
	eth_tx_buffer[32] = (myEVSE.output_voltage >> 8);
 800ab2e:	4b15      	ldr	r3, [pc, #84]	@ (800ab84 <PEF_Compose_Charging_Current_Demand_Res+0x11c>)
 800ab30:	891b      	ldrh	r3, [r3, #8]
 800ab32:	0a1b      	lsrs	r3, r3, #8
 800ab34:	b29b      	uxth	r3, r3
 800ab36:	b2da      	uxtb	r2, r3
 800ab38:	4b16      	ldr	r3, [pc, #88]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800ab3a:	f883 2020 	strb.w	r2, [r3, #32]
	eth_tx_buffer[33] = myEVSE.output_voltage;
 800ab3e:	4b11      	ldr	r3, [pc, #68]	@ (800ab84 <PEF_Compose_Charging_Current_Demand_Res+0x11c>)
 800ab40:	891b      	ldrh	r3, [r3, #8]
 800ab42:	b2da      	uxtb	r2, r3
 800ab44:	4b13      	ldr	r3, [pc, #76]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800ab46:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
	eth_tx_buffer[34] = (myEVSE.remaining_charging_time >> 8);
 800ab4a:	4b0e      	ldr	r3, [pc, #56]	@ (800ab84 <PEF_Compose_Charging_Current_Demand_Res+0x11c>)
 800ab4c:	899b      	ldrh	r3, [r3, #12]
 800ab4e:	0a1b      	lsrs	r3, r3, #8
 800ab50:	b29b      	uxth	r3, r3
 800ab52:	b2da      	uxtb	r2, r3
 800ab54:	4b0f      	ldr	r3, [pc, #60]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800ab56:	f883 2022 	strb.w	r2, [r3, #34]	@ 0x22
	eth_tx_buffer[35] = myEVSE.remaining_charging_time;
 800ab5a:	4b0a      	ldr	r3, [pc, #40]	@ (800ab84 <PEF_Compose_Charging_Current_Demand_Res+0x11c>)
 800ab5c:	899b      	ldrh	r3, [r3, #12]
 800ab5e:	b2da      	uxtb	r2, r3
 800ab60:	4b0c      	ldr	r3, [pc, #48]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800ab62:	f883 2023 	strb.w	r2, [r3, #35]	@ 0x23
	eth_tx_buffer[36] = myEVSE.station_malfunction;
 800ab66:	4b07      	ldr	r3, [pc, #28]	@ (800ab84 <PEF_Compose_Charging_Current_Demand_Res+0x11c>)
 800ab68:	7b9a      	ldrb	r2, [r3, #14]
 800ab6a:	4b0a      	ldr	r3, [pc, #40]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800ab6c:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
	eth_tx_buffer[37] = myEVSE.charging_system_malfunction;
 800ab70:	4b04      	ldr	r3, [pc, #16]	@ (800ab84 <PEF_Compose_Charging_Current_Demand_Res+0x11c>)
 800ab72:	7bda      	ldrb	r2, [r3, #15]
 800ab74:	4b07      	ldr	r3, [pc, #28]	@ (800ab94 <PEF_Compose_Charging_Current_Demand_Res+0x12c>)
 800ab76:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
}
 800ab7a:	bf00      	nop
 800ab7c:	370c      	adds	r7, #12
 800ab7e:	46bd      	mov	sp, r7
 800ab80:	bd90      	pop	{r4, r7, pc}
 800ab82:	bf00      	nop
 800ab84:	200021cc 	.word	0x200021cc
 800ab88:	20001f7a 	.word	0x20001f7a
 800ab8c:	200021b0 	.word	0x200021b0
 800ab90:	20000028 	.word	0x20000028
 800ab94:	20001e80 	.word	0x20001e80
 800ab98:	20000018 	.word	0x20000018

0800ab9c <PEF_Evaluate_Charging_Current_Demand_Req>:
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
	eth_tx_buffer[28] = 0x00;
	// Body
}

void PEF_Evaluate_Charging_Current_Demand_Req(void) {
 800ab9c:	b480      	push	{r7}
 800ab9e:	af00      	add	r7, sp, #0
	myEV.charging_current_request = (eth_rx_buffer[29] << 8)
 800aba0:	4b0e      	ldr	r3, [pc, #56]	@ (800abdc <PEF_Evaluate_Charging_Current_Demand_Req+0x40>)
 800aba2:	7f5b      	ldrb	r3, [r3, #29]
 800aba4:	021b      	lsls	r3, r3, #8
 800aba6:	b29b      	uxth	r3, r3
			+ eth_rx_buffer[30];
 800aba8:	4a0c      	ldr	r2, [pc, #48]	@ (800abdc <PEF_Evaluate_Charging_Current_Demand_Req+0x40>)
 800abaa:	7f92      	ldrb	r2, [r2, #30]
 800abac:	4413      	add	r3, r2
 800abae:	b29a      	uxth	r2, r3
	myEV.charging_current_request = (eth_rx_buffer[29] << 8)
 800abb0:	4b0b      	ldr	r3, [pc, #44]	@ (800abe0 <PEF_Evaluate_Charging_Current_Demand_Req+0x44>)
 800abb2:	81da      	strh	r2, [r3, #14]
	myEV.charging_system_fault = eth_rx_buffer[31];
 800abb4:	4b09      	ldr	r3, [pc, #36]	@ (800abdc <PEF_Evaluate_Charging_Current_Demand_Req+0x40>)
 800abb6:	7fda      	ldrb	r2, [r3, #31]
 800abb8:	4b09      	ldr	r3, [pc, #36]	@ (800abe0 <PEF_Evaluate_Charging_Current_Demand_Req+0x44>)
 800abba:	741a      	strb	r2, [r3, #16]
	myEV.vehicle_shift_lever_position = eth_rx_buffer[32];
 800abbc:	4b07      	ldr	r3, [pc, #28]	@ (800abdc <PEF_Evaluate_Charging_Current_Demand_Req+0x40>)
 800abbe:	f893 2020 	ldrb.w	r2, [r3, #32]
 800abc2:	4b07      	ldr	r3, [pc, #28]	@ (800abe0 <PEF_Evaluate_Charging_Current_Demand_Req+0x44>)
 800abc4:	745a      	strb	r2, [r3, #17]
	myEV.current_battery = eth_rx_buffer[33];
 800abc6:	4b05      	ldr	r3, [pc, #20]	@ (800abdc <PEF_Evaluate_Charging_Current_Demand_Req+0x40>)
 800abc8:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 800abcc:	461a      	mov	r2, r3
 800abce:	4b04      	ldr	r3, [pc, #16]	@ (800abe0 <PEF_Evaluate_Charging_Current_Demand_Req+0x44>)
 800abd0:	809a      	strh	r2, [r3, #4]
}
 800abd2:	bf00      	nop
 800abd4:	46bd      	mov	sp, r7
 800abd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abda:	4770      	bx	lr
 800abdc:	20001f7c 	.word	0x20001f7c
 800abe0:	200021b8 	.word	0x200021b8

0800abe4 <PEF_Evaluate_Charging_Current_Demand_Res>:

void PEF_Evaluate_Charging_Current_Demand_Res(void) {
 800abe4:	b480      	push	{r7}
 800abe6:	af00      	add	r7, sp, #0
	myEVSE.station_status = eth_rx_buffer[29];
 800abe8:	4b1a      	ldr	r3, [pc, #104]	@ (800ac54 <PEF_Evaluate_Charging_Current_Demand_Res+0x70>)
 800abea:	7f5a      	ldrb	r2, [r3, #29]
 800abec:	4b1a      	ldr	r3, [pc, #104]	@ (800ac58 <PEF_Evaluate_Charging_Current_Demand_Res+0x74>)
 800abee:	71da      	strb	r2, [r3, #7]
	myEVSE.output_current = (eth_rx_buffer[30] << 8) + eth_rx_buffer[31];
 800abf0:	4b18      	ldr	r3, [pc, #96]	@ (800ac54 <PEF_Evaluate_Charging_Current_Demand_Res+0x70>)
 800abf2:	7f9b      	ldrb	r3, [r3, #30]
 800abf4:	021b      	lsls	r3, r3, #8
 800abf6:	b29b      	uxth	r3, r3
 800abf8:	4a16      	ldr	r2, [pc, #88]	@ (800ac54 <PEF_Evaluate_Charging_Current_Demand_Res+0x70>)
 800abfa:	7fd2      	ldrb	r2, [r2, #31]
 800abfc:	4413      	add	r3, r2
 800abfe:	b29a      	uxth	r2, r3
 800ac00:	4b15      	ldr	r3, [pc, #84]	@ (800ac58 <PEF_Evaluate_Charging_Current_Demand_Res+0x74>)
 800ac02:	815a      	strh	r2, [r3, #10]
	myEVSE.output_voltage = (eth_rx_buffer[32] << 8) + eth_rx_buffer[33];
 800ac04:	4b13      	ldr	r3, [pc, #76]	@ (800ac54 <PEF_Evaluate_Charging_Current_Demand_Res+0x70>)
 800ac06:	f893 3020 	ldrb.w	r3, [r3, #32]
 800ac0a:	021b      	lsls	r3, r3, #8
 800ac0c:	b29b      	uxth	r3, r3
 800ac0e:	4a11      	ldr	r2, [pc, #68]	@ (800ac54 <PEF_Evaluate_Charging_Current_Demand_Res+0x70>)
 800ac10:	f892 2021 	ldrb.w	r2, [r2, #33]	@ 0x21
 800ac14:	4413      	add	r3, r2
 800ac16:	b29a      	uxth	r2, r3
 800ac18:	4b0f      	ldr	r3, [pc, #60]	@ (800ac58 <PEF_Evaluate_Charging_Current_Demand_Res+0x74>)
 800ac1a:	811a      	strh	r2, [r3, #8]
	myEVSE.remaining_charging_time = (eth_rx_buffer[34] << 8)
 800ac1c:	4b0d      	ldr	r3, [pc, #52]	@ (800ac54 <PEF_Evaluate_Charging_Current_Demand_Res+0x70>)
 800ac1e:	f893 3022 	ldrb.w	r3, [r3, #34]	@ 0x22
 800ac22:	021b      	lsls	r3, r3, #8
 800ac24:	b29b      	uxth	r3, r3
			+ eth_rx_buffer[35];
 800ac26:	4a0b      	ldr	r2, [pc, #44]	@ (800ac54 <PEF_Evaluate_Charging_Current_Demand_Res+0x70>)
 800ac28:	f892 2023 	ldrb.w	r2, [r2, #35]	@ 0x23
 800ac2c:	4413      	add	r3, r2
 800ac2e:	b29a      	uxth	r2, r3
	myEVSE.remaining_charging_time = (eth_rx_buffer[34] << 8)
 800ac30:	4b09      	ldr	r3, [pc, #36]	@ (800ac58 <PEF_Evaluate_Charging_Current_Demand_Res+0x74>)
 800ac32:	819a      	strh	r2, [r3, #12]
	myEVSE.station_malfunction = eth_rx_buffer[36];
 800ac34:	4b07      	ldr	r3, [pc, #28]	@ (800ac54 <PEF_Evaluate_Charging_Current_Demand_Res+0x70>)
 800ac36:	f893 2024 	ldrb.w	r2, [r3, #36]	@ 0x24
 800ac3a:	4b07      	ldr	r3, [pc, #28]	@ (800ac58 <PEF_Evaluate_Charging_Current_Demand_Res+0x74>)
 800ac3c:	739a      	strb	r2, [r3, #14]
	myEVSE.charging_system_malfunction = eth_rx_buffer[37];
 800ac3e:	4b05      	ldr	r3, [pc, #20]	@ (800ac54 <PEF_Evaluate_Charging_Current_Demand_Res+0x70>)
 800ac40:	f893 2025 	ldrb.w	r2, [r3, #37]	@ 0x25
 800ac44:	4b04      	ldr	r3, [pc, #16]	@ (800ac58 <PEF_Evaluate_Charging_Current_Demand_Res+0x74>)
 800ac46:	73da      	strb	r2, [r3, #15]
}
 800ac48:	bf00      	nop
 800ac4a:	46bd      	mov	sp, r7
 800ac4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac50:	4770      	bx	lr
 800ac52:	bf00      	nop
 800ac54:	20001f7c 	.word	0x20001f7c
 800ac58:	200021cc 	.word	0x200021cc

0800ac5c <PEF_Compose_Current_Suppression_Res>:
	eth_tx_buffer[29] = myEV.vehicle_charging_enabled;
}

void PEF_Compose_Current_Suppression_Res(uint8_t station_status,
		uint8_t charging_stop_control, uint16_t output_voltage,
		uint16_t output_current) {
 800ac5c:	b590      	push	{r4, r7, lr}
 800ac5e:	b083      	sub	sp, #12
 800ac60:	af00      	add	r7, sp, #0
 800ac62:	4604      	mov	r4, r0
 800ac64:	4608      	mov	r0, r1
 800ac66:	4611      	mov	r1, r2
 800ac68:	461a      	mov	r2, r3
 800ac6a:	4623      	mov	r3, r4
 800ac6c:	71fb      	strb	r3, [r7, #7]
 800ac6e:	4603      	mov	r3, r0
 800ac70:	71bb      	strb	r3, [r7, #6]
 800ac72:	460b      	mov	r3, r1
 800ac74:	80bb      	strh	r3, [r7, #4]
 800ac76:	4613      	mov	r3, r2
 800ac78:	807b      	strh	r3, [r7, #2]
	myEVSE.station_status = station_status;
 800ac7a:	4a32      	ldr	r2, [pc, #200]	@ (800ad44 <PEF_Compose_Current_Suppression_Res+0xe8>)
 800ac7c:	79fb      	ldrb	r3, [r7, #7]
 800ac7e:	71d3      	strb	r3, [r2, #7]
	myEVSE.charging_stop_control = charging_stop_control;
 800ac80:	4a30      	ldr	r2, [pc, #192]	@ (800ad44 <PEF_Compose_Current_Suppression_Res+0xe8>)
 800ac82:	79bb      	ldrb	r3, [r7, #6]
 800ac84:	7413      	strb	r3, [r2, #16]
	myEVSE.output_voltage = output_voltage;
 800ac86:	4a2f      	ldr	r2, [pc, #188]	@ (800ad44 <PEF_Compose_Current_Suppression_Res+0xe8>)
 800ac88:	88bb      	ldrh	r3, [r7, #4]
 800ac8a:	8113      	strh	r3, [r2, #8]
	myEVSE.output_current = output_current;
 800ac8c:	4a2d      	ldr	r2, [pc, #180]	@ (800ad44 <PEF_Compose_Current_Suppression_Res+0xe8>)
 800ac8e:	887b      	ldrh	r3, [r7, #2]
 800ac90:	8153      	strh	r3, [r2, #10]

	/* Current Suppression Response */
	eth_tx_size = 60;
 800ac92:	4b2d      	ldr	r3, [pc, #180]	@ (800ad48 <PEF_Compose_Current_Suppression_Res+0xec>)
 800ac94:	223c      	movs	r2, #60	@ 0x3c
 800ac96:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800ac98:	f7ff fbf0 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800ac9c:	2100      	movs	r1, #0
 800ac9e:	482b      	ldr	r0, [pc, #172]	@ (800ad4c <PEF_Compose_Current_Suppression_Res+0xf0>)
 800aca0:	f7ff fbc0 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evseID, 6);
 800aca4:	2106      	movs	r1, #6
 800aca6:	482a      	ldr	r0, [pc, #168]	@ (800ad50 <PEF_Compose_Current_Suppression_Res+0xf4>)
 800aca8:	f7ff fbbc 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800acac:	4b29      	ldr	r3, [pc, #164]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800acae:	2288      	movs	r2, #136	@ 0x88
 800acb0:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800acb2:	4b28      	ldr	r3, [pc, #160]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800acb4:	22e1      	movs	r2, #225	@ 0xe1
 800acb6:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800acb8:	4b26      	ldr	r3, [pc, #152]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800acba:	2201      	movs	r2, #1
 800acbc:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800acbe:	4b25      	ldr	r3, [pc, #148]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800acc0:	22e0      	movs	r2, #224	@ 0xe0
 800acc2:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800acc4:	4b23      	ldr	r3, [pc, #140]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800acc6:	2260      	movs	r2, #96	@ 0x60
 800acc8:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800acca:	4b22      	ldr	r3, [pc, #136]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800accc:	2200      	movs	r2, #0
 800acce:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800acd0:	4b20      	ldr	r3, [pc, #128]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800acd2:	2200      	movs	r2, #0
 800acd4:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800acd6:	2113      	movs	r1, #19
 800acd8:	481f      	ldr	r0, [pc, #124]	@ (800ad58 <PEF_Compose_Current_Suppression_Res+0xfc>)
 800acda:	f7ff fba3 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xC1; // Session + State
 800acde:	4b1d      	ldr	r3, [pc, #116]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800ace0:	22c1      	movs	r2, #193	@ 0xc1
 800ace2:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x17; // Function + Message Type
 800ace4:	4b1b      	ldr	r3, [pc, #108]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800ace6:	2217      	movs	r2, #23
 800ace8:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800acea:	4b1a      	ldr	r3, [pc, #104]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800acec:	2200      	movs	r2, #0
 800acee:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800acf0:	4b18      	ldr	r3, [pc, #96]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800acf2:	2200      	movs	r2, #0
 800acf4:	771a      	strb	r2, [r3, #28]
	// Body
	eth_tx_buffer[29] = myEVSE.station_status;
 800acf6:	4b13      	ldr	r3, [pc, #76]	@ (800ad44 <PEF_Compose_Current_Suppression_Res+0xe8>)
 800acf8:	79da      	ldrb	r2, [r3, #7]
 800acfa:	4b16      	ldr	r3, [pc, #88]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800acfc:	775a      	strb	r2, [r3, #29]
	eth_tx_buffer[30] = myEVSE.charging_stop_control;
 800acfe:	4b11      	ldr	r3, [pc, #68]	@ (800ad44 <PEF_Compose_Current_Suppression_Res+0xe8>)
 800ad00:	7c1a      	ldrb	r2, [r3, #16]
 800ad02:	4b14      	ldr	r3, [pc, #80]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800ad04:	779a      	strb	r2, [r3, #30]
	eth_tx_buffer[31] = (myEVSE.output_voltage >> 8);
 800ad06:	4b0f      	ldr	r3, [pc, #60]	@ (800ad44 <PEF_Compose_Current_Suppression_Res+0xe8>)
 800ad08:	891b      	ldrh	r3, [r3, #8]
 800ad0a:	0a1b      	lsrs	r3, r3, #8
 800ad0c:	b29b      	uxth	r3, r3
 800ad0e:	b2da      	uxtb	r2, r3
 800ad10:	4b10      	ldr	r3, [pc, #64]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800ad12:	77da      	strb	r2, [r3, #31]
	eth_tx_buffer[32] = myEVSE.output_voltage;
 800ad14:	4b0b      	ldr	r3, [pc, #44]	@ (800ad44 <PEF_Compose_Current_Suppression_Res+0xe8>)
 800ad16:	891b      	ldrh	r3, [r3, #8]
 800ad18:	b2da      	uxtb	r2, r3
 800ad1a:	4b0e      	ldr	r3, [pc, #56]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800ad1c:	f883 2020 	strb.w	r2, [r3, #32]
	eth_tx_buffer[33] = (myEVSE.output_current >> 8);
 800ad20:	4b08      	ldr	r3, [pc, #32]	@ (800ad44 <PEF_Compose_Current_Suppression_Res+0xe8>)
 800ad22:	895b      	ldrh	r3, [r3, #10]
 800ad24:	0a1b      	lsrs	r3, r3, #8
 800ad26:	b29b      	uxth	r3, r3
 800ad28:	b2da      	uxtb	r2, r3
 800ad2a:	4b0a      	ldr	r3, [pc, #40]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800ad2c:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
	eth_tx_buffer[34] = myEVSE.output_current;
 800ad30:	4b04      	ldr	r3, [pc, #16]	@ (800ad44 <PEF_Compose_Current_Suppression_Res+0xe8>)
 800ad32:	895b      	ldrh	r3, [r3, #10]
 800ad34:	b2da      	uxtb	r2, r3
 800ad36:	4b07      	ldr	r3, [pc, #28]	@ (800ad54 <PEF_Compose_Current_Suppression_Res+0xf8>)
 800ad38:	f883 2022 	strb.w	r2, [r3, #34]	@ 0x22
}
 800ad3c:	bf00      	nop
 800ad3e:	370c      	adds	r7, #12
 800ad40:	46bd      	mov	sp, r7
 800ad42:	bd90      	pop	{r4, r7, pc}
 800ad44:	200021cc 	.word	0x200021cc
 800ad48:	20001f7a 	.word	0x20001f7a
 800ad4c:	200021b0 	.word	0x200021b0
 800ad50:	20000028 	.word	0x20000028
 800ad54:	20001e80 	.word	0x20001e80
 800ad58:	20000018 	.word	0x20000018

0800ad5c <PEF_Compose_Current_Suppression_Cnf>:

void PEF_Compose_Current_Suppression_Cnf(void) {
 800ad5c:	b580      	push	{r7, lr}
 800ad5e:	af00      	add	r7, sp, #0
	/* Current Suppression Confirm */
	eth_tx_size = 60;
 800ad60:	4b19      	ldr	r3, [pc, #100]	@ (800adc8 <PEF_Compose_Current_Suppression_Cnf+0x6c>)
 800ad62:	223c      	movs	r2, #60	@ 0x3c
 800ad64:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800ad66:	f7ff fb89 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800ad6a:	2100      	movs	r1, #0
 800ad6c:	4817      	ldr	r0, [pc, #92]	@ (800adcc <PEF_Compose_Current_Suppression_Cnf+0x70>)
 800ad6e:	f7ff fb59 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evID, 6);
 800ad72:	2106      	movs	r1, #6
 800ad74:	4816      	ldr	r0, [pc, #88]	@ (800add0 <PEF_Compose_Current_Suppression_Cnf+0x74>)
 800ad76:	f7ff fb55 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800ad7a:	4b16      	ldr	r3, [pc, #88]	@ (800add4 <PEF_Compose_Current_Suppression_Cnf+0x78>)
 800ad7c:	2288      	movs	r2, #136	@ 0x88
 800ad7e:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800ad80:	4b14      	ldr	r3, [pc, #80]	@ (800add4 <PEF_Compose_Current_Suppression_Cnf+0x78>)
 800ad82:	22e1      	movs	r2, #225	@ 0xe1
 800ad84:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800ad86:	4b13      	ldr	r3, [pc, #76]	@ (800add4 <PEF_Compose_Current_Suppression_Cnf+0x78>)
 800ad88:	2201      	movs	r2, #1
 800ad8a:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800ad8c:	4b11      	ldr	r3, [pc, #68]	@ (800add4 <PEF_Compose_Current_Suppression_Cnf+0x78>)
 800ad8e:	22e0      	movs	r2, #224	@ 0xe0
 800ad90:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800ad92:	4b10      	ldr	r3, [pc, #64]	@ (800add4 <PEF_Compose_Current_Suppression_Cnf+0x78>)
 800ad94:	2260      	movs	r2, #96	@ 0x60
 800ad96:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800ad98:	4b0e      	ldr	r3, [pc, #56]	@ (800add4 <PEF_Compose_Current_Suppression_Cnf+0x78>)
 800ad9a:	2200      	movs	r2, #0
 800ad9c:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800ad9e:	4b0d      	ldr	r3, [pc, #52]	@ (800add4 <PEF_Compose_Current_Suppression_Cnf+0x78>)
 800ada0:	2200      	movs	r2, #0
 800ada2:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800ada4:	2113      	movs	r1, #19
 800ada6:	480c      	ldr	r0, [pc, #48]	@ (800add8 <PEF_Compose_Current_Suppression_Cnf+0x7c>)
 800ada8:	f7ff fb3c 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xC1; // Session + State
 800adac:	4b09      	ldr	r3, [pc, #36]	@ (800add4 <PEF_Compose_Current_Suppression_Cnf+0x78>)
 800adae:	22c1      	movs	r2, #193	@ 0xc1
 800adb0:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x15; // Function + Message Type
 800adb2:	4b08      	ldr	r3, [pc, #32]	@ (800add4 <PEF_Compose_Current_Suppression_Cnf+0x78>)
 800adb4:	2215      	movs	r2, #21
 800adb6:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800adb8:	4b06      	ldr	r3, [pc, #24]	@ (800add4 <PEF_Compose_Current_Suppression_Cnf+0x78>)
 800adba:	2200      	movs	r2, #0
 800adbc:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800adbe:	4b05      	ldr	r3, [pc, #20]	@ (800add4 <PEF_Compose_Current_Suppression_Cnf+0x78>)
 800adc0:	2200      	movs	r2, #0
 800adc2:	771a      	strb	r2, [r3, #28]
	// Body
}
 800adc4:	bf00      	nop
 800adc6:	bd80      	pop	{r7, pc}
 800adc8:	20001f7a 	.word	0x20001f7a
 800adcc:	200021b0 	.word	0x200021b0
 800add0:	20000020 	.word	0x20000020
 800add4:	20001e80 	.word	0x20001e80
 800add8:	20000018 	.word	0x20000018

0800addc <PEF_Evaluate_Current_Suppression_Res>:

void PEF_Evaluate_Current_Suppression_Res(void) {
 800addc:	b480      	push	{r7}
 800adde:	af00      	add	r7, sp, #0
	myEVSE.station_status = eth_rx_buffer[29];
 800ade0:	4b11      	ldr	r3, [pc, #68]	@ (800ae28 <PEF_Evaluate_Current_Suppression_Res+0x4c>)
 800ade2:	7f5a      	ldrb	r2, [r3, #29]
 800ade4:	4b11      	ldr	r3, [pc, #68]	@ (800ae2c <PEF_Evaluate_Current_Suppression_Res+0x50>)
 800ade6:	71da      	strb	r2, [r3, #7]
	myEVSE.charging_stop_control = eth_rx_buffer[30];
 800ade8:	4b0f      	ldr	r3, [pc, #60]	@ (800ae28 <PEF_Evaluate_Current_Suppression_Res+0x4c>)
 800adea:	7f9a      	ldrb	r2, [r3, #30]
 800adec:	4b0f      	ldr	r3, [pc, #60]	@ (800ae2c <PEF_Evaluate_Current_Suppression_Res+0x50>)
 800adee:	741a      	strb	r2, [r3, #16]
	myEVSE.output_voltage = (eth_rx_buffer[31] << 8) + eth_rx_buffer[32];
 800adf0:	4b0d      	ldr	r3, [pc, #52]	@ (800ae28 <PEF_Evaluate_Current_Suppression_Res+0x4c>)
 800adf2:	7fdb      	ldrb	r3, [r3, #31]
 800adf4:	021b      	lsls	r3, r3, #8
 800adf6:	b29b      	uxth	r3, r3
 800adf8:	4a0b      	ldr	r2, [pc, #44]	@ (800ae28 <PEF_Evaluate_Current_Suppression_Res+0x4c>)
 800adfa:	f892 2020 	ldrb.w	r2, [r2, #32]
 800adfe:	4413      	add	r3, r2
 800ae00:	b29a      	uxth	r2, r3
 800ae02:	4b0a      	ldr	r3, [pc, #40]	@ (800ae2c <PEF_Evaluate_Current_Suppression_Res+0x50>)
 800ae04:	811a      	strh	r2, [r3, #8]
	myEVSE.output_current = (eth_rx_buffer[33] << 8) + eth_rx_buffer[34];
 800ae06:	4b08      	ldr	r3, [pc, #32]	@ (800ae28 <PEF_Evaluate_Current_Suppression_Res+0x4c>)
 800ae08:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 800ae0c:	021b      	lsls	r3, r3, #8
 800ae0e:	b29b      	uxth	r3, r3
 800ae10:	4a05      	ldr	r2, [pc, #20]	@ (800ae28 <PEF_Evaluate_Current_Suppression_Res+0x4c>)
 800ae12:	f892 2022 	ldrb.w	r2, [r2, #34]	@ 0x22
 800ae16:	4413      	add	r3, r2
 800ae18:	b29a      	uxth	r2, r3
 800ae1a:	4b04      	ldr	r3, [pc, #16]	@ (800ae2c <PEF_Evaluate_Current_Suppression_Res+0x50>)
 800ae1c:	815a      	strh	r2, [r3, #10]
}
 800ae1e:	bf00      	nop
 800ae20:	46bd      	mov	sp, r7
 800ae22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae26:	4770      	bx	lr
 800ae28:	20001f7c 	.word	0x20001f7c
 800ae2c:	200021cc 	.word	0x200021cc

0800ae30 <PEF_Compose_Zero_Current_Confirm_Req>:

void PEF_Compose_Zero_Current_Confirm_Req(void) {
 800ae30:	b580      	push	{r7, lr}
 800ae32:	af00      	add	r7, sp, #0
	/* Zero Current Confirm Request */
	eth_tx_size = 60;
 800ae34:	4b19      	ldr	r3, [pc, #100]	@ (800ae9c <PEF_Compose_Zero_Current_Confirm_Req+0x6c>)
 800ae36:	223c      	movs	r2, #60	@ 0x3c
 800ae38:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800ae3a:	f7ff fb1f 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800ae3e:	2100      	movs	r1, #0
 800ae40:	4817      	ldr	r0, [pc, #92]	@ (800aea0 <PEF_Compose_Zero_Current_Confirm_Req+0x70>)
 800ae42:	f7ff faef 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evseID, 6);
 800ae46:	2106      	movs	r1, #6
 800ae48:	4816      	ldr	r0, [pc, #88]	@ (800aea4 <PEF_Compose_Zero_Current_Confirm_Req+0x74>)
 800ae4a:	f7ff faeb 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800ae4e:	4b16      	ldr	r3, [pc, #88]	@ (800aea8 <PEF_Compose_Zero_Current_Confirm_Req+0x78>)
 800ae50:	2288      	movs	r2, #136	@ 0x88
 800ae52:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800ae54:	4b14      	ldr	r3, [pc, #80]	@ (800aea8 <PEF_Compose_Zero_Current_Confirm_Req+0x78>)
 800ae56:	22e1      	movs	r2, #225	@ 0xe1
 800ae58:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800ae5a:	4b13      	ldr	r3, [pc, #76]	@ (800aea8 <PEF_Compose_Zero_Current_Confirm_Req+0x78>)
 800ae5c:	2201      	movs	r2, #1
 800ae5e:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800ae60:	4b11      	ldr	r3, [pc, #68]	@ (800aea8 <PEF_Compose_Zero_Current_Confirm_Req+0x78>)
 800ae62:	22e0      	movs	r2, #224	@ 0xe0
 800ae64:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800ae66:	4b10      	ldr	r3, [pc, #64]	@ (800aea8 <PEF_Compose_Zero_Current_Confirm_Req+0x78>)
 800ae68:	2260      	movs	r2, #96	@ 0x60
 800ae6a:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800ae6c:	4b0e      	ldr	r3, [pc, #56]	@ (800aea8 <PEF_Compose_Zero_Current_Confirm_Req+0x78>)
 800ae6e:	2200      	movs	r2, #0
 800ae70:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800ae72:	4b0d      	ldr	r3, [pc, #52]	@ (800aea8 <PEF_Compose_Zero_Current_Confirm_Req+0x78>)
 800ae74:	2200      	movs	r2, #0
 800ae76:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800ae78:	2113      	movs	r1, #19
 800ae7a:	480c      	ldr	r0, [pc, #48]	@ (800aeac <PEF_Compose_Zero_Current_Confirm_Req+0x7c>)
 800ae7c:	f7ff fad2 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xB2; // Session + State
 800ae80:	4b09      	ldr	r3, [pc, #36]	@ (800aea8 <PEF_Compose_Zero_Current_Confirm_Req+0x78>)
 800ae82:	22b2      	movs	r2, #178	@ 0xb2
 800ae84:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x18; // Function + Message Type
 800ae86:	4b08      	ldr	r3, [pc, #32]	@ (800aea8 <PEF_Compose_Zero_Current_Confirm_Req+0x78>)
 800ae88:	2218      	movs	r2, #24
 800ae8a:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800ae8c:	4b06      	ldr	r3, [pc, #24]	@ (800aea8 <PEF_Compose_Zero_Current_Confirm_Req+0x78>)
 800ae8e:	2200      	movs	r2, #0
 800ae90:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800ae92:	4b05      	ldr	r3, [pc, #20]	@ (800aea8 <PEF_Compose_Zero_Current_Confirm_Req+0x78>)
 800ae94:	2200      	movs	r2, #0
 800ae96:	771a      	strb	r2, [r3, #28]
	// Body
}
 800ae98:	bf00      	nop
 800ae9a:	bd80      	pop	{r7, pc}
 800ae9c:	20001f7a 	.word	0x20001f7a
 800aea0:	200021b0 	.word	0x200021b0
 800aea4:	20000028 	.word	0x20000028
 800aea8:	20001e80 	.word	0x20001e80
 800aeac:	20000018 	.word	0x20000018

0800aeb0 <PEF_Compose_Zero_Current_Confirm_Cnf>:

void PEF_Compose_Zero_Current_Confirm_Cnf(void) {
 800aeb0:	b580      	push	{r7, lr}
 800aeb2:	af00      	add	r7, sp, #0
	/* Zero Current Confirm */
	eth_tx_size = 60;
 800aeb4:	4b19      	ldr	r3, [pc, #100]	@ (800af1c <PEF_Compose_Zero_Current_Confirm_Cnf+0x6c>)
 800aeb6:	223c      	movs	r2, #60	@ 0x3c
 800aeb8:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800aeba:	f7ff fadf 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800aebe:	2100      	movs	r1, #0
 800aec0:	4817      	ldr	r0, [pc, #92]	@ (800af20 <PEF_Compose_Zero_Current_Confirm_Cnf+0x70>)
 800aec2:	f7ff faaf 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evID, 6);
 800aec6:	2106      	movs	r1, #6
 800aec8:	4816      	ldr	r0, [pc, #88]	@ (800af24 <PEF_Compose_Zero_Current_Confirm_Cnf+0x74>)
 800aeca:	f7ff faab 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800aece:	4b16      	ldr	r3, [pc, #88]	@ (800af28 <PEF_Compose_Zero_Current_Confirm_Cnf+0x78>)
 800aed0:	2288      	movs	r2, #136	@ 0x88
 800aed2:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800aed4:	4b14      	ldr	r3, [pc, #80]	@ (800af28 <PEF_Compose_Zero_Current_Confirm_Cnf+0x78>)
 800aed6:	22e1      	movs	r2, #225	@ 0xe1
 800aed8:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800aeda:	4b13      	ldr	r3, [pc, #76]	@ (800af28 <PEF_Compose_Zero_Current_Confirm_Cnf+0x78>)
 800aedc:	2201      	movs	r2, #1
 800aede:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800aee0:	4b11      	ldr	r3, [pc, #68]	@ (800af28 <PEF_Compose_Zero_Current_Confirm_Cnf+0x78>)
 800aee2:	22e0      	movs	r2, #224	@ 0xe0
 800aee4:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800aee6:	4b10      	ldr	r3, [pc, #64]	@ (800af28 <PEF_Compose_Zero_Current_Confirm_Cnf+0x78>)
 800aee8:	2260      	movs	r2, #96	@ 0x60
 800aeea:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800aeec:	4b0e      	ldr	r3, [pc, #56]	@ (800af28 <PEF_Compose_Zero_Current_Confirm_Cnf+0x78>)
 800aeee:	2200      	movs	r2, #0
 800aef0:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800aef2:	4b0d      	ldr	r3, [pc, #52]	@ (800af28 <PEF_Compose_Zero_Current_Confirm_Cnf+0x78>)
 800aef4:	2200      	movs	r2, #0
 800aef6:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800aef8:	2113      	movs	r1, #19
 800aefa:	480c      	ldr	r0, [pc, #48]	@ (800af2c <PEF_Compose_Zero_Current_Confirm_Cnf+0x7c>)
 800aefc:	f7ff fa92 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xB2; // Session + State
 800af00:	4b09      	ldr	r3, [pc, #36]	@ (800af28 <PEF_Compose_Zero_Current_Confirm_Cnf+0x78>)
 800af02:	22b2      	movs	r2, #178	@ 0xb2
 800af04:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x19; // Function + Message Type
 800af06:	4b08      	ldr	r3, [pc, #32]	@ (800af28 <PEF_Compose_Zero_Current_Confirm_Cnf+0x78>)
 800af08:	2219      	movs	r2, #25
 800af0a:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800af0c:	4b06      	ldr	r3, [pc, #24]	@ (800af28 <PEF_Compose_Zero_Current_Confirm_Cnf+0x78>)
 800af0e:	2200      	movs	r2, #0
 800af10:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800af12:	4b05      	ldr	r3, [pc, #20]	@ (800af28 <PEF_Compose_Zero_Current_Confirm_Cnf+0x78>)
 800af14:	2200      	movs	r2, #0
 800af16:	771a      	strb	r2, [r3, #28]
	// Body
}
 800af18:	bf00      	nop
 800af1a:	bd80      	pop	{r7, pc}
 800af1c:	20001f7a 	.word	0x20001f7a
 800af20:	200021b0 	.word	0x200021b0
 800af24:	20000020 	.word	0x20000020
 800af28:	20001e80 	.word	0x20001e80
 800af2c:	20000018 	.word	0x20000018

0800af30 <PEF_Compose_Voltage_Verification_Req>:

void PEF_Compose_Voltage_Verification_Req(uint16_t output_voltage) {
 800af30:	b580      	push	{r7, lr}
 800af32:	b082      	sub	sp, #8
 800af34:	af00      	add	r7, sp, #0
 800af36:	4603      	mov	r3, r0
 800af38:	80fb      	strh	r3, [r7, #6]
	myEVSE.output_voltage = output_voltage;
 800af3a:	4a22      	ldr	r2, [pc, #136]	@ (800afc4 <PEF_Compose_Voltage_Verification_Req+0x94>)
 800af3c:	88fb      	ldrh	r3, [r7, #6]
 800af3e:	8113      	strh	r3, [r2, #8]

	/* Voltage Verification Request */
	eth_tx_size = 60;
 800af40:	4b21      	ldr	r3, [pc, #132]	@ (800afc8 <PEF_Compose_Voltage_Verification_Req+0x98>)
 800af42:	223c      	movs	r2, #60	@ 0x3c
 800af44:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800af46:	f7ff fa99 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800af4a:	2100      	movs	r1, #0
 800af4c:	481f      	ldr	r0, [pc, #124]	@ (800afcc <PEF_Compose_Voltage_Verification_Req+0x9c>)
 800af4e:	f7ff fa69 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evseID, 6);
 800af52:	2106      	movs	r1, #6
 800af54:	481e      	ldr	r0, [pc, #120]	@ (800afd0 <PEF_Compose_Voltage_Verification_Req+0xa0>)
 800af56:	f7ff fa65 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800af5a:	4b1e      	ldr	r3, [pc, #120]	@ (800afd4 <PEF_Compose_Voltage_Verification_Req+0xa4>)
 800af5c:	2288      	movs	r2, #136	@ 0x88
 800af5e:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800af60:	4b1c      	ldr	r3, [pc, #112]	@ (800afd4 <PEF_Compose_Voltage_Verification_Req+0xa4>)
 800af62:	22e1      	movs	r2, #225	@ 0xe1
 800af64:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800af66:	4b1b      	ldr	r3, [pc, #108]	@ (800afd4 <PEF_Compose_Voltage_Verification_Req+0xa4>)
 800af68:	2201      	movs	r2, #1
 800af6a:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800af6c:	4b19      	ldr	r3, [pc, #100]	@ (800afd4 <PEF_Compose_Voltage_Verification_Req+0xa4>)
 800af6e:	22e0      	movs	r2, #224	@ 0xe0
 800af70:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800af72:	4b18      	ldr	r3, [pc, #96]	@ (800afd4 <PEF_Compose_Voltage_Verification_Req+0xa4>)
 800af74:	2260      	movs	r2, #96	@ 0x60
 800af76:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800af78:	4b16      	ldr	r3, [pc, #88]	@ (800afd4 <PEF_Compose_Voltage_Verification_Req+0xa4>)
 800af7a:	2200      	movs	r2, #0
 800af7c:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800af7e:	4b15      	ldr	r3, [pc, #84]	@ (800afd4 <PEF_Compose_Voltage_Verification_Req+0xa4>)
 800af80:	2200      	movs	r2, #0
 800af82:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800af84:	2113      	movs	r1, #19
 800af86:	4814      	ldr	r0, [pc, #80]	@ (800afd8 <PEF_Compose_Voltage_Verification_Req+0xa8>)
 800af88:	f7ff fa4c 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xB2; // Session + State
 800af8c:	4b11      	ldr	r3, [pc, #68]	@ (800afd4 <PEF_Compose_Voltage_Verification_Req+0xa4>)
 800af8e:	22b2      	movs	r2, #178	@ 0xb2
 800af90:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x1C; // Function + Message Type
 800af92:	4b10      	ldr	r3, [pc, #64]	@ (800afd4 <PEF_Compose_Voltage_Verification_Req+0xa4>)
 800af94:	221c      	movs	r2, #28
 800af96:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800af98:	4b0e      	ldr	r3, [pc, #56]	@ (800afd4 <PEF_Compose_Voltage_Verification_Req+0xa4>)
 800af9a:	2200      	movs	r2, #0
 800af9c:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800af9e:	4b0d      	ldr	r3, [pc, #52]	@ (800afd4 <PEF_Compose_Voltage_Verification_Req+0xa4>)
 800afa0:	2200      	movs	r2, #0
 800afa2:	771a      	strb	r2, [r3, #28]
	// Body
	eth_tx_buffer[29] = (myEVSE.output_voltage >> 8);
 800afa4:	4b07      	ldr	r3, [pc, #28]	@ (800afc4 <PEF_Compose_Voltage_Verification_Req+0x94>)
 800afa6:	891b      	ldrh	r3, [r3, #8]
 800afa8:	0a1b      	lsrs	r3, r3, #8
 800afaa:	b29b      	uxth	r3, r3
 800afac:	b2da      	uxtb	r2, r3
 800afae:	4b09      	ldr	r3, [pc, #36]	@ (800afd4 <PEF_Compose_Voltage_Verification_Req+0xa4>)
 800afb0:	775a      	strb	r2, [r3, #29]
	eth_tx_buffer[30] = myEVSE.output_voltage;
 800afb2:	4b04      	ldr	r3, [pc, #16]	@ (800afc4 <PEF_Compose_Voltage_Verification_Req+0x94>)
 800afb4:	891b      	ldrh	r3, [r3, #8]
 800afb6:	b2da      	uxtb	r2, r3
 800afb8:	4b06      	ldr	r3, [pc, #24]	@ (800afd4 <PEF_Compose_Voltage_Verification_Req+0xa4>)
 800afba:	779a      	strb	r2, [r3, #30]
}
 800afbc:	bf00      	nop
 800afbe:	3708      	adds	r7, #8
 800afc0:	46bd      	mov	sp, r7
 800afc2:	bd80      	pop	{r7, pc}
 800afc4:	200021cc 	.word	0x200021cc
 800afc8:	20001f7a 	.word	0x20001f7a
 800afcc:	200021b0 	.word	0x200021b0
 800afd0:	20000028 	.word	0x20000028
 800afd4:	20001e80 	.word	0x20001e80
 800afd8:	20000018 	.word	0x20000018

0800afdc <PEF_Compose_Voltage_Verification_Cnf>:

void PEF_Compose_Voltage_Verification_Cnf(void) {
 800afdc:	b580      	push	{r7, lr}
 800afde:	af00      	add	r7, sp, #0
	/* Voltage Verification Confirm */
	eth_tx_size = 60;
 800afe0:	4b19      	ldr	r3, [pc, #100]	@ (800b048 <PEF_Compose_Voltage_Verification_Cnf+0x6c>)
 800afe2:	223c      	movs	r2, #60	@ 0x3c
 800afe4:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800afe6:	f7ff fa49 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800afea:	2100      	movs	r1, #0
 800afec:	4817      	ldr	r0, [pc, #92]	@ (800b04c <PEF_Compose_Voltage_Verification_Cnf+0x70>)
 800afee:	f7ff fa19 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evID, 6);
 800aff2:	2106      	movs	r1, #6
 800aff4:	4816      	ldr	r0, [pc, #88]	@ (800b050 <PEF_Compose_Voltage_Verification_Cnf+0x74>)
 800aff6:	f7ff fa15 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800affa:	4b16      	ldr	r3, [pc, #88]	@ (800b054 <PEF_Compose_Voltage_Verification_Cnf+0x78>)
 800affc:	2288      	movs	r2, #136	@ 0x88
 800affe:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800b000:	4b14      	ldr	r3, [pc, #80]	@ (800b054 <PEF_Compose_Voltage_Verification_Cnf+0x78>)
 800b002:	22e1      	movs	r2, #225	@ 0xe1
 800b004:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800b006:	4b13      	ldr	r3, [pc, #76]	@ (800b054 <PEF_Compose_Voltage_Verification_Cnf+0x78>)
 800b008:	2201      	movs	r2, #1
 800b00a:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800b00c:	4b11      	ldr	r3, [pc, #68]	@ (800b054 <PEF_Compose_Voltage_Verification_Cnf+0x78>)
 800b00e:	22e0      	movs	r2, #224	@ 0xe0
 800b010:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800b012:	4b10      	ldr	r3, [pc, #64]	@ (800b054 <PEF_Compose_Voltage_Verification_Cnf+0x78>)
 800b014:	2260      	movs	r2, #96	@ 0x60
 800b016:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800b018:	4b0e      	ldr	r3, [pc, #56]	@ (800b054 <PEF_Compose_Voltage_Verification_Cnf+0x78>)
 800b01a:	2200      	movs	r2, #0
 800b01c:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800b01e:	4b0d      	ldr	r3, [pc, #52]	@ (800b054 <PEF_Compose_Voltage_Verification_Cnf+0x78>)
 800b020:	2200      	movs	r2, #0
 800b022:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800b024:	2113      	movs	r1, #19
 800b026:	480c      	ldr	r0, [pc, #48]	@ (800b058 <PEF_Compose_Voltage_Verification_Cnf+0x7c>)
 800b028:	f7ff f9fc 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xB2; // Session + State
 800b02c:	4b09      	ldr	r3, [pc, #36]	@ (800b054 <PEF_Compose_Voltage_Verification_Cnf+0x78>)
 800b02e:	22b2      	movs	r2, #178	@ 0xb2
 800b030:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x1D; // Function + Message Type
 800b032:	4b08      	ldr	r3, [pc, #32]	@ (800b054 <PEF_Compose_Voltage_Verification_Cnf+0x78>)
 800b034:	221d      	movs	r2, #29
 800b036:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800b038:	4b06      	ldr	r3, [pc, #24]	@ (800b054 <PEF_Compose_Voltage_Verification_Cnf+0x78>)
 800b03a:	2200      	movs	r2, #0
 800b03c:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800b03e:	4b05      	ldr	r3, [pc, #20]	@ (800b054 <PEF_Compose_Voltage_Verification_Cnf+0x78>)
 800b040:	2200      	movs	r2, #0
 800b042:	771a      	strb	r2, [r3, #28]
	// Body
}
 800b044:	bf00      	nop
 800b046:	bd80      	pop	{r7, pc}
 800b048:	20001f7a 	.word	0x20001f7a
 800b04c:	200021b0 	.word	0x200021b0
 800b050:	20000020 	.word	0x20000020
 800b054:	20001e80 	.word	0x20001e80
 800b058:	20000018 	.word	0x20000018

0800b05c <PEF_Compose_Connector_Unlock_Req>:

void PEF_Evaluate_Voltage_Verification_Cnf(void) {
	myEVSE.output_voltage = (eth_rx_buffer[29] << 8) + eth_rx_buffer[30];
}

void PEF_Compose_Connector_Unlock_Req(void) {
 800b05c:	b580      	push	{r7, lr}
 800b05e:	af00      	add	r7, sp, #0
	/* Connector Unlock Request */
	eth_tx_size = 60;
 800b060:	4b19      	ldr	r3, [pc, #100]	@ (800b0c8 <PEF_Compose_Connector_Unlock_Req+0x6c>)
 800b062:	223c      	movs	r2, #60	@ 0x3c
 800b064:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800b066:	f7ff fa09 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800b06a:	2100      	movs	r1, #0
 800b06c:	4817      	ldr	r0, [pc, #92]	@ (800b0cc <PEF_Compose_Connector_Unlock_Req+0x70>)
 800b06e:	f7ff f9d9 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evseID, 6);
 800b072:	2106      	movs	r1, #6
 800b074:	4816      	ldr	r0, [pc, #88]	@ (800b0d0 <PEF_Compose_Connector_Unlock_Req+0x74>)
 800b076:	f7ff f9d5 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800b07a:	4b16      	ldr	r3, [pc, #88]	@ (800b0d4 <PEF_Compose_Connector_Unlock_Req+0x78>)
 800b07c:	2288      	movs	r2, #136	@ 0x88
 800b07e:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800b080:	4b14      	ldr	r3, [pc, #80]	@ (800b0d4 <PEF_Compose_Connector_Unlock_Req+0x78>)
 800b082:	22e1      	movs	r2, #225	@ 0xe1
 800b084:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800b086:	4b13      	ldr	r3, [pc, #76]	@ (800b0d4 <PEF_Compose_Connector_Unlock_Req+0x78>)
 800b088:	2201      	movs	r2, #1
 800b08a:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800b08c:	4b11      	ldr	r3, [pc, #68]	@ (800b0d4 <PEF_Compose_Connector_Unlock_Req+0x78>)
 800b08e:	22e0      	movs	r2, #224	@ 0xe0
 800b090:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800b092:	4b10      	ldr	r3, [pc, #64]	@ (800b0d4 <PEF_Compose_Connector_Unlock_Req+0x78>)
 800b094:	2260      	movs	r2, #96	@ 0x60
 800b096:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800b098:	4b0e      	ldr	r3, [pc, #56]	@ (800b0d4 <PEF_Compose_Connector_Unlock_Req+0x78>)
 800b09a:	2200      	movs	r2, #0
 800b09c:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800b09e:	4b0d      	ldr	r3, [pc, #52]	@ (800b0d4 <PEF_Compose_Connector_Unlock_Req+0x78>)
 800b0a0:	2200      	movs	r2, #0
 800b0a2:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800b0a4:	2113      	movs	r1, #19
 800b0a6:	480c      	ldr	r0, [pc, #48]	@ (800b0d8 <PEF_Compose_Connector_Unlock_Req+0x7c>)
 800b0a8:	f7ff f9bc 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xB2; // Session + State
 800b0ac:	4b09      	ldr	r3, [pc, #36]	@ (800b0d4 <PEF_Compose_Connector_Unlock_Req+0x78>)
 800b0ae:	22b2      	movs	r2, #178	@ 0xb2
 800b0b0:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x20; // Function + Message Type
 800b0b2:	4b08      	ldr	r3, [pc, #32]	@ (800b0d4 <PEF_Compose_Connector_Unlock_Req+0x78>)
 800b0b4:	2220      	movs	r2, #32
 800b0b6:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800b0b8:	4b06      	ldr	r3, [pc, #24]	@ (800b0d4 <PEF_Compose_Connector_Unlock_Req+0x78>)
 800b0ba:	2200      	movs	r2, #0
 800b0bc:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800b0be:	4b05      	ldr	r3, [pc, #20]	@ (800b0d4 <PEF_Compose_Connector_Unlock_Req+0x78>)
 800b0c0:	2200      	movs	r2, #0
 800b0c2:	771a      	strb	r2, [r3, #28]
	// Body
}
 800b0c4:	bf00      	nop
 800b0c6:	bd80      	pop	{r7, pc}
 800b0c8:	20001f7a 	.word	0x20001f7a
 800b0cc:	200021b0 	.word	0x200021b0
 800b0d0:	20000028 	.word	0x20000028
 800b0d4:	20001e80 	.word	0x20001e80
 800b0d8:	20000018 	.word	0x20000018

0800b0dc <PEF_Compose_Connector_Unlock_Cnf>:

void PEF_Compose_Connector_Unlock_Cnf(void) {
 800b0dc:	b580      	push	{r7, lr}
 800b0de:	af00      	add	r7, sp, #0
	/* Connector Unlock Confirm */
	eth_tx_size = 60;
 800b0e0:	4b19      	ldr	r3, [pc, #100]	@ (800b148 <PEF_Compose_Connector_Unlock_Cnf+0x6c>)
 800b0e2:	223c      	movs	r2, #60	@ 0x3c
 800b0e4:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800b0e6:	f7ff f9c9 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800b0ea:	2100      	movs	r1, #0
 800b0ec:	4817      	ldr	r0, [pc, #92]	@ (800b14c <PEF_Compose_Connector_Unlock_Cnf+0x70>)
 800b0ee:	f7ff f999 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evID, 6);
 800b0f2:	2106      	movs	r1, #6
 800b0f4:	4816      	ldr	r0, [pc, #88]	@ (800b150 <PEF_Compose_Connector_Unlock_Cnf+0x74>)
 800b0f6:	f7ff f995 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800b0fa:	4b16      	ldr	r3, [pc, #88]	@ (800b154 <PEF_Compose_Connector_Unlock_Cnf+0x78>)
 800b0fc:	2288      	movs	r2, #136	@ 0x88
 800b0fe:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800b100:	4b14      	ldr	r3, [pc, #80]	@ (800b154 <PEF_Compose_Connector_Unlock_Cnf+0x78>)
 800b102:	22e1      	movs	r2, #225	@ 0xe1
 800b104:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800b106:	4b13      	ldr	r3, [pc, #76]	@ (800b154 <PEF_Compose_Connector_Unlock_Cnf+0x78>)
 800b108:	2201      	movs	r2, #1
 800b10a:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800b10c:	4b11      	ldr	r3, [pc, #68]	@ (800b154 <PEF_Compose_Connector_Unlock_Cnf+0x78>)
 800b10e:	22e0      	movs	r2, #224	@ 0xe0
 800b110:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800b112:	4b10      	ldr	r3, [pc, #64]	@ (800b154 <PEF_Compose_Connector_Unlock_Cnf+0x78>)
 800b114:	2260      	movs	r2, #96	@ 0x60
 800b116:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800b118:	4b0e      	ldr	r3, [pc, #56]	@ (800b154 <PEF_Compose_Connector_Unlock_Cnf+0x78>)
 800b11a:	2200      	movs	r2, #0
 800b11c:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800b11e:	4b0d      	ldr	r3, [pc, #52]	@ (800b154 <PEF_Compose_Connector_Unlock_Cnf+0x78>)
 800b120:	2200      	movs	r2, #0
 800b122:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800b124:	2113      	movs	r1, #19
 800b126:	480c      	ldr	r0, [pc, #48]	@ (800b158 <PEF_Compose_Connector_Unlock_Cnf+0x7c>)
 800b128:	f7ff f97c 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xB2; // Session + State
 800b12c:	4b09      	ldr	r3, [pc, #36]	@ (800b154 <PEF_Compose_Connector_Unlock_Cnf+0x78>)
 800b12e:	22b2      	movs	r2, #178	@ 0xb2
 800b130:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x21; // Function + Message Type
 800b132:	4b08      	ldr	r3, [pc, #32]	@ (800b154 <PEF_Compose_Connector_Unlock_Cnf+0x78>)
 800b134:	2221      	movs	r2, #33	@ 0x21
 800b136:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800b138:	4b06      	ldr	r3, [pc, #24]	@ (800b154 <PEF_Compose_Connector_Unlock_Cnf+0x78>)
 800b13a:	2200      	movs	r2, #0
 800b13c:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800b13e:	4b05      	ldr	r3, [pc, #20]	@ (800b154 <PEF_Compose_Connector_Unlock_Cnf+0x78>)
 800b140:	2200      	movs	r2, #0
 800b142:	771a      	strb	r2, [r3, #28]
	// Body
}
 800b144:	bf00      	nop
 800b146:	bd80      	pop	{r7, pc}
 800b148:	20001f7a 	.word	0x20001f7a
 800b14c:	200021b0 	.word	0x200021b0
 800b150:	20000020 	.word	0x20000020
 800b154:	20001e80 	.word	0x20001e80
 800b158:	20000018 	.word	0x20000018

0800b15c <PEF_Compose_End_of_Charge_Req>:

void PEF_Compose_End_of_Charge_Req(void) {
 800b15c:	b580      	push	{r7, lr}
 800b15e:	af00      	add	r7, sp, #0
	/* End of Charge Request */
	eth_tx_size = 60;
 800b160:	4b19      	ldr	r3, [pc, #100]	@ (800b1c8 <PEF_Compose_End_of_Charge_Req+0x6c>)
 800b162:	223c      	movs	r2, #60	@ 0x3c
 800b164:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800b166:	f7ff f989 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800b16a:	2100      	movs	r1, #0
 800b16c:	4817      	ldr	r0, [pc, #92]	@ (800b1cc <PEF_Compose_End_of_Charge_Req+0x70>)
 800b16e:	f7ff f959 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evID, 6);
 800b172:	2106      	movs	r1, #6
 800b174:	4816      	ldr	r0, [pc, #88]	@ (800b1d0 <PEF_Compose_End_of_Charge_Req+0x74>)
 800b176:	f7ff f955 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800b17a:	4b16      	ldr	r3, [pc, #88]	@ (800b1d4 <PEF_Compose_End_of_Charge_Req+0x78>)
 800b17c:	2288      	movs	r2, #136	@ 0x88
 800b17e:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800b180:	4b14      	ldr	r3, [pc, #80]	@ (800b1d4 <PEF_Compose_End_of_Charge_Req+0x78>)
 800b182:	22e1      	movs	r2, #225	@ 0xe1
 800b184:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800b186:	4b13      	ldr	r3, [pc, #76]	@ (800b1d4 <PEF_Compose_End_of_Charge_Req+0x78>)
 800b188:	2201      	movs	r2, #1
 800b18a:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800b18c:	4b11      	ldr	r3, [pc, #68]	@ (800b1d4 <PEF_Compose_End_of_Charge_Req+0x78>)
 800b18e:	22e0      	movs	r2, #224	@ 0xe0
 800b190:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800b192:	4b10      	ldr	r3, [pc, #64]	@ (800b1d4 <PEF_Compose_End_of_Charge_Req+0x78>)
 800b194:	2260      	movs	r2, #96	@ 0x60
 800b196:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800b198:	4b0e      	ldr	r3, [pc, #56]	@ (800b1d4 <PEF_Compose_End_of_Charge_Req+0x78>)
 800b19a:	2200      	movs	r2, #0
 800b19c:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800b19e:	4b0d      	ldr	r3, [pc, #52]	@ (800b1d4 <PEF_Compose_End_of_Charge_Req+0x78>)
 800b1a0:	2200      	movs	r2, #0
 800b1a2:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800b1a4:	2113      	movs	r1, #19
 800b1a6:	480c      	ldr	r0, [pc, #48]	@ (800b1d8 <PEF_Compose_End_of_Charge_Req+0x7c>)
 800b1a8:	f7ff f93c 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xB2; // Session + State
 800b1ac:	4b09      	ldr	r3, [pc, #36]	@ (800b1d4 <PEF_Compose_End_of_Charge_Req+0x78>)
 800b1ae:	22b2      	movs	r2, #178	@ 0xb2
 800b1b0:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x24; // Function + Message Type
 800b1b2:	4b08      	ldr	r3, [pc, #32]	@ (800b1d4 <PEF_Compose_End_of_Charge_Req+0x78>)
 800b1b4:	2224      	movs	r2, #36	@ 0x24
 800b1b6:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800b1b8:	4b06      	ldr	r3, [pc, #24]	@ (800b1d4 <PEF_Compose_End_of_Charge_Req+0x78>)
 800b1ba:	2200      	movs	r2, #0
 800b1bc:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800b1be:	4b05      	ldr	r3, [pc, #20]	@ (800b1d4 <PEF_Compose_End_of_Charge_Req+0x78>)
 800b1c0:	2200      	movs	r2, #0
 800b1c2:	771a      	strb	r2, [r3, #28]
	// Body
}
 800b1c4:	bf00      	nop
 800b1c6:	bd80      	pop	{r7, pc}
 800b1c8:	20001f7a 	.word	0x20001f7a
 800b1cc:	200021b0 	.word	0x200021b0
 800b1d0:	20000020 	.word	0x20000020
 800b1d4:	20001e80 	.word	0x20001e80
 800b1d8:	20000018 	.word	0x20000018

0800b1dc <PEF_Compose_End_of_Charge_Cnf>:

void PEF_Compose_End_of_Charge_Cnf(void) {
 800b1dc:	b580      	push	{r7, lr}
 800b1de:	af00      	add	r7, sp, #0
	/* End of Charge Request */
	eth_tx_size = 60;
 800b1e0:	4b19      	ldr	r3, [pc, #100]	@ (800b248 <PEF_Compose_End_of_Charge_Cnf+0x6c>)
 800b1e2:	223c      	movs	r2, #60	@ 0x3c
 800b1e4:	801a      	strh	r2, [r3, #0]
	HPGP_Clean_Tx_Buffer();
 800b1e6:	f7ff f949 	bl	800a47c <HPGP_Clean_Tx_Buffer>
	/* Destination MAC */
	HPGP_Fill_Address(yourID, 0);
 800b1ea:	2100      	movs	r1, #0
 800b1ec:	4817      	ldr	r0, [pc, #92]	@ (800b24c <PEF_Compose_End_of_Charge_Cnf+0x70>)
 800b1ee:	f7ff f919 	bl	800a424 <HPGP_Fill_Address>
	/* Source MAC */
	HPGP_Fill_Address(evseID, 6);
 800b1f2:	2106      	movs	r1, #6
 800b1f4:	4816      	ldr	r0, [pc, #88]	@ (800b250 <PEF_Compose_End_of_Charge_Cnf+0x74>)
 800b1f6:	f7ff f915 	bl	800a424 <HPGP_Fill_Address>
	// Protocol
	eth_tx_buffer[12] = 0x88; // Protocol HomeplugAV
 800b1fa:	4b16      	ldr	r3, [pc, #88]	@ (800b254 <PEF_Compose_End_of_Charge_Cnf+0x78>)
 800b1fc:	2288      	movs	r2, #136	@ 0x88
 800b1fe:	731a      	strb	r2, [r3, #12]
	eth_tx_buffer[13] = 0xE1; //
 800b200:	4b14      	ldr	r3, [pc, #80]	@ (800b254 <PEF_Compose_End_of_Charge_Cnf+0x78>)
 800b202:	22e1      	movs	r2, #225	@ 0xe1
 800b204:	735a      	strb	r2, [r3, #13]
	eth_tx_buffer[14] = 0x01; // version
 800b206:	4b13      	ldr	r3, [pc, #76]	@ (800b254 <PEF_Compose_End_of_Charge_Cnf+0x78>)
 800b208:	2201      	movs	r2, #1
 800b20a:	739a      	strb	r2, [r3, #14]
	eth_tx_buffer[15] = 0xE0; // EXCHANGE_DATA
 800b20c:	4b11      	ldr	r3, [pc, #68]	@ (800b254 <PEF_Compose_End_of_Charge_Cnf+0x78>)
 800b20e:	22e0      	movs	r2, #224	@ 0xe0
 800b210:	73da      	strb	r2, [r3, #15]
	eth_tx_buffer[16] = 0x60; //
 800b212:	4b10      	ldr	r3, [pc, #64]	@ (800b254 <PEF_Compose_End_of_Charge_Cnf+0x78>)
 800b214:	2260      	movs	r2, #96	@ 0x60
 800b216:	741a      	strb	r2, [r3, #16]
	eth_tx_buffer[17] = 0x00; // 2 bytes fragmentation information. 0000 means: unfragmented.
 800b218:	4b0e      	ldr	r3, [pc, #56]	@ (800b254 <PEF_Compose_End_of_Charge_Cnf+0x78>)
 800b21a:	2200      	movs	r2, #0
 800b21c:	745a      	strb	r2, [r3, #17]
	eth_tx_buffer[18] = 0x00; //
 800b21e:	4b0d      	ldr	r3, [pc, #52]	@ (800b254 <PEF_Compose_End_of_Charge_Cnf+0x78>)
 800b220:	2200      	movs	r2, #0
 800b222:	749a      	strb	r2, [r3, #18]
	/* Exchange Data */
	// Header
	HPGP_Fill_Address(sessionID, 19); // Session ID
 800b224:	2113      	movs	r1, #19
 800b226:	480c      	ldr	r0, [pc, #48]	@ (800b258 <PEF_Compose_End_of_Charge_Cnf+0x7c>)
 800b228:	f7ff f8fc 	bl	800a424 <HPGP_Fill_Address>
	eth_tx_buffer[25] = 0xB2; // Session + State
 800b22c:	4b09      	ldr	r3, [pc, #36]	@ (800b254 <PEF_Compose_End_of_Charge_Cnf+0x78>)
 800b22e:	22b2      	movs	r2, #178	@ 0xb2
 800b230:	765a      	strb	r2, [r3, #25]
	eth_tx_buffer[26] = 0x25; // Function + Message Type
 800b232:	4b08      	ldr	r3, [pc, #32]	@ (800b254 <PEF_Compose_End_of_Charge_Cnf+0x78>)
 800b234:	2225      	movs	r2, #37	@ 0x25
 800b236:	769a      	strb	r2, [r3, #26]
	eth_tx_buffer[27] = 0x00;	// 2 bytes fault code
 800b238:	4b06      	ldr	r3, [pc, #24]	@ (800b254 <PEF_Compose_End_of_Charge_Cnf+0x78>)
 800b23a:	2200      	movs	r2, #0
 800b23c:	76da      	strb	r2, [r3, #27]
	eth_tx_buffer[28] = 0x00;
 800b23e:	4b05      	ldr	r3, [pc, #20]	@ (800b254 <PEF_Compose_End_of_Charge_Cnf+0x78>)
 800b240:	2200      	movs	r2, #0
 800b242:	771a      	strb	r2, [r3, #28]
	// Body
}
 800b244:	bf00      	nop
 800b246:	bd80      	pop	{r7, pc}
 800b248:	20001f7a 	.word	0x20001f7a
 800b24c:	200021b0 	.word	0x200021b0
 800b250:	20000028 	.word	0x20000028
 800b254:	20001e80 	.word	0x20001e80
 800b258:	20000018 	.word	0x20000018

0800b25c <PEF_Get_Sequence_State>:

uint16_t PEF_Get_Sequence_State(void) {
 800b25c:	b480      	push	{r7}
 800b25e:	b083      	sub	sp, #12
 800b260:	af00      	add	r7, sp, #0
	uint16_t message_type;
	message_type = (eth_rx_buffer[25] << 8) + eth_rx_buffer[26];
 800b262:	4b07      	ldr	r3, [pc, #28]	@ (800b280 <PEF_Get_Sequence_State+0x24>)
 800b264:	7e5b      	ldrb	r3, [r3, #25]
 800b266:	021b      	lsls	r3, r3, #8
 800b268:	b29b      	uxth	r3, r3
 800b26a:	4a05      	ldr	r2, [pc, #20]	@ (800b280 <PEF_Get_Sequence_State+0x24>)
 800b26c:	7e92      	ldrb	r2, [r2, #26]
 800b26e:	4413      	add	r3, r2
 800b270:	80fb      	strh	r3, [r7, #6]
	return message_type;
 800b272:	88fb      	ldrh	r3, [r7, #6]
}
 800b274:	4618      	mov	r0, r3
 800b276:	370c      	adds	r7, #12
 800b278:	46bd      	mov	sp, r7
 800b27a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b27e:	4770      	bx	lr
 800b280:	20001f7c 	.word	0x20001f7c

0800b284 <PEF_Reset_RXBUFFER>:
void PEF_Reset_RXBUFFER() {
 800b284:	b480      	push	{r7}
 800b286:	af00      	add	r7, sp, #0
	eth_rx_buffer[25] = 0;
 800b288:	4b05      	ldr	r3, [pc, #20]	@ (800b2a0 <PEF_Reset_RXBUFFER+0x1c>)
 800b28a:	2200      	movs	r2, #0
 800b28c:	765a      	strb	r2, [r3, #25]
	eth_rx_buffer[26] = 0;
 800b28e:	4b04      	ldr	r3, [pc, #16]	@ (800b2a0 <PEF_Reset_RXBUFFER+0x1c>)
 800b290:	2200      	movs	r2, #0
 800b292:	769a      	strb	r2, [r3, #26]
}
 800b294:	bf00      	nop
 800b296:	46bd      	mov	sp, r7
 800b298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b29c:	4770      	bx	lr
 800b29e:	bf00      	nop
 800b2a0:	20001f7c 	.word	0x20001f7c

0800b2a4 <PEF_Handle_Initialization_Req>:

void PEF_Handle_Initialization_Req(void) {
 800b2a4:	b580      	push	{r7, lr}
 800b2a6:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received INITIALIZATION.REQ ");
 800b2a8:	4906      	ldr	r1, [pc, #24]	@ (800b2c4 <PEF_Handle_Initialization_Req+0x20>)
 800b2aa:	4807      	ldr	r0, [pc, #28]	@ (800b2c8 <PEF_Handle_Initialization_Req+0x24>)
 800b2ac:	f000 fb8a 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b2b0:	f7f5 fa42 	bl	8000738 <Serial_Print>

	PEF_Evaluate_Initialization();
 800b2b4:	f7ff f952 	bl	800a55c <PEF_Evaluate_Initialization>
	PEF_Compose_Initialization_Cnf();
 800b2b8:	f7ff f910 	bl	800a4dc <PEF_Compose_Initialization_Cnf>
	SPI_QCA7000_Send_Eth_Frame();
 800b2bc:	f7fe fd34 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
}
 800b2c0:	bf00      	nop
 800b2c2:	bd80      	pop	{r7, pc}
 800b2c4:	0800cfe4 	.word	0x0800cfe4
 800b2c8:	200005e0 	.word	0x200005e0

0800b2cc <PEF_Handle_Initialization_Cnf>:

void PEF_Handle_Initialization_Cnf(void) {
 800b2cc:	b580      	push	{r7, lr}
 800b2ce:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received INITIALIZATION.CNF ");
 800b2d0:	4906      	ldr	r1, [pc, #24]	@ (800b2ec <PEF_Handle_Initialization_Cnf+0x20>)
 800b2d2:	4807      	ldr	r0, [pc, #28]	@ (800b2f0 <PEF_Handle_Initialization_Cnf+0x24>)
 800b2d4:	f000 fb76 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b2d8:	f7f5 fa2e 	bl	8000738 <Serial_Print>

	PEF_Evaluate_Initialization();
 800b2dc:	f7ff f93e 	bl	800a55c <PEF_Evaluate_Initialization>
	PEF_Compose_Parameter_Exchange_Req();
 800b2e0:	f7ff f94e 	bl	800a580 <PEF_Compose_Parameter_Exchange_Req>
	SPI_QCA7000_Send_Eth_Frame();
 800b2e4:	f7fe fd20 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
}
 800b2e8:	bf00      	nop
 800b2ea:	bd80      	pop	{r7, pc}
 800b2ec:	0800d008 	.word	0x0800d008
 800b2f0:	200005e0 	.word	0x200005e0

0800b2f4 <PEF_Handle_Parameter_Exchange_Req>:

void PEF_Handle_Parameter_Exchange_Req(void) {
 800b2f4:	b580      	push	{r7, lr}
 800b2f6:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received PARAMETER_EXCHANGE.REQ ");
 800b2f8:	4906      	ldr	r1, [pc, #24]	@ (800b314 <PEF_Handle_Parameter_Exchange_Req+0x20>)
 800b2fa:	4807      	ldr	r0, [pc, #28]	@ (800b318 <PEF_Handle_Parameter_Exchange_Req+0x24>)
 800b2fc:	f000 fb62 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b300:	f7f5 fa1a 	bl	8000738 <Serial_Print>

	PEF_Evaluate_Parameter_Exchange_Req();
 800b304:	f7ff fa84 	bl	800a810 <PEF_Evaluate_Parameter_Exchange_Req>
	PEF_Compose_Parameter_Exchange_Res();
 800b308:	f7ff f9d0 	bl	800a6ac <PEF_Compose_Parameter_Exchange_Res>
	SPI_QCA7000_Send_Eth_Frame();
 800b30c:	f7fe fd0c 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
}
 800b310:	bf00      	nop
 800b312:	bd80      	pop	{r7, pc}
 800b314:	0800d02c 	.word	0x0800d02c
 800b318:	200005e0 	.word	0x200005e0

0800b31c <PEF_Handle_Parameter_Exchange_Res>:

void PEF_Handle_Parameter_Exchange_Res(void) {
 800b31c:	b580      	push	{r7, lr}
 800b31e:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received PARAMETER_EXCHANGE.RES ");
 800b320:	4906      	ldr	r1, [pc, #24]	@ (800b33c <PEF_Handle_Parameter_Exchange_Res+0x20>)
 800b322:	4807      	ldr	r0, [pc, #28]	@ (800b340 <PEF_Handle_Parameter_Exchange_Res+0x24>)
 800b324:	f000 fb4e 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b328:	f7f5 fa06 	bl	8000738 <Serial_Print>

	PEF_Evaluate_Parameter_Exchange_Res();
 800b32c:	f7ff fab2 	bl	800a894 <PEF_Evaluate_Parameter_Exchange_Res>
	PEF_Compose_Parameter_Exchange_Cnf();
 800b330:	f7ff fa2e 	bl	800a790 <PEF_Compose_Parameter_Exchange_Cnf>
	SPI_QCA7000_Send_Eth_Frame();
 800b334:	f7fe fcf8 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
}
 800b338:	bf00      	nop
 800b33a:	bd80      	pop	{r7, pc}
 800b33c:	0800d054 	.word	0x0800d054
 800b340:	200005e0 	.word	0x200005e0

0800b344 <PEF_Handle_Parameter_Exchange_Cnf>:

void PEF_Handle_Parameter_Exchange_Cnf(void) {
 800b344:	b580      	push	{r7, lr}
 800b346:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received PARAMETER_EXCHANGE.CNF ");
 800b348:	4903      	ldr	r1, [pc, #12]	@ (800b358 <PEF_Handle_Parameter_Exchange_Cnf+0x14>)
 800b34a:	4804      	ldr	r0, [pc, #16]	@ (800b35c <PEF_Handle_Parameter_Exchange_Cnf+0x18>)
 800b34c:	f000 fb3a 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b350:	f7f5 f9f2 	bl	8000738 <Serial_Print>
}
 800b354:	bf00      	nop
 800b356:	bd80      	pop	{r7, pc}
 800b358:	0800d07c 	.word	0x0800d07c
 800b35c:	200005e0 	.word	0x200005e0

0800b360 <PEF_Handle_Connector_Lock_Req>:

void PEF_Handle_Connector_Lock_Req(void) {
 800b360:	b580      	push	{r7, lr}
 800b362:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received CONNECTOR_LOCK.REQ ");
 800b364:	4905      	ldr	r1, [pc, #20]	@ (800b37c <PEF_Handle_Connector_Lock_Req+0x1c>)
 800b366:	4806      	ldr	r0, [pc, #24]	@ (800b380 <PEF_Handle_Connector_Lock_Req+0x20>)
 800b368:	f000 fb2c 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b36c:	f7f5 f9e4 	bl	8000738 <Serial_Print>

	PEF_Compose_Connector_Lock_Cnf();
 800b370:	f7ff faba 	bl	800a8e8 <PEF_Compose_Connector_Lock_Cnf>
	SPI_QCA7000_Send_Eth_Frame();
 800b374:	f7fe fcd8 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
}
 800b378:	bf00      	nop
 800b37a:	bd80      	pop	{r7, pc}
 800b37c:	0800d0a4 	.word	0x0800d0a4
 800b380:	200005e0 	.word	0x200005e0

0800b384 <PEF_Handle_Connector_Lock_Cnf>:

void PEF_Handle_Connector_Lock_Cnf(void) {
 800b384:	b580      	push	{r7, lr}
 800b386:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received CONNECTOR_LOCK.CNF ");
 800b388:	4903      	ldr	r1, [pc, #12]	@ (800b398 <PEF_Handle_Connector_Lock_Cnf+0x14>)
 800b38a:	4804      	ldr	r0, [pc, #16]	@ (800b39c <PEF_Handle_Connector_Lock_Cnf+0x18>)
 800b38c:	f000 fb1a 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b390:	f7f5 f9d2 	bl	8000738 <Serial_Print>
}
 800b394:	bf00      	nop
 800b396:	bd80      	pop	{r7, pc}
 800b398:	0800d0c8 	.word	0x0800d0c8
 800b39c:	200005e0 	.word	0x200005e0

0800b3a0 <PEF_Handle_Contactor_Close_Req>:

void PEF_Handle_Contactor_Close_Req(void) {
 800b3a0:	b580      	push	{r7, lr}
 800b3a2:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received CONTACTOR_CLOSE.REQ ");
 800b3a4:	4905      	ldr	r1, [pc, #20]	@ (800b3bc <PEF_Handle_Contactor_Close_Req+0x1c>)
 800b3a6:	4806      	ldr	r0, [pc, #24]	@ (800b3c0 <PEF_Handle_Contactor_Close_Req+0x20>)
 800b3a8:	f000 fb0c 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b3ac:	f7f5 f9c4 	bl	8000738 <Serial_Print>

	PEF_Compose_Contactor_Close_Cnf();
 800b3b0:	f7ff fb1a 	bl	800a9e8 <PEF_Compose_Contactor_Close_Cnf>
	SPI_QCA7000_Send_Eth_Frame();
 800b3b4:	f7fe fcb8 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>

	//	PEF_Compose_Charging_Current_Demand_Req(current_request, system_fault, shift_pos, current_battery);
	//	SPI_QCA7000_Send_Eth_Frame();
}
 800b3b8:	bf00      	nop
 800b3ba:	bd80      	pop	{r7, pc}
 800b3bc:	0800d0ec 	.word	0x0800d0ec
 800b3c0:	200005e0 	.word	0x200005e0

0800b3c4 <PEF_Handle_Contactor_Close_Cnf>:

void PEF_Handle_Contactor_Close_Cnf(void) {
 800b3c4:	b580      	push	{r7, lr}
 800b3c6:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received CONTACTOR_CLOSE.CNF ");
 800b3c8:	4903      	ldr	r1, [pc, #12]	@ (800b3d8 <PEF_Handle_Contactor_Close_Cnf+0x14>)
 800b3ca:	4804      	ldr	r0, [pc, #16]	@ (800b3dc <PEF_Handle_Contactor_Close_Cnf+0x18>)
 800b3cc:	f000 fafa 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b3d0:	f7f5 f9b2 	bl	8000738 <Serial_Print>
}
 800b3d4:	bf00      	nop
 800b3d6:	bd80      	pop	{r7, pc}
 800b3d8:	0800d110 	.word	0x0800d110
 800b3dc:	200005e0 	.word	0x200005e0

0800b3e0 <PEF_Handle_Charging_Current_Demand_Req>:

void PEF_Handle_Charging_Current_Demand_Req(void) {
 800b3e0:	b580      	push	{r7, lr}
 800b3e2:	b084      	sub	sp, #16
 800b3e4:	af02      	add	r7, sp, #8
	sprintf(serial_output_buffer,
 800b3e6:	4910      	ldr	r1, [pc, #64]	@ (800b428 <PEF_Handle_Charging_Current_Demand_Req+0x48>)
 800b3e8:	4810      	ldr	r0, [pc, #64]	@ (800b42c <PEF_Handle_Charging_Current_Demand_Req+0x4c>)
 800b3ea:	f000 faeb 	bl	800b9c4 <siprintf>
			"[PLC] received CHARGING_CURRENT_DEMAND.REQ ");
	Serial_Print();
 800b3ee:	f7f5 f9a3 	bl	8000738 <Serial_Print>

	PEF_Evaluate_Charging_Current_Demand_Req();
 800b3f2:	f7ff fbd3 	bl	800ab9c <PEF_Evaluate_Charging_Current_Demand_Req>
	uint16_t a = 0x0123;
 800b3f6:	f240 1323 	movw	r3, #291	@ 0x123
 800b3fa:	80fb      	strh	r3, [r7, #6]
	uint16_t b = 0x0050;
 800b3fc:	2350      	movs	r3, #80	@ 0x50
 800b3fe:	80bb      	strh	r3, [r7, #4]
	uint16_t c = 0x0280;
 800b400:	f44f 7320 	mov.w	r3, #640	@ 0x280
 800b404:	807b      	strh	r3, [r7, #2]
	PEF_Compose_Charging_Current_Demand_Res(0xAA, a, b, c, 0xAA, 0xAA);
 800b406:	887b      	ldrh	r3, [r7, #2]
 800b408:	88ba      	ldrh	r2, [r7, #4]
 800b40a:	88f9      	ldrh	r1, [r7, #6]
 800b40c:	20aa      	movs	r0, #170	@ 0xaa
 800b40e:	9001      	str	r0, [sp, #4]
 800b410:	20aa      	movs	r0, #170	@ 0xaa
 800b412:	9000      	str	r0, [sp, #0]
 800b414:	20aa      	movs	r0, #170	@ 0xaa
 800b416:	f7ff fb27 	bl	800aa68 <PEF_Compose_Charging_Current_Demand_Res>
	SPI_QCA7000_Send_Eth_Frame();
 800b41a:	f7fe fc85 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
}
 800b41e:	bf00      	nop
 800b420:	3708      	adds	r7, #8
 800b422:	46bd      	mov	sp, r7
 800b424:	bd80      	pop	{r7, pc}
 800b426:	bf00      	nop
 800b428:	0800d134 	.word	0x0800d134
 800b42c:	200005e0 	.word	0x200005e0

0800b430 <PEF_Handle_Charging_Current_Demand_Res>:

void PEF_Handle_Charging_Current_Demand_Res(void) {
 800b430:	b580      	push	{r7, lr}
 800b432:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer,
 800b434:	4904      	ldr	r1, [pc, #16]	@ (800b448 <PEF_Handle_Charging_Current_Demand_Res+0x18>)
 800b436:	4805      	ldr	r0, [pc, #20]	@ (800b44c <PEF_Handle_Charging_Current_Demand_Res+0x1c>)
 800b438:	f000 fac4 	bl	800b9c4 <siprintf>
			"[PLC] received CHARGING_CURRENT_DEMAND.RES ");
	Serial_Print();
 800b43c:	f7f5 f97c 	bl	8000738 <Serial_Print>

	PEF_Evaluate_Charging_Current_Demand_Res();
 800b440:	f7ff fbd0 	bl	800abe4 <PEF_Evaluate_Charging_Current_Demand_Res>
}
 800b444:	bf00      	nop
 800b446:	bd80      	pop	{r7, pc}
 800b448:	0800d160 	.word	0x0800d160
 800b44c:	200005e0 	.word	0x200005e0

0800b450 <PEF_Handle_Current_Suppression_Req>:

void PEF_Handle_Current_Suppression_Req(void) {
 800b450:	b580      	push	{r7, lr}
 800b452:	b082      	sub	sp, #8
 800b454:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received CURRENT_SUPPRESSION.REQ ");
 800b456:	490b      	ldr	r1, [pc, #44]	@ (800b484 <PEF_Handle_Current_Suppression_Req+0x34>)
 800b458:	480b      	ldr	r0, [pc, #44]	@ (800b488 <PEF_Handle_Current_Suppression_Req+0x38>)
 800b45a:	f000 fab3 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b45e:	f7f5 f96b 	bl	8000738 <Serial_Print>

	uint16_t a = 0x0123;
 800b462:	f240 1323 	movw	r3, #291	@ 0x123
 800b466:	80fb      	strh	r3, [r7, #6]
	uint16_t b = 0x0050;
 800b468:	2350      	movs	r3, #80	@ 0x50
 800b46a:	80bb      	strh	r3, [r7, #4]
	PEF_Compose_Current_Suppression_Res(0xAA, 0xAA, a, b);
 800b46c:	88bb      	ldrh	r3, [r7, #4]
 800b46e:	88fa      	ldrh	r2, [r7, #6]
 800b470:	21aa      	movs	r1, #170	@ 0xaa
 800b472:	20aa      	movs	r0, #170	@ 0xaa
 800b474:	f7ff fbf2 	bl	800ac5c <PEF_Compose_Current_Suppression_Res>
	SPI_QCA7000_Send_Eth_Frame();
 800b478:	f7fe fc56 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
}
 800b47c:	bf00      	nop
 800b47e:	3708      	adds	r7, #8
 800b480:	46bd      	mov	sp, r7
 800b482:	bd80      	pop	{r7, pc}
 800b484:	0800d18c 	.word	0x0800d18c
 800b488:	200005e0 	.word	0x200005e0

0800b48c <PEF_Handle_Current_Suppression_Res>:

void PEF_Handle_Current_Suppression_Res(void) {
 800b48c:	b580      	push	{r7, lr}
 800b48e:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received CURRENT_SUPPRESSION.RES ");
 800b490:	4906      	ldr	r1, [pc, #24]	@ (800b4ac <PEF_Handle_Current_Suppression_Res+0x20>)
 800b492:	4807      	ldr	r0, [pc, #28]	@ (800b4b0 <PEF_Handle_Current_Suppression_Res+0x24>)
 800b494:	f000 fa96 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b498:	f7f5 f94e 	bl	8000738 <Serial_Print>

	PEF_Evaluate_Current_Suppression_Res();
 800b49c:	f7ff fc9e 	bl	800addc <PEF_Evaluate_Current_Suppression_Res>
	PEF_Compose_Current_Suppression_Cnf();
 800b4a0:	f7ff fc5c 	bl	800ad5c <PEF_Compose_Current_Suppression_Cnf>
	SPI_QCA7000_Send_Eth_Frame();
 800b4a4:	f7fe fc40 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
}
 800b4a8:	bf00      	nop
 800b4aa:	bd80      	pop	{r7, pc}
 800b4ac:	0800d1b4 	.word	0x0800d1b4
 800b4b0:	200005e0 	.word	0x200005e0

0800b4b4 <PEF_Handle_Current_Suppression_Cnf>:

void PEF_Handle_Current_Suppression_Cnf(void) {
 800b4b4:	b580      	push	{r7, lr}
 800b4b6:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received CURRENT_SUPPRESSION.CNF ");
 800b4b8:	4905      	ldr	r1, [pc, #20]	@ (800b4d0 <PEF_Handle_Current_Suppression_Cnf+0x1c>)
 800b4ba:	4806      	ldr	r0, [pc, #24]	@ (800b4d4 <PEF_Handle_Current_Suppression_Cnf+0x20>)
 800b4bc:	f000 fa82 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b4c0:	f7f5 f93a 	bl	8000738 <Serial_Print>

	PEF_Compose_Zero_Current_Confirm_Req();
 800b4c4:	f7ff fcb4 	bl	800ae30 <PEF_Compose_Zero_Current_Confirm_Req>
	SPI_QCA7000_Send_Eth_Frame();
 800b4c8:	f7fe fc2e 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
}
 800b4cc:	bf00      	nop
 800b4ce:	bd80      	pop	{r7, pc}
 800b4d0:	0800d1dc 	.word	0x0800d1dc
 800b4d4:	200005e0 	.word	0x200005e0

0800b4d8 <PEF_Handle_Zero_CURRENT_CONFIRM_Req>:

void PEF_Handle_Zero_CURRENT_CONFIRM_Req(void) {
 800b4d8:	b580      	push	{r7, lr}
 800b4da:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received ZERO_CURRENT_CONFIRM.REQ ");
 800b4dc:	4905      	ldr	r1, [pc, #20]	@ (800b4f4 <PEF_Handle_Zero_CURRENT_CONFIRM_Req+0x1c>)
 800b4de:	4806      	ldr	r0, [pc, #24]	@ (800b4f8 <PEF_Handle_Zero_CURRENT_CONFIRM_Req+0x20>)
 800b4e0:	f000 fa70 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b4e4:	f7f5 f928 	bl	8000738 <Serial_Print>

	PEF_Compose_Zero_Current_Confirm_Cnf();
 800b4e8:	f7ff fce2 	bl	800aeb0 <PEF_Compose_Zero_Current_Confirm_Cnf>
	SPI_QCA7000_Send_Eth_Frame();
 800b4ec:	f7fe fc1c 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
}
 800b4f0:	bf00      	nop
 800b4f2:	bd80      	pop	{r7, pc}
 800b4f4:	0800d204 	.word	0x0800d204
 800b4f8:	200005e0 	.word	0x200005e0

0800b4fc <PEF_Handle_Zero_CURRENT_CONFIRM_Cnf>:

void PEF_Handle_Zero_CURRENT_CONFIRM_Cnf(void) {
 800b4fc:	b580      	push	{r7, lr}
 800b4fe:	b082      	sub	sp, #8
 800b500:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received ZERO_CURRENT_CONFIRM.CNF ");
 800b502:	4909      	ldr	r1, [pc, #36]	@ (800b528 <PEF_Handle_Zero_CURRENT_CONFIRM_Cnf+0x2c>)
 800b504:	4809      	ldr	r0, [pc, #36]	@ (800b52c <PEF_Handle_Zero_CURRENT_CONFIRM_Cnf+0x30>)
 800b506:	f000 fa5d 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b50a:	f7f5 f915 	bl	8000738 <Serial_Print>

	uint16_t vol = 0;
 800b50e:	2300      	movs	r3, #0
 800b510:	80fb      	strh	r3, [r7, #6]
	PEF_Compose_Voltage_Verification_Req(vol);
 800b512:	88fb      	ldrh	r3, [r7, #6]
 800b514:	4618      	mov	r0, r3
 800b516:	f7ff fd0b 	bl	800af30 <PEF_Compose_Voltage_Verification_Req>
	SPI_QCA7000_Send_Eth_Frame();
 800b51a:	f7fe fc05 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
}
 800b51e:	bf00      	nop
 800b520:	3708      	adds	r7, #8
 800b522:	46bd      	mov	sp, r7
 800b524:	bd80      	pop	{r7, pc}
 800b526:	bf00      	nop
 800b528:	0800d230 	.word	0x0800d230
 800b52c:	200005e0 	.word	0x200005e0

0800b530 <PEF_Handle_Voltage_Verification_Req>:

void PEF_Handle_Voltage_Verification_Req(void) {
 800b530:	b580      	push	{r7, lr}
 800b532:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received VOLTAGE_VERIFICATION.REQ ");
 800b534:	4905      	ldr	r1, [pc, #20]	@ (800b54c <PEF_Handle_Voltage_Verification_Req+0x1c>)
 800b536:	4806      	ldr	r0, [pc, #24]	@ (800b550 <PEF_Handle_Voltage_Verification_Req+0x20>)
 800b538:	f000 fa44 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b53c:	f7f5 f8fc 	bl	8000738 <Serial_Print>

	PEF_Compose_Voltage_Verification_Cnf();
 800b540:	f7ff fd4c 	bl	800afdc <PEF_Compose_Voltage_Verification_Cnf>
	SPI_QCA7000_Send_Eth_Frame();
 800b544:	f7fe fbf0 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
}
 800b548:	bf00      	nop
 800b54a:	bd80      	pop	{r7, pc}
 800b54c:	0800d25c 	.word	0x0800d25c
 800b550:	200005e0 	.word	0x200005e0

0800b554 <PEF_Handle_Voltage_Verification_Cnf>:

void PEF_Handle_Voltage_Verification_Cnf(void) {
 800b554:	b580      	push	{r7, lr}
 800b556:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received VOLTAGE_VERIFICATION.CNF ");
 800b558:	4905      	ldr	r1, [pc, #20]	@ (800b570 <PEF_Handle_Voltage_Verification_Cnf+0x1c>)
 800b55a:	4806      	ldr	r0, [pc, #24]	@ (800b574 <PEF_Handle_Voltage_Verification_Cnf+0x20>)
 800b55c:	f000 fa32 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b560:	f7f5 f8ea 	bl	8000738 <Serial_Print>

	PEF_Compose_Connector_Unlock_Req();
 800b564:	f7ff fd7a 	bl	800b05c <PEF_Compose_Connector_Unlock_Req>
	SPI_QCA7000_Send_Eth_Frame();
 800b568:	f7fe fbde 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
}
 800b56c:	bf00      	nop
 800b56e:	bd80      	pop	{r7, pc}
 800b570:	0800d288 	.word	0x0800d288
 800b574:	200005e0 	.word	0x200005e0

0800b578 <PEF_Handle_Connector_Unlock_Req>:

void PEF_Handle_Connector_Unlock_Req(void) {
 800b578:	b580      	push	{r7, lr}
 800b57a:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received CONNECTOR_UNLOCK.REQ ");
 800b57c:	4905      	ldr	r1, [pc, #20]	@ (800b594 <PEF_Handle_Connector_Unlock_Req+0x1c>)
 800b57e:	4806      	ldr	r0, [pc, #24]	@ (800b598 <PEF_Handle_Connector_Unlock_Req+0x20>)
 800b580:	f000 fa20 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b584:	f7f5 f8d8 	bl	8000738 <Serial_Print>

	PEF_Compose_Connector_Unlock_Cnf();
 800b588:	f7ff fda8 	bl	800b0dc <PEF_Compose_Connector_Unlock_Cnf>
	SPI_QCA7000_Send_Eth_Frame();
 800b58c:	f7fe fbcc 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
}
 800b590:	bf00      	nop
 800b592:	bd80      	pop	{r7, pc}
 800b594:	0800d2b4 	.word	0x0800d2b4
 800b598:	200005e0 	.word	0x200005e0

0800b59c <PEF_Handle_Connector_Unlock_Cnf>:

void PEF_Handle_Connector_Unlock_Cnf(void) {
 800b59c:	b580      	push	{r7, lr}
 800b59e:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received CONNECTOR_UNLOCK.CNF ");
 800b5a0:	4905      	ldr	r1, [pc, #20]	@ (800b5b8 <PEF_Handle_Connector_Unlock_Cnf+0x1c>)
 800b5a2:	4806      	ldr	r0, [pc, #24]	@ (800b5bc <PEF_Handle_Connector_Unlock_Cnf+0x20>)
 800b5a4:	f000 fa0e 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b5a8:	f7f5 f8c6 	bl	8000738 <Serial_Print>

	PEF_Compose_End_of_Charge_Req();
 800b5ac:	f7ff fdd6 	bl	800b15c <PEF_Compose_End_of_Charge_Req>
	SPI_QCA7000_Send_Eth_Frame();
 800b5b0:	f7fe fbba 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
}
 800b5b4:	bf00      	nop
 800b5b6:	bd80      	pop	{r7, pc}
 800b5b8:	0800d2dc 	.word	0x0800d2dc
 800b5bc:	200005e0 	.word	0x200005e0

0800b5c0 <PEF_Handle_End_of_Charge_Req>:

void PEF_Handle_End_of_Charge_Req(void) {
 800b5c0:	b580      	push	{r7, lr}
 800b5c2:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received END_OF_CHARGE.REQ ");
 800b5c4:	4905      	ldr	r1, [pc, #20]	@ (800b5dc <PEF_Handle_End_of_Charge_Req+0x1c>)
 800b5c6:	4806      	ldr	r0, [pc, #24]	@ (800b5e0 <PEF_Handle_End_of_Charge_Req+0x20>)
 800b5c8:	f000 f9fc 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b5cc:	f7f5 f8b4 	bl	8000738 <Serial_Print>

	PEF_Compose_End_of_Charge_Cnf();
 800b5d0:	f7ff fe04 	bl	800b1dc <PEF_Compose_End_of_Charge_Cnf>
	SPI_QCA7000_Send_Eth_Frame();
 800b5d4:	f7fe fba8 	bl	8009d28 <SPI_QCA7000_Send_Eth_Frame>
}
 800b5d8:	bf00      	nop
 800b5da:	bd80      	pop	{r7, pc}
 800b5dc:	0800d304 	.word	0x0800d304
 800b5e0:	200005e0 	.word	0x200005e0

0800b5e4 <PEF_Handle_End_of_Charge_Cnf>:

void PEF_Handle_End_of_Charge_Cnf(void) {
 800b5e4:	b580      	push	{r7, lr}
 800b5e6:	af00      	add	r7, sp, #0
	sprintf(serial_output_buffer, "[PLC] received END_OF_CHARGE.CNF ");
 800b5e8:	4903      	ldr	r1, [pc, #12]	@ (800b5f8 <PEF_Handle_End_of_Charge_Cnf+0x14>)
 800b5ea:	4804      	ldr	r0, [pc, #16]	@ (800b5fc <PEF_Handle_End_of_Charge_Cnf+0x18>)
 800b5ec:	f000 f9ea 	bl	800b9c4 <siprintf>
	Serial_Print();
 800b5f0:	f7f5 f8a2 	bl	8000738 <Serial_Print>
}
 800b5f4:	bf00      	nop
 800b5f6:	bd80      	pop	{r7, pc}
 800b5f8:	0800d328 	.word	0x0800d328
 800b5fc:	200005e0 	.word	0x200005e0

0800b600 <PEF_Evaluate_Exchange_Data>:

void PEF_Evaluate_Exchange_Data() {
 800b600:	b580      	push	{r7, lr}
 800b602:	af00      	add	r7, sp, #0
	switch (PEF_Get_Sequence_State()) {
 800b604:	f7ff fe2a 	bl	800b25c <PEF_Get_Sequence_State>
 800b608:	4603      	mov	r3, r0
 800b60a:	f24c 1217 	movw	r2, #49431	@ 0xc117
 800b60e:	4293      	cmp	r3, r2
 800b610:	f300 80bb 	bgt.w	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
 800b614:	f24c 120c 	movw	r2, #49420	@ 0xc10c
 800b618:	4293      	cmp	r3, r2
 800b61a:	da07      	bge.n	800b62c <PEF_Evaluate_Exchange_Data+0x2c>
 800b61c:	f24b 0209 	movw	r2, #45065	@ 0xb009
 800b620:	4293      	cmp	r3, r2
 800b622:	dc67      	bgt.n	800b6f4 <PEF_Evaluate_Exchange_Data+0xf4>
 800b624:	f5b3 4f30 	cmp.w	r3, #45056	@ 0xb000
 800b628:	da48      	bge.n	800b6bc <PEF_Evaluate_Exchange_Data+0xbc>
		break;
	case SHUT_DOWN + STATE_B + END_OF_CHARGE + CONFIRM:
		PEF_Handle_End_of_Charge_Cnf();
		break;
	}
}
 800b62a:	e0ae      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
	switch (PEF_Get_Sequence_State()) {
 800b62c:	f5a3 4341 	sub.w	r3, r3, #49408	@ 0xc100
 800b630:	3b0c      	subs	r3, #12
 800b632:	2b0b      	cmp	r3, #11
 800b634:	f200 80a9 	bhi.w	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
 800b638:	a201      	add	r2, pc, #4	@ (adr r2, 800b640 <PEF_Evaluate_Exchange_Data+0x40>)
 800b63a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b63e:	bf00      	nop
 800b640:	0800b731 	.word	0x0800b731
 800b644:	0800b737 	.word	0x0800b737
 800b648:	0800b78b 	.word	0x0800b78b
 800b64c:	0800b78b 	.word	0x0800b78b
 800b650:	0800b73d 	.word	0x0800b73d
 800b654:	0800b78b 	.word	0x0800b78b
 800b658:	0800b78b 	.word	0x0800b78b
 800b65c:	0800b743 	.word	0x0800b743
 800b660:	0800b749 	.word	0x0800b749
 800b664:	0800b755 	.word	0x0800b755
 800b668:	0800b78b 	.word	0x0800b78b
 800b66c:	0800b74f 	.word	0x0800b74f
 800b670:	f5a3 4332 	sub.w	r3, r3, #45568	@ 0xb200
 800b674:	3b18      	subs	r3, #24
 800b676:	2b0d      	cmp	r3, #13
 800b678:	f200 8087 	bhi.w	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
 800b67c:	a201      	add	r2, pc, #4	@ (adr r2, 800b684 <PEF_Evaluate_Exchange_Data+0x84>)
 800b67e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b682:	bf00      	nop
 800b684:	0800b75b 	.word	0x0800b75b
 800b688:	0800b761 	.word	0x0800b761
 800b68c:	0800b78b 	.word	0x0800b78b
 800b690:	0800b78b 	.word	0x0800b78b
 800b694:	0800b767 	.word	0x0800b767
 800b698:	0800b76d 	.word	0x0800b76d
 800b69c:	0800b78b 	.word	0x0800b78b
 800b6a0:	0800b78b 	.word	0x0800b78b
 800b6a4:	0800b773 	.word	0x0800b773
 800b6a8:	0800b779 	.word	0x0800b779
 800b6ac:	0800b78b 	.word	0x0800b78b
 800b6b0:	0800b78b 	.word	0x0800b78b
 800b6b4:	0800b77f 	.word	0x0800b77f
 800b6b8:	0800b785 	.word	0x0800b785
 800b6bc:	f5a3 4330 	sub.w	r3, r3, #45056	@ 0xb000
 800b6c0:	2b09      	cmp	r3, #9
 800b6c2:	d862      	bhi.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
 800b6c4:	a201      	add	r2, pc, #4	@ (adr r2, 800b6cc <PEF_Evaluate_Exchange_Data+0xcc>)
 800b6c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b6ca:	bf00      	nop
 800b6cc:	0800b707 	.word	0x0800b707
 800b6d0:	0800b70d 	.word	0x0800b70d
 800b6d4:	0800b78b 	.word	0x0800b78b
 800b6d8:	0800b78b 	.word	0x0800b78b
 800b6dc:	0800b713 	.word	0x0800b713
 800b6e0:	0800b71f 	.word	0x0800b71f
 800b6e4:	0800b78b 	.word	0x0800b78b
 800b6e8:	0800b719 	.word	0x0800b719
 800b6ec:	0800b725 	.word	0x0800b725
 800b6f0:	0800b72b 	.word	0x0800b72b
 800b6f4:	f24b 2225 	movw	r2, #45605	@ 0xb225
 800b6f8:	4293      	cmp	r3, r2
 800b6fa:	dc46      	bgt.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
 800b6fc:	f24b 2218 	movw	r2, #45592	@ 0xb218
 800b700:	4293      	cmp	r3, r2
 800b702:	dab5      	bge.n	800b670 <PEF_Evaluate_Exchange_Data+0x70>
}
 800b704:	e041      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Initialization_Req();
 800b706:	f7ff fdcd 	bl	800b2a4 <PEF_Handle_Initialization_Req>
		break;
 800b70a:	e03e      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Initialization_Cnf();
 800b70c:	f7ff fdde 	bl	800b2cc <PEF_Handle_Initialization_Cnf>
		break;
 800b710:	e03b      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Parameter_Exchange_Req();
 800b712:	f7ff fdef 	bl	800b2f4 <PEF_Handle_Parameter_Exchange_Req>
		break;
 800b716:	e038      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Parameter_Exchange_Res();
 800b718:	f7ff fe00 	bl	800b31c <PEF_Handle_Parameter_Exchange_Res>
		break;
 800b71c:	e035      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Parameter_Exchange_Cnf();
 800b71e:	f7ff fe11 	bl	800b344 <PEF_Handle_Parameter_Exchange_Cnf>
		break;
 800b722:	e032      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Connector_Lock_Req();
 800b724:	f7ff fe1c 	bl	800b360 <PEF_Handle_Connector_Lock_Req>
		break;
 800b728:	e02f      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Connector_Lock_Cnf();
 800b72a:	f7ff fe2b 	bl	800b384 <PEF_Handle_Connector_Lock_Cnf>
		break;
 800b72e:	e02c      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Contactor_Close_Req();
 800b730:	f7ff fe36 	bl	800b3a0 <PEF_Handle_Contactor_Close_Req>
		break;
 800b734:	e029      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Contactor_Close_Cnf();
 800b736:	f7ff fe45 	bl	800b3c4 <PEF_Handle_Contactor_Close_Cnf>
		break;
 800b73a:	e026      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Charging_Current_Demand_Req();
 800b73c:	f7ff fe50 	bl	800b3e0 <PEF_Handle_Charging_Current_Demand_Req>
		break;
 800b740:	e023      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Charging_Current_Demand_Res();
 800b742:	f7ff fe75 	bl	800b430 <PEF_Handle_Charging_Current_Demand_Res>
		break;
 800b746:	e020      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Current_Suppression_Req();
 800b748:	f7ff fe82 	bl	800b450 <PEF_Handle_Current_Suppression_Req>
		break;
 800b74c:	e01d      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Current_Suppression_Res();
 800b74e:	f7ff fe9d 	bl	800b48c <PEF_Handle_Current_Suppression_Res>
		break;
 800b752:	e01a      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Current_Suppression_Cnf();
 800b754:	f7ff feae 	bl	800b4b4 <PEF_Handle_Current_Suppression_Cnf>
		break;
 800b758:	e017      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Zero_CURRENT_CONFIRM_Req();
 800b75a:	f7ff febd 	bl	800b4d8 <PEF_Handle_Zero_CURRENT_CONFIRM_Req>
		break;
 800b75e:	e014      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Zero_CURRENT_CONFIRM_Cnf();
 800b760:	f7ff fecc 	bl	800b4fc <PEF_Handle_Zero_CURRENT_CONFIRM_Cnf>
		break;
 800b764:	e011      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Voltage_Verification_Req();
 800b766:	f7ff fee3 	bl	800b530 <PEF_Handle_Voltage_Verification_Req>
		break;
 800b76a:	e00e      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Voltage_Verification_Cnf();
 800b76c:	f7ff fef2 	bl	800b554 <PEF_Handle_Voltage_Verification_Cnf>
		break;
 800b770:	e00b      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Connector_Unlock_Req();
 800b772:	f7ff ff01 	bl	800b578 <PEF_Handle_Connector_Unlock_Req>
		break;
 800b776:	e008      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_Connector_Unlock_Cnf();
 800b778:	f7ff ff10 	bl	800b59c <PEF_Handle_Connector_Unlock_Cnf>
		break;
 800b77c:	e005      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_End_of_Charge_Req();
 800b77e:	f7ff ff1f 	bl	800b5c0 <PEF_Handle_End_of_Charge_Req>
		break;
 800b782:	e002      	b.n	800b78a <PEF_Evaluate_Exchange_Data+0x18a>
		PEF_Handle_End_of_Charge_Cnf();
 800b784:	f7ff ff2e 	bl	800b5e4 <PEF_Handle_End_of_Charge_Cnf>
		break;
 800b788:	bf00      	nop
}
 800b78a:	bf00      	nop
 800b78c:	bd80      	pop	{r7, pc}
 800b78e:	bf00      	nop

0800b790 <rand>:
 800b790:	4b16      	ldr	r3, [pc, #88]	@ (800b7ec <rand+0x5c>)
 800b792:	b510      	push	{r4, lr}
 800b794:	681c      	ldr	r4, [r3, #0]
 800b796:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800b798:	b9b3      	cbnz	r3, 800b7c8 <rand+0x38>
 800b79a:	2018      	movs	r0, #24
 800b79c:	f000 fa68 	bl	800bc70 <malloc>
 800b7a0:	4602      	mov	r2, r0
 800b7a2:	6320      	str	r0, [r4, #48]	@ 0x30
 800b7a4:	b920      	cbnz	r0, 800b7b0 <rand+0x20>
 800b7a6:	4b12      	ldr	r3, [pc, #72]	@ (800b7f0 <rand+0x60>)
 800b7a8:	4812      	ldr	r0, [pc, #72]	@ (800b7f4 <rand+0x64>)
 800b7aa:	2152      	movs	r1, #82	@ 0x52
 800b7ac:	f000 f9f8 	bl	800bba0 <__assert_func>
 800b7b0:	4911      	ldr	r1, [pc, #68]	@ (800b7f8 <rand+0x68>)
 800b7b2:	4b12      	ldr	r3, [pc, #72]	@ (800b7fc <rand+0x6c>)
 800b7b4:	e9c0 1300 	strd	r1, r3, [r0]
 800b7b8:	4b11      	ldr	r3, [pc, #68]	@ (800b800 <rand+0x70>)
 800b7ba:	6083      	str	r3, [r0, #8]
 800b7bc:	230b      	movs	r3, #11
 800b7be:	8183      	strh	r3, [r0, #12]
 800b7c0:	2100      	movs	r1, #0
 800b7c2:	2001      	movs	r0, #1
 800b7c4:	e9c2 0104 	strd	r0, r1, [r2, #16]
 800b7c8:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800b7ca:	480e      	ldr	r0, [pc, #56]	@ (800b804 <rand+0x74>)
 800b7cc:	690b      	ldr	r3, [r1, #16]
 800b7ce:	694c      	ldr	r4, [r1, #20]
 800b7d0:	4a0d      	ldr	r2, [pc, #52]	@ (800b808 <rand+0x78>)
 800b7d2:	4358      	muls	r0, r3
 800b7d4:	fb02 0004 	mla	r0, r2, r4, r0
 800b7d8:	fba3 3202 	umull	r3, r2, r3, r2
 800b7dc:	3301      	adds	r3, #1
 800b7de:	eb40 0002 	adc.w	r0, r0, r2
 800b7e2:	e9c1 3004 	strd	r3, r0, [r1, #16]
 800b7e6:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 800b7ea:	bd10      	pop	{r4, pc}
 800b7ec:	2000003c 	.word	0x2000003c
 800b7f0:	0800d38c 	.word	0x0800d38c
 800b7f4:	0800d3a3 	.word	0x0800d3a3
 800b7f8:	abcd330e 	.word	0xabcd330e
 800b7fc:	e66d1234 	.word	0xe66d1234
 800b800:	0005deec 	.word	0x0005deec
 800b804:	5851f42d 	.word	0x5851f42d
 800b808:	4c957f2d 	.word	0x4c957f2d

0800b80c <std>:
 800b80c:	2300      	movs	r3, #0
 800b80e:	b510      	push	{r4, lr}
 800b810:	4604      	mov	r4, r0
 800b812:	e9c0 3300 	strd	r3, r3, [r0]
 800b816:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800b81a:	6083      	str	r3, [r0, #8]
 800b81c:	8181      	strh	r1, [r0, #12]
 800b81e:	6643      	str	r3, [r0, #100]	@ 0x64
 800b820:	81c2      	strh	r2, [r0, #14]
 800b822:	6183      	str	r3, [r0, #24]
 800b824:	4619      	mov	r1, r3
 800b826:	2208      	movs	r2, #8
 800b828:	305c      	adds	r0, #92	@ 0x5c
 800b82a:	f000 f92e 	bl	800ba8a <memset>
 800b82e:	4b0d      	ldr	r3, [pc, #52]	@ (800b864 <std+0x58>)
 800b830:	6263      	str	r3, [r4, #36]	@ 0x24
 800b832:	4b0d      	ldr	r3, [pc, #52]	@ (800b868 <std+0x5c>)
 800b834:	62a3      	str	r3, [r4, #40]	@ 0x28
 800b836:	4b0d      	ldr	r3, [pc, #52]	@ (800b86c <std+0x60>)
 800b838:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800b83a:	4b0d      	ldr	r3, [pc, #52]	@ (800b870 <std+0x64>)
 800b83c:	6323      	str	r3, [r4, #48]	@ 0x30
 800b83e:	4b0d      	ldr	r3, [pc, #52]	@ (800b874 <std+0x68>)
 800b840:	6224      	str	r4, [r4, #32]
 800b842:	429c      	cmp	r4, r3
 800b844:	d006      	beq.n	800b854 <std+0x48>
 800b846:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800b84a:	4294      	cmp	r4, r2
 800b84c:	d002      	beq.n	800b854 <std+0x48>
 800b84e:	33d0      	adds	r3, #208	@ 0xd0
 800b850:	429c      	cmp	r4, r3
 800b852:	d105      	bne.n	800b860 <std+0x54>
 800b854:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800b858:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b85c:	f000 b98e 	b.w	800bb7c <__retarget_lock_init_recursive>
 800b860:	bd10      	pop	{r4, pc}
 800b862:	bf00      	nop
 800b864:	0800ba05 	.word	0x0800ba05
 800b868:	0800ba27 	.word	0x0800ba27
 800b86c:	0800ba5f 	.word	0x0800ba5f
 800b870:	0800ba83 	.word	0x0800ba83
 800b874:	200021e0 	.word	0x200021e0

0800b878 <stdio_exit_handler>:
 800b878:	4a02      	ldr	r2, [pc, #8]	@ (800b884 <stdio_exit_handler+0xc>)
 800b87a:	4903      	ldr	r1, [pc, #12]	@ (800b888 <stdio_exit_handler+0x10>)
 800b87c:	4803      	ldr	r0, [pc, #12]	@ (800b88c <stdio_exit_handler+0x14>)
 800b87e:	f000 b869 	b.w	800b954 <_fwalk_sglue>
 800b882:	bf00      	nop
 800b884:	20000030 	.word	0x20000030
 800b888:	0800c735 	.word	0x0800c735
 800b88c:	20000040 	.word	0x20000040

0800b890 <cleanup_stdio>:
 800b890:	6841      	ldr	r1, [r0, #4]
 800b892:	4b0c      	ldr	r3, [pc, #48]	@ (800b8c4 <cleanup_stdio+0x34>)
 800b894:	4299      	cmp	r1, r3
 800b896:	b510      	push	{r4, lr}
 800b898:	4604      	mov	r4, r0
 800b89a:	d001      	beq.n	800b8a0 <cleanup_stdio+0x10>
 800b89c:	f000 ff4a 	bl	800c734 <_fflush_r>
 800b8a0:	68a1      	ldr	r1, [r4, #8]
 800b8a2:	4b09      	ldr	r3, [pc, #36]	@ (800b8c8 <cleanup_stdio+0x38>)
 800b8a4:	4299      	cmp	r1, r3
 800b8a6:	d002      	beq.n	800b8ae <cleanup_stdio+0x1e>
 800b8a8:	4620      	mov	r0, r4
 800b8aa:	f000 ff43 	bl	800c734 <_fflush_r>
 800b8ae:	68e1      	ldr	r1, [r4, #12]
 800b8b0:	4b06      	ldr	r3, [pc, #24]	@ (800b8cc <cleanup_stdio+0x3c>)
 800b8b2:	4299      	cmp	r1, r3
 800b8b4:	d004      	beq.n	800b8c0 <cleanup_stdio+0x30>
 800b8b6:	4620      	mov	r0, r4
 800b8b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b8bc:	f000 bf3a 	b.w	800c734 <_fflush_r>
 800b8c0:	bd10      	pop	{r4, pc}
 800b8c2:	bf00      	nop
 800b8c4:	200021e0 	.word	0x200021e0
 800b8c8:	20002248 	.word	0x20002248
 800b8cc:	200022b0 	.word	0x200022b0

0800b8d0 <global_stdio_init.part.0>:
 800b8d0:	b510      	push	{r4, lr}
 800b8d2:	4b0b      	ldr	r3, [pc, #44]	@ (800b900 <global_stdio_init.part.0+0x30>)
 800b8d4:	4c0b      	ldr	r4, [pc, #44]	@ (800b904 <global_stdio_init.part.0+0x34>)
 800b8d6:	4a0c      	ldr	r2, [pc, #48]	@ (800b908 <global_stdio_init.part.0+0x38>)
 800b8d8:	601a      	str	r2, [r3, #0]
 800b8da:	4620      	mov	r0, r4
 800b8dc:	2200      	movs	r2, #0
 800b8de:	2104      	movs	r1, #4
 800b8e0:	f7ff ff94 	bl	800b80c <std>
 800b8e4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800b8e8:	2201      	movs	r2, #1
 800b8ea:	2109      	movs	r1, #9
 800b8ec:	f7ff ff8e 	bl	800b80c <std>
 800b8f0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800b8f4:	2202      	movs	r2, #2
 800b8f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b8fa:	2112      	movs	r1, #18
 800b8fc:	f7ff bf86 	b.w	800b80c <std>
 800b900:	20002318 	.word	0x20002318
 800b904:	200021e0 	.word	0x200021e0
 800b908:	0800b879 	.word	0x0800b879

0800b90c <__sfp_lock_acquire>:
 800b90c:	4801      	ldr	r0, [pc, #4]	@ (800b914 <__sfp_lock_acquire+0x8>)
 800b90e:	f000 b936 	b.w	800bb7e <__retarget_lock_acquire_recursive>
 800b912:	bf00      	nop
 800b914:	20002321 	.word	0x20002321

0800b918 <__sfp_lock_release>:
 800b918:	4801      	ldr	r0, [pc, #4]	@ (800b920 <__sfp_lock_release+0x8>)
 800b91a:	f000 b931 	b.w	800bb80 <__retarget_lock_release_recursive>
 800b91e:	bf00      	nop
 800b920:	20002321 	.word	0x20002321

0800b924 <__sinit>:
 800b924:	b510      	push	{r4, lr}
 800b926:	4604      	mov	r4, r0
 800b928:	f7ff fff0 	bl	800b90c <__sfp_lock_acquire>
 800b92c:	6a23      	ldr	r3, [r4, #32]
 800b92e:	b11b      	cbz	r3, 800b938 <__sinit+0x14>
 800b930:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b934:	f7ff bff0 	b.w	800b918 <__sfp_lock_release>
 800b938:	4b04      	ldr	r3, [pc, #16]	@ (800b94c <__sinit+0x28>)
 800b93a:	6223      	str	r3, [r4, #32]
 800b93c:	4b04      	ldr	r3, [pc, #16]	@ (800b950 <__sinit+0x2c>)
 800b93e:	681b      	ldr	r3, [r3, #0]
 800b940:	2b00      	cmp	r3, #0
 800b942:	d1f5      	bne.n	800b930 <__sinit+0xc>
 800b944:	f7ff ffc4 	bl	800b8d0 <global_stdio_init.part.0>
 800b948:	e7f2      	b.n	800b930 <__sinit+0xc>
 800b94a:	bf00      	nop
 800b94c:	0800b891 	.word	0x0800b891
 800b950:	20002318 	.word	0x20002318

0800b954 <_fwalk_sglue>:
 800b954:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b958:	4607      	mov	r7, r0
 800b95a:	4688      	mov	r8, r1
 800b95c:	4614      	mov	r4, r2
 800b95e:	2600      	movs	r6, #0
 800b960:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800b964:	f1b9 0901 	subs.w	r9, r9, #1
 800b968:	d505      	bpl.n	800b976 <_fwalk_sglue+0x22>
 800b96a:	6824      	ldr	r4, [r4, #0]
 800b96c:	2c00      	cmp	r4, #0
 800b96e:	d1f7      	bne.n	800b960 <_fwalk_sglue+0xc>
 800b970:	4630      	mov	r0, r6
 800b972:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b976:	89ab      	ldrh	r3, [r5, #12]
 800b978:	2b01      	cmp	r3, #1
 800b97a:	d907      	bls.n	800b98c <_fwalk_sglue+0x38>
 800b97c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800b980:	3301      	adds	r3, #1
 800b982:	d003      	beq.n	800b98c <_fwalk_sglue+0x38>
 800b984:	4629      	mov	r1, r5
 800b986:	4638      	mov	r0, r7
 800b988:	47c0      	blx	r8
 800b98a:	4306      	orrs	r6, r0
 800b98c:	3568      	adds	r5, #104	@ 0x68
 800b98e:	e7e9      	b.n	800b964 <_fwalk_sglue+0x10>

0800b990 <iprintf>:
 800b990:	b40f      	push	{r0, r1, r2, r3}
 800b992:	b507      	push	{r0, r1, r2, lr}
 800b994:	4906      	ldr	r1, [pc, #24]	@ (800b9b0 <iprintf+0x20>)
 800b996:	ab04      	add	r3, sp, #16
 800b998:	6808      	ldr	r0, [r1, #0]
 800b99a:	f853 2b04 	ldr.w	r2, [r3], #4
 800b99e:	6881      	ldr	r1, [r0, #8]
 800b9a0:	9301      	str	r3, [sp, #4]
 800b9a2:	f000 fb9d 	bl	800c0e0 <_vfiprintf_r>
 800b9a6:	b003      	add	sp, #12
 800b9a8:	f85d eb04 	ldr.w	lr, [sp], #4
 800b9ac:	b004      	add	sp, #16
 800b9ae:	4770      	bx	lr
 800b9b0:	2000003c 	.word	0x2000003c

0800b9b4 <putchar>:
 800b9b4:	4b02      	ldr	r3, [pc, #8]	@ (800b9c0 <putchar+0xc>)
 800b9b6:	4601      	mov	r1, r0
 800b9b8:	6818      	ldr	r0, [r3, #0]
 800b9ba:	6882      	ldr	r2, [r0, #8]
 800b9bc:	f000 bef4 	b.w	800c7a8 <_putc_r>
 800b9c0:	2000003c 	.word	0x2000003c

0800b9c4 <siprintf>:
 800b9c4:	b40e      	push	{r1, r2, r3}
 800b9c6:	b500      	push	{lr}
 800b9c8:	b09c      	sub	sp, #112	@ 0x70
 800b9ca:	ab1d      	add	r3, sp, #116	@ 0x74
 800b9cc:	9002      	str	r0, [sp, #8]
 800b9ce:	9006      	str	r0, [sp, #24]
 800b9d0:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 800b9d4:	4809      	ldr	r0, [pc, #36]	@ (800b9fc <siprintf+0x38>)
 800b9d6:	9107      	str	r1, [sp, #28]
 800b9d8:	9104      	str	r1, [sp, #16]
 800b9da:	4909      	ldr	r1, [pc, #36]	@ (800ba00 <siprintf+0x3c>)
 800b9dc:	f853 2b04 	ldr.w	r2, [r3], #4
 800b9e0:	9105      	str	r1, [sp, #20]
 800b9e2:	6800      	ldr	r0, [r0, #0]
 800b9e4:	9301      	str	r3, [sp, #4]
 800b9e6:	a902      	add	r1, sp, #8
 800b9e8:	f000 fa54 	bl	800be94 <_svfiprintf_r>
 800b9ec:	9b02      	ldr	r3, [sp, #8]
 800b9ee:	2200      	movs	r2, #0
 800b9f0:	701a      	strb	r2, [r3, #0]
 800b9f2:	b01c      	add	sp, #112	@ 0x70
 800b9f4:	f85d eb04 	ldr.w	lr, [sp], #4
 800b9f8:	b003      	add	sp, #12
 800b9fa:	4770      	bx	lr
 800b9fc:	2000003c 	.word	0x2000003c
 800ba00:	ffff0208 	.word	0xffff0208

0800ba04 <__sread>:
 800ba04:	b510      	push	{r4, lr}
 800ba06:	460c      	mov	r4, r1
 800ba08:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ba0c:	f000 f868 	bl	800bae0 <_read_r>
 800ba10:	2800      	cmp	r0, #0
 800ba12:	bfab      	itete	ge
 800ba14:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800ba16:	89a3      	ldrhlt	r3, [r4, #12]
 800ba18:	181b      	addge	r3, r3, r0
 800ba1a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800ba1e:	bfac      	ite	ge
 800ba20:	6563      	strge	r3, [r4, #84]	@ 0x54
 800ba22:	81a3      	strhlt	r3, [r4, #12]
 800ba24:	bd10      	pop	{r4, pc}

0800ba26 <__swrite>:
 800ba26:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba2a:	461f      	mov	r7, r3
 800ba2c:	898b      	ldrh	r3, [r1, #12]
 800ba2e:	05db      	lsls	r3, r3, #23
 800ba30:	4605      	mov	r5, r0
 800ba32:	460c      	mov	r4, r1
 800ba34:	4616      	mov	r6, r2
 800ba36:	d505      	bpl.n	800ba44 <__swrite+0x1e>
 800ba38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ba3c:	2302      	movs	r3, #2
 800ba3e:	2200      	movs	r2, #0
 800ba40:	f000 f83c 	bl	800babc <_lseek_r>
 800ba44:	89a3      	ldrh	r3, [r4, #12]
 800ba46:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800ba4a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800ba4e:	81a3      	strh	r3, [r4, #12]
 800ba50:	4632      	mov	r2, r6
 800ba52:	463b      	mov	r3, r7
 800ba54:	4628      	mov	r0, r5
 800ba56:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ba5a:	f000 b853 	b.w	800bb04 <_write_r>

0800ba5e <__sseek>:
 800ba5e:	b510      	push	{r4, lr}
 800ba60:	460c      	mov	r4, r1
 800ba62:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ba66:	f000 f829 	bl	800babc <_lseek_r>
 800ba6a:	1c43      	adds	r3, r0, #1
 800ba6c:	89a3      	ldrh	r3, [r4, #12]
 800ba6e:	bf15      	itete	ne
 800ba70:	6560      	strne	r0, [r4, #84]	@ 0x54
 800ba72:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800ba76:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800ba7a:	81a3      	strheq	r3, [r4, #12]
 800ba7c:	bf18      	it	ne
 800ba7e:	81a3      	strhne	r3, [r4, #12]
 800ba80:	bd10      	pop	{r4, pc}

0800ba82 <__sclose>:
 800ba82:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ba86:	f000 b809 	b.w	800ba9c <_close_r>

0800ba8a <memset>:
 800ba8a:	4402      	add	r2, r0
 800ba8c:	4603      	mov	r3, r0
 800ba8e:	4293      	cmp	r3, r2
 800ba90:	d100      	bne.n	800ba94 <memset+0xa>
 800ba92:	4770      	bx	lr
 800ba94:	f803 1b01 	strb.w	r1, [r3], #1
 800ba98:	e7f9      	b.n	800ba8e <memset+0x4>
	...

0800ba9c <_close_r>:
 800ba9c:	b538      	push	{r3, r4, r5, lr}
 800ba9e:	4d06      	ldr	r5, [pc, #24]	@ (800bab8 <_close_r+0x1c>)
 800baa0:	2300      	movs	r3, #0
 800baa2:	4604      	mov	r4, r0
 800baa4:	4608      	mov	r0, r1
 800baa6:	602b      	str	r3, [r5, #0]
 800baa8:	f7f6 ff28 	bl	80028fc <_close>
 800baac:	1c43      	adds	r3, r0, #1
 800baae:	d102      	bne.n	800bab6 <_close_r+0x1a>
 800bab0:	682b      	ldr	r3, [r5, #0]
 800bab2:	b103      	cbz	r3, 800bab6 <_close_r+0x1a>
 800bab4:	6023      	str	r3, [r4, #0]
 800bab6:	bd38      	pop	{r3, r4, r5, pc}
 800bab8:	2000231c 	.word	0x2000231c

0800babc <_lseek_r>:
 800babc:	b538      	push	{r3, r4, r5, lr}
 800babe:	4d07      	ldr	r5, [pc, #28]	@ (800badc <_lseek_r+0x20>)
 800bac0:	4604      	mov	r4, r0
 800bac2:	4608      	mov	r0, r1
 800bac4:	4611      	mov	r1, r2
 800bac6:	2200      	movs	r2, #0
 800bac8:	602a      	str	r2, [r5, #0]
 800baca:	461a      	mov	r2, r3
 800bacc:	f7f6 ff3d 	bl	800294a <_lseek>
 800bad0:	1c43      	adds	r3, r0, #1
 800bad2:	d102      	bne.n	800bada <_lseek_r+0x1e>
 800bad4:	682b      	ldr	r3, [r5, #0]
 800bad6:	b103      	cbz	r3, 800bada <_lseek_r+0x1e>
 800bad8:	6023      	str	r3, [r4, #0]
 800bada:	bd38      	pop	{r3, r4, r5, pc}
 800badc:	2000231c 	.word	0x2000231c

0800bae0 <_read_r>:
 800bae0:	b538      	push	{r3, r4, r5, lr}
 800bae2:	4d07      	ldr	r5, [pc, #28]	@ (800bb00 <_read_r+0x20>)
 800bae4:	4604      	mov	r4, r0
 800bae6:	4608      	mov	r0, r1
 800bae8:	4611      	mov	r1, r2
 800baea:	2200      	movs	r2, #0
 800baec:	602a      	str	r2, [r5, #0]
 800baee:	461a      	mov	r2, r3
 800baf0:	f7f6 fecb 	bl	800288a <_read>
 800baf4:	1c43      	adds	r3, r0, #1
 800baf6:	d102      	bne.n	800bafe <_read_r+0x1e>
 800baf8:	682b      	ldr	r3, [r5, #0]
 800bafa:	b103      	cbz	r3, 800bafe <_read_r+0x1e>
 800bafc:	6023      	str	r3, [r4, #0]
 800bafe:	bd38      	pop	{r3, r4, r5, pc}
 800bb00:	2000231c 	.word	0x2000231c

0800bb04 <_write_r>:
 800bb04:	b538      	push	{r3, r4, r5, lr}
 800bb06:	4d07      	ldr	r5, [pc, #28]	@ (800bb24 <_write_r+0x20>)
 800bb08:	4604      	mov	r4, r0
 800bb0a:	4608      	mov	r0, r1
 800bb0c:	4611      	mov	r1, r2
 800bb0e:	2200      	movs	r2, #0
 800bb10:	602a      	str	r2, [r5, #0]
 800bb12:	461a      	mov	r2, r3
 800bb14:	f7f6 fed6 	bl	80028c4 <_write>
 800bb18:	1c43      	adds	r3, r0, #1
 800bb1a:	d102      	bne.n	800bb22 <_write_r+0x1e>
 800bb1c:	682b      	ldr	r3, [r5, #0]
 800bb1e:	b103      	cbz	r3, 800bb22 <_write_r+0x1e>
 800bb20:	6023      	str	r3, [r4, #0]
 800bb22:	bd38      	pop	{r3, r4, r5, pc}
 800bb24:	2000231c 	.word	0x2000231c

0800bb28 <__errno>:
 800bb28:	4b01      	ldr	r3, [pc, #4]	@ (800bb30 <__errno+0x8>)
 800bb2a:	6818      	ldr	r0, [r3, #0]
 800bb2c:	4770      	bx	lr
 800bb2e:	bf00      	nop
 800bb30:	2000003c 	.word	0x2000003c

0800bb34 <__libc_init_array>:
 800bb34:	b570      	push	{r4, r5, r6, lr}
 800bb36:	4d0d      	ldr	r5, [pc, #52]	@ (800bb6c <__libc_init_array+0x38>)
 800bb38:	4c0d      	ldr	r4, [pc, #52]	@ (800bb70 <__libc_init_array+0x3c>)
 800bb3a:	1b64      	subs	r4, r4, r5
 800bb3c:	10a4      	asrs	r4, r4, #2
 800bb3e:	2600      	movs	r6, #0
 800bb40:	42a6      	cmp	r6, r4
 800bb42:	d109      	bne.n	800bb58 <__libc_init_array+0x24>
 800bb44:	4d0b      	ldr	r5, [pc, #44]	@ (800bb74 <__libc_init_array+0x40>)
 800bb46:	4c0c      	ldr	r4, [pc, #48]	@ (800bb78 <__libc_init_array+0x44>)
 800bb48:	f001 f826 	bl	800cb98 <_init>
 800bb4c:	1b64      	subs	r4, r4, r5
 800bb4e:	10a4      	asrs	r4, r4, #2
 800bb50:	2600      	movs	r6, #0
 800bb52:	42a6      	cmp	r6, r4
 800bb54:	d105      	bne.n	800bb62 <__libc_init_array+0x2e>
 800bb56:	bd70      	pop	{r4, r5, r6, pc}
 800bb58:	f855 3b04 	ldr.w	r3, [r5], #4
 800bb5c:	4798      	blx	r3
 800bb5e:	3601      	adds	r6, #1
 800bb60:	e7ee      	b.n	800bb40 <__libc_init_array+0xc>
 800bb62:	f855 3b04 	ldr.w	r3, [r5], #4
 800bb66:	4798      	blx	r3
 800bb68:	3601      	adds	r6, #1
 800bb6a:	e7f2      	b.n	800bb52 <__libc_init_array+0x1e>
 800bb6c:	0800d474 	.word	0x0800d474
 800bb70:	0800d474 	.word	0x0800d474
 800bb74:	0800d474 	.word	0x0800d474
 800bb78:	0800d478 	.word	0x0800d478

0800bb7c <__retarget_lock_init_recursive>:
 800bb7c:	4770      	bx	lr

0800bb7e <__retarget_lock_acquire_recursive>:
 800bb7e:	4770      	bx	lr

0800bb80 <__retarget_lock_release_recursive>:
 800bb80:	4770      	bx	lr

0800bb82 <memcpy>:
 800bb82:	440a      	add	r2, r1
 800bb84:	4291      	cmp	r1, r2
 800bb86:	f100 33ff 	add.w	r3, r0, #4294967295
 800bb8a:	d100      	bne.n	800bb8e <memcpy+0xc>
 800bb8c:	4770      	bx	lr
 800bb8e:	b510      	push	{r4, lr}
 800bb90:	f811 4b01 	ldrb.w	r4, [r1], #1
 800bb94:	f803 4f01 	strb.w	r4, [r3, #1]!
 800bb98:	4291      	cmp	r1, r2
 800bb9a:	d1f9      	bne.n	800bb90 <memcpy+0xe>
 800bb9c:	bd10      	pop	{r4, pc}
	...

0800bba0 <__assert_func>:
 800bba0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bba2:	4614      	mov	r4, r2
 800bba4:	461a      	mov	r2, r3
 800bba6:	4b09      	ldr	r3, [pc, #36]	@ (800bbcc <__assert_func+0x2c>)
 800bba8:	681b      	ldr	r3, [r3, #0]
 800bbaa:	4605      	mov	r5, r0
 800bbac:	68d8      	ldr	r0, [r3, #12]
 800bbae:	b954      	cbnz	r4, 800bbc6 <__assert_func+0x26>
 800bbb0:	4b07      	ldr	r3, [pc, #28]	@ (800bbd0 <__assert_func+0x30>)
 800bbb2:	461c      	mov	r4, r3
 800bbb4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800bbb8:	9100      	str	r1, [sp, #0]
 800bbba:	462b      	mov	r3, r5
 800bbbc:	4905      	ldr	r1, [pc, #20]	@ (800bbd4 <__assert_func+0x34>)
 800bbbe:	f000 fde1 	bl	800c784 <fiprintf>
 800bbc2:	f000 fee3 	bl	800c98c <abort>
 800bbc6:	4b04      	ldr	r3, [pc, #16]	@ (800bbd8 <__assert_func+0x38>)
 800bbc8:	e7f4      	b.n	800bbb4 <__assert_func+0x14>
 800bbca:	bf00      	nop
 800bbcc:	2000003c 	.word	0x2000003c
 800bbd0:	0800d436 	.word	0x0800d436
 800bbd4:	0800d408 	.word	0x0800d408
 800bbd8:	0800d3fb 	.word	0x0800d3fb

0800bbdc <_free_r>:
 800bbdc:	b538      	push	{r3, r4, r5, lr}
 800bbde:	4605      	mov	r5, r0
 800bbe0:	2900      	cmp	r1, #0
 800bbe2:	d041      	beq.n	800bc68 <_free_r+0x8c>
 800bbe4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800bbe8:	1f0c      	subs	r4, r1, #4
 800bbea:	2b00      	cmp	r3, #0
 800bbec:	bfb8      	it	lt
 800bbee:	18e4      	addlt	r4, r4, r3
 800bbf0:	f000 f8e8 	bl	800bdc4 <__malloc_lock>
 800bbf4:	4a1d      	ldr	r2, [pc, #116]	@ (800bc6c <_free_r+0x90>)
 800bbf6:	6813      	ldr	r3, [r2, #0]
 800bbf8:	b933      	cbnz	r3, 800bc08 <_free_r+0x2c>
 800bbfa:	6063      	str	r3, [r4, #4]
 800bbfc:	6014      	str	r4, [r2, #0]
 800bbfe:	4628      	mov	r0, r5
 800bc00:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bc04:	f000 b8e4 	b.w	800bdd0 <__malloc_unlock>
 800bc08:	42a3      	cmp	r3, r4
 800bc0a:	d908      	bls.n	800bc1e <_free_r+0x42>
 800bc0c:	6820      	ldr	r0, [r4, #0]
 800bc0e:	1821      	adds	r1, r4, r0
 800bc10:	428b      	cmp	r3, r1
 800bc12:	bf01      	itttt	eq
 800bc14:	6819      	ldreq	r1, [r3, #0]
 800bc16:	685b      	ldreq	r3, [r3, #4]
 800bc18:	1809      	addeq	r1, r1, r0
 800bc1a:	6021      	streq	r1, [r4, #0]
 800bc1c:	e7ed      	b.n	800bbfa <_free_r+0x1e>
 800bc1e:	461a      	mov	r2, r3
 800bc20:	685b      	ldr	r3, [r3, #4]
 800bc22:	b10b      	cbz	r3, 800bc28 <_free_r+0x4c>
 800bc24:	42a3      	cmp	r3, r4
 800bc26:	d9fa      	bls.n	800bc1e <_free_r+0x42>
 800bc28:	6811      	ldr	r1, [r2, #0]
 800bc2a:	1850      	adds	r0, r2, r1
 800bc2c:	42a0      	cmp	r0, r4
 800bc2e:	d10b      	bne.n	800bc48 <_free_r+0x6c>
 800bc30:	6820      	ldr	r0, [r4, #0]
 800bc32:	4401      	add	r1, r0
 800bc34:	1850      	adds	r0, r2, r1
 800bc36:	4283      	cmp	r3, r0
 800bc38:	6011      	str	r1, [r2, #0]
 800bc3a:	d1e0      	bne.n	800bbfe <_free_r+0x22>
 800bc3c:	6818      	ldr	r0, [r3, #0]
 800bc3e:	685b      	ldr	r3, [r3, #4]
 800bc40:	6053      	str	r3, [r2, #4]
 800bc42:	4408      	add	r0, r1
 800bc44:	6010      	str	r0, [r2, #0]
 800bc46:	e7da      	b.n	800bbfe <_free_r+0x22>
 800bc48:	d902      	bls.n	800bc50 <_free_r+0x74>
 800bc4a:	230c      	movs	r3, #12
 800bc4c:	602b      	str	r3, [r5, #0]
 800bc4e:	e7d6      	b.n	800bbfe <_free_r+0x22>
 800bc50:	6820      	ldr	r0, [r4, #0]
 800bc52:	1821      	adds	r1, r4, r0
 800bc54:	428b      	cmp	r3, r1
 800bc56:	bf04      	itt	eq
 800bc58:	6819      	ldreq	r1, [r3, #0]
 800bc5a:	685b      	ldreq	r3, [r3, #4]
 800bc5c:	6063      	str	r3, [r4, #4]
 800bc5e:	bf04      	itt	eq
 800bc60:	1809      	addeq	r1, r1, r0
 800bc62:	6021      	streq	r1, [r4, #0]
 800bc64:	6054      	str	r4, [r2, #4]
 800bc66:	e7ca      	b.n	800bbfe <_free_r+0x22>
 800bc68:	bd38      	pop	{r3, r4, r5, pc}
 800bc6a:	bf00      	nop
 800bc6c:	20002328 	.word	0x20002328

0800bc70 <malloc>:
 800bc70:	4b02      	ldr	r3, [pc, #8]	@ (800bc7c <malloc+0xc>)
 800bc72:	4601      	mov	r1, r0
 800bc74:	6818      	ldr	r0, [r3, #0]
 800bc76:	f000 b825 	b.w	800bcc4 <_malloc_r>
 800bc7a:	bf00      	nop
 800bc7c:	2000003c 	.word	0x2000003c

0800bc80 <sbrk_aligned>:
 800bc80:	b570      	push	{r4, r5, r6, lr}
 800bc82:	4e0f      	ldr	r6, [pc, #60]	@ (800bcc0 <sbrk_aligned+0x40>)
 800bc84:	460c      	mov	r4, r1
 800bc86:	6831      	ldr	r1, [r6, #0]
 800bc88:	4605      	mov	r5, r0
 800bc8a:	b911      	cbnz	r1, 800bc92 <sbrk_aligned+0x12>
 800bc8c:	f000 fe6e 	bl	800c96c <_sbrk_r>
 800bc90:	6030      	str	r0, [r6, #0]
 800bc92:	4621      	mov	r1, r4
 800bc94:	4628      	mov	r0, r5
 800bc96:	f000 fe69 	bl	800c96c <_sbrk_r>
 800bc9a:	1c43      	adds	r3, r0, #1
 800bc9c:	d103      	bne.n	800bca6 <sbrk_aligned+0x26>
 800bc9e:	f04f 34ff 	mov.w	r4, #4294967295
 800bca2:	4620      	mov	r0, r4
 800bca4:	bd70      	pop	{r4, r5, r6, pc}
 800bca6:	1cc4      	adds	r4, r0, #3
 800bca8:	f024 0403 	bic.w	r4, r4, #3
 800bcac:	42a0      	cmp	r0, r4
 800bcae:	d0f8      	beq.n	800bca2 <sbrk_aligned+0x22>
 800bcb0:	1a21      	subs	r1, r4, r0
 800bcb2:	4628      	mov	r0, r5
 800bcb4:	f000 fe5a 	bl	800c96c <_sbrk_r>
 800bcb8:	3001      	adds	r0, #1
 800bcba:	d1f2      	bne.n	800bca2 <sbrk_aligned+0x22>
 800bcbc:	e7ef      	b.n	800bc9e <sbrk_aligned+0x1e>
 800bcbe:	bf00      	nop
 800bcc0:	20002324 	.word	0x20002324

0800bcc4 <_malloc_r>:
 800bcc4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800bcc8:	1ccd      	adds	r5, r1, #3
 800bcca:	f025 0503 	bic.w	r5, r5, #3
 800bcce:	3508      	adds	r5, #8
 800bcd0:	2d0c      	cmp	r5, #12
 800bcd2:	bf38      	it	cc
 800bcd4:	250c      	movcc	r5, #12
 800bcd6:	2d00      	cmp	r5, #0
 800bcd8:	4606      	mov	r6, r0
 800bcda:	db01      	blt.n	800bce0 <_malloc_r+0x1c>
 800bcdc:	42a9      	cmp	r1, r5
 800bcde:	d904      	bls.n	800bcea <_malloc_r+0x26>
 800bce0:	230c      	movs	r3, #12
 800bce2:	6033      	str	r3, [r6, #0]
 800bce4:	2000      	movs	r0, #0
 800bce6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800bcea:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800bdc0 <_malloc_r+0xfc>
 800bcee:	f000 f869 	bl	800bdc4 <__malloc_lock>
 800bcf2:	f8d8 3000 	ldr.w	r3, [r8]
 800bcf6:	461c      	mov	r4, r3
 800bcf8:	bb44      	cbnz	r4, 800bd4c <_malloc_r+0x88>
 800bcfa:	4629      	mov	r1, r5
 800bcfc:	4630      	mov	r0, r6
 800bcfe:	f7ff ffbf 	bl	800bc80 <sbrk_aligned>
 800bd02:	1c43      	adds	r3, r0, #1
 800bd04:	4604      	mov	r4, r0
 800bd06:	d158      	bne.n	800bdba <_malloc_r+0xf6>
 800bd08:	f8d8 4000 	ldr.w	r4, [r8]
 800bd0c:	4627      	mov	r7, r4
 800bd0e:	2f00      	cmp	r7, #0
 800bd10:	d143      	bne.n	800bd9a <_malloc_r+0xd6>
 800bd12:	2c00      	cmp	r4, #0
 800bd14:	d04b      	beq.n	800bdae <_malloc_r+0xea>
 800bd16:	6823      	ldr	r3, [r4, #0]
 800bd18:	4639      	mov	r1, r7
 800bd1a:	4630      	mov	r0, r6
 800bd1c:	eb04 0903 	add.w	r9, r4, r3
 800bd20:	f000 fe24 	bl	800c96c <_sbrk_r>
 800bd24:	4581      	cmp	r9, r0
 800bd26:	d142      	bne.n	800bdae <_malloc_r+0xea>
 800bd28:	6821      	ldr	r1, [r4, #0]
 800bd2a:	1a6d      	subs	r5, r5, r1
 800bd2c:	4629      	mov	r1, r5
 800bd2e:	4630      	mov	r0, r6
 800bd30:	f7ff ffa6 	bl	800bc80 <sbrk_aligned>
 800bd34:	3001      	adds	r0, #1
 800bd36:	d03a      	beq.n	800bdae <_malloc_r+0xea>
 800bd38:	6823      	ldr	r3, [r4, #0]
 800bd3a:	442b      	add	r3, r5
 800bd3c:	6023      	str	r3, [r4, #0]
 800bd3e:	f8d8 3000 	ldr.w	r3, [r8]
 800bd42:	685a      	ldr	r2, [r3, #4]
 800bd44:	bb62      	cbnz	r2, 800bda0 <_malloc_r+0xdc>
 800bd46:	f8c8 7000 	str.w	r7, [r8]
 800bd4a:	e00f      	b.n	800bd6c <_malloc_r+0xa8>
 800bd4c:	6822      	ldr	r2, [r4, #0]
 800bd4e:	1b52      	subs	r2, r2, r5
 800bd50:	d420      	bmi.n	800bd94 <_malloc_r+0xd0>
 800bd52:	2a0b      	cmp	r2, #11
 800bd54:	d917      	bls.n	800bd86 <_malloc_r+0xc2>
 800bd56:	1961      	adds	r1, r4, r5
 800bd58:	42a3      	cmp	r3, r4
 800bd5a:	6025      	str	r5, [r4, #0]
 800bd5c:	bf18      	it	ne
 800bd5e:	6059      	strne	r1, [r3, #4]
 800bd60:	6863      	ldr	r3, [r4, #4]
 800bd62:	bf08      	it	eq
 800bd64:	f8c8 1000 	streq.w	r1, [r8]
 800bd68:	5162      	str	r2, [r4, r5]
 800bd6a:	604b      	str	r3, [r1, #4]
 800bd6c:	4630      	mov	r0, r6
 800bd6e:	f000 f82f 	bl	800bdd0 <__malloc_unlock>
 800bd72:	f104 000b 	add.w	r0, r4, #11
 800bd76:	1d23      	adds	r3, r4, #4
 800bd78:	f020 0007 	bic.w	r0, r0, #7
 800bd7c:	1ac2      	subs	r2, r0, r3
 800bd7e:	bf1c      	itt	ne
 800bd80:	1a1b      	subne	r3, r3, r0
 800bd82:	50a3      	strne	r3, [r4, r2]
 800bd84:	e7af      	b.n	800bce6 <_malloc_r+0x22>
 800bd86:	6862      	ldr	r2, [r4, #4]
 800bd88:	42a3      	cmp	r3, r4
 800bd8a:	bf0c      	ite	eq
 800bd8c:	f8c8 2000 	streq.w	r2, [r8]
 800bd90:	605a      	strne	r2, [r3, #4]
 800bd92:	e7eb      	b.n	800bd6c <_malloc_r+0xa8>
 800bd94:	4623      	mov	r3, r4
 800bd96:	6864      	ldr	r4, [r4, #4]
 800bd98:	e7ae      	b.n	800bcf8 <_malloc_r+0x34>
 800bd9a:	463c      	mov	r4, r7
 800bd9c:	687f      	ldr	r7, [r7, #4]
 800bd9e:	e7b6      	b.n	800bd0e <_malloc_r+0x4a>
 800bda0:	461a      	mov	r2, r3
 800bda2:	685b      	ldr	r3, [r3, #4]
 800bda4:	42a3      	cmp	r3, r4
 800bda6:	d1fb      	bne.n	800bda0 <_malloc_r+0xdc>
 800bda8:	2300      	movs	r3, #0
 800bdaa:	6053      	str	r3, [r2, #4]
 800bdac:	e7de      	b.n	800bd6c <_malloc_r+0xa8>
 800bdae:	230c      	movs	r3, #12
 800bdb0:	6033      	str	r3, [r6, #0]
 800bdb2:	4630      	mov	r0, r6
 800bdb4:	f000 f80c 	bl	800bdd0 <__malloc_unlock>
 800bdb8:	e794      	b.n	800bce4 <_malloc_r+0x20>
 800bdba:	6005      	str	r5, [r0, #0]
 800bdbc:	e7d6      	b.n	800bd6c <_malloc_r+0xa8>
 800bdbe:	bf00      	nop
 800bdc0:	20002328 	.word	0x20002328

0800bdc4 <__malloc_lock>:
 800bdc4:	4801      	ldr	r0, [pc, #4]	@ (800bdcc <__malloc_lock+0x8>)
 800bdc6:	f7ff beda 	b.w	800bb7e <__retarget_lock_acquire_recursive>
 800bdca:	bf00      	nop
 800bdcc:	20002320 	.word	0x20002320

0800bdd0 <__malloc_unlock>:
 800bdd0:	4801      	ldr	r0, [pc, #4]	@ (800bdd8 <__malloc_unlock+0x8>)
 800bdd2:	f7ff bed5 	b.w	800bb80 <__retarget_lock_release_recursive>
 800bdd6:	bf00      	nop
 800bdd8:	20002320 	.word	0x20002320

0800bddc <__ssputs_r>:
 800bddc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bde0:	688e      	ldr	r6, [r1, #8]
 800bde2:	461f      	mov	r7, r3
 800bde4:	42be      	cmp	r6, r7
 800bde6:	680b      	ldr	r3, [r1, #0]
 800bde8:	4682      	mov	sl, r0
 800bdea:	460c      	mov	r4, r1
 800bdec:	4690      	mov	r8, r2
 800bdee:	d82d      	bhi.n	800be4c <__ssputs_r+0x70>
 800bdf0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800bdf4:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800bdf8:	d026      	beq.n	800be48 <__ssputs_r+0x6c>
 800bdfa:	6965      	ldr	r5, [r4, #20]
 800bdfc:	6909      	ldr	r1, [r1, #16]
 800bdfe:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800be02:	eba3 0901 	sub.w	r9, r3, r1
 800be06:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800be0a:	1c7b      	adds	r3, r7, #1
 800be0c:	444b      	add	r3, r9
 800be0e:	106d      	asrs	r5, r5, #1
 800be10:	429d      	cmp	r5, r3
 800be12:	bf38      	it	cc
 800be14:	461d      	movcc	r5, r3
 800be16:	0553      	lsls	r3, r2, #21
 800be18:	d527      	bpl.n	800be6a <__ssputs_r+0x8e>
 800be1a:	4629      	mov	r1, r5
 800be1c:	f7ff ff52 	bl	800bcc4 <_malloc_r>
 800be20:	4606      	mov	r6, r0
 800be22:	b360      	cbz	r0, 800be7e <__ssputs_r+0xa2>
 800be24:	6921      	ldr	r1, [r4, #16]
 800be26:	464a      	mov	r2, r9
 800be28:	f7ff feab 	bl	800bb82 <memcpy>
 800be2c:	89a3      	ldrh	r3, [r4, #12]
 800be2e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800be32:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800be36:	81a3      	strh	r3, [r4, #12]
 800be38:	6126      	str	r6, [r4, #16]
 800be3a:	6165      	str	r5, [r4, #20]
 800be3c:	444e      	add	r6, r9
 800be3e:	eba5 0509 	sub.w	r5, r5, r9
 800be42:	6026      	str	r6, [r4, #0]
 800be44:	60a5      	str	r5, [r4, #8]
 800be46:	463e      	mov	r6, r7
 800be48:	42be      	cmp	r6, r7
 800be4a:	d900      	bls.n	800be4e <__ssputs_r+0x72>
 800be4c:	463e      	mov	r6, r7
 800be4e:	6820      	ldr	r0, [r4, #0]
 800be50:	4632      	mov	r2, r6
 800be52:	4641      	mov	r1, r8
 800be54:	f000 fd70 	bl	800c938 <memmove>
 800be58:	68a3      	ldr	r3, [r4, #8]
 800be5a:	1b9b      	subs	r3, r3, r6
 800be5c:	60a3      	str	r3, [r4, #8]
 800be5e:	6823      	ldr	r3, [r4, #0]
 800be60:	4433      	add	r3, r6
 800be62:	6023      	str	r3, [r4, #0]
 800be64:	2000      	movs	r0, #0
 800be66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800be6a:	462a      	mov	r2, r5
 800be6c:	f000 fd95 	bl	800c99a <_realloc_r>
 800be70:	4606      	mov	r6, r0
 800be72:	2800      	cmp	r0, #0
 800be74:	d1e0      	bne.n	800be38 <__ssputs_r+0x5c>
 800be76:	6921      	ldr	r1, [r4, #16]
 800be78:	4650      	mov	r0, sl
 800be7a:	f7ff feaf 	bl	800bbdc <_free_r>
 800be7e:	230c      	movs	r3, #12
 800be80:	f8ca 3000 	str.w	r3, [sl]
 800be84:	89a3      	ldrh	r3, [r4, #12]
 800be86:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800be8a:	81a3      	strh	r3, [r4, #12]
 800be8c:	f04f 30ff 	mov.w	r0, #4294967295
 800be90:	e7e9      	b.n	800be66 <__ssputs_r+0x8a>
	...

0800be94 <_svfiprintf_r>:
 800be94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be98:	4698      	mov	r8, r3
 800be9a:	898b      	ldrh	r3, [r1, #12]
 800be9c:	061b      	lsls	r3, r3, #24
 800be9e:	b09d      	sub	sp, #116	@ 0x74
 800bea0:	4607      	mov	r7, r0
 800bea2:	460d      	mov	r5, r1
 800bea4:	4614      	mov	r4, r2
 800bea6:	d510      	bpl.n	800beca <_svfiprintf_r+0x36>
 800bea8:	690b      	ldr	r3, [r1, #16]
 800beaa:	b973      	cbnz	r3, 800beca <_svfiprintf_r+0x36>
 800beac:	2140      	movs	r1, #64	@ 0x40
 800beae:	f7ff ff09 	bl	800bcc4 <_malloc_r>
 800beb2:	6028      	str	r0, [r5, #0]
 800beb4:	6128      	str	r0, [r5, #16]
 800beb6:	b930      	cbnz	r0, 800bec6 <_svfiprintf_r+0x32>
 800beb8:	230c      	movs	r3, #12
 800beba:	603b      	str	r3, [r7, #0]
 800bebc:	f04f 30ff 	mov.w	r0, #4294967295
 800bec0:	b01d      	add	sp, #116	@ 0x74
 800bec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bec6:	2340      	movs	r3, #64	@ 0x40
 800bec8:	616b      	str	r3, [r5, #20]
 800beca:	2300      	movs	r3, #0
 800becc:	9309      	str	r3, [sp, #36]	@ 0x24
 800bece:	2320      	movs	r3, #32
 800bed0:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800bed4:	f8cd 800c 	str.w	r8, [sp, #12]
 800bed8:	2330      	movs	r3, #48	@ 0x30
 800beda:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 800c078 <_svfiprintf_r+0x1e4>
 800bede:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800bee2:	f04f 0901 	mov.w	r9, #1
 800bee6:	4623      	mov	r3, r4
 800bee8:	469a      	mov	sl, r3
 800beea:	f813 2b01 	ldrb.w	r2, [r3], #1
 800beee:	b10a      	cbz	r2, 800bef4 <_svfiprintf_r+0x60>
 800bef0:	2a25      	cmp	r2, #37	@ 0x25
 800bef2:	d1f9      	bne.n	800bee8 <_svfiprintf_r+0x54>
 800bef4:	ebba 0b04 	subs.w	fp, sl, r4
 800bef8:	d00b      	beq.n	800bf12 <_svfiprintf_r+0x7e>
 800befa:	465b      	mov	r3, fp
 800befc:	4622      	mov	r2, r4
 800befe:	4629      	mov	r1, r5
 800bf00:	4638      	mov	r0, r7
 800bf02:	f7ff ff6b 	bl	800bddc <__ssputs_r>
 800bf06:	3001      	adds	r0, #1
 800bf08:	f000 80a7 	beq.w	800c05a <_svfiprintf_r+0x1c6>
 800bf0c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800bf0e:	445a      	add	r2, fp
 800bf10:	9209      	str	r2, [sp, #36]	@ 0x24
 800bf12:	f89a 3000 	ldrb.w	r3, [sl]
 800bf16:	2b00      	cmp	r3, #0
 800bf18:	f000 809f 	beq.w	800c05a <_svfiprintf_r+0x1c6>
 800bf1c:	2300      	movs	r3, #0
 800bf1e:	f04f 32ff 	mov.w	r2, #4294967295
 800bf22:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800bf26:	f10a 0a01 	add.w	sl, sl, #1
 800bf2a:	9304      	str	r3, [sp, #16]
 800bf2c:	9307      	str	r3, [sp, #28]
 800bf2e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800bf32:	931a      	str	r3, [sp, #104]	@ 0x68
 800bf34:	4654      	mov	r4, sl
 800bf36:	2205      	movs	r2, #5
 800bf38:	f814 1b01 	ldrb.w	r1, [r4], #1
 800bf3c:	484e      	ldr	r0, [pc, #312]	@ (800c078 <_svfiprintf_r+0x1e4>)
 800bf3e:	f7f4 f977 	bl	8000230 <memchr>
 800bf42:	9a04      	ldr	r2, [sp, #16]
 800bf44:	b9d8      	cbnz	r0, 800bf7e <_svfiprintf_r+0xea>
 800bf46:	06d0      	lsls	r0, r2, #27
 800bf48:	bf44      	itt	mi
 800bf4a:	2320      	movmi	r3, #32
 800bf4c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800bf50:	0711      	lsls	r1, r2, #28
 800bf52:	bf44      	itt	mi
 800bf54:	232b      	movmi	r3, #43	@ 0x2b
 800bf56:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800bf5a:	f89a 3000 	ldrb.w	r3, [sl]
 800bf5e:	2b2a      	cmp	r3, #42	@ 0x2a
 800bf60:	d015      	beq.n	800bf8e <_svfiprintf_r+0xfa>
 800bf62:	9a07      	ldr	r2, [sp, #28]
 800bf64:	4654      	mov	r4, sl
 800bf66:	2000      	movs	r0, #0
 800bf68:	f04f 0c0a 	mov.w	ip, #10
 800bf6c:	4621      	mov	r1, r4
 800bf6e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bf72:	3b30      	subs	r3, #48	@ 0x30
 800bf74:	2b09      	cmp	r3, #9
 800bf76:	d94b      	bls.n	800c010 <_svfiprintf_r+0x17c>
 800bf78:	b1b0      	cbz	r0, 800bfa8 <_svfiprintf_r+0x114>
 800bf7a:	9207      	str	r2, [sp, #28]
 800bf7c:	e014      	b.n	800bfa8 <_svfiprintf_r+0x114>
 800bf7e:	eba0 0308 	sub.w	r3, r0, r8
 800bf82:	fa09 f303 	lsl.w	r3, r9, r3
 800bf86:	4313      	orrs	r3, r2
 800bf88:	9304      	str	r3, [sp, #16]
 800bf8a:	46a2      	mov	sl, r4
 800bf8c:	e7d2      	b.n	800bf34 <_svfiprintf_r+0xa0>
 800bf8e:	9b03      	ldr	r3, [sp, #12]
 800bf90:	1d19      	adds	r1, r3, #4
 800bf92:	681b      	ldr	r3, [r3, #0]
 800bf94:	9103      	str	r1, [sp, #12]
 800bf96:	2b00      	cmp	r3, #0
 800bf98:	bfbb      	ittet	lt
 800bf9a:	425b      	neglt	r3, r3
 800bf9c:	f042 0202 	orrlt.w	r2, r2, #2
 800bfa0:	9307      	strge	r3, [sp, #28]
 800bfa2:	9307      	strlt	r3, [sp, #28]
 800bfa4:	bfb8      	it	lt
 800bfa6:	9204      	strlt	r2, [sp, #16]
 800bfa8:	7823      	ldrb	r3, [r4, #0]
 800bfaa:	2b2e      	cmp	r3, #46	@ 0x2e
 800bfac:	d10a      	bne.n	800bfc4 <_svfiprintf_r+0x130>
 800bfae:	7863      	ldrb	r3, [r4, #1]
 800bfb0:	2b2a      	cmp	r3, #42	@ 0x2a
 800bfb2:	d132      	bne.n	800c01a <_svfiprintf_r+0x186>
 800bfb4:	9b03      	ldr	r3, [sp, #12]
 800bfb6:	1d1a      	adds	r2, r3, #4
 800bfb8:	681b      	ldr	r3, [r3, #0]
 800bfba:	9203      	str	r2, [sp, #12]
 800bfbc:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800bfc0:	3402      	adds	r4, #2
 800bfc2:	9305      	str	r3, [sp, #20]
 800bfc4:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 800c088 <_svfiprintf_r+0x1f4>
 800bfc8:	7821      	ldrb	r1, [r4, #0]
 800bfca:	2203      	movs	r2, #3
 800bfcc:	4650      	mov	r0, sl
 800bfce:	f7f4 f92f 	bl	8000230 <memchr>
 800bfd2:	b138      	cbz	r0, 800bfe4 <_svfiprintf_r+0x150>
 800bfd4:	9b04      	ldr	r3, [sp, #16]
 800bfd6:	eba0 000a 	sub.w	r0, r0, sl
 800bfda:	2240      	movs	r2, #64	@ 0x40
 800bfdc:	4082      	lsls	r2, r0
 800bfde:	4313      	orrs	r3, r2
 800bfe0:	3401      	adds	r4, #1
 800bfe2:	9304      	str	r3, [sp, #16]
 800bfe4:	f814 1b01 	ldrb.w	r1, [r4], #1
 800bfe8:	4824      	ldr	r0, [pc, #144]	@ (800c07c <_svfiprintf_r+0x1e8>)
 800bfea:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800bfee:	2206      	movs	r2, #6
 800bff0:	f7f4 f91e 	bl	8000230 <memchr>
 800bff4:	2800      	cmp	r0, #0
 800bff6:	d036      	beq.n	800c066 <_svfiprintf_r+0x1d2>
 800bff8:	4b21      	ldr	r3, [pc, #132]	@ (800c080 <_svfiprintf_r+0x1ec>)
 800bffa:	bb1b      	cbnz	r3, 800c044 <_svfiprintf_r+0x1b0>
 800bffc:	9b03      	ldr	r3, [sp, #12]
 800bffe:	3307      	adds	r3, #7
 800c000:	f023 0307 	bic.w	r3, r3, #7
 800c004:	3308      	adds	r3, #8
 800c006:	9303      	str	r3, [sp, #12]
 800c008:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c00a:	4433      	add	r3, r6
 800c00c:	9309      	str	r3, [sp, #36]	@ 0x24
 800c00e:	e76a      	b.n	800bee6 <_svfiprintf_r+0x52>
 800c010:	fb0c 3202 	mla	r2, ip, r2, r3
 800c014:	460c      	mov	r4, r1
 800c016:	2001      	movs	r0, #1
 800c018:	e7a8      	b.n	800bf6c <_svfiprintf_r+0xd8>
 800c01a:	2300      	movs	r3, #0
 800c01c:	3401      	adds	r4, #1
 800c01e:	9305      	str	r3, [sp, #20]
 800c020:	4619      	mov	r1, r3
 800c022:	f04f 0c0a 	mov.w	ip, #10
 800c026:	4620      	mov	r0, r4
 800c028:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c02c:	3a30      	subs	r2, #48	@ 0x30
 800c02e:	2a09      	cmp	r2, #9
 800c030:	d903      	bls.n	800c03a <_svfiprintf_r+0x1a6>
 800c032:	2b00      	cmp	r3, #0
 800c034:	d0c6      	beq.n	800bfc4 <_svfiprintf_r+0x130>
 800c036:	9105      	str	r1, [sp, #20]
 800c038:	e7c4      	b.n	800bfc4 <_svfiprintf_r+0x130>
 800c03a:	fb0c 2101 	mla	r1, ip, r1, r2
 800c03e:	4604      	mov	r4, r0
 800c040:	2301      	movs	r3, #1
 800c042:	e7f0      	b.n	800c026 <_svfiprintf_r+0x192>
 800c044:	ab03      	add	r3, sp, #12
 800c046:	9300      	str	r3, [sp, #0]
 800c048:	462a      	mov	r2, r5
 800c04a:	4b0e      	ldr	r3, [pc, #56]	@ (800c084 <_svfiprintf_r+0x1f0>)
 800c04c:	a904      	add	r1, sp, #16
 800c04e:	4638      	mov	r0, r7
 800c050:	f3af 8000 	nop.w
 800c054:	1c42      	adds	r2, r0, #1
 800c056:	4606      	mov	r6, r0
 800c058:	d1d6      	bne.n	800c008 <_svfiprintf_r+0x174>
 800c05a:	89ab      	ldrh	r3, [r5, #12]
 800c05c:	065b      	lsls	r3, r3, #25
 800c05e:	f53f af2d 	bmi.w	800bebc <_svfiprintf_r+0x28>
 800c062:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c064:	e72c      	b.n	800bec0 <_svfiprintf_r+0x2c>
 800c066:	ab03      	add	r3, sp, #12
 800c068:	9300      	str	r3, [sp, #0]
 800c06a:	462a      	mov	r2, r5
 800c06c:	4b05      	ldr	r3, [pc, #20]	@ (800c084 <_svfiprintf_r+0x1f0>)
 800c06e:	a904      	add	r1, sp, #16
 800c070:	4638      	mov	r0, r7
 800c072:	f000 f9bb 	bl	800c3ec <_printf_i>
 800c076:	e7ed      	b.n	800c054 <_svfiprintf_r+0x1c0>
 800c078:	0800d437 	.word	0x0800d437
 800c07c:	0800d441 	.word	0x0800d441
 800c080:	00000000 	.word	0x00000000
 800c084:	0800bddd 	.word	0x0800bddd
 800c088:	0800d43d 	.word	0x0800d43d

0800c08c <__sfputc_r>:
 800c08c:	6893      	ldr	r3, [r2, #8]
 800c08e:	3b01      	subs	r3, #1
 800c090:	2b00      	cmp	r3, #0
 800c092:	b410      	push	{r4}
 800c094:	6093      	str	r3, [r2, #8]
 800c096:	da08      	bge.n	800c0aa <__sfputc_r+0x1e>
 800c098:	6994      	ldr	r4, [r2, #24]
 800c09a:	42a3      	cmp	r3, r4
 800c09c:	db01      	blt.n	800c0a2 <__sfputc_r+0x16>
 800c09e:	290a      	cmp	r1, #10
 800c0a0:	d103      	bne.n	800c0aa <__sfputc_r+0x1e>
 800c0a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c0a6:	f000 bbb3 	b.w	800c810 <__swbuf_r>
 800c0aa:	6813      	ldr	r3, [r2, #0]
 800c0ac:	1c58      	adds	r0, r3, #1
 800c0ae:	6010      	str	r0, [r2, #0]
 800c0b0:	7019      	strb	r1, [r3, #0]
 800c0b2:	4608      	mov	r0, r1
 800c0b4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c0b8:	4770      	bx	lr

0800c0ba <__sfputs_r>:
 800c0ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c0bc:	4606      	mov	r6, r0
 800c0be:	460f      	mov	r7, r1
 800c0c0:	4614      	mov	r4, r2
 800c0c2:	18d5      	adds	r5, r2, r3
 800c0c4:	42ac      	cmp	r4, r5
 800c0c6:	d101      	bne.n	800c0cc <__sfputs_r+0x12>
 800c0c8:	2000      	movs	r0, #0
 800c0ca:	e007      	b.n	800c0dc <__sfputs_r+0x22>
 800c0cc:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c0d0:	463a      	mov	r2, r7
 800c0d2:	4630      	mov	r0, r6
 800c0d4:	f7ff ffda 	bl	800c08c <__sfputc_r>
 800c0d8:	1c43      	adds	r3, r0, #1
 800c0da:	d1f3      	bne.n	800c0c4 <__sfputs_r+0xa>
 800c0dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800c0e0 <_vfiprintf_r>:
 800c0e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c0e4:	460d      	mov	r5, r1
 800c0e6:	b09d      	sub	sp, #116	@ 0x74
 800c0e8:	4614      	mov	r4, r2
 800c0ea:	4698      	mov	r8, r3
 800c0ec:	4606      	mov	r6, r0
 800c0ee:	b118      	cbz	r0, 800c0f8 <_vfiprintf_r+0x18>
 800c0f0:	6a03      	ldr	r3, [r0, #32]
 800c0f2:	b90b      	cbnz	r3, 800c0f8 <_vfiprintf_r+0x18>
 800c0f4:	f7ff fc16 	bl	800b924 <__sinit>
 800c0f8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c0fa:	07d9      	lsls	r1, r3, #31
 800c0fc:	d405      	bmi.n	800c10a <_vfiprintf_r+0x2a>
 800c0fe:	89ab      	ldrh	r3, [r5, #12]
 800c100:	059a      	lsls	r2, r3, #22
 800c102:	d402      	bmi.n	800c10a <_vfiprintf_r+0x2a>
 800c104:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c106:	f7ff fd3a 	bl	800bb7e <__retarget_lock_acquire_recursive>
 800c10a:	89ab      	ldrh	r3, [r5, #12]
 800c10c:	071b      	lsls	r3, r3, #28
 800c10e:	d501      	bpl.n	800c114 <_vfiprintf_r+0x34>
 800c110:	692b      	ldr	r3, [r5, #16]
 800c112:	b99b      	cbnz	r3, 800c13c <_vfiprintf_r+0x5c>
 800c114:	4629      	mov	r1, r5
 800c116:	4630      	mov	r0, r6
 800c118:	f000 fbb8 	bl	800c88c <__swsetup_r>
 800c11c:	b170      	cbz	r0, 800c13c <_vfiprintf_r+0x5c>
 800c11e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c120:	07dc      	lsls	r4, r3, #31
 800c122:	d504      	bpl.n	800c12e <_vfiprintf_r+0x4e>
 800c124:	f04f 30ff 	mov.w	r0, #4294967295
 800c128:	b01d      	add	sp, #116	@ 0x74
 800c12a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c12e:	89ab      	ldrh	r3, [r5, #12]
 800c130:	0598      	lsls	r0, r3, #22
 800c132:	d4f7      	bmi.n	800c124 <_vfiprintf_r+0x44>
 800c134:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c136:	f7ff fd23 	bl	800bb80 <__retarget_lock_release_recursive>
 800c13a:	e7f3      	b.n	800c124 <_vfiprintf_r+0x44>
 800c13c:	2300      	movs	r3, #0
 800c13e:	9309      	str	r3, [sp, #36]	@ 0x24
 800c140:	2320      	movs	r3, #32
 800c142:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800c146:	f8cd 800c 	str.w	r8, [sp, #12]
 800c14a:	2330      	movs	r3, #48	@ 0x30
 800c14c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800c2fc <_vfiprintf_r+0x21c>
 800c150:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800c154:	f04f 0901 	mov.w	r9, #1
 800c158:	4623      	mov	r3, r4
 800c15a:	469a      	mov	sl, r3
 800c15c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c160:	b10a      	cbz	r2, 800c166 <_vfiprintf_r+0x86>
 800c162:	2a25      	cmp	r2, #37	@ 0x25
 800c164:	d1f9      	bne.n	800c15a <_vfiprintf_r+0x7a>
 800c166:	ebba 0b04 	subs.w	fp, sl, r4
 800c16a:	d00b      	beq.n	800c184 <_vfiprintf_r+0xa4>
 800c16c:	465b      	mov	r3, fp
 800c16e:	4622      	mov	r2, r4
 800c170:	4629      	mov	r1, r5
 800c172:	4630      	mov	r0, r6
 800c174:	f7ff ffa1 	bl	800c0ba <__sfputs_r>
 800c178:	3001      	adds	r0, #1
 800c17a:	f000 80a7 	beq.w	800c2cc <_vfiprintf_r+0x1ec>
 800c17e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c180:	445a      	add	r2, fp
 800c182:	9209      	str	r2, [sp, #36]	@ 0x24
 800c184:	f89a 3000 	ldrb.w	r3, [sl]
 800c188:	2b00      	cmp	r3, #0
 800c18a:	f000 809f 	beq.w	800c2cc <_vfiprintf_r+0x1ec>
 800c18e:	2300      	movs	r3, #0
 800c190:	f04f 32ff 	mov.w	r2, #4294967295
 800c194:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c198:	f10a 0a01 	add.w	sl, sl, #1
 800c19c:	9304      	str	r3, [sp, #16]
 800c19e:	9307      	str	r3, [sp, #28]
 800c1a0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800c1a4:	931a      	str	r3, [sp, #104]	@ 0x68
 800c1a6:	4654      	mov	r4, sl
 800c1a8:	2205      	movs	r2, #5
 800c1aa:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c1ae:	4853      	ldr	r0, [pc, #332]	@ (800c2fc <_vfiprintf_r+0x21c>)
 800c1b0:	f7f4 f83e 	bl	8000230 <memchr>
 800c1b4:	9a04      	ldr	r2, [sp, #16]
 800c1b6:	b9d8      	cbnz	r0, 800c1f0 <_vfiprintf_r+0x110>
 800c1b8:	06d1      	lsls	r1, r2, #27
 800c1ba:	bf44      	itt	mi
 800c1bc:	2320      	movmi	r3, #32
 800c1be:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c1c2:	0713      	lsls	r3, r2, #28
 800c1c4:	bf44      	itt	mi
 800c1c6:	232b      	movmi	r3, #43	@ 0x2b
 800c1c8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c1cc:	f89a 3000 	ldrb.w	r3, [sl]
 800c1d0:	2b2a      	cmp	r3, #42	@ 0x2a
 800c1d2:	d015      	beq.n	800c200 <_vfiprintf_r+0x120>
 800c1d4:	9a07      	ldr	r2, [sp, #28]
 800c1d6:	4654      	mov	r4, sl
 800c1d8:	2000      	movs	r0, #0
 800c1da:	f04f 0c0a 	mov.w	ip, #10
 800c1de:	4621      	mov	r1, r4
 800c1e0:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c1e4:	3b30      	subs	r3, #48	@ 0x30
 800c1e6:	2b09      	cmp	r3, #9
 800c1e8:	d94b      	bls.n	800c282 <_vfiprintf_r+0x1a2>
 800c1ea:	b1b0      	cbz	r0, 800c21a <_vfiprintf_r+0x13a>
 800c1ec:	9207      	str	r2, [sp, #28]
 800c1ee:	e014      	b.n	800c21a <_vfiprintf_r+0x13a>
 800c1f0:	eba0 0308 	sub.w	r3, r0, r8
 800c1f4:	fa09 f303 	lsl.w	r3, r9, r3
 800c1f8:	4313      	orrs	r3, r2
 800c1fa:	9304      	str	r3, [sp, #16]
 800c1fc:	46a2      	mov	sl, r4
 800c1fe:	e7d2      	b.n	800c1a6 <_vfiprintf_r+0xc6>
 800c200:	9b03      	ldr	r3, [sp, #12]
 800c202:	1d19      	adds	r1, r3, #4
 800c204:	681b      	ldr	r3, [r3, #0]
 800c206:	9103      	str	r1, [sp, #12]
 800c208:	2b00      	cmp	r3, #0
 800c20a:	bfbb      	ittet	lt
 800c20c:	425b      	neglt	r3, r3
 800c20e:	f042 0202 	orrlt.w	r2, r2, #2
 800c212:	9307      	strge	r3, [sp, #28]
 800c214:	9307      	strlt	r3, [sp, #28]
 800c216:	bfb8      	it	lt
 800c218:	9204      	strlt	r2, [sp, #16]
 800c21a:	7823      	ldrb	r3, [r4, #0]
 800c21c:	2b2e      	cmp	r3, #46	@ 0x2e
 800c21e:	d10a      	bne.n	800c236 <_vfiprintf_r+0x156>
 800c220:	7863      	ldrb	r3, [r4, #1]
 800c222:	2b2a      	cmp	r3, #42	@ 0x2a
 800c224:	d132      	bne.n	800c28c <_vfiprintf_r+0x1ac>
 800c226:	9b03      	ldr	r3, [sp, #12]
 800c228:	1d1a      	adds	r2, r3, #4
 800c22a:	681b      	ldr	r3, [r3, #0]
 800c22c:	9203      	str	r2, [sp, #12]
 800c22e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800c232:	3402      	adds	r4, #2
 800c234:	9305      	str	r3, [sp, #20]
 800c236:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800c30c <_vfiprintf_r+0x22c>
 800c23a:	7821      	ldrb	r1, [r4, #0]
 800c23c:	2203      	movs	r2, #3
 800c23e:	4650      	mov	r0, sl
 800c240:	f7f3 fff6 	bl	8000230 <memchr>
 800c244:	b138      	cbz	r0, 800c256 <_vfiprintf_r+0x176>
 800c246:	9b04      	ldr	r3, [sp, #16]
 800c248:	eba0 000a 	sub.w	r0, r0, sl
 800c24c:	2240      	movs	r2, #64	@ 0x40
 800c24e:	4082      	lsls	r2, r0
 800c250:	4313      	orrs	r3, r2
 800c252:	3401      	adds	r4, #1
 800c254:	9304      	str	r3, [sp, #16]
 800c256:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c25a:	4829      	ldr	r0, [pc, #164]	@ (800c300 <_vfiprintf_r+0x220>)
 800c25c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800c260:	2206      	movs	r2, #6
 800c262:	f7f3 ffe5 	bl	8000230 <memchr>
 800c266:	2800      	cmp	r0, #0
 800c268:	d03f      	beq.n	800c2ea <_vfiprintf_r+0x20a>
 800c26a:	4b26      	ldr	r3, [pc, #152]	@ (800c304 <_vfiprintf_r+0x224>)
 800c26c:	bb1b      	cbnz	r3, 800c2b6 <_vfiprintf_r+0x1d6>
 800c26e:	9b03      	ldr	r3, [sp, #12]
 800c270:	3307      	adds	r3, #7
 800c272:	f023 0307 	bic.w	r3, r3, #7
 800c276:	3308      	adds	r3, #8
 800c278:	9303      	str	r3, [sp, #12]
 800c27a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c27c:	443b      	add	r3, r7
 800c27e:	9309      	str	r3, [sp, #36]	@ 0x24
 800c280:	e76a      	b.n	800c158 <_vfiprintf_r+0x78>
 800c282:	fb0c 3202 	mla	r2, ip, r2, r3
 800c286:	460c      	mov	r4, r1
 800c288:	2001      	movs	r0, #1
 800c28a:	e7a8      	b.n	800c1de <_vfiprintf_r+0xfe>
 800c28c:	2300      	movs	r3, #0
 800c28e:	3401      	adds	r4, #1
 800c290:	9305      	str	r3, [sp, #20]
 800c292:	4619      	mov	r1, r3
 800c294:	f04f 0c0a 	mov.w	ip, #10
 800c298:	4620      	mov	r0, r4
 800c29a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c29e:	3a30      	subs	r2, #48	@ 0x30
 800c2a0:	2a09      	cmp	r2, #9
 800c2a2:	d903      	bls.n	800c2ac <_vfiprintf_r+0x1cc>
 800c2a4:	2b00      	cmp	r3, #0
 800c2a6:	d0c6      	beq.n	800c236 <_vfiprintf_r+0x156>
 800c2a8:	9105      	str	r1, [sp, #20]
 800c2aa:	e7c4      	b.n	800c236 <_vfiprintf_r+0x156>
 800c2ac:	fb0c 2101 	mla	r1, ip, r1, r2
 800c2b0:	4604      	mov	r4, r0
 800c2b2:	2301      	movs	r3, #1
 800c2b4:	e7f0      	b.n	800c298 <_vfiprintf_r+0x1b8>
 800c2b6:	ab03      	add	r3, sp, #12
 800c2b8:	9300      	str	r3, [sp, #0]
 800c2ba:	462a      	mov	r2, r5
 800c2bc:	4b12      	ldr	r3, [pc, #72]	@ (800c308 <_vfiprintf_r+0x228>)
 800c2be:	a904      	add	r1, sp, #16
 800c2c0:	4630      	mov	r0, r6
 800c2c2:	f3af 8000 	nop.w
 800c2c6:	4607      	mov	r7, r0
 800c2c8:	1c78      	adds	r0, r7, #1
 800c2ca:	d1d6      	bne.n	800c27a <_vfiprintf_r+0x19a>
 800c2cc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c2ce:	07d9      	lsls	r1, r3, #31
 800c2d0:	d405      	bmi.n	800c2de <_vfiprintf_r+0x1fe>
 800c2d2:	89ab      	ldrh	r3, [r5, #12]
 800c2d4:	059a      	lsls	r2, r3, #22
 800c2d6:	d402      	bmi.n	800c2de <_vfiprintf_r+0x1fe>
 800c2d8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c2da:	f7ff fc51 	bl	800bb80 <__retarget_lock_release_recursive>
 800c2de:	89ab      	ldrh	r3, [r5, #12]
 800c2e0:	065b      	lsls	r3, r3, #25
 800c2e2:	f53f af1f 	bmi.w	800c124 <_vfiprintf_r+0x44>
 800c2e6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c2e8:	e71e      	b.n	800c128 <_vfiprintf_r+0x48>
 800c2ea:	ab03      	add	r3, sp, #12
 800c2ec:	9300      	str	r3, [sp, #0]
 800c2ee:	462a      	mov	r2, r5
 800c2f0:	4b05      	ldr	r3, [pc, #20]	@ (800c308 <_vfiprintf_r+0x228>)
 800c2f2:	a904      	add	r1, sp, #16
 800c2f4:	4630      	mov	r0, r6
 800c2f6:	f000 f879 	bl	800c3ec <_printf_i>
 800c2fa:	e7e4      	b.n	800c2c6 <_vfiprintf_r+0x1e6>
 800c2fc:	0800d437 	.word	0x0800d437
 800c300:	0800d441 	.word	0x0800d441
 800c304:	00000000 	.word	0x00000000
 800c308:	0800c0bb 	.word	0x0800c0bb
 800c30c:	0800d43d 	.word	0x0800d43d

0800c310 <_printf_common>:
 800c310:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c314:	4616      	mov	r6, r2
 800c316:	4698      	mov	r8, r3
 800c318:	688a      	ldr	r2, [r1, #8]
 800c31a:	690b      	ldr	r3, [r1, #16]
 800c31c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800c320:	4293      	cmp	r3, r2
 800c322:	bfb8      	it	lt
 800c324:	4613      	movlt	r3, r2
 800c326:	6033      	str	r3, [r6, #0]
 800c328:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800c32c:	4607      	mov	r7, r0
 800c32e:	460c      	mov	r4, r1
 800c330:	b10a      	cbz	r2, 800c336 <_printf_common+0x26>
 800c332:	3301      	adds	r3, #1
 800c334:	6033      	str	r3, [r6, #0]
 800c336:	6823      	ldr	r3, [r4, #0]
 800c338:	0699      	lsls	r1, r3, #26
 800c33a:	bf42      	ittt	mi
 800c33c:	6833      	ldrmi	r3, [r6, #0]
 800c33e:	3302      	addmi	r3, #2
 800c340:	6033      	strmi	r3, [r6, #0]
 800c342:	6825      	ldr	r5, [r4, #0]
 800c344:	f015 0506 	ands.w	r5, r5, #6
 800c348:	d106      	bne.n	800c358 <_printf_common+0x48>
 800c34a:	f104 0a19 	add.w	sl, r4, #25
 800c34e:	68e3      	ldr	r3, [r4, #12]
 800c350:	6832      	ldr	r2, [r6, #0]
 800c352:	1a9b      	subs	r3, r3, r2
 800c354:	42ab      	cmp	r3, r5
 800c356:	dc26      	bgt.n	800c3a6 <_printf_common+0x96>
 800c358:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800c35c:	6822      	ldr	r2, [r4, #0]
 800c35e:	3b00      	subs	r3, #0
 800c360:	bf18      	it	ne
 800c362:	2301      	movne	r3, #1
 800c364:	0692      	lsls	r2, r2, #26
 800c366:	d42b      	bmi.n	800c3c0 <_printf_common+0xb0>
 800c368:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800c36c:	4641      	mov	r1, r8
 800c36e:	4638      	mov	r0, r7
 800c370:	47c8      	blx	r9
 800c372:	3001      	adds	r0, #1
 800c374:	d01e      	beq.n	800c3b4 <_printf_common+0xa4>
 800c376:	6823      	ldr	r3, [r4, #0]
 800c378:	6922      	ldr	r2, [r4, #16]
 800c37a:	f003 0306 	and.w	r3, r3, #6
 800c37e:	2b04      	cmp	r3, #4
 800c380:	bf02      	ittt	eq
 800c382:	68e5      	ldreq	r5, [r4, #12]
 800c384:	6833      	ldreq	r3, [r6, #0]
 800c386:	1aed      	subeq	r5, r5, r3
 800c388:	68a3      	ldr	r3, [r4, #8]
 800c38a:	bf0c      	ite	eq
 800c38c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800c390:	2500      	movne	r5, #0
 800c392:	4293      	cmp	r3, r2
 800c394:	bfc4      	itt	gt
 800c396:	1a9b      	subgt	r3, r3, r2
 800c398:	18ed      	addgt	r5, r5, r3
 800c39a:	2600      	movs	r6, #0
 800c39c:	341a      	adds	r4, #26
 800c39e:	42b5      	cmp	r5, r6
 800c3a0:	d11a      	bne.n	800c3d8 <_printf_common+0xc8>
 800c3a2:	2000      	movs	r0, #0
 800c3a4:	e008      	b.n	800c3b8 <_printf_common+0xa8>
 800c3a6:	2301      	movs	r3, #1
 800c3a8:	4652      	mov	r2, sl
 800c3aa:	4641      	mov	r1, r8
 800c3ac:	4638      	mov	r0, r7
 800c3ae:	47c8      	blx	r9
 800c3b0:	3001      	adds	r0, #1
 800c3b2:	d103      	bne.n	800c3bc <_printf_common+0xac>
 800c3b4:	f04f 30ff 	mov.w	r0, #4294967295
 800c3b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c3bc:	3501      	adds	r5, #1
 800c3be:	e7c6      	b.n	800c34e <_printf_common+0x3e>
 800c3c0:	18e1      	adds	r1, r4, r3
 800c3c2:	1c5a      	adds	r2, r3, #1
 800c3c4:	2030      	movs	r0, #48	@ 0x30
 800c3c6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800c3ca:	4422      	add	r2, r4
 800c3cc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800c3d0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800c3d4:	3302      	adds	r3, #2
 800c3d6:	e7c7      	b.n	800c368 <_printf_common+0x58>
 800c3d8:	2301      	movs	r3, #1
 800c3da:	4622      	mov	r2, r4
 800c3dc:	4641      	mov	r1, r8
 800c3de:	4638      	mov	r0, r7
 800c3e0:	47c8      	blx	r9
 800c3e2:	3001      	adds	r0, #1
 800c3e4:	d0e6      	beq.n	800c3b4 <_printf_common+0xa4>
 800c3e6:	3601      	adds	r6, #1
 800c3e8:	e7d9      	b.n	800c39e <_printf_common+0x8e>
	...

0800c3ec <_printf_i>:
 800c3ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c3f0:	7e0f      	ldrb	r7, [r1, #24]
 800c3f2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800c3f4:	2f78      	cmp	r7, #120	@ 0x78
 800c3f6:	4691      	mov	r9, r2
 800c3f8:	4680      	mov	r8, r0
 800c3fa:	460c      	mov	r4, r1
 800c3fc:	469a      	mov	sl, r3
 800c3fe:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800c402:	d807      	bhi.n	800c414 <_printf_i+0x28>
 800c404:	2f62      	cmp	r7, #98	@ 0x62
 800c406:	d80a      	bhi.n	800c41e <_printf_i+0x32>
 800c408:	2f00      	cmp	r7, #0
 800c40a:	f000 80d2 	beq.w	800c5b2 <_printf_i+0x1c6>
 800c40e:	2f58      	cmp	r7, #88	@ 0x58
 800c410:	f000 80b9 	beq.w	800c586 <_printf_i+0x19a>
 800c414:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800c418:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800c41c:	e03a      	b.n	800c494 <_printf_i+0xa8>
 800c41e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800c422:	2b15      	cmp	r3, #21
 800c424:	d8f6      	bhi.n	800c414 <_printf_i+0x28>
 800c426:	a101      	add	r1, pc, #4	@ (adr r1, 800c42c <_printf_i+0x40>)
 800c428:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800c42c:	0800c485 	.word	0x0800c485
 800c430:	0800c499 	.word	0x0800c499
 800c434:	0800c415 	.word	0x0800c415
 800c438:	0800c415 	.word	0x0800c415
 800c43c:	0800c415 	.word	0x0800c415
 800c440:	0800c415 	.word	0x0800c415
 800c444:	0800c499 	.word	0x0800c499
 800c448:	0800c415 	.word	0x0800c415
 800c44c:	0800c415 	.word	0x0800c415
 800c450:	0800c415 	.word	0x0800c415
 800c454:	0800c415 	.word	0x0800c415
 800c458:	0800c599 	.word	0x0800c599
 800c45c:	0800c4c3 	.word	0x0800c4c3
 800c460:	0800c553 	.word	0x0800c553
 800c464:	0800c415 	.word	0x0800c415
 800c468:	0800c415 	.word	0x0800c415
 800c46c:	0800c5bb 	.word	0x0800c5bb
 800c470:	0800c415 	.word	0x0800c415
 800c474:	0800c4c3 	.word	0x0800c4c3
 800c478:	0800c415 	.word	0x0800c415
 800c47c:	0800c415 	.word	0x0800c415
 800c480:	0800c55b 	.word	0x0800c55b
 800c484:	6833      	ldr	r3, [r6, #0]
 800c486:	1d1a      	adds	r2, r3, #4
 800c488:	681b      	ldr	r3, [r3, #0]
 800c48a:	6032      	str	r2, [r6, #0]
 800c48c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800c490:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800c494:	2301      	movs	r3, #1
 800c496:	e09d      	b.n	800c5d4 <_printf_i+0x1e8>
 800c498:	6833      	ldr	r3, [r6, #0]
 800c49a:	6820      	ldr	r0, [r4, #0]
 800c49c:	1d19      	adds	r1, r3, #4
 800c49e:	6031      	str	r1, [r6, #0]
 800c4a0:	0606      	lsls	r6, r0, #24
 800c4a2:	d501      	bpl.n	800c4a8 <_printf_i+0xbc>
 800c4a4:	681d      	ldr	r5, [r3, #0]
 800c4a6:	e003      	b.n	800c4b0 <_printf_i+0xc4>
 800c4a8:	0645      	lsls	r5, r0, #25
 800c4aa:	d5fb      	bpl.n	800c4a4 <_printf_i+0xb8>
 800c4ac:	f9b3 5000 	ldrsh.w	r5, [r3]
 800c4b0:	2d00      	cmp	r5, #0
 800c4b2:	da03      	bge.n	800c4bc <_printf_i+0xd0>
 800c4b4:	232d      	movs	r3, #45	@ 0x2d
 800c4b6:	426d      	negs	r5, r5
 800c4b8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800c4bc:	4859      	ldr	r0, [pc, #356]	@ (800c624 <_printf_i+0x238>)
 800c4be:	230a      	movs	r3, #10
 800c4c0:	e011      	b.n	800c4e6 <_printf_i+0xfa>
 800c4c2:	6821      	ldr	r1, [r4, #0]
 800c4c4:	6833      	ldr	r3, [r6, #0]
 800c4c6:	0608      	lsls	r0, r1, #24
 800c4c8:	f853 5b04 	ldr.w	r5, [r3], #4
 800c4cc:	d402      	bmi.n	800c4d4 <_printf_i+0xe8>
 800c4ce:	0649      	lsls	r1, r1, #25
 800c4d0:	bf48      	it	mi
 800c4d2:	b2ad      	uxthmi	r5, r5
 800c4d4:	2f6f      	cmp	r7, #111	@ 0x6f
 800c4d6:	4853      	ldr	r0, [pc, #332]	@ (800c624 <_printf_i+0x238>)
 800c4d8:	6033      	str	r3, [r6, #0]
 800c4da:	bf14      	ite	ne
 800c4dc:	230a      	movne	r3, #10
 800c4de:	2308      	moveq	r3, #8
 800c4e0:	2100      	movs	r1, #0
 800c4e2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800c4e6:	6866      	ldr	r6, [r4, #4]
 800c4e8:	60a6      	str	r6, [r4, #8]
 800c4ea:	2e00      	cmp	r6, #0
 800c4ec:	bfa2      	ittt	ge
 800c4ee:	6821      	ldrge	r1, [r4, #0]
 800c4f0:	f021 0104 	bicge.w	r1, r1, #4
 800c4f4:	6021      	strge	r1, [r4, #0]
 800c4f6:	b90d      	cbnz	r5, 800c4fc <_printf_i+0x110>
 800c4f8:	2e00      	cmp	r6, #0
 800c4fa:	d04b      	beq.n	800c594 <_printf_i+0x1a8>
 800c4fc:	4616      	mov	r6, r2
 800c4fe:	fbb5 f1f3 	udiv	r1, r5, r3
 800c502:	fb03 5711 	mls	r7, r3, r1, r5
 800c506:	5dc7      	ldrb	r7, [r0, r7]
 800c508:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800c50c:	462f      	mov	r7, r5
 800c50e:	42bb      	cmp	r3, r7
 800c510:	460d      	mov	r5, r1
 800c512:	d9f4      	bls.n	800c4fe <_printf_i+0x112>
 800c514:	2b08      	cmp	r3, #8
 800c516:	d10b      	bne.n	800c530 <_printf_i+0x144>
 800c518:	6823      	ldr	r3, [r4, #0]
 800c51a:	07df      	lsls	r7, r3, #31
 800c51c:	d508      	bpl.n	800c530 <_printf_i+0x144>
 800c51e:	6923      	ldr	r3, [r4, #16]
 800c520:	6861      	ldr	r1, [r4, #4]
 800c522:	4299      	cmp	r1, r3
 800c524:	bfde      	ittt	le
 800c526:	2330      	movle	r3, #48	@ 0x30
 800c528:	f806 3c01 	strble.w	r3, [r6, #-1]
 800c52c:	f106 36ff 	addle.w	r6, r6, #4294967295
 800c530:	1b92      	subs	r2, r2, r6
 800c532:	6122      	str	r2, [r4, #16]
 800c534:	f8cd a000 	str.w	sl, [sp]
 800c538:	464b      	mov	r3, r9
 800c53a:	aa03      	add	r2, sp, #12
 800c53c:	4621      	mov	r1, r4
 800c53e:	4640      	mov	r0, r8
 800c540:	f7ff fee6 	bl	800c310 <_printf_common>
 800c544:	3001      	adds	r0, #1
 800c546:	d14a      	bne.n	800c5de <_printf_i+0x1f2>
 800c548:	f04f 30ff 	mov.w	r0, #4294967295
 800c54c:	b004      	add	sp, #16
 800c54e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c552:	6823      	ldr	r3, [r4, #0]
 800c554:	f043 0320 	orr.w	r3, r3, #32
 800c558:	6023      	str	r3, [r4, #0]
 800c55a:	4833      	ldr	r0, [pc, #204]	@ (800c628 <_printf_i+0x23c>)
 800c55c:	2778      	movs	r7, #120	@ 0x78
 800c55e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800c562:	6823      	ldr	r3, [r4, #0]
 800c564:	6831      	ldr	r1, [r6, #0]
 800c566:	061f      	lsls	r7, r3, #24
 800c568:	f851 5b04 	ldr.w	r5, [r1], #4
 800c56c:	d402      	bmi.n	800c574 <_printf_i+0x188>
 800c56e:	065f      	lsls	r7, r3, #25
 800c570:	bf48      	it	mi
 800c572:	b2ad      	uxthmi	r5, r5
 800c574:	6031      	str	r1, [r6, #0]
 800c576:	07d9      	lsls	r1, r3, #31
 800c578:	bf44      	itt	mi
 800c57a:	f043 0320 	orrmi.w	r3, r3, #32
 800c57e:	6023      	strmi	r3, [r4, #0]
 800c580:	b11d      	cbz	r5, 800c58a <_printf_i+0x19e>
 800c582:	2310      	movs	r3, #16
 800c584:	e7ac      	b.n	800c4e0 <_printf_i+0xf4>
 800c586:	4827      	ldr	r0, [pc, #156]	@ (800c624 <_printf_i+0x238>)
 800c588:	e7e9      	b.n	800c55e <_printf_i+0x172>
 800c58a:	6823      	ldr	r3, [r4, #0]
 800c58c:	f023 0320 	bic.w	r3, r3, #32
 800c590:	6023      	str	r3, [r4, #0]
 800c592:	e7f6      	b.n	800c582 <_printf_i+0x196>
 800c594:	4616      	mov	r6, r2
 800c596:	e7bd      	b.n	800c514 <_printf_i+0x128>
 800c598:	6833      	ldr	r3, [r6, #0]
 800c59a:	6825      	ldr	r5, [r4, #0]
 800c59c:	6961      	ldr	r1, [r4, #20]
 800c59e:	1d18      	adds	r0, r3, #4
 800c5a0:	6030      	str	r0, [r6, #0]
 800c5a2:	062e      	lsls	r6, r5, #24
 800c5a4:	681b      	ldr	r3, [r3, #0]
 800c5a6:	d501      	bpl.n	800c5ac <_printf_i+0x1c0>
 800c5a8:	6019      	str	r1, [r3, #0]
 800c5aa:	e002      	b.n	800c5b2 <_printf_i+0x1c6>
 800c5ac:	0668      	lsls	r0, r5, #25
 800c5ae:	d5fb      	bpl.n	800c5a8 <_printf_i+0x1bc>
 800c5b0:	8019      	strh	r1, [r3, #0]
 800c5b2:	2300      	movs	r3, #0
 800c5b4:	6123      	str	r3, [r4, #16]
 800c5b6:	4616      	mov	r6, r2
 800c5b8:	e7bc      	b.n	800c534 <_printf_i+0x148>
 800c5ba:	6833      	ldr	r3, [r6, #0]
 800c5bc:	1d1a      	adds	r2, r3, #4
 800c5be:	6032      	str	r2, [r6, #0]
 800c5c0:	681e      	ldr	r6, [r3, #0]
 800c5c2:	6862      	ldr	r2, [r4, #4]
 800c5c4:	2100      	movs	r1, #0
 800c5c6:	4630      	mov	r0, r6
 800c5c8:	f7f3 fe32 	bl	8000230 <memchr>
 800c5cc:	b108      	cbz	r0, 800c5d2 <_printf_i+0x1e6>
 800c5ce:	1b80      	subs	r0, r0, r6
 800c5d0:	6060      	str	r0, [r4, #4]
 800c5d2:	6863      	ldr	r3, [r4, #4]
 800c5d4:	6123      	str	r3, [r4, #16]
 800c5d6:	2300      	movs	r3, #0
 800c5d8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800c5dc:	e7aa      	b.n	800c534 <_printf_i+0x148>
 800c5de:	6923      	ldr	r3, [r4, #16]
 800c5e0:	4632      	mov	r2, r6
 800c5e2:	4649      	mov	r1, r9
 800c5e4:	4640      	mov	r0, r8
 800c5e6:	47d0      	blx	sl
 800c5e8:	3001      	adds	r0, #1
 800c5ea:	d0ad      	beq.n	800c548 <_printf_i+0x15c>
 800c5ec:	6823      	ldr	r3, [r4, #0]
 800c5ee:	079b      	lsls	r3, r3, #30
 800c5f0:	d413      	bmi.n	800c61a <_printf_i+0x22e>
 800c5f2:	68e0      	ldr	r0, [r4, #12]
 800c5f4:	9b03      	ldr	r3, [sp, #12]
 800c5f6:	4298      	cmp	r0, r3
 800c5f8:	bfb8      	it	lt
 800c5fa:	4618      	movlt	r0, r3
 800c5fc:	e7a6      	b.n	800c54c <_printf_i+0x160>
 800c5fe:	2301      	movs	r3, #1
 800c600:	4632      	mov	r2, r6
 800c602:	4649      	mov	r1, r9
 800c604:	4640      	mov	r0, r8
 800c606:	47d0      	blx	sl
 800c608:	3001      	adds	r0, #1
 800c60a:	d09d      	beq.n	800c548 <_printf_i+0x15c>
 800c60c:	3501      	adds	r5, #1
 800c60e:	68e3      	ldr	r3, [r4, #12]
 800c610:	9903      	ldr	r1, [sp, #12]
 800c612:	1a5b      	subs	r3, r3, r1
 800c614:	42ab      	cmp	r3, r5
 800c616:	dcf2      	bgt.n	800c5fe <_printf_i+0x212>
 800c618:	e7eb      	b.n	800c5f2 <_printf_i+0x206>
 800c61a:	2500      	movs	r5, #0
 800c61c:	f104 0619 	add.w	r6, r4, #25
 800c620:	e7f5      	b.n	800c60e <_printf_i+0x222>
 800c622:	bf00      	nop
 800c624:	0800d448 	.word	0x0800d448
 800c628:	0800d459 	.word	0x0800d459

0800c62c <__sflush_r>:
 800c62c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800c630:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c634:	0716      	lsls	r6, r2, #28
 800c636:	4605      	mov	r5, r0
 800c638:	460c      	mov	r4, r1
 800c63a:	d454      	bmi.n	800c6e6 <__sflush_r+0xba>
 800c63c:	684b      	ldr	r3, [r1, #4]
 800c63e:	2b00      	cmp	r3, #0
 800c640:	dc02      	bgt.n	800c648 <__sflush_r+0x1c>
 800c642:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800c644:	2b00      	cmp	r3, #0
 800c646:	dd48      	ble.n	800c6da <__sflush_r+0xae>
 800c648:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800c64a:	2e00      	cmp	r6, #0
 800c64c:	d045      	beq.n	800c6da <__sflush_r+0xae>
 800c64e:	2300      	movs	r3, #0
 800c650:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800c654:	682f      	ldr	r7, [r5, #0]
 800c656:	6a21      	ldr	r1, [r4, #32]
 800c658:	602b      	str	r3, [r5, #0]
 800c65a:	d030      	beq.n	800c6be <__sflush_r+0x92>
 800c65c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800c65e:	89a3      	ldrh	r3, [r4, #12]
 800c660:	0759      	lsls	r1, r3, #29
 800c662:	d505      	bpl.n	800c670 <__sflush_r+0x44>
 800c664:	6863      	ldr	r3, [r4, #4]
 800c666:	1ad2      	subs	r2, r2, r3
 800c668:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800c66a:	b10b      	cbz	r3, 800c670 <__sflush_r+0x44>
 800c66c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800c66e:	1ad2      	subs	r2, r2, r3
 800c670:	2300      	movs	r3, #0
 800c672:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800c674:	6a21      	ldr	r1, [r4, #32]
 800c676:	4628      	mov	r0, r5
 800c678:	47b0      	blx	r6
 800c67a:	1c43      	adds	r3, r0, #1
 800c67c:	89a3      	ldrh	r3, [r4, #12]
 800c67e:	d106      	bne.n	800c68e <__sflush_r+0x62>
 800c680:	6829      	ldr	r1, [r5, #0]
 800c682:	291d      	cmp	r1, #29
 800c684:	d82b      	bhi.n	800c6de <__sflush_r+0xb2>
 800c686:	4a2a      	ldr	r2, [pc, #168]	@ (800c730 <__sflush_r+0x104>)
 800c688:	410a      	asrs	r2, r1
 800c68a:	07d6      	lsls	r6, r2, #31
 800c68c:	d427      	bmi.n	800c6de <__sflush_r+0xb2>
 800c68e:	2200      	movs	r2, #0
 800c690:	6062      	str	r2, [r4, #4]
 800c692:	04d9      	lsls	r1, r3, #19
 800c694:	6922      	ldr	r2, [r4, #16]
 800c696:	6022      	str	r2, [r4, #0]
 800c698:	d504      	bpl.n	800c6a4 <__sflush_r+0x78>
 800c69a:	1c42      	adds	r2, r0, #1
 800c69c:	d101      	bne.n	800c6a2 <__sflush_r+0x76>
 800c69e:	682b      	ldr	r3, [r5, #0]
 800c6a0:	b903      	cbnz	r3, 800c6a4 <__sflush_r+0x78>
 800c6a2:	6560      	str	r0, [r4, #84]	@ 0x54
 800c6a4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800c6a6:	602f      	str	r7, [r5, #0]
 800c6a8:	b1b9      	cbz	r1, 800c6da <__sflush_r+0xae>
 800c6aa:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800c6ae:	4299      	cmp	r1, r3
 800c6b0:	d002      	beq.n	800c6b8 <__sflush_r+0x8c>
 800c6b2:	4628      	mov	r0, r5
 800c6b4:	f7ff fa92 	bl	800bbdc <_free_r>
 800c6b8:	2300      	movs	r3, #0
 800c6ba:	6363      	str	r3, [r4, #52]	@ 0x34
 800c6bc:	e00d      	b.n	800c6da <__sflush_r+0xae>
 800c6be:	2301      	movs	r3, #1
 800c6c0:	4628      	mov	r0, r5
 800c6c2:	47b0      	blx	r6
 800c6c4:	4602      	mov	r2, r0
 800c6c6:	1c50      	adds	r0, r2, #1
 800c6c8:	d1c9      	bne.n	800c65e <__sflush_r+0x32>
 800c6ca:	682b      	ldr	r3, [r5, #0]
 800c6cc:	2b00      	cmp	r3, #0
 800c6ce:	d0c6      	beq.n	800c65e <__sflush_r+0x32>
 800c6d0:	2b1d      	cmp	r3, #29
 800c6d2:	d001      	beq.n	800c6d8 <__sflush_r+0xac>
 800c6d4:	2b16      	cmp	r3, #22
 800c6d6:	d11e      	bne.n	800c716 <__sflush_r+0xea>
 800c6d8:	602f      	str	r7, [r5, #0]
 800c6da:	2000      	movs	r0, #0
 800c6dc:	e022      	b.n	800c724 <__sflush_r+0xf8>
 800c6de:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c6e2:	b21b      	sxth	r3, r3
 800c6e4:	e01b      	b.n	800c71e <__sflush_r+0xf2>
 800c6e6:	690f      	ldr	r7, [r1, #16]
 800c6e8:	2f00      	cmp	r7, #0
 800c6ea:	d0f6      	beq.n	800c6da <__sflush_r+0xae>
 800c6ec:	0793      	lsls	r3, r2, #30
 800c6ee:	680e      	ldr	r6, [r1, #0]
 800c6f0:	bf08      	it	eq
 800c6f2:	694b      	ldreq	r3, [r1, #20]
 800c6f4:	600f      	str	r7, [r1, #0]
 800c6f6:	bf18      	it	ne
 800c6f8:	2300      	movne	r3, #0
 800c6fa:	eba6 0807 	sub.w	r8, r6, r7
 800c6fe:	608b      	str	r3, [r1, #8]
 800c700:	f1b8 0f00 	cmp.w	r8, #0
 800c704:	dde9      	ble.n	800c6da <__sflush_r+0xae>
 800c706:	6a21      	ldr	r1, [r4, #32]
 800c708:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800c70a:	4643      	mov	r3, r8
 800c70c:	463a      	mov	r2, r7
 800c70e:	4628      	mov	r0, r5
 800c710:	47b0      	blx	r6
 800c712:	2800      	cmp	r0, #0
 800c714:	dc08      	bgt.n	800c728 <__sflush_r+0xfc>
 800c716:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c71a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c71e:	81a3      	strh	r3, [r4, #12]
 800c720:	f04f 30ff 	mov.w	r0, #4294967295
 800c724:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c728:	4407      	add	r7, r0
 800c72a:	eba8 0800 	sub.w	r8, r8, r0
 800c72e:	e7e7      	b.n	800c700 <__sflush_r+0xd4>
 800c730:	dfbffffe 	.word	0xdfbffffe

0800c734 <_fflush_r>:
 800c734:	b538      	push	{r3, r4, r5, lr}
 800c736:	690b      	ldr	r3, [r1, #16]
 800c738:	4605      	mov	r5, r0
 800c73a:	460c      	mov	r4, r1
 800c73c:	b913      	cbnz	r3, 800c744 <_fflush_r+0x10>
 800c73e:	2500      	movs	r5, #0
 800c740:	4628      	mov	r0, r5
 800c742:	bd38      	pop	{r3, r4, r5, pc}
 800c744:	b118      	cbz	r0, 800c74e <_fflush_r+0x1a>
 800c746:	6a03      	ldr	r3, [r0, #32]
 800c748:	b90b      	cbnz	r3, 800c74e <_fflush_r+0x1a>
 800c74a:	f7ff f8eb 	bl	800b924 <__sinit>
 800c74e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c752:	2b00      	cmp	r3, #0
 800c754:	d0f3      	beq.n	800c73e <_fflush_r+0xa>
 800c756:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800c758:	07d0      	lsls	r0, r2, #31
 800c75a:	d404      	bmi.n	800c766 <_fflush_r+0x32>
 800c75c:	0599      	lsls	r1, r3, #22
 800c75e:	d402      	bmi.n	800c766 <_fflush_r+0x32>
 800c760:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800c762:	f7ff fa0c 	bl	800bb7e <__retarget_lock_acquire_recursive>
 800c766:	4628      	mov	r0, r5
 800c768:	4621      	mov	r1, r4
 800c76a:	f7ff ff5f 	bl	800c62c <__sflush_r>
 800c76e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800c770:	07da      	lsls	r2, r3, #31
 800c772:	4605      	mov	r5, r0
 800c774:	d4e4      	bmi.n	800c740 <_fflush_r+0xc>
 800c776:	89a3      	ldrh	r3, [r4, #12]
 800c778:	059b      	lsls	r3, r3, #22
 800c77a:	d4e1      	bmi.n	800c740 <_fflush_r+0xc>
 800c77c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800c77e:	f7ff f9ff 	bl	800bb80 <__retarget_lock_release_recursive>
 800c782:	e7dd      	b.n	800c740 <_fflush_r+0xc>

0800c784 <fiprintf>:
 800c784:	b40e      	push	{r1, r2, r3}
 800c786:	b503      	push	{r0, r1, lr}
 800c788:	4601      	mov	r1, r0
 800c78a:	ab03      	add	r3, sp, #12
 800c78c:	4805      	ldr	r0, [pc, #20]	@ (800c7a4 <fiprintf+0x20>)
 800c78e:	f853 2b04 	ldr.w	r2, [r3], #4
 800c792:	6800      	ldr	r0, [r0, #0]
 800c794:	9301      	str	r3, [sp, #4]
 800c796:	f7ff fca3 	bl	800c0e0 <_vfiprintf_r>
 800c79a:	b002      	add	sp, #8
 800c79c:	f85d eb04 	ldr.w	lr, [sp], #4
 800c7a0:	b003      	add	sp, #12
 800c7a2:	4770      	bx	lr
 800c7a4:	2000003c 	.word	0x2000003c

0800c7a8 <_putc_r>:
 800c7a8:	b570      	push	{r4, r5, r6, lr}
 800c7aa:	460d      	mov	r5, r1
 800c7ac:	4614      	mov	r4, r2
 800c7ae:	4606      	mov	r6, r0
 800c7b0:	b118      	cbz	r0, 800c7ba <_putc_r+0x12>
 800c7b2:	6a03      	ldr	r3, [r0, #32]
 800c7b4:	b90b      	cbnz	r3, 800c7ba <_putc_r+0x12>
 800c7b6:	f7ff f8b5 	bl	800b924 <__sinit>
 800c7ba:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800c7bc:	07d8      	lsls	r0, r3, #31
 800c7be:	d405      	bmi.n	800c7cc <_putc_r+0x24>
 800c7c0:	89a3      	ldrh	r3, [r4, #12]
 800c7c2:	0599      	lsls	r1, r3, #22
 800c7c4:	d402      	bmi.n	800c7cc <_putc_r+0x24>
 800c7c6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800c7c8:	f7ff f9d9 	bl	800bb7e <__retarget_lock_acquire_recursive>
 800c7cc:	68a3      	ldr	r3, [r4, #8]
 800c7ce:	3b01      	subs	r3, #1
 800c7d0:	2b00      	cmp	r3, #0
 800c7d2:	60a3      	str	r3, [r4, #8]
 800c7d4:	da05      	bge.n	800c7e2 <_putc_r+0x3a>
 800c7d6:	69a2      	ldr	r2, [r4, #24]
 800c7d8:	4293      	cmp	r3, r2
 800c7da:	db12      	blt.n	800c802 <_putc_r+0x5a>
 800c7dc:	b2eb      	uxtb	r3, r5
 800c7de:	2b0a      	cmp	r3, #10
 800c7e0:	d00f      	beq.n	800c802 <_putc_r+0x5a>
 800c7e2:	6823      	ldr	r3, [r4, #0]
 800c7e4:	1c5a      	adds	r2, r3, #1
 800c7e6:	6022      	str	r2, [r4, #0]
 800c7e8:	701d      	strb	r5, [r3, #0]
 800c7ea:	b2ed      	uxtb	r5, r5
 800c7ec:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800c7ee:	07da      	lsls	r2, r3, #31
 800c7f0:	d405      	bmi.n	800c7fe <_putc_r+0x56>
 800c7f2:	89a3      	ldrh	r3, [r4, #12]
 800c7f4:	059b      	lsls	r3, r3, #22
 800c7f6:	d402      	bmi.n	800c7fe <_putc_r+0x56>
 800c7f8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800c7fa:	f7ff f9c1 	bl	800bb80 <__retarget_lock_release_recursive>
 800c7fe:	4628      	mov	r0, r5
 800c800:	bd70      	pop	{r4, r5, r6, pc}
 800c802:	4629      	mov	r1, r5
 800c804:	4622      	mov	r2, r4
 800c806:	4630      	mov	r0, r6
 800c808:	f000 f802 	bl	800c810 <__swbuf_r>
 800c80c:	4605      	mov	r5, r0
 800c80e:	e7ed      	b.n	800c7ec <_putc_r+0x44>

0800c810 <__swbuf_r>:
 800c810:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c812:	460e      	mov	r6, r1
 800c814:	4614      	mov	r4, r2
 800c816:	4605      	mov	r5, r0
 800c818:	b118      	cbz	r0, 800c822 <__swbuf_r+0x12>
 800c81a:	6a03      	ldr	r3, [r0, #32]
 800c81c:	b90b      	cbnz	r3, 800c822 <__swbuf_r+0x12>
 800c81e:	f7ff f881 	bl	800b924 <__sinit>
 800c822:	69a3      	ldr	r3, [r4, #24]
 800c824:	60a3      	str	r3, [r4, #8]
 800c826:	89a3      	ldrh	r3, [r4, #12]
 800c828:	071a      	lsls	r2, r3, #28
 800c82a:	d501      	bpl.n	800c830 <__swbuf_r+0x20>
 800c82c:	6923      	ldr	r3, [r4, #16]
 800c82e:	b943      	cbnz	r3, 800c842 <__swbuf_r+0x32>
 800c830:	4621      	mov	r1, r4
 800c832:	4628      	mov	r0, r5
 800c834:	f000 f82a 	bl	800c88c <__swsetup_r>
 800c838:	b118      	cbz	r0, 800c842 <__swbuf_r+0x32>
 800c83a:	f04f 37ff 	mov.w	r7, #4294967295
 800c83e:	4638      	mov	r0, r7
 800c840:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c842:	6823      	ldr	r3, [r4, #0]
 800c844:	6922      	ldr	r2, [r4, #16]
 800c846:	1a98      	subs	r0, r3, r2
 800c848:	6963      	ldr	r3, [r4, #20]
 800c84a:	b2f6      	uxtb	r6, r6
 800c84c:	4283      	cmp	r3, r0
 800c84e:	4637      	mov	r7, r6
 800c850:	dc05      	bgt.n	800c85e <__swbuf_r+0x4e>
 800c852:	4621      	mov	r1, r4
 800c854:	4628      	mov	r0, r5
 800c856:	f7ff ff6d 	bl	800c734 <_fflush_r>
 800c85a:	2800      	cmp	r0, #0
 800c85c:	d1ed      	bne.n	800c83a <__swbuf_r+0x2a>
 800c85e:	68a3      	ldr	r3, [r4, #8]
 800c860:	3b01      	subs	r3, #1
 800c862:	60a3      	str	r3, [r4, #8]
 800c864:	6823      	ldr	r3, [r4, #0]
 800c866:	1c5a      	adds	r2, r3, #1
 800c868:	6022      	str	r2, [r4, #0]
 800c86a:	701e      	strb	r6, [r3, #0]
 800c86c:	6962      	ldr	r2, [r4, #20]
 800c86e:	1c43      	adds	r3, r0, #1
 800c870:	429a      	cmp	r2, r3
 800c872:	d004      	beq.n	800c87e <__swbuf_r+0x6e>
 800c874:	89a3      	ldrh	r3, [r4, #12]
 800c876:	07db      	lsls	r3, r3, #31
 800c878:	d5e1      	bpl.n	800c83e <__swbuf_r+0x2e>
 800c87a:	2e0a      	cmp	r6, #10
 800c87c:	d1df      	bne.n	800c83e <__swbuf_r+0x2e>
 800c87e:	4621      	mov	r1, r4
 800c880:	4628      	mov	r0, r5
 800c882:	f7ff ff57 	bl	800c734 <_fflush_r>
 800c886:	2800      	cmp	r0, #0
 800c888:	d0d9      	beq.n	800c83e <__swbuf_r+0x2e>
 800c88a:	e7d6      	b.n	800c83a <__swbuf_r+0x2a>

0800c88c <__swsetup_r>:
 800c88c:	b538      	push	{r3, r4, r5, lr}
 800c88e:	4b29      	ldr	r3, [pc, #164]	@ (800c934 <__swsetup_r+0xa8>)
 800c890:	4605      	mov	r5, r0
 800c892:	6818      	ldr	r0, [r3, #0]
 800c894:	460c      	mov	r4, r1
 800c896:	b118      	cbz	r0, 800c8a0 <__swsetup_r+0x14>
 800c898:	6a03      	ldr	r3, [r0, #32]
 800c89a:	b90b      	cbnz	r3, 800c8a0 <__swsetup_r+0x14>
 800c89c:	f7ff f842 	bl	800b924 <__sinit>
 800c8a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c8a4:	0719      	lsls	r1, r3, #28
 800c8a6:	d422      	bmi.n	800c8ee <__swsetup_r+0x62>
 800c8a8:	06da      	lsls	r2, r3, #27
 800c8aa:	d407      	bmi.n	800c8bc <__swsetup_r+0x30>
 800c8ac:	2209      	movs	r2, #9
 800c8ae:	602a      	str	r2, [r5, #0]
 800c8b0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c8b4:	81a3      	strh	r3, [r4, #12]
 800c8b6:	f04f 30ff 	mov.w	r0, #4294967295
 800c8ba:	e033      	b.n	800c924 <__swsetup_r+0x98>
 800c8bc:	0758      	lsls	r0, r3, #29
 800c8be:	d512      	bpl.n	800c8e6 <__swsetup_r+0x5a>
 800c8c0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800c8c2:	b141      	cbz	r1, 800c8d6 <__swsetup_r+0x4a>
 800c8c4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800c8c8:	4299      	cmp	r1, r3
 800c8ca:	d002      	beq.n	800c8d2 <__swsetup_r+0x46>
 800c8cc:	4628      	mov	r0, r5
 800c8ce:	f7ff f985 	bl	800bbdc <_free_r>
 800c8d2:	2300      	movs	r3, #0
 800c8d4:	6363      	str	r3, [r4, #52]	@ 0x34
 800c8d6:	89a3      	ldrh	r3, [r4, #12]
 800c8d8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800c8dc:	81a3      	strh	r3, [r4, #12]
 800c8de:	2300      	movs	r3, #0
 800c8e0:	6063      	str	r3, [r4, #4]
 800c8e2:	6923      	ldr	r3, [r4, #16]
 800c8e4:	6023      	str	r3, [r4, #0]
 800c8e6:	89a3      	ldrh	r3, [r4, #12]
 800c8e8:	f043 0308 	orr.w	r3, r3, #8
 800c8ec:	81a3      	strh	r3, [r4, #12]
 800c8ee:	6923      	ldr	r3, [r4, #16]
 800c8f0:	b94b      	cbnz	r3, 800c906 <__swsetup_r+0x7a>
 800c8f2:	89a3      	ldrh	r3, [r4, #12]
 800c8f4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800c8f8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800c8fc:	d003      	beq.n	800c906 <__swsetup_r+0x7a>
 800c8fe:	4621      	mov	r1, r4
 800c900:	4628      	mov	r0, r5
 800c902:	f000 f89e 	bl	800ca42 <__smakebuf_r>
 800c906:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c90a:	f013 0201 	ands.w	r2, r3, #1
 800c90e:	d00a      	beq.n	800c926 <__swsetup_r+0x9a>
 800c910:	2200      	movs	r2, #0
 800c912:	60a2      	str	r2, [r4, #8]
 800c914:	6962      	ldr	r2, [r4, #20]
 800c916:	4252      	negs	r2, r2
 800c918:	61a2      	str	r2, [r4, #24]
 800c91a:	6922      	ldr	r2, [r4, #16]
 800c91c:	b942      	cbnz	r2, 800c930 <__swsetup_r+0xa4>
 800c91e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800c922:	d1c5      	bne.n	800c8b0 <__swsetup_r+0x24>
 800c924:	bd38      	pop	{r3, r4, r5, pc}
 800c926:	0799      	lsls	r1, r3, #30
 800c928:	bf58      	it	pl
 800c92a:	6962      	ldrpl	r2, [r4, #20]
 800c92c:	60a2      	str	r2, [r4, #8]
 800c92e:	e7f4      	b.n	800c91a <__swsetup_r+0x8e>
 800c930:	2000      	movs	r0, #0
 800c932:	e7f7      	b.n	800c924 <__swsetup_r+0x98>
 800c934:	2000003c 	.word	0x2000003c

0800c938 <memmove>:
 800c938:	4288      	cmp	r0, r1
 800c93a:	b510      	push	{r4, lr}
 800c93c:	eb01 0402 	add.w	r4, r1, r2
 800c940:	d902      	bls.n	800c948 <memmove+0x10>
 800c942:	4284      	cmp	r4, r0
 800c944:	4623      	mov	r3, r4
 800c946:	d807      	bhi.n	800c958 <memmove+0x20>
 800c948:	1e43      	subs	r3, r0, #1
 800c94a:	42a1      	cmp	r1, r4
 800c94c:	d008      	beq.n	800c960 <memmove+0x28>
 800c94e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c952:	f803 2f01 	strb.w	r2, [r3, #1]!
 800c956:	e7f8      	b.n	800c94a <memmove+0x12>
 800c958:	4402      	add	r2, r0
 800c95a:	4601      	mov	r1, r0
 800c95c:	428a      	cmp	r2, r1
 800c95e:	d100      	bne.n	800c962 <memmove+0x2a>
 800c960:	bd10      	pop	{r4, pc}
 800c962:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800c966:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800c96a:	e7f7      	b.n	800c95c <memmove+0x24>

0800c96c <_sbrk_r>:
 800c96c:	b538      	push	{r3, r4, r5, lr}
 800c96e:	4d06      	ldr	r5, [pc, #24]	@ (800c988 <_sbrk_r+0x1c>)
 800c970:	2300      	movs	r3, #0
 800c972:	4604      	mov	r4, r0
 800c974:	4608      	mov	r0, r1
 800c976:	602b      	str	r3, [r5, #0]
 800c978:	f7f5 fff4 	bl	8002964 <_sbrk>
 800c97c:	1c43      	adds	r3, r0, #1
 800c97e:	d102      	bne.n	800c986 <_sbrk_r+0x1a>
 800c980:	682b      	ldr	r3, [r5, #0]
 800c982:	b103      	cbz	r3, 800c986 <_sbrk_r+0x1a>
 800c984:	6023      	str	r3, [r4, #0]
 800c986:	bd38      	pop	{r3, r4, r5, pc}
 800c988:	2000231c 	.word	0x2000231c

0800c98c <abort>:
 800c98c:	b508      	push	{r3, lr}
 800c98e:	2006      	movs	r0, #6
 800c990:	f000 f8bc 	bl	800cb0c <raise>
 800c994:	2001      	movs	r0, #1
 800c996:	f7f5 ff6d 	bl	8002874 <_exit>

0800c99a <_realloc_r>:
 800c99a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c99e:	4680      	mov	r8, r0
 800c9a0:	4615      	mov	r5, r2
 800c9a2:	460c      	mov	r4, r1
 800c9a4:	b921      	cbnz	r1, 800c9b0 <_realloc_r+0x16>
 800c9a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c9aa:	4611      	mov	r1, r2
 800c9ac:	f7ff b98a 	b.w	800bcc4 <_malloc_r>
 800c9b0:	b92a      	cbnz	r2, 800c9be <_realloc_r+0x24>
 800c9b2:	f7ff f913 	bl	800bbdc <_free_r>
 800c9b6:	2400      	movs	r4, #0
 800c9b8:	4620      	mov	r0, r4
 800c9ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c9be:	f000 f8e3 	bl	800cb88 <_malloc_usable_size_r>
 800c9c2:	4285      	cmp	r5, r0
 800c9c4:	4606      	mov	r6, r0
 800c9c6:	d802      	bhi.n	800c9ce <_realloc_r+0x34>
 800c9c8:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800c9cc:	d8f4      	bhi.n	800c9b8 <_realloc_r+0x1e>
 800c9ce:	4629      	mov	r1, r5
 800c9d0:	4640      	mov	r0, r8
 800c9d2:	f7ff f977 	bl	800bcc4 <_malloc_r>
 800c9d6:	4607      	mov	r7, r0
 800c9d8:	2800      	cmp	r0, #0
 800c9da:	d0ec      	beq.n	800c9b6 <_realloc_r+0x1c>
 800c9dc:	42b5      	cmp	r5, r6
 800c9de:	462a      	mov	r2, r5
 800c9e0:	4621      	mov	r1, r4
 800c9e2:	bf28      	it	cs
 800c9e4:	4632      	movcs	r2, r6
 800c9e6:	f7ff f8cc 	bl	800bb82 <memcpy>
 800c9ea:	4621      	mov	r1, r4
 800c9ec:	4640      	mov	r0, r8
 800c9ee:	f7ff f8f5 	bl	800bbdc <_free_r>
 800c9f2:	463c      	mov	r4, r7
 800c9f4:	e7e0      	b.n	800c9b8 <_realloc_r+0x1e>

0800c9f6 <__swhatbuf_r>:
 800c9f6:	b570      	push	{r4, r5, r6, lr}
 800c9f8:	460c      	mov	r4, r1
 800c9fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c9fe:	2900      	cmp	r1, #0
 800ca00:	b096      	sub	sp, #88	@ 0x58
 800ca02:	4615      	mov	r5, r2
 800ca04:	461e      	mov	r6, r3
 800ca06:	da0d      	bge.n	800ca24 <__swhatbuf_r+0x2e>
 800ca08:	89a3      	ldrh	r3, [r4, #12]
 800ca0a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800ca0e:	f04f 0100 	mov.w	r1, #0
 800ca12:	bf14      	ite	ne
 800ca14:	2340      	movne	r3, #64	@ 0x40
 800ca16:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800ca1a:	2000      	movs	r0, #0
 800ca1c:	6031      	str	r1, [r6, #0]
 800ca1e:	602b      	str	r3, [r5, #0]
 800ca20:	b016      	add	sp, #88	@ 0x58
 800ca22:	bd70      	pop	{r4, r5, r6, pc}
 800ca24:	466a      	mov	r2, sp
 800ca26:	f000 f879 	bl	800cb1c <_fstat_r>
 800ca2a:	2800      	cmp	r0, #0
 800ca2c:	dbec      	blt.n	800ca08 <__swhatbuf_r+0x12>
 800ca2e:	9901      	ldr	r1, [sp, #4]
 800ca30:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800ca34:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800ca38:	4259      	negs	r1, r3
 800ca3a:	4159      	adcs	r1, r3
 800ca3c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800ca40:	e7eb      	b.n	800ca1a <__swhatbuf_r+0x24>

0800ca42 <__smakebuf_r>:
 800ca42:	898b      	ldrh	r3, [r1, #12]
 800ca44:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ca46:	079d      	lsls	r5, r3, #30
 800ca48:	4606      	mov	r6, r0
 800ca4a:	460c      	mov	r4, r1
 800ca4c:	d507      	bpl.n	800ca5e <__smakebuf_r+0x1c>
 800ca4e:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800ca52:	6023      	str	r3, [r4, #0]
 800ca54:	6123      	str	r3, [r4, #16]
 800ca56:	2301      	movs	r3, #1
 800ca58:	6163      	str	r3, [r4, #20]
 800ca5a:	b003      	add	sp, #12
 800ca5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ca5e:	ab01      	add	r3, sp, #4
 800ca60:	466a      	mov	r2, sp
 800ca62:	f7ff ffc8 	bl	800c9f6 <__swhatbuf_r>
 800ca66:	9f00      	ldr	r7, [sp, #0]
 800ca68:	4605      	mov	r5, r0
 800ca6a:	4639      	mov	r1, r7
 800ca6c:	4630      	mov	r0, r6
 800ca6e:	f7ff f929 	bl	800bcc4 <_malloc_r>
 800ca72:	b948      	cbnz	r0, 800ca88 <__smakebuf_r+0x46>
 800ca74:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ca78:	059a      	lsls	r2, r3, #22
 800ca7a:	d4ee      	bmi.n	800ca5a <__smakebuf_r+0x18>
 800ca7c:	f023 0303 	bic.w	r3, r3, #3
 800ca80:	f043 0302 	orr.w	r3, r3, #2
 800ca84:	81a3      	strh	r3, [r4, #12]
 800ca86:	e7e2      	b.n	800ca4e <__smakebuf_r+0xc>
 800ca88:	89a3      	ldrh	r3, [r4, #12]
 800ca8a:	6020      	str	r0, [r4, #0]
 800ca8c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800ca90:	81a3      	strh	r3, [r4, #12]
 800ca92:	9b01      	ldr	r3, [sp, #4]
 800ca94:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800ca98:	b15b      	cbz	r3, 800cab2 <__smakebuf_r+0x70>
 800ca9a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800ca9e:	4630      	mov	r0, r6
 800caa0:	f000 f84e 	bl	800cb40 <_isatty_r>
 800caa4:	b128      	cbz	r0, 800cab2 <__smakebuf_r+0x70>
 800caa6:	89a3      	ldrh	r3, [r4, #12]
 800caa8:	f023 0303 	bic.w	r3, r3, #3
 800caac:	f043 0301 	orr.w	r3, r3, #1
 800cab0:	81a3      	strh	r3, [r4, #12]
 800cab2:	89a3      	ldrh	r3, [r4, #12]
 800cab4:	431d      	orrs	r5, r3
 800cab6:	81a5      	strh	r5, [r4, #12]
 800cab8:	e7cf      	b.n	800ca5a <__smakebuf_r+0x18>

0800caba <_raise_r>:
 800caba:	291f      	cmp	r1, #31
 800cabc:	b538      	push	{r3, r4, r5, lr}
 800cabe:	4605      	mov	r5, r0
 800cac0:	460c      	mov	r4, r1
 800cac2:	d904      	bls.n	800cace <_raise_r+0x14>
 800cac4:	2316      	movs	r3, #22
 800cac6:	6003      	str	r3, [r0, #0]
 800cac8:	f04f 30ff 	mov.w	r0, #4294967295
 800cacc:	bd38      	pop	{r3, r4, r5, pc}
 800cace:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800cad0:	b112      	cbz	r2, 800cad8 <_raise_r+0x1e>
 800cad2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800cad6:	b94b      	cbnz	r3, 800caec <_raise_r+0x32>
 800cad8:	4628      	mov	r0, r5
 800cada:	f000 f853 	bl	800cb84 <_getpid_r>
 800cade:	4622      	mov	r2, r4
 800cae0:	4601      	mov	r1, r0
 800cae2:	4628      	mov	r0, r5
 800cae4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cae8:	f000 b83a 	b.w	800cb60 <_kill_r>
 800caec:	2b01      	cmp	r3, #1
 800caee:	d00a      	beq.n	800cb06 <_raise_r+0x4c>
 800caf0:	1c59      	adds	r1, r3, #1
 800caf2:	d103      	bne.n	800cafc <_raise_r+0x42>
 800caf4:	2316      	movs	r3, #22
 800caf6:	6003      	str	r3, [r0, #0]
 800caf8:	2001      	movs	r0, #1
 800cafa:	e7e7      	b.n	800cacc <_raise_r+0x12>
 800cafc:	2100      	movs	r1, #0
 800cafe:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800cb02:	4620      	mov	r0, r4
 800cb04:	4798      	blx	r3
 800cb06:	2000      	movs	r0, #0
 800cb08:	e7e0      	b.n	800cacc <_raise_r+0x12>
	...

0800cb0c <raise>:
 800cb0c:	4b02      	ldr	r3, [pc, #8]	@ (800cb18 <raise+0xc>)
 800cb0e:	4601      	mov	r1, r0
 800cb10:	6818      	ldr	r0, [r3, #0]
 800cb12:	f7ff bfd2 	b.w	800caba <_raise_r>
 800cb16:	bf00      	nop
 800cb18:	2000003c 	.word	0x2000003c

0800cb1c <_fstat_r>:
 800cb1c:	b538      	push	{r3, r4, r5, lr}
 800cb1e:	4d07      	ldr	r5, [pc, #28]	@ (800cb3c <_fstat_r+0x20>)
 800cb20:	2300      	movs	r3, #0
 800cb22:	4604      	mov	r4, r0
 800cb24:	4608      	mov	r0, r1
 800cb26:	4611      	mov	r1, r2
 800cb28:	602b      	str	r3, [r5, #0]
 800cb2a:	f7f5 fef3 	bl	8002914 <_fstat>
 800cb2e:	1c43      	adds	r3, r0, #1
 800cb30:	d102      	bne.n	800cb38 <_fstat_r+0x1c>
 800cb32:	682b      	ldr	r3, [r5, #0]
 800cb34:	b103      	cbz	r3, 800cb38 <_fstat_r+0x1c>
 800cb36:	6023      	str	r3, [r4, #0]
 800cb38:	bd38      	pop	{r3, r4, r5, pc}
 800cb3a:	bf00      	nop
 800cb3c:	2000231c 	.word	0x2000231c

0800cb40 <_isatty_r>:
 800cb40:	b538      	push	{r3, r4, r5, lr}
 800cb42:	4d06      	ldr	r5, [pc, #24]	@ (800cb5c <_isatty_r+0x1c>)
 800cb44:	2300      	movs	r3, #0
 800cb46:	4604      	mov	r4, r0
 800cb48:	4608      	mov	r0, r1
 800cb4a:	602b      	str	r3, [r5, #0]
 800cb4c:	f7f5 fef2 	bl	8002934 <_isatty>
 800cb50:	1c43      	adds	r3, r0, #1
 800cb52:	d102      	bne.n	800cb5a <_isatty_r+0x1a>
 800cb54:	682b      	ldr	r3, [r5, #0]
 800cb56:	b103      	cbz	r3, 800cb5a <_isatty_r+0x1a>
 800cb58:	6023      	str	r3, [r4, #0]
 800cb5a:	bd38      	pop	{r3, r4, r5, pc}
 800cb5c:	2000231c 	.word	0x2000231c

0800cb60 <_kill_r>:
 800cb60:	b538      	push	{r3, r4, r5, lr}
 800cb62:	4d07      	ldr	r5, [pc, #28]	@ (800cb80 <_kill_r+0x20>)
 800cb64:	2300      	movs	r3, #0
 800cb66:	4604      	mov	r4, r0
 800cb68:	4608      	mov	r0, r1
 800cb6a:	4611      	mov	r1, r2
 800cb6c:	602b      	str	r3, [r5, #0]
 800cb6e:	f7f5 fe71 	bl	8002854 <_kill>
 800cb72:	1c43      	adds	r3, r0, #1
 800cb74:	d102      	bne.n	800cb7c <_kill_r+0x1c>
 800cb76:	682b      	ldr	r3, [r5, #0]
 800cb78:	b103      	cbz	r3, 800cb7c <_kill_r+0x1c>
 800cb7a:	6023      	str	r3, [r4, #0]
 800cb7c:	bd38      	pop	{r3, r4, r5, pc}
 800cb7e:	bf00      	nop
 800cb80:	2000231c 	.word	0x2000231c

0800cb84 <_getpid_r>:
 800cb84:	f7f5 be5e 	b.w	8002844 <_getpid>

0800cb88 <_malloc_usable_size_r>:
 800cb88:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800cb8c:	1f18      	subs	r0, r3, #4
 800cb8e:	2b00      	cmp	r3, #0
 800cb90:	bfbc      	itt	lt
 800cb92:	580b      	ldrlt	r3, [r1, r0]
 800cb94:	18c0      	addlt	r0, r0, r3
 800cb96:	4770      	bx	lr

0800cb98 <_init>:
 800cb98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cb9a:	bf00      	nop
 800cb9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800cb9e:	bc08      	pop	{r3}
 800cba0:	469e      	mov	lr, r3
 800cba2:	4770      	bx	lr

0800cba4 <_fini>:
 800cba4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cba6:	bf00      	nop
 800cba8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800cbaa:	bc08      	pop	{r3}
 800cbac:	469e      	mov	lr, r3
 800cbae:	4770      	bx	lr
